{
    "docs": [
        {
            "location": "/", 
            "text": "Brief Introduction\n\n\nHello, I'm Wang Zhizhou, a single dog and a coder. Right now, I'm working on iOS development. I wanted to have my own blog early, but I didn't find simple tools and methods. Now, I found it. And this blog is powered by \nMkDocs\n which is very simple and concise, I love it. With the help of \nRead the Docs\n\uff0cyou can publish you blog on the internet for sharing you mind. Oh, maybe you should have a \nGitHub\n account for you blog source repo. Trust me, you can also have your own blog in half an hour.\n\n\nI was born in 1991. Yes, the Linux operation system was born in the same year. And I like computer, though I'm not top experts. I just like it, and want to do something with computer, I enjoy that feeling.\n\n\n\u7b80\u4ecb\n\n\n\u4e3a\u4e86\u9632\u6b62\u4e16\u754c\u88ab\u7834\u574f \n\n\n\u4e3a\u4e86\u4fdd\u62a4\u4e16\u754c\u7684\u548c\u5e73 \n\n\n\u8d2f\u5f7b\u7231\u4e0e\u771f\u5b9e\u7684\u90aa\u6076 \n\n\n\u53ef\u7231\u53c8\u8ff7\u4eba\u7684\u8001\u53f8\u673a\n\n\n\u6211\u662f\u7a7f\u68ad\u5728QQ\u7fa4\u548c\u5fae\u4fe1\u7fa4\u7684\u80a5\u9f99\uff0c\n\n\n\u767d\u6d1e,\u767d\u8272\u7684\u660e\u5929\u7b49\u7740\u6211\n\n\n\u5c31\u662f\u8fd9\u6837\n\n\n\u6c6a~~~, \u6c6a\u6c6a\u6c6a\n\n\n\u8054\u7cfb\u6211\n\n\n\n\n\u90ae\u7bb1: \n\n\n\n\n\u5fae\u4fe1: \nw_z_z_1991", 
            "title": "About Me"
        }, 
        {
            "location": "/#brief-introduction", 
            "text": "Hello, I'm Wang Zhizhou, a single dog and a coder. Right now, I'm working on iOS development. I wanted to have my own blog early, but I didn't find simple tools and methods. Now, I found it. And this blog is powered by  MkDocs  which is very simple and concise, I love it. With the help of  Read the Docs \uff0cyou can publish you blog on the internet for sharing you mind. Oh, maybe you should have a  GitHub  account for you blog source repo. Trust me, you can also have your own blog in half an hour.  I was born in 1991. Yes, the Linux operation system was born in the same year. And I like computer, though I'm not top experts. I just like it, and want to do something with computer, I enjoy that feeling.", 
            "title": "Brief Introduction"
        }, 
        {
            "location": "/#_1", 
            "text": "\u4e3a\u4e86\u9632\u6b62\u4e16\u754c\u88ab\u7834\u574f   \u4e3a\u4e86\u4fdd\u62a4\u4e16\u754c\u7684\u548c\u5e73   \u8d2f\u5f7b\u7231\u4e0e\u771f\u5b9e\u7684\u90aa\u6076   \u53ef\u7231\u53c8\u8ff7\u4eba\u7684\u8001\u53f8\u673a  \u6211\u662f\u7a7f\u68ad\u5728QQ\u7fa4\u548c\u5fae\u4fe1\u7fa4\u7684\u80a5\u9f99\uff0c  \u767d\u6d1e,\u767d\u8272\u7684\u660e\u5929\u7b49\u7740\u6211  \u5c31\u662f\u8fd9\u6837  \u6c6a~~~, \u6c6a\u6c6a\u6c6a", 
            "title": "\u7b80\u4ecb"
        }, 
        {
            "location": "/#_2", 
            "text": "\u90ae\u7bb1:    \u5fae\u4fe1:  w_z_z_1991", 
            "title": "\u8054\u7cfb\u6211"
        }, 
        {
            "location": "/How I create this blog/", 
            "text": "\u524d\u63d0\u51c6\u5907\n\n\n\n\n\n\n\u719f\u6089\nMarkdown\n\u6587\u6863\u4e66\u5199, \u8fd9\u91cc\u6709\u4efd\n\u8bed\u6cd5\u8bf4\u660e\n\n\n\n\n\n\n\u719f\u6089\nGit\n\u7684\u7248\u672c\u63a7\u5236\u7684\u57fa\u672c\u7528\u6cd5\uff0c\u8fd9\u91cc\u6709\u4e2a\n\u7b80\u660e\u624b\u518c\n\n\n\n\n\n\n\u5728\nGitHub\n\u4e0a\u521b\u5efa\u4e00\u4e2a\u5e10\u53f7, \u4e00\u4e2a\u5f88\u597d\u7684\nGit\n\u548c\nGitHub\n\u5b66\u4e60\u8d44\u6e90\n\n\n\n\n\n\n\u81f3\u5c11\u770b\u8fc7\u4e00\u6b21\nMkDocs\n\u7684\u4f7f\u7528\u6587\u6863\n\n\n\n\n\n\n\u5728\nRead the Docs\n\u4e0a\n\u5f00\u901a\n\u4e00\u4e2a\u5e10\u53f7\n\n\n\n\n\n\n\u73af\u5883\u642d\u5efa\n\n\n\u672c\u673a\u5b89\u88c5\u6709\npython\n\u73af\u5883\u548c\npip\n\u5305\u7ba1\u7406\u5668\u3002\u7136\u540e\u6267\u884c\u4e0b\u9762\u547d\u4ee4\uff1a\n\n\npip install mkdocs\n\n\n\n\n\u5199\u4f5c\u8fc7\u7a0b\n\n\n\u521b\u5efa\u9ed8\u8ba4\u6587\u6863\n\n\nmkdocs new demo \n cd demo\n\n\n\n\n\u8f93\u51fa\uff1a\n\n\nINFO    -  Creating project directory: demo \nINFO    -  Writing config file: demo/mkdocs.yml \nINFO    -  Writing initial docs: demo/docs/index.md \n\n\n\n\n\u9ed8\u8ba4\u7684\u6587\u6863\u7ed3\u6784:\n\n\ndemo\n\u251c\u2500\u2500 docs             //\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u5b58\u653emarkdown\u7f16\u5199\u7684\u6587\u6863\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 index.md     \n\u2514\u2500\u2500 mkdocs.yml       //\u9879\u76ee\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5305\u62ec\u6587\u6863\u76ee\u5f55\u548c\u4e3b\u9898\u98ce\u683c\u914d\u7f6e\n\n\n\n\n\u672c\u5730\u6587\u6863\u6d4f\u89c8\u4f7f\u7528\u4e0b\u9762\u547d\u4ee4\uff1a\n\n\nmkdocs serve\n\n\n\n\n\u8f93\u51fa:\n\n\nINFO    -  Building documentation... \nINFO    -  Cleaning site directory \n[I 170524 09:23:48 server:283] Serving on http://127.0.0.1:8000\n\n\n\n\n\u7528\u6d4f\u89c8\u5668\u6253\u5f00\nhttp://127.0.0.1:8000\n, \u5c31\u53ef\u4ee5\u67e5\u770b\u6587\u6863\u4e86\u3002\u5982\u679c\u5728\u8c03\u8bd5\u670d\u52a1\u5668\u5f00\u542f\u7684\u60c5\u51b5\u4e0b\u4fee\u6539\u9879\u76ee\u6587\u4ef6\uff0c\u4fee\u6539\u4f1a\u88ab\u81ea\u52a8\u68c0\u6d4b\u5230\uff0c\u5e76\u91cd\u65b0\u751f\u6210\u9879\u76ee\uff0c\u5b9e\u65f6\u9884\u89c8\u4fee\u6539\u540e\u7684\u6548\u679c\u3002\n\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\ndocs\n\u6587\u4ef6\u5939\u4e0b\u9762\u521b\u5efa\u6587\u6863\u6587\u4ef6\uff0c\u5e76\u4fee\u6539\nmkdocs.yml\n\u914d\u7f6e\u6587\u4ef6\uff0c\u4f7f\u65b0\u589e\u52a0\u7684\u6587\u4ef6\u5728\u6587\u6863\u76ee\u5f55\u7ed3\u6784\u4e2d\u51fa\u73b0\u3002\n\n\n\u672c\u535a\u5ba2\u76ee\u524d\u7684\u7ed3\u6784\u548c\u914d\u7f6e\u6587\u4ef6\u60c5\u51b5\n\n\n\u914d\u7f6e\u6587\u4ef6\nmkdocs.yml\n\n\nsite_name: Joker's Blog          //\u914d\u7f6e\u9879\u76ee\u540d\u79f0\uff0c\u4e5f\u5c31\u662f\u6587\u6863\u663e\u793a\u540d\u79f0\n\npages:                           //\u914d\u7f6e\u9875\u9762\u7684\u663e\u793a\u5c42\u7ea7\u7ed3\u6784\n    - 'Profile': 'index.md'      //['\u663e\u793a\u540d\u79f0':'\u9875\u9762\u6587\u4ef6\u8def\u5f84']\n    - 'Me':                      //\u591a\u7ea7\u76ee\u5f55\u7ed3\u6784\uff1ame\u4e0b\u9762\u5305\u542b\u591a\u4e2a\u9875\u9762\n        - 'me/English Personal Resume.md'  //\u5982\u679c\u7701\u7565\u914d\u7f6e\u663e\u793a\u540d\u79f0\u5219\u6309\u6587\u4ef6\u540d\u79f0\u663e\u793a\n        - 'me/My Plan for finding Job.md'\n        - 'me/Personal Pre-Work Record.md'\n        - 'me/My Financial Planning.md'\n        - 'me/How I create this blog.md'\n    - 'Tech': \n        - 'tech/Network Simulator 2 Installation Guide for Ubuntu.md'\n        - 'tech/Learn STL In 30 Minutes.md'\n        - 'tech/Installation of Ubuntu 16.04 On UDisk.md'\n        - 'tech/Configure Git Server With Ubuntn and Apache 2.md'\n        - 'tech/Add Watermark on Video with OpenCV and FFmpeg.md'\n        - 'tech/Develop DLNA Using Platinum Library.md'\n        - 'tech/FFmpeg and SDL tutorial 1.md'\n        - 'tech/FFmpeg compiled on MacOS.md'\n        - 'tech/FFmpeg version 3.1.4 example code.md'\n        - 'tech/Fmpeg 2.8.6 example code - transcoding.md'\n        - 'tech/Nmap Basics.md'\n        - 'tech/Use GDB.md'\n        - 'tech/User OpenCV to add watermark on a video.md'\n        - 'tech/Wireshark Basics.md'\n    - 'life':\n        - 'Ali Fu': 'life/alipay-scan-fu-icon.md'\n\ntheme: readthedocs   //\u914d\u7f6e\u6587\u6863\u4f7f\u7528\u7684\u6a21\u677f\u6837\u5f0f\n\n\n\n\n\u76ee\u5f55\u7ed3\u6784\n\n\n.\n\u251c\u2500\u2500 LICENSE    //\u9075\u5b88\u7684\u8bb8\u53ef\u8bc1\u6587\u4ef6\n\u251c\u2500\u2500 README.md  //\u9879\u76ee\u8bf4\u660e\n\u251c\u2500\u2500 docs       //\u6587\u6863\u9875\u9762\u6e90\u6587\u4ef6\u76ee\u5f55\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 assets //\u5305\u62ec\u4e00\u4e9b\u591a\u5a92\u4f53\u8d44\u6e90\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Resume\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 excels\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 ffmpeg-code\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 pdfs\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 pictures\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 index.md\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 life\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 alipay-scan-fu-icon.md\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 me\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 English\\ Personal\\ Resume.md\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 How\\ I\\ create\\ this\\ blog.md\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 My\\ Financial\\ Planning.md\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 My\\ Plan\\ for\\ finding\\ Job.md\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 Personal\\ Pre-Work\\ Record.md\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 tech\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Add\\ Watermark\\ on\\ Video\\ with\\ OpenCV\\ and\\ FFmpeg.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Configure\\ Git\\ Server\\ With\\ Ubuntn\\ and\\ Apache\\ 2.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Develop\\ DLNA\\ Using\\ Platinum\\ Library.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 FFmpeg\\ and\\ SDL\\ tutorial\\ 1.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 FFmpeg\\ compiled\\ on\\ MacOS.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 FFmpeg\\ version\\ 3.1.4\\ example\\ code.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Fmpeg\\ 2.8.6\\ example\\ code\\ -\\ transcoding.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Installation\\ of\\ Ubuntu\\ 16.04\\ On\\ UDisk.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Learn\\ STL\\ In\\ 30\\ Minutes.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Network\\ Simulator\\ 2\\ Installation\\ Guide\\ for\\ Ubuntu.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Nmap\\ Basics.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Use\\ GDB.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 User\\ OpenCV\\ to\\ add\\ watermark\\ on\\ a\\ video.md\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 Wireshark\\ Basics.md\n\u2514\u2500\u2500 mkdocs.yml   //\u6587\u6863\u7684\u914d\u7f6e\u6587\u4ef6\n\n\n\n\n\u8c03\u8bd5\u65b9\u6cd5\n\n\n\u5982\u679c\u89c9\u5f97\u4e00\u8fb9\u7528\nvim\n\u5199\u6587\u6863\uff0c\u4e00\u8fb9\u8fd8\u5f97\u5728\u5199\u5b8c\u540e\u624b\u52a8\u8fd0\u884c\u4e00\u6b21\nmkdocs serve\n\u6765\u5f00\u542f\u8c03\u8bd5\u670d\u52a1\u5668\u67e5\u770b\u6548\u679c\u6709\u4e9b\u9ebb\u70e6\uff0c\u8fd9\u91cc\u6709\u65b9\u6cd5\u53ef\u4ee5\u7b80\u5316\u8fd9\u4e9b\u64cd\u4f5c:\n\n\n1. \u4f7f\u7528shell\u540e\u53f0\u547d\u4ee4\u8fd0\u884c\n\n\nmkdocs serve \n\n\n\n\n\n\u8fd9\u6837\u8fd0\u884c\uff0cshell\u4e0d\u4f1a\u963b\u585e\uff0c\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u8fdb\u884c\u7f16\u8f91\u6d3b\u52a8\u3002\u9700\u8981\u56de\u5230\u524d\u53f0\u8fd0\u884c\u65f6\uff0c\u4f7f\u7528\nfg\n\u547d\u4ee4\uff0c\nCtrl+C\n\u5c31\u53ef\u4ee5\u7ed3\u675f\u8c03\u8bd5\u670d\u52a1\u5668\u4e86\u3002\n\n\n2. \u4f7f\u7528\u001d\nscreen\n\u5de5\u5177\n\n\n\u5982\u679c\u7ef4\u62a4\u8fc7\u670d\u52a1\u5668\uff0c\u90a3\u4e48ssh\u4e0b\u4e00\u5b9a\u7528\u8fc7\nscreen\n\u8fd9\u4e2a\u5de5\u5177\uff0c\u7cfb\u7edf\u9ed8\u8ba4\u662f\u4e0d\u4f1a\u5b89\u88c5\u7684\uff0c\u9700\u8981\u624b\u52a8\u5b89\u88c5:\nsudo apt-get install -y screen\n\n\n\u4f7f\u7528\nscreen\n\u542f\u52a8\u8c03\u8bd5\u670d\u52a1\u5668\uff1a\n\n\nscreen mkdocs serve\n\n\n\n\n\u4e4b\u540e\u6309\u4e0b\nCtrl+A+D\n\u5c31\u53ef\u4ee5\u4f7f\u8c03\u8bd5\u670d\u52a1\u5668\u4e0d\u963b\u585eshell\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7ee7\u7eed\u7f16\u8f91\u6587\u6863\u4e86\u3002\u6d4f\u89c8\u5668\u5728\u6bcf\u6b21\u4fdd\u5b58\u6587\u6863\u540e\u4f1a\u81ea\u52a8\u89e6\u53d1\u4e00\u6b21\u9875\u9762\u5237\u65b0\u6765\u66f4\u65b0\u663e\u793a\u5185\u5bb9\u3002\n\n\n\u5982\u679c\u8981\u7ed3\u675f\u8c03\u8bd5\u670d\u52a1\u5668\uff0c\u4f7f\u7528\u547d\u4ee4:\nscreen -r\n\uff0c\u5e76\u4f7f\u7528\nCtrl+C\n\u6765\u7ed3\u675f\u3002\n\n\n\u624b\u673a\u9875\u9762\u8c03\u8bd5\n\n\n\u5982\u679c\u89c9\u5f97\u5728\u4e00\u4e2a\u663e\u793a\u5668\u5c4f\u5e55\u5185\u6765\u56de\u5207\u6362\u6d4f\u89c8\u5668\u548c\u7f16\u8f91\u5668\u6709\u70b9\u9ebb\u70e6\uff0c\u4e5f\u53ef\u4ee5\u7528\u624b\u673a\u505a\u4e3a\u6548\u679c\u9884\u89c8\u5668\uff0c\u4f46\u8fd9\u9700\u8981\u505a\u4e00\u4e9b\u989d\u5916\u7684\u914d\u7f6e\u3002\n\n\n\u5982\u679c\u624b\u673a\u548c\u7535\u8111\u5728\u540c\u4e00\u4e2a\u5c40\u57df\u7f51\u5185\u90e8\uff0c\u53ef\u4ee5\u628a\u7535\u8111\u4f5c\u4e3a\u624b\u673a\u7684http\u4ee3\u7406\u670d\u52a1\u5668\u6765\u8bbf\u95eehttp\u670d\u52a1\uff0c\u5e76\u5728\u7535\u8111\u7684\nhosts\n\u6587\u4ef6\u4e2d\u914d\u7f6e\u5982\u4e0b\u7684\u57df\u540d\u89e3\u6790\uff1a\n\n\n127.0.0.1 doc.com\n\n\n\n\n\u5728\u6587\u6863\u8c03\u8bd5\u670d\u52a1\u5668\u8fd0\u884c\u7684\u60c5\u51b5\u4e0b\uff0c\u624b\u673a\u4e0a\u8bbf\u95ee\nhttp://doc.com:8000\n\u5c31\u53ef\u4ee5\u5b9e\u65f6\u9884\u89c8\u6587\u6863\u6548\u679c\uff0c\u800c\u4e14\u6bcf\u6b21\u6587\u6863\u4fdd\u5b58\u540e\u4f1a\u81ea\u52a8\u89e6\u53d1\u624b\u673a\u6d4f\u89c8\u5668\u9875\u9762\u5237\u65b0\u3002\n\n\n\u90a3\u4e48\u5269\u4e0b\u7684\u5c31\u662f\u5982\u4f55\u914d\u7f6e\u624b\u673a\u901a\u8fc7\u7535\u8111\u6765\u8bbf\u95eeHttp\u670d\u52a1\u4e86\n\n\n\u5728\u5f53\u524d\u7684WiFi\u8fde\u63a5\u4e2d\u914d\u7f6e\u4e00\u4e0b\nhttp\u4ee3\u7406\n\uff0c\u7535\u8111\u4e0a\u9700\u8981\u6709\u4ee3\u7406\u8f6f\u4ef6\u5b89\u88c5\uff0c\u4f8b\u5982\nCharles\n\u6216\u8005\nFiddler\n\n\n\u4f8b\u5982,Mac\u4e0b\u4f7f\u7528\nCharles\n\u4ee3\u7406\u8f6f\u4ef6\uff0c\u624b\u673a\u53ef\u8bbe\u7f6e\u5982\u4e0b\uff1a\n\n\n\n\n\u7136\u540e\u624b\u673a\u8f93\u5165\nhttp://doc.com:8000\n\u6d4f\u89c8\u5230\u6587\u6863\u6548\u679c\u5982\u4e0b\uff1a\n\n\n\n\n\u5728\u7ebf\u6258\u7ba1\n\n\n\u672c\u5730\u7f16\u8f91\u7684\u5dee\u4e0d\u591a\u4e86\uff0c\u53ef\u4ee5\u53d1\u5e03\u5230\u7f51\u7edc\u4e0a\uff0c\u8fd9\u5c31\u6d89\u53ca\u5230\u6258\u7ba1\u670d\u52a1\u3002\u6e90\u4ee3\u7801\u53ef\u4ee5\u901a\u8fc7\nGitHub\n\u4ed3\u5e93\u670d\u52a1\u6258\u7ba1\uff0c\u6587\u6863\u81ea\u52a8\u751f\u6210\u548c\u6d4f\u89c8\u53ef\u4ee5\u901a\u8fc7\nRead The Docs\n\u670d\u52a1\u6765\u6258\u7ba1\uff0c\u5e76\u4e14\u5f53\u914d\u7f6e\u4e86\nGitHub\n\u5bf9\nRead The Docs\n\u7684\nWeb Hook\n\u540e\uff0c\nGitHub\n\u4ed3\u5e93\u7684\u6bcf\u6b21\u63d0\u4ea4\u90fd\u4f1a\u81ea\u52a8\u89e6\u53d1\nRead The Docs\n\u4e0a\u7684\u6587\u6863\u91cd\u65b0\u751f\u6210,\u4ee5\u4fbf\u4fdd\u6301\u6700\u65b0\u72b6\u6001\uff0c\u5f88\u65b9\u4fbf\u3002\n\n\n\u524d\u9762\u5df2\u7ecf\u6ce8\u518c\u4e86\u8fd9\u4e24\u4e2a\u6258\u7ba1\u670d\u52a1\u7684\u5e10\u53f7\u3002\u4e0b\u9762\u52a8\u624b\u6765\u53d1\u5e03\u6587\u6863\u5230\u7f51\u7edc\u4e0a\uff0c\u8ba9\u66f4\u591a\u7684\u4eba\u53ef\u4ee5\u770b\u5230\u3002\n\n\n\n\n\n\n\u767b\u5f55\nGitHub\n\u5e76\u521b\u5efa\u4e00\u4e2a\u6258\u7ba1\u4ed3\u5e93\n\n\n\n\n\n\n\n\u7ed9\u4ed3\u5e93\u6dfb\u52a0\nRead The Docs\n\u7684\nWebHook\n\n\n\n\n\n\n\n\n\u767b\u5f55\nRead The Docs\n\u5e76\u5bfc\u5165\u6587\u6863\u9879\u76ee\u4ed3\u5e93\n\n\n\n\n\n\n\n\u4f7f\u7528\ngit\n\u547d\u4ee4\u521d\u59cb\u5316\u6587\u6863\u9879\u76ee\u4e3a\ngit\n \u4ed3\u5e93, \u521b\u5efa\u9996\u6b21\u63d0\u4ea4\u5e76\u4e0a\u4f20\u5230\nGitHub\n\u7684\u4ed3\u5e93\u4e2d\uff0c\u89e6\u53d1\nRead The Docs\n\u81ea\u52a8\u6784\u5efa\u670d\u52a1\n\n\n\n\n\n\n//\u521d\u59cb\u5316git\u4ed3\u5e93\u5e76\u521b\u5efa\u9996\u6b21\u63d0\u4ea4\u8bb0\u5f55\ngit init \n git add * \n git commit -m 'a demo blog'\n\n\n\n\n//\u8fd9\u91cc\u7684https://github.com/wangzhizhou/demo.git\u8def\u5f84\u5e94\u8be5\u662f\u4f60\u81ea\u5df1\u521b\u5efa\u7684\u4ed3\u5e93\u8def\u5f84\ngit remote add origin https://github.com/wangzhizhou/demo.git\n\n\n\n\n//\u63a8\u9001\u5230GitHub\u4ed3\u5e93\u4e2d\ngit push -u origin master\n\n\n\n\n\n\n\u5728\u7ebf\u6d4f\u89c8\u6587\u6863\n\n\n\n\n\n\n\u6211\u521b\u5efa\u7684\u51e0\u4e2a\u6587\u6863\u793a\u4f8b\n\n\n\n\n\n\n\u5317\u4e0a\u89c1\u9762\u4f1a\n\n\n\n\n\n\nJoker\u624b\u624e", 
            "title": "Create your own blog as me"
        }, 
        {
            "location": "/How I create this blog/#_1", 
            "text": "\u719f\u6089 Markdown \u6587\u6863\u4e66\u5199, \u8fd9\u91cc\u6709\u4efd \u8bed\u6cd5\u8bf4\u660e    \u719f\u6089 Git \u7684\u7248\u672c\u63a7\u5236\u7684\u57fa\u672c\u7528\u6cd5\uff0c\u8fd9\u91cc\u6709\u4e2a \u7b80\u660e\u624b\u518c    \u5728 GitHub \u4e0a\u521b\u5efa\u4e00\u4e2a\u5e10\u53f7, \u4e00\u4e2a\u5f88\u597d\u7684 Git \u548c GitHub \u5b66\u4e60\u8d44\u6e90    \u81f3\u5c11\u770b\u8fc7\u4e00\u6b21 MkDocs \u7684\u4f7f\u7528\u6587\u6863    \u5728 Read the Docs \u4e0a \u5f00\u901a \u4e00\u4e2a\u5e10\u53f7", 
            "title": "\u524d\u63d0\u51c6\u5907"
        }, 
        {
            "location": "/How I create this blog/#_2", 
            "text": "\u672c\u673a\u5b89\u88c5\u6709 python \u73af\u5883\u548c pip \u5305\u7ba1\u7406\u5668\u3002\u7136\u540e\u6267\u884c\u4e0b\u9762\u547d\u4ee4\uff1a  pip install mkdocs", 
            "title": "\u73af\u5883\u642d\u5efa"
        }, 
        {
            "location": "/How I create this blog/#_3", 
            "text": "", 
            "title": "\u5199\u4f5c\u8fc7\u7a0b"
        }, 
        {
            "location": "/How I create this blog/#_4", 
            "text": "mkdocs new demo   cd demo  \u8f93\u51fa\uff1a  INFO    -  Creating project directory: demo \nINFO    -  Writing config file: demo/mkdocs.yml \nINFO    -  Writing initial docs: demo/docs/index.md   \u9ed8\u8ba4\u7684\u6587\u6863\u7ed3\u6784:  demo\n\u251c\u2500\u2500 docs             //\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u5b58\u653emarkdown\u7f16\u5199\u7684\u6587\u6863\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 index.md     \n\u2514\u2500\u2500 mkdocs.yml       //\u9879\u76ee\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5305\u62ec\u6587\u6863\u76ee\u5f55\u548c\u4e3b\u9898\u98ce\u683c\u914d\u7f6e  \u672c\u5730\u6587\u6863\u6d4f\u89c8\u4f7f\u7528\u4e0b\u9762\u547d\u4ee4\uff1a  mkdocs serve  \u8f93\u51fa:  INFO    -  Building documentation... \nINFO    -  Cleaning site directory \n[I 170524 09:23:48 server:283] Serving on http://127.0.0.1:8000  \u7528\u6d4f\u89c8\u5668\u6253\u5f00 http://127.0.0.1:8000 , \u5c31\u53ef\u4ee5\u67e5\u770b\u6587\u6863\u4e86\u3002\u5982\u679c\u5728\u8c03\u8bd5\u670d\u52a1\u5668\u5f00\u542f\u7684\u60c5\u51b5\u4e0b\u4fee\u6539\u9879\u76ee\u6587\u4ef6\uff0c\u4fee\u6539\u4f1a\u88ab\u81ea\u52a8\u68c0\u6d4b\u5230\uff0c\u5e76\u91cd\u65b0\u751f\u6210\u9879\u76ee\uff0c\u5b9e\u65f6\u9884\u89c8\u4fee\u6539\u540e\u7684\u6548\u679c\u3002  \u8fd9\u6837\u5c31\u53ef\u4ee5\u5728 docs \u6587\u4ef6\u5939\u4e0b\u9762\u521b\u5efa\u6587\u6863\u6587\u4ef6\uff0c\u5e76\u4fee\u6539 mkdocs.yml \u914d\u7f6e\u6587\u4ef6\uff0c\u4f7f\u65b0\u589e\u52a0\u7684\u6587\u4ef6\u5728\u6587\u6863\u76ee\u5f55\u7ed3\u6784\u4e2d\u51fa\u73b0\u3002", 
            "title": "\u521b\u5efa\u9ed8\u8ba4\u6587\u6863"
        }, 
        {
            "location": "/How I create this blog/#_5", 
            "text": "", 
            "title": "\u672c\u535a\u5ba2\u76ee\u524d\u7684\u7ed3\u6784\u548c\u914d\u7f6e\u6587\u4ef6\u60c5\u51b5"
        }, 
        {
            "location": "/How I create this blog/#mkdocsyml", 
            "text": "site_name: Joker's Blog          //\u914d\u7f6e\u9879\u76ee\u540d\u79f0\uff0c\u4e5f\u5c31\u662f\u6587\u6863\u663e\u793a\u540d\u79f0\n\npages:                           //\u914d\u7f6e\u9875\u9762\u7684\u663e\u793a\u5c42\u7ea7\u7ed3\u6784\n    - 'Profile': 'index.md'      //['\u663e\u793a\u540d\u79f0':'\u9875\u9762\u6587\u4ef6\u8def\u5f84']\n    - 'Me':                      //\u591a\u7ea7\u76ee\u5f55\u7ed3\u6784\uff1ame\u4e0b\u9762\u5305\u542b\u591a\u4e2a\u9875\u9762\n        - 'me/English Personal Resume.md'  //\u5982\u679c\u7701\u7565\u914d\u7f6e\u663e\u793a\u540d\u79f0\u5219\u6309\u6587\u4ef6\u540d\u79f0\u663e\u793a\n        - 'me/My Plan for finding Job.md'\n        - 'me/Personal Pre-Work Record.md'\n        - 'me/My Financial Planning.md'\n        - 'me/How I create this blog.md'\n    - 'Tech': \n        - 'tech/Network Simulator 2 Installation Guide for Ubuntu.md'\n        - 'tech/Learn STL In 30 Minutes.md'\n        - 'tech/Installation of Ubuntu 16.04 On UDisk.md'\n        - 'tech/Configure Git Server With Ubuntn and Apache 2.md'\n        - 'tech/Add Watermark on Video with OpenCV and FFmpeg.md'\n        - 'tech/Develop DLNA Using Platinum Library.md'\n        - 'tech/FFmpeg and SDL tutorial 1.md'\n        - 'tech/FFmpeg compiled on MacOS.md'\n        - 'tech/FFmpeg version 3.1.4 example code.md'\n        - 'tech/Fmpeg 2.8.6 example code - transcoding.md'\n        - 'tech/Nmap Basics.md'\n        - 'tech/Use GDB.md'\n        - 'tech/User OpenCV to add watermark on a video.md'\n        - 'tech/Wireshark Basics.md'\n    - 'life':\n        - 'Ali Fu': 'life/alipay-scan-fu-icon.md'\n\ntheme: readthedocs   //\u914d\u7f6e\u6587\u6863\u4f7f\u7528\u7684\u6a21\u677f\u6837\u5f0f", 
            "title": "\u914d\u7f6e\u6587\u4ef6mkdocs.yml"
        }, 
        {
            "location": "/How I create this blog/#_6", 
            "text": ".\n\u251c\u2500\u2500 LICENSE    //\u9075\u5b88\u7684\u8bb8\u53ef\u8bc1\u6587\u4ef6\n\u251c\u2500\u2500 README.md  //\u9879\u76ee\u8bf4\u660e\n\u251c\u2500\u2500 docs       //\u6587\u6863\u9875\u9762\u6e90\u6587\u4ef6\u76ee\u5f55\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 assets //\u5305\u62ec\u4e00\u4e9b\u591a\u5a92\u4f53\u8d44\u6e90\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Resume\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 excels\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 ffmpeg-code\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 pdfs\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 pictures\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 index.md\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 life\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 alipay-scan-fu-icon.md\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 me\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 English\\ Personal\\ Resume.md\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 How\\ I\\ create\\ this\\ blog.md\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 My\\ Financial\\ Planning.md\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 My\\ Plan\\ for\\ finding\\ Job.md\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 Personal\\ Pre-Work\\ Record.md\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 tech\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Add\\ Watermark\\ on\\ Video\\ with\\ OpenCV\\ and\\ FFmpeg.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Configure\\ Git\\ Server\\ With\\ Ubuntn\\ and\\ Apache\\ 2.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Develop\\ DLNA\\ Using\\ Platinum\\ Library.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 FFmpeg\\ and\\ SDL\\ tutorial\\ 1.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 FFmpeg\\ compiled\\ on\\ MacOS.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 FFmpeg\\ version\\ 3.1.4\\ example\\ code.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Fmpeg\\ 2.8.6\\ example\\ code\\ -\\ transcoding.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Installation\\ of\\ Ubuntu\\ 16.04\\ On\\ UDisk.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Learn\\ STL\\ In\\ 30\\ Minutes.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Network\\ Simulator\\ 2\\ Installation\\ Guide\\ for\\ Ubuntu.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Nmap\\ Basics.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Use\\ GDB.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 User\\ OpenCV\\ to\\ add\\ watermark\\ on\\ a\\ video.md\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 Wireshark\\ Basics.md\n\u2514\u2500\u2500 mkdocs.yml   //\u6587\u6863\u7684\u914d\u7f6e\u6587\u4ef6", 
            "title": "\u76ee\u5f55\u7ed3\u6784"
        }, 
        {
            "location": "/How I create this blog/#_7", 
            "text": "\u5982\u679c\u89c9\u5f97\u4e00\u8fb9\u7528 vim \u5199\u6587\u6863\uff0c\u4e00\u8fb9\u8fd8\u5f97\u5728\u5199\u5b8c\u540e\u624b\u52a8\u8fd0\u884c\u4e00\u6b21 mkdocs serve \u6765\u5f00\u542f\u8c03\u8bd5\u670d\u52a1\u5668\u67e5\u770b\u6548\u679c\u6709\u4e9b\u9ebb\u70e6\uff0c\u8fd9\u91cc\u6709\u65b9\u6cd5\u53ef\u4ee5\u7b80\u5316\u8fd9\u4e9b\u64cd\u4f5c:", 
            "title": "\u8c03\u8bd5\u65b9\u6cd5"
        }, 
        {
            "location": "/How I create this blog/#1-shell", 
            "text": "mkdocs serve    \u8fd9\u6837\u8fd0\u884c\uff0cshell\u4e0d\u4f1a\u963b\u585e\uff0c\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u8fdb\u884c\u7f16\u8f91\u6d3b\u52a8\u3002\u9700\u8981\u56de\u5230\u524d\u53f0\u8fd0\u884c\u65f6\uff0c\u4f7f\u7528 fg \u547d\u4ee4\uff0c Ctrl+C \u5c31\u53ef\u4ee5\u7ed3\u675f\u8c03\u8bd5\u670d\u52a1\u5668\u4e86\u3002", 
            "title": "1. \u4f7f\u7528shell\u540e\u53f0\u547d\u4ee4\u8fd0\u884c"
        }, 
        {
            "location": "/How I create this blog/#2-screen", 
            "text": "\u5982\u679c\u7ef4\u62a4\u8fc7\u670d\u52a1\u5668\uff0c\u90a3\u4e48ssh\u4e0b\u4e00\u5b9a\u7528\u8fc7 screen \u8fd9\u4e2a\u5de5\u5177\uff0c\u7cfb\u7edf\u9ed8\u8ba4\u662f\u4e0d\u4f1a\u5b89\u88c5\u7684\uff0c\u9700\u8981\u624b\u52a8\u5b89\u88c5: sudo apt-get install -y screen  \u4f7f\u7528 screen \u542f\u52a8\u8c03\u8bd5\u670d\u52a1\u5668\uff1a  screen mkdocs serve  \u4e4b\u540e\u6309\u4e0b Ctrl+A+D \u5c31\u53ef\u4ee5\u4f7f\u8c03\u8bd5\u670d\u52a1\u5668\u4e0d\u963b\u585eshell\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7ee7\u7eed\u7f16\u8f91\u6587\u6863\u4e86\u3002\u6d4f\u89c8\u5668\u5728\u6bcf\u6b21\u4fdd\u5b58\u6587\u6863\u540e\u4f1a\u81ea\u52a8\u89e6\u53d1\u4e00\u6b21\u9875\u9762\u5237\u65b0\u6765\u66f4\u65b0\u663e\u793a\u5185\u5bb9\u3002  \u5982\u679c\u8981\u7ed3\u675f\u8c03\u8bd5\u670d\u52a1\u5668\uff0c\u4f7f\u7528\u547d\u4ee4: screen -r \uff0c\u5e76\u4f7f\u7528 Ctrl+C \u6765\u7ed3\u675f\u3002", 
            "title": "2. \u4f7f\u7528"
        }, 
        {
            "location": "/How I create this blog/#_8", 
            "text": "\u5982\u679c\u89c9\u5f97\u5728\u4e00\u4e2a\u663e\u793a\u5668\u5c4f\u5e55\u5185\u6765\u56de\u5207\u6362\u6d4f\u89c8\u5668\u548c\u7f16\u8f91\u5668\u6709\u70b9\u9ebb\u70e6\uff0c\u4e5f\u53ef\u4ee5\u7528\u624b\u673a\u505a\u4e3a\u6548\u679c\u9884\u89c8\u5668\uff0c\u4f46\u8fd9\u9700\u8981\u505a\u4e00\u4e9b\u989d\u5916\u7684\u914d\u7f6e\u3002  \u5982\u679c\u624b\u673a\u548c\u7535\u8111\u5728\u540c\u4e00\u4e2a\u5c40\u57df\u7f51\u5185\u90e8\uff0c\u53ef\u4ee5\u628a\u7535\u8111\u4f5c\u4e3a\u624b\u673a\u7684http\u4ee3\u7406\u670d\u52a1\u5668\u6765\u8bbf\u95eehttp\u670d\u52a1\uff0c\u5e76\u5728\u7535\u8111\u7684 hosts \u6587\u4ef6\u4e2d\u914d\u7f6e\u5982\u4e0b\u7684\u57df\u540d\u89e3\u6790\uff1a  127.0.0.1 doc.com  \u5728\u6587\u6863\u8c03\u8bd5\u670d\u52a1\u5668\u8fd0\u884c\u7684\u60c5\u51b5\u4e0b\uff0c\u624b\u673a\u4e0a\u8bbf\u95ee http://doc.com:8000 \u5c31\u53ef\u4ee5\u5b9e\u65f6\u9884\u89c8\u6587\u6863\u6548\u679c\uff0c\u800c\u4e14\u6bcf\u6b21\u6587\u6863\u4fdd\u5b58\u540e\u4f1a\u81ea\u52a8\u89e6\u53d1\u624b\u673a\u6d4f\u89c8\u5668\u9875\u9762\u5237\u65b0\u3002  \u90a3\u4e48\u5269\u4e0b\u7684\u5c31\u662f\u5982\u4f55\u914d\u7f6e\u624b\u673a\u901a\u8fc7\u7535\u8111\u6765\u8bbf\u95eeHttp\u670d\u52a1\u4e86  \u5728\u5f53\u524d\u7684WiFi\u8fde\u63a5\u4e2d\u914d\u7f6e\u4e00\u4e0b http\u4ee3\u7406 \uff0c\u7535\u8111\u4e0a\u9700\u8981\u6709\u4ee3\u7406\u8f6f\u4ef6\u5b89\u88c5\uff0c\u4f8b\u5982 Charles \u6216\u8005 Fiddler  \u4f8b\u5982,Mac\u4e0b\u4f7f\u7528 Charles \u4ee3\u7406\u8f6f\u4ef6\uff0c\u624b\u673a\u53ef\u8bbe\u7f6e\u5982\u4e0b\uff1a   \u7136\u540e\u624b\u673a\u8f93\u5165 http://doc.com:8000 \u6d4f\u89c8\u5230\u6587\u6863\u6548\u679c\u5982\u4e0b\uff1a", 
            "title": "\u624b\u673a\u9875\u9762\u8c03\u8bd5"
        }, 
        {
            "location": "/How I create this blog/#_9", 
            "text": "\u672c\u5730\u7f16\u8f91\u7684\u5dee\u4e0d\u591a\u4e86\uff0c\u53ef\u4ee5\u53d1\u5e03\u5230\u7f51\u7edc\u4e0a\uff0c\u8fd9\u5c31\u6d89\u53ca\u5230\u6258\u7ba1\u670d\u52a1\u3002\u6e90\u4ee3\u7801\u53ef\u4ee5\u901a\u8fc7 GitHub \u4ed3\u5e93\u670d\u52a1\u6258\u7ba1\uff0c\u6587\u6863\u81ea\u52a8\u751f\u6210\u548c\u6d4f\u89c8\u53ef\u4ee5\u901a\u8fc7 Read The Docs \u670d\u52a1\u6765\u6258\u7ba1\uff0c\u5e76\u4e14\u5f53\u914d\u7f6e\u4e86 GitHub \u5bf9 Read The Docs \u7684 Web Hook \u540e\uff0c GitHub \u4ed3\u5e93\u7684\u6bcf\u6b21\u63d0\u4ea4\u90fd\u4f1a\u81ea\u52a8\u89e6\u53d1 Read The Docs \u4e0a\u7684\u6587\u6863\u91cd\u65b0\u751f\u6210,\u4ee5\u4fbf\u4fdd\u6301\u6700\u65b0\u72b6\u6001\uff0c\u5f88\u65b9\u4fbf\u3002  \u524d\u9762\u5df2\u7ecf\u6ce8\u518c\u4e86\u8fd9\u4e24\u4e2a\u6258\u7ba1\u670d\u52a1\u7684\u5e10\u53f7\u3002\u4e0b\u9762\u52a8\u624b\u6765\u53d1\u5e03\u6587\u6863\u5230\u7f51\u7edc\u4e0a\uff0c\u8ba9\u66f4\u591a\u7684\u4eba\u53ef\u4ee5\u770b\u5230\u3002    \u767b\u5f55 GitHub \u5e76\u521b\u5efa\u4e00\u4e2a\u6258\u7ba1\u4ed3\u5e93    \u7ed9\u4ed3\u5e93\u6dfb\u52a0 Read The Docs \u7684 WebHook     \u767b\u5f55 Read The Docs \u5e76\u5bfc\u5165\u6587\u6863\u9879\u76ee\u4ed3\u5e93    \u4f7f\u7528 git \u547d\u4ee4\u521d\u59cb\u5316\u6587\u6863\u9879\u76ee\u4e3a git  \u4ed3\u5e93, \u521b\u5efa\u9996\u6b21\u63d0\u4ea4\u5e76\u4e0a\u4f20\u5230 GitHub \u7684\u4ed3\u5e93\u4e2d\uff0c\u89e6\u53d1 Read The Docs \u81ea\u52a8\u6784\u5efa\u670d\u52a1    //\u521d\u59cb\u5316git\u4ed3\u5e93\u5e76\u521b\u5efa\u9996\u6b21\u63d0\u4ea4\u8bb0\u5f55\ngit init   git add *   git commit -m 'a demo blog'  //\u8fd9\u91cc\u7684https://github.com/wangzhizhou/demo.git\u8def\u5f84\u5e94\u8be5\u662f\u4f60\u81ea\u5df1\u521b\u5efa\u7684\u4ed3\u5e93\u8def\u5f84\ngit remote add origin https://github.com/wangzhizhou/demo.git  //\u63a8\u9001\u5230GitHub\u4ed3\u5e93\u4e2d\ngit push -u origin master   \u5728\u7ebf\u6d4f\u89c8\u6587\u6863", 
            "title": "\u5728\u7ebf\u6258\u7ba1"
        }, 
        {
            "location": "/How I create this blog/#_10", 
            "text": "\u5317\u4e0a\u89c1\u9762\u4f1a    Joker\u624b\u624e", 
            "title": "\u6211\u521b\u5efa\u7684\u51e0\u4e2a\u6587\u6863\u793a\u4f8b"
        }, 
        {
            "location": "/tech/Network Simulator 2 Installation Guide for Ubuntu/", 
            "text": "Network Simulator 2 Installation Guide for Ubuntu\n\n\nYou can checkout my \nrepo\n for this document, and get related files.\n\n\nsudo apt-get install git-core\ngit clone https://github.com/wangzhizhou2014GitHub/Network-Simulator-Installation-Guideline-For-Ubuntu\n\n\n\n\nYou also can download the pdf edition of this document \nhere\n\n\nThis Installation of Network Simulator 2 on the Ubuntu 16.04 Live CD UDisk\n\n\nAfter you intall your Ubuntu System, you should use command: \n\nsudo apt-get update\n  to update your system software repos sites.\nThen you can use \napt-get\n command to install the software that you want on your system.\n\n\nFirstly, you should download the \nns2 all-in-one file package\n from it's offical website \nNS2-Network simulator\n, and the link\nof download file is: \nNS 2.35 released Nov 4 2011\n.\n\n\nYou can use the web browser or download tools such as XunLei.\n\n\n\nAfter that, you should get a file named: \nns-allinone-2.35.tar.gz\n.\nYou can use the command line to decompress the downloaded file:\n\n\ntar zxvf ns-allinone-2.35.tar.gz \n\n\n\n\nNow, you get a directory which contain the Network Simulator 2 source files, then you should compile these files manually.\n\n\nEnter the uncompressed directory with command line: \n\ncd ns-allinone-2.35/\n and run the compile script: \nsudo ./install\n, you will find there are some error exist: \n\n\n/ns-allinone-2.35/tk8.5.10/unix/../generic/tk.h:76:23: fatal error: X11/Xlib.h: No such file or directory, this is because your system\nhas no X11 dev-lib, so we should install them firstly\n\n\n\n\nYou can use command to search related libs should be installed: \n\n\nsudo apt-cache search x11-dev\nlibx11-dev - X11 client-side library (development headers)\nlibxkbcommon-x11-dev - library to create keymaps with the XKB X11 protocol - development files\n\n\n\n\nso, we should install the \nlibx11-dev(headers)\n and \nlibxkbcommon-x11-dev\n as follow:\n\n\nsudo apt-get install libx11-dev libxkbcommon-x11-dev\n\n\n\n\nThen you run the \nsudo ./install\n command again. \n\n\nAnd You may find there appear another configuration fails as follow:\n\n\ncan't find X includes\notcl-1.14 configuration failed! Exiting ...\nPlease check http://www.isi.edu/nsnam/ns/ns-problems.html\nfor common problems and bug fixes.\n\n\n\n\nYou should install another software to suppress this fail: \n\n\nsudo apt-get install libxt-dev\n\n\n\n\nAgain, run \nsudo run ./intall\n.\n\n\nOps~, you run into the third problem when compile the source file:\n\n\nlinkstate/ls.h:137:25: error: \u2018erase\u2019 was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]\n  void eraseAll() { erase(baseMap::begin(), baseMap::end()); }\n\nlinkstate/ls.h:137:25: note: declarations in dependent base \u2018std::map\nint, LsIdSeq, std::less\nint\n, std::allocator\nstd::pair\nconst int, LsIdSeq\n \n \n\u2019 are not found by unqualified lookup\nlinkstate/ls.h:137:25: note: use \u2018this-\nerase\u2019 instead\nMakefile:93: recipe for target 'linkstate/ls.o' failed\nmake: *** [linkstate/ls.o] Error 1\nNs make failed!\nSee http://www.isi.edu/nsnam/ns/ns-problems.html for problems\n\n\n\n\nAfter search on the internet a while, I find the solution. We should change a file located in the ns2 directory: \nns-allinone-2.35/ns-2.35/linkstate/ls.h\n, in the \nline 137\n, we should change the line frome\n\n\nvoid eraseAll() { erase(baseMap::begin(), baseMap::end()); } \n\n\n\n\nto\n\n\nvoid eraseAll() { this-\nerase(baseMap::begin(), baseMap::end()); }\n\n\n\n\n\n\nYou can use vim or other plain text editor to do this task. \n\n\n\n\nAfter that, run the command \nsudo ./install\n again under the directory : \nns-allinone-2.35/\n.\n\n\nThis time, we compile the NS2 source file successfully! You can get these message on the screen to demostrate the compile process is completed:\n\n\nPlease put /home/ubuntu/Downloads/ns-allinone-2.35/bin:/home/ubuntu/Downloads/ns-allinone-2.35/tcl8.5.10/unix:/home/ubuntu/Downloads/ns-allinone-2.35/tk8.5.10/unix\ninto your PATH environment; so that you'll be able to run itm/tclsh/wish/xgraph.\n\nIMPORTANT NOTICES:\n\n(1) You MUST put /home/ubuntu/Downloads/ns-allinone-2.35/otcl-1.14, /home/ubuntu/Downloads/ns-allinone-2.35/lib, \n    into your LD_LIBRARY_PATH environment variable.\n    If it complains about X libraries, add path to your X libraries \n    into LD_LIBRARY_PATH.\n    If you are using csh, you can set it like:\n        setenv LD_LIBRARY_PATH \npaths\n\n    If you are using sh, you can set it like:\n        export LD_LIBRARY_PATH=\npaths\n\n\n(2) You MUST put /home/ubuntu/Downloads/ns-allinone-2.35/tcl8.5.10/library into your TCL_LIBRARY environmental\n    variable. Otherwise ns/nam will complain during startup.\n\n\nAfter these steps, you can now run the ns validation suite with\ncd ns-2.35; ./validate\n\nFor trouble shooting, please first read ns problems page \nhttp://www.isi.edu/nsnam/ns/ns-problems.html. Also search the ns mailing list archive\nfor related posts.\n\n\n\n\nAs above message said, we should add some environment variables into the end of your user configure file: \n.bashrc\n, which is under the directory: \n~/.bashrc\n\n\nexport NS2_HOME=/home/ubuntu/Downloads/ns-allinone-2.35\nexport PATH=$PATH:$NS2_HOME/bin:$NS2_HOME/tcl8.5.10/unix:$NS2_HOME/tk8.5.10/unix\nexport LD_LIBRARY_PATH=$NS2_HOME/otcl-1.14:$NS_HOME/lib\nexport TCL_LIBRARY=$NS2_HOME/tcl8.5.10/library\n\n\n\n\nAnd you should use the command to make the change take effect: \n\n\nsource ~/.bashrc \n\n\n\n\nThen you can validate the NS2 as the compile successful message said, buy run \n./invalidate\n in the \nns-allinone-2.35/ns-2.35\n directory.\n\n\n\n\nThis step may take a long time, because there are so many test examples should been passed. Of course, you can skip this validate step to continue.\n\n\n\n\nAfter run these test examples, those failed examples will been listed out in bash as follow:\n\n\nvalidate overall report: some tests failed:\n     ./test-all-tcp ./test-all-testReno ./test-all-newreno ./test-all-sack ./test-all-tcpOptions ./test-all-tcpReset ./test-all-testReno-full ./test-all-testReno-bayfull ./test-all-sack-full ./test-all-tcp-init-win ./test-all-tcpVariants ./test-all-LimTransmit ./test-all-aimd ./test-all-rfc793edu ./test-all-rfc2581 ./test-all-rbp ./test-all-frto ./test-all-ecn ./test-all-ecn-ack ./test-all-ecn-full ./test-all-quickstart ./test-all-manual-routing ./test-all-red ./test-all-adaptive-red ./test-all-red-pd ./test-all-rio ./test-all-vq ./test-all-rem ./test-all-gk ./test-all-pi ./test-all-cbq ./test-all-schedule ./test-all-links ./test-all-oddBehaviors\nto re-run a specific test, cd tcl/test; ./test-all-TEST-NAME\n\n\n\n\nAdd MPTCP module into the NS2\n\n\nIn this project, there is a patch file named \nmptcp.patch-for-ns2.35-20130810\n, you should copy the \nmptcp.patch-for-ns2.35-20130810\n under directory: \nns-allinone-2.35/ns-2.35/\n, then change directory into \n/ns-allinone-2.35/ns-2.35/\n and apply this patch file with command:\n\n\npatch -p1 \n mptcp.patch-for-ns2.35-20130810\n\n\n\n\nthe bash ouput as follow, demostrate we added the mptcp source file into directory \n/ns-allinone-2.35/ns-2.35/tcp/\n:\n\n\npatch -p1 \n mptcp.patch-for-ns2.35-20130810 \npatching file Makefile.in\npatching file tcp/mptcp.cc\npatching file tcp/mptcp-full.cc\npatching file tcp/mptcp-full.h\npatching file tcp/mptcp.h\npatching file tcp/tcp.h\npatching file trace/trace.cc\n\n\n\n\nThen, you run configure command as follow:\n\n\nsudo ./configure --with-tcl-ver=8.5\n\n\n\n\nLastly, you should make the ns-2.35 with command:\n\n\nsudo make\n\n\n\n\nthe last output of command is as follow:\n\n\nfor i in indep-utils/cmu-scen-gen/setdest indep-utils/webtrace-conv/dec indep-utils/webtrace-conv/epa indep-utils/webtrace-conv/nlanr indep-utils/webtrace-conv/ucb; do ( cd $i; make all; ) done\nmake[1]: Entering directory '/home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/cmu-scen-gen/setdest'\nmake[1]: Nothing to be done for 'all'.\nmake[1]: Leaving directory '/home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/cmu-scen-gen/setdest'\nmake[1]: Entering directory '/home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/dec'\nmake[1]: Nothing to be done for 'all'.\nmake[1]: Leaving directory '/home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/dec'\nmake[1]: Entering directory '/home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/epa'\nmake[1]: Nothing to be done for 'all'.\nmake[1]: Leaving directory '/home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/epa'\nmake[1]: Entering directory '/home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/nlanr'\nmake[1]: Nothing to be done for 'all'.\nmake[1]: Leaving directory '/home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/nlanr'\nmake[1]: Entering directory '/home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/ucb'\nmake[1]: Nothing to be done for 'all'.\nmake[1]: Leaving directory '/home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/ucb'\n\n\n\n\nThis means there is not fatal errors occurred. Then you can think your MPTCP installed successfully!\n\n\nAnd we can run a mptcp sample script file to valide this installation.\n\n\nThis project contained a test tcl script file \nmptcp-sample.tcl\n, you can run with ns command as follow:\n\n\nns mptcp-sample.tcl\n\n\n\n\nAfter run this script as above, there will be a xgraph plot pop out, that demonstrate the addition of \nMPTCP\n is successful.\n\n\nConfiguration of Eclipse Debug Environment\n\n\nFirstly, if you want debug ns2, you should make it support debug. Change directory into: \n/ns-allinone-2.35/ns-2.35/\n,and using vim open the \nMakefile\n, change the \n56 line\n from\n\n\nCCOPT   =  -Wall -Wno-write-strings\n\n\n\n\nto\n\n\nCCOPT   =  -g -Wall -Wno-write-strings\n\n\n\n\nsave and exit the Makefile, then run: \n\n\nsudo make\n\n\n\n\nto recompile the ns2. Now the ns2 can support debug.\n\n\nThen, you should Download the Eclipse IDE for C/C++ Developers on the Web Site: \nhttp://www.eclipse.org/downloads/\n\n\nBecause eclipse don't need to install, after we decompress the tar.gz file, we can use is directly under it's directory. But if we want use it anywhere in our ubuntu file system, we should add the eclipse binary path to the environment variable \nPATH\n to tell our system where to locate elipse and startup it.\n\n\nUse command decompress *.tar.gz file: \n\n\ntar zxvf eclipse-cpp-mars-2-linux-gtk-x86_64.tar.gz\n\n\n\n\nThen there will be a directory named : \neclipse\n under current directory, we add one line in the ~/.bashrc file as we done early:\n\n\nexport PATH=$PATH:/home/ubuntu/Downloads/eclipse\n\n\n\n\nand use: \nsource ~/.bashrc\n to make the change take effect.\n\n\nOk, you can run eclipse anywhere in your file system.\n\n\nIf you run eclipse in bash, you will find that, there is a problem said that eclipse need the \njava run environment\n to startup, because this \nsoftware is developed by java. we should do more thing to make it work:\n\n\nYou can download the \nJRE\n from website: \nhttp://www.oracle.com/technetwork/java/javase/downloads/index-jsp-138363.html\n\n\n\n\nMake sure download the correct edition JRE corresponding to your system. \n\n\nLinux 64 Edition for my condition.\n\n\n\n\nuse command: \n\ntar zxvf jre-8u91-linux-x64.tar.gz\ndecompress the file and move the decompressed directory under directory: \neclipse/\n, and rename it to \n**jre**\n, now you can start eclipse without error about JRE.\n\n\nFrom there, we start configure the debug environment of ns2 with Eclipse\n\n\nBecause there are so many issues should been care, and I recommend you to learn from this blog: \nhttp://blog.sina.com.cn/s/blog_5d2054d90100za8e.html\n, there are detail description, but images can also demostrate the operation about eclipse. Enjoy It!\n\n\nThe process is on Ubuntu 14.04 (simple record the hack process, mostly same as Ubuntu 16.04)\n\n\nYou should first update ubuntu to get the latest software with command :\n\n\nsudo apt-get update\nsudo apt-get upgrade\nsudo apt-get dist-upgrade\nsudo apt-get install g++\n\n\n\n\nAfter install Ubuntu14.04, I downloaded the \nns-allinone2.35\n from it's offical website and use the \ntar zxvf ns-allinone2.35.tar.gz\n decompress the file.\n\n\nThen I use the vim to edit the file \nns-allinone2.35/ns-2.35/linkstate/ls.h\n, change the \nline 137\n, added a \nthis\n pointer.\n\n\nUse the command: \nsudo ./install\n to compile the ns2, but there are some error, there are hints say that there is no X11.h header file.\n\n\n\n\nIf you upgrade you ubuntu firstly, you may not encount this error. But who know it.\n\n\n\n\nSo, I should install relate program with command:\n\n\nsudo apt-get install libx11-dev\nsudo apt-get install libxkbcommon-x11-deud \nsudo apt-get install libghc-x11-dev\n\n\n\n\nAfter apply the patch file \nmptcp.patch-for-ns2.35-20130810\n under \n/ns-allinone-2.35/ns-2.35/\n, then use command:\nsudo ./configure --with-tcl-ver=8.5\n to configure the project, after that, use command: \nsudo make\n the make the project, then change directory to the parent directory of ns-2.35 and run the command: sudo ./install to complete!\n\n\nWritten By Joker, 2016-05-07, copy left", 
            "title": "Network Simulator 2 Installation Guide for Ubuntu"
        }, 
        {
            "location": "/tech/Network Simulator 2 Installation Guide for Ubuntu/#network-simulator-2-installation-guide-for-ubuntu", 
            "text": "You can checkout my  repo  for this document, and get related files.  sudo apt-get install git-core\ngit clone https://github.com/wangzhizhou2014GitHub/Network-Simulator-Installation-Guideline-For-Ubuntu  You also can download the pdf edition of this document  here", 
            "title": "Network Simulator 2 Installation Guide for Ubuntu"
        }, 
        {
            "location": "/tech/Network Simulator 2 Installation Guide for Ubuntu/#this-installation-of-network-simulator-2-on-the-ubuntu-1604-live-cd-udisk", 
            "text": "After you intall your Ubuntu System, you should use command:  sudo apt-get update   to update your system software repos sites.\nThen you can use  apt-get  command to install the software that you want on your system.  Firstly, you should download the  ns2 all-in-one file package  from it's offical website  NS2-Network simulator , and the link\nof download file is:  NS 2.35 released Nov 4 2011 .  You can use the web browser or download tools such as XunLei.  After that, you should get a file named:  ns-allinone-2.35.tar.gz .\nYou can use the command line to decompress the downloaded file:  tar zxvf ns-allinone-2.35.tar.gz   Now, you get a directory which contain the Network Simulator 2 source files, then you should compile these files manually.  Enter the uncompressed directory with command line:  cd ns-allinone-2.35/  and run the compile script:  sudo ./install , you will find there are some error exist:   /ns-allinone-2.35/tk8.5.10/unix/../generic/tk.h:76:23: fatal error: X11/Xlib.h: No such file or directory, this is because your system\nhas no X11 dev-lib, so we should install them firstly  You can use command to search related libs should be installed:   sudo apt-cache search x11-dev\nlibx11-dev - X11 client-side library (development headers)\nlibxkbcommon-x11-dev - library to create keymaps with the XKB X11 protocol - development files  so, we should install the  libx11-dev(headers)  and  libxkbcommon-x11-dev  as follow:  sudo apt-get install libx11-dev libxkbcommon-x11-dev  Then you run the  sudo ./install  command again.   And You may find there appear another configuration fails as follow:  can't find X includes\notcl-1.14 configuration failed! Exiting ...\nPlease check http://www.isi.edu/nsnam/ns/ns-problems.html\nfor common problems and bug fixes.  You should install another software to suppress this fail:   sudo apt-get install libxt-dev  Again, run  sudo run ./intall .  Ops~, you run into the third problem when compile the source file:  linkstate/ls.h:137:25: error: \u2018erase\u2019 was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]\n  void eraseAll() { erase(baseMap::begin(), baseMap::end()); }\n\nlinkstate/ls.h:137:25: note: declarations in dependent base \u2018std::map int, LsIdSeq, std::less int , std::allocator std::pair const int, LsIdSeq     \u2019 are not found by unqualified lookup\nlinkstate/ls.h:137:25: note: use \u2018this- erase\u2019 instead\nMakefile:93: recipe for target 'linkstate/ls.o' failed\nmake: *** [linkstate/ls.o] Error 1\nNs make failed!\nSee http://www.isi.edu/nsnam/ns/ns-problems.html for problems  After search on the internet a while, I find the solution. We should change a file located in the ns2 directory:  ns-allinone-2.35/ns-2.35/linkstate/ls.h , in the  line 137 , we should change the line frome  void eraseAll() { erase(baseMap::begin(), baseMap::end()); }   to  void eraseAll() { this- erase(baseMap::begin(), baseMap::end()); }   You can use vim or other plain text editor to do this task.    After that, run the command  sudo ./install  again under the directory :  ns-allinone-2.35/ .  This time, we compile the NS2 source file successfully! You can get these message on the screen to demostrate the compile process is completed:  Please put /home/ubuntu/Downloads/ns-allinone-2.35/bin:/home/ubuntu/Downloads/ns-allinone-2.35/tcl8.5.10/unix:/home/ubuntu/Downloads/ns-allinone-2.35/tk8.5.10/unix\ninto your PATH environment; so that you'll be able to run itm/tclsh/wish/xgraph.\n\nIMPORTANT NOTICES:\n\n(1) You MUST put /home/ubuntu/Downloads/ns-allinone-2.35/otcl-1.14, /home/ubuntu/Downloads/ns-allinone-2.35/lib, \n    into your LD_LIBRARY_PATH environment variable.\n    If it complains about X libraries, add path to your X libraries \n    into LD_LIBRARY_PATH.\n    If you are using csh, you can set it like:\n        setenv LD_LIBRARY_PATH  paths \n    If you are using sh, you can set it like:\n        export LD_LIBRARY_PATH= paths \n\n(2) You MUST put /home/ubuntu/Downloads/ns-allinone-2.35/tcl8.5.10/library into your TCL_LIBRARY environmental\n    variable. Otherwise ns/nam will complain during startup.\n\n\nAfter these steps, you can now run the ns validation suite with\ncd ns-2.35; ./validate\n\nFor trouble shooting, please first read ns problems page \nhttp://www.isi.edu/nsnam/ns/ns-problems.html. Also search the ns mailing list archive\nfor related posts.  As above message said, we should add some environment variables into the end of your user configure file:  .bashrc , which is under the directory:  ~/.bashrc  export NS2_HOME=/home/ubuntu/Downloads/ns-allinone-2.35\nexport PATH=$PATH:$NS2_HOME/bin:$NS2_HOME/tcl8.5.10/unix:$NS2_HOME/tk8.5.10/unix\nexport LD_LIBRARY_PATH=$NS2_HOME/otcl-1.14:$NS_HOME/lib\nexport TCL_LIBRARY=$NS2_HOME/tcl8.5.10/library  And you should use the command to make the change take effect:   source ~/.bashrc   Then you can validate the NS2 as the compile successful message said, buy run  ./invalidate  in the  ns-allinone-2.35/ns-2.35  directory.   This step may take a long time, because there are so many test examples should been passed. Of course, you can skip this validate step to continue.   After run these test examples, those failed examples will been listed out in bash as follow:  validate overall report: some tests failed:\n     ./test-all-tcp ./test-all-testReno ./test-all-newreno ./test-all-sack ./test-all-tcpOptions ./test-all-tcpReset ./test-all-testReno-full ./test-all-testReno-bayfull ./test-all-sack-full ./test-all-tcp-init-win ./test-all-tcpVariants ./test-all-LimTransmit ./test-all-aimd ./test-all-rfc793edu ./test-all-rfc2581 ./test-all-rbp ./test-all-frto ./test-all-ecn ./test-all-ecn-ack ./test-all-ecn-full ./test-all-quickstart ./test-all-manual-routing ./test-all-red ./test-all-adaptive-red ./test-all-red-pd ./test-all-rio ./test-all-vq ./test-all-rem ./test-all-gk ./test-all-pi ./test-all-cbq ./test-all-schedule ./test-all-links ./test-all-oddBehaviors\nto re-run a specific test, cd tcl/test; ./test-all-TEST-NAME", 
            "title": "This Installation of Network Simulator 2 on the Ubuntu 16.04 Live CD UDisk"
        }, 
        {
            "location": "/tech/Network Simulator 2 Installation Guide for Ubuntu/#add-mptcp-module-into-the-ns2", 
            "text": "In this project, there is a patch file named  mptcp.patch-for-ns2.35-20130810 , you should copy the  mptcp.patch-for-ns2.35-20130810  under directory:  ns-allinone-2.35/ns-2.35/ , then change directory into  /ns-allinone-2.35/ns-2.35/  and apply this patch file with command:  patch -p1   mptcp.patch-for-ns2.35-20130810  the bash ouput as follow, demostrate we added the mptcp source file into directory  /ns-allinone-2.35/ns-2.35/tcp/ :  patch -p1   mptcp.patch-for-ns2.35-20130810 \npatching file Makefile.in\npatching file tcp/mptcp.cc\npatching file tcp/mptcp-full.cc\npatching file tcp/mptcp-full.h\npatching file tcp/mptcp.h\npatching file tcp/tcp.h\npatching file trace/trace.cc  Then, you run configure command as follow:  sudo ./configure --with-tcl-ver=8.5  Lastly, you should make the ns-2.35 with command:  sudo make  the last output of command is as follow:  for i in indep-utils/cmu-scen-gen/setdest indep-utils/webtrace-conv/dec indep-utils/webtrace-conv/epa indep-utils/webtrace-conv/nlanr indep-utils/webtrace-conv/ucb; do ( cd $i; make all; ) done\nmake[1]: Entering directory '/home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/cmu-scen-gen/setdest'\nmake[1]: Nothing to be done for 'all'.\nmake[1]: Leaving directory '/home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/cmu-scen-gen/setdest'\nmake[1]: Entering directory '/home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/dec'\nmake[1]: Nothing to be done for 'all'.\nmake[1]: Leaving directory '/home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/dec'\nmake[1]: Entering directory '/home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/epa'\nmake[1]: Nothing to be done for 'all'.\nmake[1]: Leaving directory '/home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/epa'\nmake[1]: Entering directory '/home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/nlanr'\nmake[1]: Nothing to be done for 'all'.\nmake[1]: Leaving directory '/home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/nlanr'\nmake[1]: Entering directory '/home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/ucb'\nmake[1]: Nothing to be done for 'all'.\nmake[1]: Leaving directory '/home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/ucb'  This means there is not fatal errors occurred. Then you can think your MPTCP installed successfully!", 
            "title": "Add MPTCP module into the NS2"
        }, 
        {
            "location": "/tech/Network Simulator 2 Installation Guide for Ubuntu/#and-we-can-run-a-mptcp-sample-script-file-to-valide-this-installation", 
            "text": "This project contained a test tcl script file  mptcp-sample.tcl , you can run with ns command as follow:  ns mptcp-sample.tcl  After run this script as above, there will be a xgraph plot pop out, that demonstrate the addition of  MPTCP  is successful.", 
            "title": "And we can run a mptcp sample script file to valide this installation."
        }, 
        {
            "location": "/tech/Network Simulator 2 Installation Guide for Ubuntu/#configuration-of-eclipse-debug-environment", 
            "text": "Firstly, if you want debug ns2, you should make it support debug. Change directory into:  /ns-allinone-2.35/ns-2.35/ ,and using vim open the  Makefile , change the  56 line  from  CCOPT   =  -Wall -Wno-write-strings  to  CCOPT   =  -g -Wall -Wno-write-strings  save and exit the Makefile, then run:   sudo make  to recompile the ns2. Now the ns2 can support debug.  Then, you should Download the Eclipse IDE for C/C++ Developers on the Web Site:  http://www.eclipse.org/downloads/  Because eclipse don't need to install, after we decompress the tar.gz file, we can use is directly under it's directory. But if we want use it anywhere in our ubuntu file system, we should add the eclipse binary path to the environment variable  PATH  to tell our system where to locate elipse and startup it.  Use command decompress *.tar.gz file:   tar zxvf eclipse-cpp-mars-2-linux-gtk-x86_64.tar.gz  Then there will be a directory named :  eclipse  under current directory, we add one line in the ~/.bashrc file as we done early:  export PATH=$PATH:/home/ubuntu/Downloads/eclipse  and use:  source ~/.bashrc  to make the change take effect.", 
            "title": "Configuration of Eclipse Debug Environment"
        }, 
        {
            "location": "/tech/Network Simulator 2 Installation Guide for Ubuntu/#ok-you-can-run-eclipse-anywhere-in-your-file-system", 
            "text": "If you run eclipse in bash, you will find that, there is a problem said that eclipse need the  java run environment  to startup, because this \nsoftware is developed by java. we should do more thing to make it work:  You can download the  JRE  from website:  http://www.oracle.com/technetwork/java/javase/downloads/index-jsp-138363.html   Make sure download the correct edition JRE corresponding to your system.   Linux 64 Edition for my condition.   use command:  tar zxvf jre-8u91-linux-x64.tar.gz decompress the file and move the decompressed directory under directory:  eclipse/ , and rename it to  **jre** , now you can start eclipse without error about JRE.  From there, we start configure the debug environment of ns2 with Eclipse  Because there are so many issues should been care, and I recommend you to learn from this blog:  http://blog.sina.com.cn/s/blog_5d2054d90100za8e.html , there are detail description, but images can also demostrate the operation about eclipse. Enjoy It!", 
            "title": "Ok, you can run eclipse anywhere in your file system."
        }, 
        {
            "location": "/tech/Network Simulator 2 Installation Guide for Ubuntu/#the-process-is-on-ubuntu-1404-simple-record-the-hack-process-mostly-same-as-ubuntu-1604", 
            "text": "You should first update ubuntu to get the latest software with command :  sudo apt-get update\nsudo apt-get upgrade\nsudo apt-get dist-upgrade\nsudo apt-get install g++  After install Ubuntu14.04, I downloaded the  ns-allinone2.35  from it's offical website and use the  tar zxvf ns-allinone2.35.tar.gz  decompress the file.  Then I use the vim to edit the file  ns-allinone2.35/ns-2.35/linkstate/ls.h , change the  line 137 , added a  this  pointer.  Use the command:  sudo ./install  to compile the ns2, but there are some error, there are hints say that there is no X11.h header file.   If you upgrade you ubuntu firstly, you may not encount this error. But who know it.   So, I should install relate program with command:  sudo apt-get install libx11-dev\nsudo apt-get install libxkbcommon-x11-deud \nsudo apt-get install libghc-x11-dev  After apply the patch file  mptcp.patch-for-ns2.35-20130810  under  /ns-allinone-2.35/ns-2.35/ , then use command: sudo ./configure --with-tcl-ver=8.5  to configure the project, after that, use command:  sudo make  the make the project, then change directory to the parent directory of ns-2.35 and run the command: sudo ./install to complete!  Written By Joker, 2016-05-07, copy left", 
            "title": "The process is on Ubuntu 14.04 (simple record the hack process, mostly same as Ubuntu 16.04)"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/", 
            "text": "Learn STL In 30 Minutes\n\n\n\u4e09\u5341\u5206\u949f\u638c\u63e1 STL\n\n\n\u8fd9\u7bc7\u6587\u7ae0\u662f\u6211\u4ece\u5317\u5927BBS\u4e0a\u8f6c\u6765\u7684\uff0c\u56e0\u4e3aBBS\u4e0a\u7684\u683c\u5f0f\u5f88\u4e71\uff0c\u5c31\u81ea\u5df1\u7528Markdown\u91cd\u65b0\u5199\u4e86\u4e00\u904d\uff0c\u4e00\u6765\u52a0\u6df1\u8bb0\u5fc6\uff0c\u4e8c\u6765\u4f5c\u4e3a\u4e2a\u4eba\u6536\u85cf\uff0c\u5982\u679c\u4f60\u89c9\u5f97\u5f88\u6709\u7528\uff0c\u90a3\u5c31\u8db3\u591f\u4e86\u3002\u4ee5\u4e0b\u4e3a\u6b63\u6587\u3002\n\n\n\u8fd9\u662f\u672c\u5c0f\u4eba\u4e66\u3002\u539f\u540d\u662f\n\u300aUsing STL\u300b\n\uff0c\u4e0d\u77e5\u9053\u662f\u8c01\u5199\u7684\u3002\u4e0d\u8fc7\u6211\u5012\u89c9\u5f97\u5f88\u6709\u8da3\uff0c\u6240\u4ee5\u82b1\u4e86\u4e24\u4e2a\u665a\u4e0a\u628a\u5b83\u7ffb\u8bd1\u51fa\u6765\u3002\u6211\u6ca1\u6709\u5bf9\u7ffb\u8bd1\u51fa\u7684\u5185\u5bb9\u6821\u9a8c\u8fc7\u3002\u5982\u679c\u4f60\u6ca1\u6cd5\u5728\u4e09\u5341\u5206\u949f\u5185\u89c9\u5f97\u6709\u6240\u6536\u83b7\uff0c\u90a3\u4e48\u8d76\u7d27\u6254\u4e86\u5b83\u3002\u6587\u4e2d\u6211\u7701\u7565\u4e86\u5f88\u591a\u4e1c\u897f\u3002\u5fc3\u75bc\u5450\uff01\u6d6a\u8d39\u6211\u4e24\u4e2a\u665a\u4e0a\u3002\n\n\n\u8bd1\u8005\uff1akary\ncontact: \n\n\nSTL \u6982\u8ff0\n\n\nSTL \u7684\u4e00\u4e2a\u91cd\u8981\u7279\u70b9\u662f\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u7684\u5206\u79bb\u3002\u5c3d\u7ba1\u8fd9\u662f\u4e2a\u7b80\u5355\u7684\u6982\u5ff5\uff0c\u4f46\u8fd9\u79cd\u5206\u79bb\u786e\u5b9e\u4f7f\u5f97STL\u53d8\u5f97\u975e\u5e38\u901a\u7528\u3002\u4f8b\u5982\uff0c\u7531\u4e8eSTL\u7684sort()\u51fd\u6570\u662f\u5b8c\u5168\u901a\u7528\u7684\uff0c\u4f60\u53ef\u4ee5\u7528\u5b83\u6765\u64cd\u4f5c\u51e0\u4e4e\u4efb\u4f55\u6570\u636e\u96c6\u5408\uff0c\u5305\u62ec\u94fe\u8868\uff0c\u5bb9\u5668\u548c\u6570\u7ec4\u3002\n\n\n\u8981\u70b9\n\n\nSTL\u7b97\u6cd5\u4f5c\u4e3a\u6a21\u677f\u51fd\u6570\u63d0\u4f9b\u3002\n\n\n\u4e3a\u4e86\u548c\u5176\u4ed6\u7ec4\u4ef6\u76f8\u533a\u522b\uff0c\u5728\u672c\u4e66\u4e2dSTL\u7b97\u6cd5\u7528\u540e\u63a5\u4e00\u5bf9\u5706\u62ec\u5f27\u7684\u65b9\u5f0f\u8868\u793a\uff0c\u4f8b\u5982sort()\u3002\n\n\nSTL\u53e6\u4e00\u4e2a\u91cd\u8981\u7279\u6027\u662f\u5b83\u4e0d\u662f\u9762\u5411\u5bf9\u8c61\u7684\u3002\u4e3a\u4e86\u5177\u6709\u8db3\u591f\u901a\u7528\u6027\uff0cSTL\u4e3b\u8981\u4f9d\u8d56\u4e8e\u6a21\u677f\u800c\u4e0d\u662f\u5c01\u88c5\u3001\u7ee7\u627f\u548c\u865a\u51fd\u6570\uff08\u591a\u6001\u6027\uff09\u2014\u2014 OOP\u7684\u4e09\u4e2a\u8981\u7d20\u3002\u4f60\u5728STL\u4e2d\u627e\u4e0d\u5230\u4efb\u4f55\u660e\u663e\u7684\u7c7b\u7ee7\u627f\u5173\u7cfb\u3002\u8fd9\u597d\u50cf\u662f\u4e00\u79cd\u5012\u9000\uff0c\u4f46\u8fd9\u6b63\u597d\u662f\u4f7f\u5f97STL\u7684\u7ec4\u4ef6\u5177\u6709\u5e7f\u6cdb\u901a\u7528\u6027\u7684\u5e95\u5c42\u7279\u5f81\u3002\u53e6\u5916\uff0c\u7531\u4e8eSTL\u662f\u57fa\u4e8e\u6a21\u677f\uff0c\u5185\u8054\u51fd\u6570\u7684\u4f7f\u7528\u4f7f\u5f97\u751f\u6210\u7684\u4ee3\u7801\u77ed\u5c0f\u9ad8\u6548\u3002\n\n\n\u63d0\u793a\n\n\n\u786e\u4fdd\u5728\u7f16\u8bd1\u4f7f\u7528\u4e86STL\u7684\u7a0b\u5e8f\u4e2d\u81f3\u5c11\u8981\u4f7f\u7528 \n-O\n \u4f18\u5316\u6765\u4fdd\u8bc1\u5185\u8054\u6269\u5c55\u3002STL\u63d0\u4f9b\u5927\u91cf\u7684\u6a21\u677f\u7c7b\u548c\u51fd\u6570\uff0c\u53ef\u4ee5\u5728OOP\u548c\u5e38\u89c4\u7f16\u7a0b\u4e2d\u4f7f\u7528\u3002\u6240\u6709\u7684STL\u7684\u5927\u7ea650\u4e2a\u7b97\u6cd5\u90fd\u662f\u5b8c\u5168\u901a\u7528\u7684\uff0c\u800c\u4e14\u4e0d\u4f9d\u8d56\u4e8e\u4efb\u4f55\u7279\u5b9a\u7684\u6570\u636e\u7c7b\u578b\u3002\n\n\n\u4e0b\u9762\u7684\u5c0f\u8282\u8bf4\u660e\u4e86\u4e09\u4e2a\u57fa\u672c\u7684STL\u7ec4\u4ef6\uff1a\n\n\n\n\n\n\n\u8fed\u4ee3\u5668\u63d0\u4f9b\u4e86\u8bbf\u95ee\u5bb9\u5668\u4e2d\u5bf9\u8c61\u7684\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u5bf9\u8fed\u4ee3\u5668\u6307\u5b9alist\u6216vector\u4e2d\u7684\u4e00\u5b9a\u8303\u56f4\u7684\u5bf9\u8c61\u3002\u8fed\u4ee3\u5668\u5c31\u5982\u540c\u4e00\u4e2a\u6307\u9488\u3002\u4e8b\u5b9e\u4e0a\uff0cC++\u7684\u6307\u9488\u4e5f\u662f\u4e00\u79cd\u8fed\u4ee3\u5668\u3002\u4f46\u662f\uff0c\u8fed\u4ee3\u5668\u4e5f\u53ef\u4ee5\u662f\u90a3\u4e9b\u5b9a\u4e49\u4e86operator*()\u4ee5\u53ca\u5176\u4ed6\u7c7b\u4f3c\u4e8e\u6307\u9488\u7684\u64cd\u4f5c\u7b26\u7684\u65b9\u6cd5\u7684\u7c7b\u5bf9\u8c61\u3002\n\n\n\n\n\n\n\u5bb9\u5668\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5982list\uff0cvector\u548cdeques\uff0c\u4ee5\u6a21\u677f\u7c7b\u7684\u65b9\u6cd5\u63d0\u4f9b\u3002\u4e3a\u4e86\u8bbf\u95ee\u5bb9\u5668\u4e2d\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u7531\u5bb9\u5668\u7c7b\u8f93\u51fa\u7684\u8fed\u4ee3\u5668\u3002\n\n\n\n\n\n\n\u7b97\u6cd5\u662f\u7528\u6765\u64cd\u4f5c\u5bb9\u5668\u4e2d\u7684\u6570\u636e\u7684\u6a21\u677f\u51fd\u6570\u3002\u4f8b\u5982\uff0cSTL\u7528sort()\u6765\u5bf9\u4e00\u4e2avector\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u6392\u5e8f\uff0c\u7528find()\u6765\u641c\u7d22\u4e00\u4e2alist\u4e2d\u7684\u5bf9\u8c61\u3002\u51fd\u6570\u672c\u8eab\u4e0e\u4ed6\u4eec\u64cd\u4f5c\u7684\u6570\u636e\u7684\u7ed3\u6784\u548c\u7c7b\u578b\u65e0\u5173\uff0c\u56e0\u6b64\u4ed6\u4eec\u53ef\u4ee5\u5728\u4ece\u7b80\u5355\u6570\u7ec4\u5230\u9ad8\u5ea6\u590d\u6742\u5bb9\u5668\u7684\u4efb\u4f55\u6570\u636e\u7ed3\u6784\u4e0a\u4f7f\u7528\u3002\n\n\n\n\n\n\n\u5934\u6587\u4ef6\n\n\n\u4e3a\u4e86\u907f\u514d\u548c\u5176\u4ed6\u5934\u6587\u4ef6\u51b2\u7a81\uff0cSTL\u7684\u5934\u6587\u4ef6\u4e0d\u518d\u4f7f\u7528\u5e38\u89c4\u7684.h\u6269\u5c55\u3002\u4e3a\u4e86\u5305\u542b\u6807\u51c6\u7684string\u7c7b\uff0c\u8fed\u4ee3\u5668\u548c\u7b97\u6cd5\uff0c\u7528\u4e0b\u9762\u7684\u6307\u793a\u7b26\uff1a\n\n\n#include \nstring\n\n#include \niterator\n\n#include \nalgorithm\n\n\n\n\n\n\u5982\u679c\u4f60\u67e5\u770bSTL\u7684\u5934\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u50cfiterator.h\u548cstl_iterator.h\u8fd9\u6837\u7684\u5934\u6587\u4ef6\u3002\u7531\u4e8e\u8fd9\u4e9b\u540d\u5b57\u5728\u5404\u79cdSTL\u5b9e\u73b0\u4e4b\u95f4\u90fd\u53ef\u80fd\u4e0d\u540c\uff0c\u4f60\u5e94\u8be5\u907f\u514d\u4f7f\u7528\u8fd9\u4e9b\u540d\u5b57\u6765\u5f15\u7528\u8fd9\u4e9b\u5934\u6587\u4ef6\u3002\u4e3a\u4e86\u786e\u4fdd\u53ef\u79fb\u690d\u6027\uff0c\u4f7f\u7528\u76f8\u5e94\u7684\u6ca1\u6709.h\u540e\u7f00\u7684\u6587\u4ef6\u540d\u3002\u88681\u5217\u51fa\u4e86\u6700\u5e38\u4f7f\u7528\u7684\u5404\u79cd\u5bb9\u5668\u7c7b\u7684\u5934\u6587\u4ef6\u3002\u8be5\u8868\u5e76\u4e0d\u5b8c\u6574\uff0c\u5bf9\u4e8e\u5176\u4ed6\u5934\u6587\u4ef6\uff0c\u6211\u5c06\u5728\u672c\u7ae0\u548c\u540e\u9762\u7684\u4e24\u7ae0\u4e2d\u4ecb\u7ecd\u3002\n\n\n\u88681 STL\u5934\u6587\u4ef6\u548c\u5bb9\u5668\u7c7b\n\n\n\n\n\n\n\n\n#include\n\n\nContainer Class\n\n\n\n\n\n\n\n\n\n\ndeque\n\n\ndeque\n\n\n\n\n\n\nlist\n\n\nlist\n\n\n\n\n\n\nmap\n\n\nmap, multimap\n\n\n\n\n\n\nqueue\n\n\nqueue, priority_queue\n\n\n\n\n\n\nset\n\n\nset, multiset\n\n\n\n\n\n\nstack\n\n\nstack\n\n\n\n\n\n\nvector\n\n\nvector, \nvector\nbool\n\n\n\n\n\n\n\n\n\u540d\u5b57\u7a7a\u95f4\n\n\n\u4f60\u7684\u7f16\u8bd1\u5668\u53ef\u80fd\u4e0d\u80fd\u8bc6\u522b\u540d\u5b57\u7a7a\u95f4\u3002\u540d\u5b57\u7a7a\u95f4\u5c31\u597d\u50cf\u4e00\u4e2a\u4fe1\u5c01\uff0c\u5c06\u6807\u5fd7\u7b26\u5c01\u88c5\u5728\u53e6\u4e00\u4e2a\u540d\u5b57\u4e2d\u3002\u6807\u5fd7\u7b26\u53ea\u5728\u540d\u5b57\u7a7a\u95f4\u4e2d\u5b58\u5728\uff0c\u56e0\u800c\u907f\u514d\u4e86\u548c\u5176\u4ed6\u6807\u5fd7\u7b26\u51b2\u7a81\u3002\u4f8b\u5982\uff0c\u53ef\u80fd\u6709\u5176\u4ed6\u5e93\u548c\u7a0b\u5e8f\u6a21\u5757\u5b9a\u4e49\u4e86sort()\u51fd\u6570\uff0c\u4e3a\u4e86\u907f\u514d\u548cSTL\u7684sort()\u51b2\u7a81\uff0cSTL\u7684sort()\u7b97\u6cd5\u7f16\u8bd1\u4e3astd::sort()\uff0c\u4ece\u800c\u907f\u514d\u4e86\u540d\u5b57\u51b2\u7a81\u3002\n\n\n\u5c3d\u7ba1\u4f60\u7684\u7f16\u8bd1\u5668\u53ef\u80fd\u6ca1\u6709\u5b9e\u73b0\u540d\u5b57\u7a7a\u95f4\uff0c\u4f60\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u4ed6\u4eec\u3002\u4e3a\u4e86\u4f7f\u7528STL\uff0c\u53ef\u4ee5\u5c06\u4e0b\u9762\u7684\u6307\u793a\u7b26\u63d2\u5165\u5230\u4f60\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\u4e2d\uff0c\u5178\u578b\u7684\u662f\u5728\u6240\u6709\u7684#include\u6307\u793a\u7b26\u7684\u540e\u9762\uff1a\n\n\nusing namespace std;\n\n\n\n\n\u8fed\u4ee3\u5668\n\n\n\u8fed\u4ee3\u5668\u63d0\u4f9b\u5bf9\u4e00\u4e2a\u5bb9\u5668\u4e2d\u7684\u5bf9\u8c61\u7684\u8bbf\u95ee\u65b9\u6cd5\uff0c\u5e76\u4e14\u5b9a\u4e49\u4e86\u5bb9\u5668\u4e2d\u5bf9\u8c61\u7684\u8303\u56f4\u3002\u8fed\u4ee3\u5668\u5c31\u5982\u540c\u4e00\u4e2a\u6307\u9488\u3002\u4e8b\u5b9e\u4e0a\uff0cC++\u7684\u6307\u9488\u4e5f\u662f\u4e00\u79cd\u8fed\u4ee3\u5668\u3002\u4f46\u662f\uff0c\u8fed\u4ee3\u5668\u4e0d\u4ec5\u4ec5\u662f\u6307\u9488\uff0c\u56e0\u6b64\u4f60\u4e0d\u80fd\u8ba4\u4e3a\u4ed6\u4eec\u4e00\u5b9a\u5177\u6709\u5730\u5740\u503c\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u6570\u7ec4\u7d22\u5f15\uff0c\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u79cd\u8fed\u4ee3\u5668\u3002\n\n\n\u8fed\u4ee3\u5668\u6709\u5404\u79cd\u4e0d\u540c\u7684\u521b\u5efa\u65b9\u6cd5\u3002\u7a0b\u5e8f\u53ef\u80fd\u628a\u8fed\u4ee3\u5668\u4f5c\u4e3a\u4e00\u4e2a\u53d8\u91cf\u521b\u5efa\u3002\u4e00\u4e2aSTL\u5bb9\u5668\u7c7b\u53ef\u80fd\u4e3a\u4e86\u4f7f\u7528\u4e00\u4e2a\u7279\u5b9a\u7c7b\u578b\u7684\u6570\u636e\u800c\u521b\u5efa\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002\u4f5c\u4e3a\u6307\u9488\uff0c\u5fc5\u987b\u80fd\u591f\u4f7f\u7528\n*\n\u64cd\u4f5c\u7b26\u83b7\u53d6\u6570\u636e\u3002\u4f60\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u6570\u5b66\u64cd\u4f5c\u7b26\u5982\n++\n\u3002\u5178\u578b\u7684\uff0c++\u64cd\u4f5c\u7b26\u7528\u6765\u9012\u589e\u8fed\u4ee3\u5668\uff0c\u4ee5\u8bbf\u95ee\u5bb9\u5668\u4e2d\u7684\u4e0b\u4e00\u4e2a\u5bf9\u8c61\u3002\u5982\u679c\u8fed\u4ee3\u5668\u5230\u8fbe\u4e86\u5bb9\u5668\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u540e\u9762\uff0c\u5219\u8fed\u4ee3\u5668\u53d8\u6210past-the-end\u503c\u3002\u4f7f\u7528\u4e00\u4e2apast-the-end\u503c\u7684\u6307\u9488\u6765\u8bbf\u95ee\u5bf9\u8c61\u662f\u975e\u6cd5\u7684\uff0c\u5c31\u597d\u50cf\u4f7f\u7528NULL\u6216\u672a\u521d\u59cb\u5316\u7684\u6307\u9488\u4e00\u6837\u3002\n\n\n\u63d0\u793a\n\n\nSTL\u4e0d\u4fdd\u8bc1\u53ef\u4ee5\u4ece\u53e6\u4e00\u4e2a\u8fed\u4ee3\u5668\u6765\u62b5\u8fbe\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002\u4f8b\u5982\uff0c\u5f53\u5bf9\u4e00\u4e2a\u96c6\u5408\u4e2d\u7684\u5bf9\u8c61\u6392\u5e8f\u65f6\uff0c\u5982\u679c\u4f60\u5728\u4e0d\u540c\u7684\u7ed3\u6784\u4e2d\u6307\u5b9a\u4e86\u4e24\u4e2a\u8fed\u4ee3\u5668\uff0c\u7b2c\u4e8c\u4e2a\u8fed\u4ee3\u5668\u65e0\u6cd5\u4ece\u7b2c\u4e00\u4e2a\u8fed\u4ee3\u5668\u62b5\u8fbe\uff0c\u6b64\u65f6\u7a0b\u5e8f\u6ce8\u5b9a\u8981\u5931\u8d25\u3002\u8fd9\u662fSTL\u7075\u6d3b\u6027\u7684\u4e00\u4e2a\u4ee3\u4ef7\u3002STL\u4e0d\u4fdd\u8bc1\u68c0\u6d4b\u6beb\u65e0\u9053\u7406\u7684\u9519\u8bef\u3002\n\n\n\u8fed\u4ee3\u5668\u7684\u7c7b\u578b\n\n\n\u5bf9\u4e8eSTL\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e94\u79cd\u8fed\u4ee3\u5668\u3002\u4e0b\u9762\u7b80\u8981\u8bf4\u660e\u4e86\u8fd9\u4e94\u79cd\u7c7b\u578b\uff1a\n\n\n\n\nInput iterators \u63d0\u4f9b\u5bf9\u6570\u636e\u7684\u53ea\u8bfb\u8bbf\u95ee\u3002\n\n\nOutput iterators \u63d0\u4f9b\u5bf9\u6570\u636e\u7684\u53ea\u5199\u8bbf\u95ee\u3002\n\n\nForward iterators \u63d0\u4f9b\u8bfb\u5199\u64cd\u4f5c\uff0c\u5e76\u80fd\u5411\u524d\u63a8\u8fdb\u8fed\u4ee3\u5668\n\n\nBidirectional iterators \u63d0\u4f9b\u8bfb\u5199\u64cd\u4f5c\uff0c\u5e76\u80fd\u5411\u524d\u548c\u5411\u540e\u64cd\u4f5c\u3002\n\n\nRandom access iterators \u63d0\u4f9b\u8bfb\u5199\u64cd\u4f5c\uff0c\u5e76\u80fd\u5728\u6570\u636e\u4e2d\u968f\u673a\u79fb\u52a8\u3002\n\n\n\n\n\u5c3d\u7ba1\u5404\u79cd\u4e0d\u540c\u7684STL\u5b9e\u73b0\u7ec6\u8282\u65b9\u9762\u6709\u6240\u4e0d\u540c\uff0c\u8fd8\u662f\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684\u8fed\u4ee3\u5668\u60f3\u50cf\u4e3a\u4e00\u79cd\u7c7b\u7ee7\u627f\u5173\u7cfb\u3002\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bf4\u6211\uff0c\u4e0b\u9762\u7684\u8fed\u4ee3\u5668\u7ee7\u627f\u81ea\u4e0a\u9762\u7684\u8fed\u4ee3\u5668\u3002\u7531\u4e8e\u8fd9\u79cd\u7ee7\u627f\u5173\u7cfb\uff0c\u4f60\u53ef\u4ee5\u5c06\u4e00\u4e2aForward\u8fed\u4ee3\u5668\u4f5c\u4e3a\u4e00\u4e2aoutput\u6216input\u8fed\u4ee3\u5668\u4f7f\u7528\u3002\u540c\u6837\uff0c\u5982\u679c\u4e00\u4e2a\u7b97\u6cd5\u8981\u6c42\u662f\u4e00\u4e2abidirectional\u8fed\u4ee3\u5668\uff0c\u90a3\u4e48\u53ea\u80fd\u4f7f\u7528\u8be5\u79cd\u7c7b\u578b\u548c\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\u3002\n\n\n\u6307\u9488\u8fed\u4ee3\u5668\n\n\n\u6b63\u5982\u4e0b\u9762\u7684\u5c0f\u7a0b\u5e8f\u663e\u793a\u7684\uff0c\u4e00\u4e2a\u6307\u9488\u4e5f\u662f\u4e00\u79cd\u8fed\u4ee3\u5668\u3002\u8be5\u7a0b\u5e8f\u540c\u6837\u663e\u793a\u4e86STL\u7684\u4e00\u4e2a\u4e3b\u8981\u7279\u5f81\u2014\u2014\u5b83\u4e0d\u53ea\u662f\u80fd\u591f\u7528\u4e8e\u5b83\u81ea\u5df1\u7684\u7c7b\u7c7b\u578b\uff0c\u800c\u4e14\u4e5f\u80fd\u7528\u4e8e\u4efb\u4f55C\u6216C++\u7c7b\u578b\u3002iterdemo.cpp\u663e\u793a\u4e86\u5982\u4f55\u628a\u6307\u9488\u4f5c\u4e3a\u8fed\u4ee3\u5668\u7528\u4e8eSTL\u7684find()\u7b97\u6cd5\u6765\u641c\u7d22\u666e\u901a\u7684\u6570\u7ec4\u3002\n\n\niterdemo.cpp\n\n\n#include \niostream\n\n#include \nalgorithm\n\n\nusing namespace std;\n\n#define SIZE 100\nint iarray[SIZE];\n\nint main()\n{\n    iarray[20] = 50;\n\n    int *ip = find(iarray, iarray + SIZE, 50);\n\n    if(ip == iarray + SIZE)\n        cout\n50 not found in array\nendl;\n    else\n        cout\n*ip\n found in array\nendl;\n\n    return 0;\n}\n\n\n\n\n\u5728\u5f15\u7528\u4e86I/O\u6d41\u5e93\u548cSTL\u7b97\u6cd5\u5934\u6587\u4ef6\uff08\u6ce8\u610f\u6ca1\u6709.h\u540e\u7f00\uff09\uff0c\u8be5\u7a0b\u5e8f\u544a\u8bc9\u7f16\u8bd1\u5668\u4f7f\u7528std\u540d\u5b57\u7a7a\u95f4\u3002\n\n\n\u7a0b\u5e8f\u4e2d\u5b9a\u4e49\u4e86\u5c3a\u5bf8\u4e3aSIZE\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u6240\u4ee5\u8fd0\u884c\u65f6\u6570\u7ec4\u81ea\u52a8\u521d\u59cb\u5316\u4e3a\u96f6\u3002\u4e0b\u9762\u7684\u8bed\u53e5\u5c06\u5728\u7d22\u5f1520\u4f4d\u7f6e\u5904\u7684\u5143\u7d20\u8bbe\u7f6e\u4e3a50\uff0c\u5e76\u4f7f\u7528find()\u7b97\u6cd5\u6765\u641c\u7d22\u503c50:\n\n\niarray[20] = 50;\nint *ip = find(iarray, iarray + SIZE, 50);\n\n\n\n\nfind()\u51fd\u6570\u63a5\u53d7\u4e09\u4e2a\u53c2\u6570\u3002\u5934\u4e24\u4e2a\u5b9a\u4e49\u4e86\u641c\u7d22\u7684\u8303\u56f4\u3002\u7531\u4e8eC\u548cC++\u6570\u7ec4\u7b49\u540c\u4e8e\u6307\u9488\uff0c\u8868\u8fbe\u5f0fiarray\u6307\u5411\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002\u800c\u7b2c\u4e8c\u4e2a\u53c2\u6570iarray+SIZE\u7b49\u540c\u4e8epast-the-end\u503c\uff0c\u4e5f\u5c31\u662f\u6570\u7ec4\u4e2d\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u540e\u9762\u4f4d\u7f6e\u3002\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u5f85\u5b9a\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f50.\n\n\nfind()\u51fd\u6570\u8fd4\u56de\u548c\u524d\u4e24\u4e2a\u53c2\u6570\u76f8\u540c\u7c7b\u578b\u7684\u8fed\u4ee3\u5668\uff0c\u8fd9\u513f\u662f\u4e00\u4e2a\u6307\u5411\u6574\u6570\u7684\u6307\u9488ip\u3002\n\n\n\u63d0\u793a\n\n\n\u5fc5\u987b\u8bb0\u4f4fSTL\u4f7f\u7528\u6a21\u677f\u3002\u56e0\u6b64\uff0cSTL\u51fd\u6570\u81ea\u52a8\u6839\u636e\u5b83\u4eec\u4f7f\u7528\u6570\u636e\u7c7b\u578b\u6765\u6784\u9020\u3002\n\n\n\u4e3a\u4e86\u5224\u65adfind()\u662f\u5426\u6210\u529f\uff0c\u4f8b\u5b50\u4e2d\u6d4b\u8bd5ip\u548cpast-the-end\u503c\u662f\u5426\u76f8\u7b49:\n\n\nif(ip == iarray + SIZE) ...\n\n\n\n\n\u5982\u679c\u8868\u8fbe\u5f0f\u4e3a\u771f\uff0c\u5219\u8868\u793a\u5728\u641c\u7d22\u8303\u56f4\u5185\u6ca1\u6709\u6307\u5b9a\u7684\u503c\u3002\u5426\u5219\u5c31\u662f\u6307\u5411\u4e00\u4e2a\u5408\u6cd5\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8fd9\u65f6\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u8bed\u53e5\u663e\u793a\uff1a\n\n\ncout\n*ip\n found in array\nendl;\n\n\n\n\n\u6d4b\u8bd5\u51fd\u6570\u8fd4\u56de\u503c\u548cNULL\u662f\u5426\u76f8\u7b49\u662f\u4e0d\u6b63\u786e\u7684\u3002\u4e0d\u8981\u50cf\u4e0b\u9762\u8fd9\u6837\u4f7f\u7528\uff1a\n\n\nint *ip = find(iarray, iarray + SIZE, 50);\nif(ip != NULL) ...//incorrect\n\n\n\n\n\u5f53\u4f7f\u7528STL\u51fd\u6570\u65f6\uff0c\u53ea\u80fd\u6d4b\u8bd5ip\u662f\u5426\u548cpast-the-end\u503c\u76f8\u7b49\u3002\u5c3d\u7ba1\u5728\u672c\u4f8b\u4e2dip\u662f\u4e00\u4e2aC++\u6307\u9488\uff0c\u5176\u7528\u6cd5\u4e5f\u5fc5\u987b\u7b26\u5408STL\u8fed\u4ee3\u5668\u7684\u539f\u5219\u3002\n\n\n\u5bb9\u5668\u8fed\u4ee3\u5668\n\n\n\u5c3d\u7ba1C++\u6307\u9488\u4e5f\u662f\u8fed\u4ee3\u5668\uff0c\u4f46\u7528\u7684\u66f4\u591a\u7684\u662f\u5bb9\u5668\u8fed\u4ee3\u5668\u3002\u5bb9\u5668\u8fed\u4ee3\u5668\u7528\u6cd5\u548citerdemo.cpp\u4e00\u6837\uff0c\u4f46\u548c\u5c06\u8fed\u4ee3\u5668\u58f0\u660e\u4e3a\u6307\u9488\u53d8\u91cf\u4e0d\u540c\u7684\u662f\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u5bb9\u5668\u7c7b\u65b9\u6cd5\u6765\u83b7\u53d6\u8fed\u4ee3\u5668\u5bf9\u8c61\u3002\n\n\n\u4e24\u4e2a\u5178\u578b\u7684\u5bb9\u5668\u7c7b\u65b9\u6cd5\u662fbegin()\u548cend()\u3002\u5b83\u4eec\u5728\u5927\u591a\u6570\u5bb9\u5668\u4e2d\u8868\u793a\u6574\u4e2a\u5bb9\u5668\u8303\u56f4\u3002\u5176\u4ed6\u4e00\u4e9b\u5bb9\u5668\u8fd8\u4f7f\u7528rbegin()\u548crend()\u65b9\u6cd5\u63d0\u4f9b\u53cd\u5411\u8fed\u4ee3\u5668\uff0c\u4ee5\u6309\u53cd\u5411\u987a\u5e8f\u6307\u5b9a\u5bf9\u8c61\u8303\u56f4\u3002\n\n\n\u4e0b\u9762\u7684\u7a0b\u5e8f\u521b\u5efa\u4e86\u4e00\u4e2a\u77e2\u91cf\u5bb9\u5668\uff08STL\u4e2d\u548c\u6570\u7ec4\u7b49\u4ef7\u7684\u5bf9\u8c61\uff09\uff0c\u4f7f\u7528\u8fed\u4ee3\u5668\u5728\u5176\u4e2d\u641c\u7d22\u3002\u8be5\u7a0b\u5e8f\u548c\u524d\u4e00\u7ae0\u4e2d\u7684\u7a0b\u5e8f\u76f8\u540c\u3002\n\n\nvectdemo.cpp\n\n\n#include \niostream\n\n#include \nalgorithm\n\n#include \nvector\n\n\nusing namespace std;\n\nvector\nint\n intVector(100);\n\nvoid main()\n{\n    intVector[20] = 50;\n    vector\nint\n::iterator intIter = find(intVector.begin(), intVector.end(), 50);\n\n    if(intIter != intVector.end())\n        cout\nVector contains value \n*intIter\nendl;\n    else\n        cout\nVector does not contain 50\nendl;\n}\n\n\n\n\n\u6ce8\u610f\u7528\u4e0b\u9762\u7684\u65b9\u6cd5\u663e\u793a\u641c\u7d22\u5230\u7684\u6570\u636e\uff1a\n\n\ncout\nVector contains value \n*intIter\nendl;\n\n\n\n\n\u5e38\u91cf\u8fed\u4ee3\u5668\n\n\n\u548c\u6307\u9488\u4e00\u6837\uff0c\u4f60\u53ef\u4ee5\u7ed9\u4e00\u4e2a\u8fed\u4ee3\u5668\u8d4b\u503c\u3002\u4f8b\u5982\uff0c\u9996\u5148\u58f0\u660e\u4e00\u4e2a\u8fed\u4ee3\u5668\uff1a\n\n\nvector\nint\n::iterator first;\n\n\n\n\n\u8be5\u8bed\u53e5\u521b\u5efa\u4e86\u4e00\u4e2a\nvector\nint\n\u7c7b\u7684\u8fed\u4ee3\u5668\u3002\u4e0b\u9762\u7684\u8bed\u53e5\u5c06\u8be5\u8fed\u4ee3\u5668\u8bbe\u7f6e\u5230intVector\u7684\u7b2c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5e76\u5c06\u5b83\u6307\u5411\u7684\u5bf9\u8c61\u503c\u8bbe\u7f6e\u4e3a123:\n\n\nfirst = intVector.begin();\n*first = 123;\n\n\n\n\n\u8fd9\u79cd\u8d4b\u503c\u5bf9\u4e8e\u5927\u591a\u6570\u5bb9\u5668\u7c7b\u90fd\u662f\u5141\u8bb8\u7684\uff0c\u9664\u4e86\u53ea\u8bfb\u53d8\u91cf\u3002\u4e3a\u4e86\u9632\u6b62\u9519\u8bef\u8d4b\u503c\uff0c\u53ef\u4ee5\u58f0\u660e\u8fed\u4ee3\u5668\u4e3a\uff1a\n\n\nconst vector\nint\n:: const_iterator result;\nresult = find(intVector.begin(), intVector.end(), value);\nif(result != intVector.end())\n    *result = 123; //\u53d1\u751f\u9519\u8bef\uff0c\u4e0d\u80fd\u7ed9\u5e38\u91cf\u8d4b\u503c\n\n\n\n\n\u8b66\u544a\n\n\n\u53e6\u4e00\u79cd\u9632\u6b62\u6570\u636e\u88ab\u6539\u53d8\u7684\u65b9\u6cd5\u662f\u5c06\u5bb9\u5668\u58f0\u660e\u4e3aconst\u7c7b\u578b.\n\n\n\u4f7f\u7528\u8fed\u4ee3\u5668\u7f16\u7a0b\n\n\n\u4f60\u5df2\u7ecf\u89c1\u5230\u4e86\u8fed\u4ee3\u5668\u7684\u4e00\u4e9b\u4f8b\u5b50\uff0c\u73b0\u5728\u6211\u4eec\u5c06\u5173\u6ce8\u6bcf\u79cd\u7279\u5b9a\u7684\u8fed\u4ee3\u5668\u5982\u4f55\u4f7f\u7528\u3002\u7531\u4e8e\u4f7f\u7528\u8fed\u4ee3\u5668\u9700\u8981\u5173\u4e8eSTL\u5bb9\u5668\u7c7b\u548c\u7b97\u6cd5\u7684\u77e5\u8bc6\uff0c\u5728\u9605\u8bfb\u4e86\u540e\u9762\u7684\u4e24\u7ae0\u540e\u4f60\u53ef\u80fd\u9700\u8981\u91cd\u65b0\u590d\u4e60\u4e00\u4e0b\u672c\u7ae0\u5185\u5bb9\u3002\n\n\n\u8f93\u5165\u8fed\u4ee3\u5668\n\n\n\u8f93\u5165\u8fed\u4ee3\u5668\u662f\u6700\u666e\u901a\u7684\u7c7b\u578b\u3002\u8f93\u5165\u8fed\u4ee3\u5668\u81f3\u5c11\u80fd\u591f\u4f7f\u7528==\u548c!=\u6d4b\u8bd5\u662f\u5426\u76f8\u7b49;\u4f7f\u7528*\u6765\u8bbf\u95ee\u6570\u636e\uff1b\u4f7f\u7528++\u64cd\u4f5c\u6765\u9012\u63a8\u8fed\u4ee3\u5668\u5230\u4e0b\u4e00\u4e2a\u5143\u7d20\u6216\u5230\u8fbepast-the-end\u503c\u3002\n\n\n\u4e3a\u4e86\u7406\u89e3\u8fed\u4ee3\u5668\u4ee5\u53caSTL\u51fd\u6570\u662f\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\u7684\uff0c\u73b0\u5728\u6765\u770b\u4e00\u4e0bfind()\u6a21\u677f\u51fd\u6570\u7684\u5b9a\u4e49:\n\n\ntemplate \nclass InputIterator, class T\n\nInputIterator find(InputIterator first, InputIterator last, const T\n value)\n{\n    while(first != last \n *first != value)\n        ++first;\n    return first;\n}\n\n\n\n\n\u6ce8\u610f\n\n\n\u5728find()\u7b97\u6cd5\u4e2d\uff0c\u6ce8\u610f\u5982\u679cfirst\u548clast\u6307\u5411\u4e0d\u540c\u7684\u5bb9\u5668\uff0c\u8be5\u7b97\u6cd5\u53ef\u80fd\u9677\u5165\u6b7b\u5faa\u73af\u3002\n\n\n\u8f93\u51fa\u8fed\u4ee3\u5668\n\n\n\u8f93\u51fa\u8fed\u4ee3\u5668\u7f3a\u7701\u53ea\u5199\uff0c\u901a\u5e38\u7528\u4e8e\u5c06\u6570\u636e\u4ece\u4e00\u4e2a\u4f4d\u7f6e\u62f7\u8d1d\u5230\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u3002\u7531\u4e8e\u8f93\u51fa\u8fed\u4ee3\u5668\u65e0\u6cd5\u8bfb\u53d6\u5bf9\u8c61\uff0c\u56e0\u4e9b\u4f60\u4e0d\u4f1a\u5728\u4efb\u4f55\u641c\u7d22\u548c\u5176\u4ed6\u7b97\u6cd5\u4e2d\u4f7f\u7528\u5b83\u3002\u8981\u60f3\u8bfb\u53d6\u4e00\u4e2a\u62f7\u8d1d\u7684\u503c\uff0c\u5fc5\u987b\u4f7f\u7528\u53e6\u4e00\u4e2a\u8f93\u5165\u8fed\u4ee3\u5668\uff08\u6216\u5b83\u7684\u7ee7\u627f\u8fed\u4ee3\u5668\uff09\u3002\n\n\noutIter.cpp\n\n\n#include \niostream\n\n#include \nalgorithm\n //need copy()\n#include \nvector\n //need vector\n\nusing namespace std;\n\ndouble darray[10] = { 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9 };\n\nvector\ndouble\n vdouble(10);\n\nint main()\n{\n    vector\ndouble\n:: iterator outputIterator = vdouble.begin();\n    copy(darray, darray + 10, outputIterator);\n    while(outputIterator != vdouble.end())\n    {\n        cout\n*outputIterator\nendl;\n        outputIterator++;\n    }\n    return 0;\n}\n\n\n\n\n\u6ce8\u610f\n\n\n\u5f53\u4f7f\u7528copy()\u7b97\u6cd5\u7684\u65f6\u5019\uff0c\u4f60\u5fc5\u987b\u786e\u4fdd\u76ee\u6807\u5bb9\u5668\u6709\u8db3\u591f\u5927\u7684\u7a7a\u95f4\uff0c\u6216\u8005\u5bb9\u5668\u672c\u8eab\u662f\u81ea\u52a8\u6269\u5c55\u7684\u3002\n\n\n\u524d\u63a8\u8fed\u4ee3\u5668\n\n\n\u524d\u63a8\u8fed\u4ee3\u5668\u80fd\u591f\u8bfb\u5199\u6570\u636e\u503c\uff0c\u5e76\u80fd\u591f\u5411\u524d\u63a8\u8fdb\u5230\u4e0b\u4e00\u4e2a\u503c\u3002\u4f46\u662f\u6ca1\u6cd5\u9012\u51cf\u3002replace()\u7b97\u6cd5\u663e\u793a\u4e86\u524d\u63a8\u8fed\u4ee3\u5668\u7684\u4f7f\u7528\u65b9\u6cd5\u3002\n\n\ntemplate \nclass ForwardIterator, class T\n\nvoid replace(ForwardIterator first, ForwardIterator last, const T\n old_value, const T\n new_value);\n\n\n\n\n\u4f7f\u7528\n\n\nreplace()\u5c06[first, last]\u8303\u56f4\u5185\u7684\u6240\u6709\u503c\u4e3aold_value\u7684\u5bf9\u8c61\u66ff\u6362\u4e3anew_value\uff1a\n\n\nreplace(vdouble.begin(),vdouble.end(),1.5,3.1415926);\n\n\n\n\n\u53cc\u5411\u8fed\u4ee3\u5668\n\n\n\u53cc\u5411\u8fed\u4ee3\u5668\u8981\u6c42\u80fd\u591f\u589e\u51cf\u3002\u5982reverse()\u7b97\u6cd5\u8981\u6c42\u4e24\u4e2a\u53cc\u5411\u8fed\u4ee3\u5668\u4f5c\u4e3a\u53c2\u6570\uff1a\n\n\ntemplate \nclass BidirectionalIterator\n\nvoid reverse(BidirectionalIterator first, BidirectionalIterator last);\n\n\n\n\n\u4f7f\u7528\n\n\nreverse()\u51fd\u6570\u6765\u5bf9\u5bb9\u5668\u8fdb\u884c\u9006\u5411\u6392\u5e8f\uff1a\n\n\nreverse(vdoule.begin(), vdouble.end());\n\n\n\n\n\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\n\n\n\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\u80fd\u591f\u4ee5\u4efb\u610f\u987a\u5e8f\u8bbf\u95ee\u6570\u636e\uff0c\u5e76\u80fd\u7528\u4e8e\u8bfb\u5199\u6570\u636e\uff08\u4e0d\u662fconst\u7684C++\u6307\u9488\u4e5f\u662f\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\uff09\u3002STL\u7684\u6392\u5e8f\u548c\u641c\u7d22\u51fd\u6570\u4f7f\u7528\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\u3002\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\u53ef\u4ee5\u4f7f\u7528\u5173\u7cfb\u64cd\u4f5c\u7b26\u4f5c\u6bd4\u8f83\u3002\n\n\nrandom_shuffle()\n\n\n\n\n\u51fd\u6570\u968f\u673a\u6253\u4e71\u539f\u5148\u7684\u987a\u5e8f\u58f0\u660e\u4e3a\uff1a\n\n\ntemplate \nclass RandomAccessIterator\n\nvoid random_shuffle(RandomAccessIterator first, RandomAccessIterator last);\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\nrandom_shuffle(vdouble.begin(), vdouble.end());\n\n\n\n\n\u8fed\u4ee3\u5668\u6280\u672f\n\n\n\u8981\u5b66\u4f1a\u4f7f\u7528\u8fed\u4ee3\u5668\u548c\u5bb9\u5668\u4ee5\u53ca\u7b97\u6cd5\uff0c\u9700\u8981\u5b66\u4e60\u4e0b\u9762\u7684\u65b0\u6280\u672f\u3002\n\n\n\u6d41\u548c\u8fed\u4ee3\u5668\n\n\n\u672c\u4e66\u7684\u5f88\u591a\u4f8b\u5b50\u7a0b\u5e8f\u4f7f\u7528I/O\u6d41\u8bed\u53e5\u6765\u8bfb\u5199\u6570\u636e\u3002\u4f8b\u5982\uff1a\n\n\nint value;\ncout\nEnter value:\n;\ncin\nvalue;\ncout\nYou entered \nvalue\nendl;\n\n\n\n\n\u5bf9\u4e8e\u8fed\u4ee3\u5668\uff0c\u6709\u53e6\u4e00\u79cd\u65b9\u6cd5\u4f7f\u7528\u6d41\u548c\u6807\u51c6\u51fd\u6570\u3002\u7406\u89e3\u7684\u8981\u70b9\u662f\u5c06\u8f93\u5165/\u8f93\u51fa\u6d41\u4f5c\u4e3a\n\u5bb9\u5668\u770b\u5f85\u3002\u56e0\u6b64\uff0c\u4efb\u4f55\u63a5\u53d7\u8fed\u4ee3\u5668\u53c2\u6570\u7684\u7b97\u6cd5\u90fd\u53ef\u4ee5\u548c\u6d41\u4e00\u8d77\u5de5\u4f5c\u3002\n\n\noutStrm.cpp\n\n\n#include \niostream\n\n#include \nstdlib.h\n // need rand(), srand()\n#include \ntime.h\n //need time()\n#include \nalgorithm\n //need sort(),copy()\n#include \nvector\n //need vector\n#include \niterator\n\n\nusing namespace std;\n\nvoid Display(vector\nint\n v, const char *s);\n\nint main()\n{\n    srand(time(NULL));\n    vector\nint\n collection(10);\n    for(int i = 0; i \n 10; i++)\n        collection[i]=rand()%10000;\n    Display(collection, \nBefore sorting\n);\n    sort(collection.begin(), collection.end());\n    Display(collection, \nAfter sorting\n);\n    return 0;\n}\n\nvoid Display(vector\nint\n v, const char *s)\n{\n    cout\nendl\ns\nendl;\n    copy(v.begin(), v.end(), ostream_iterator\nint\n(cout, \n\\t\n));\n    cout\nendl;\n}\n\n\n\n\n\u51fd\u6570Display()\u663e\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u4e00\u4e2a\u8f93\u51fa\u6d41\u8fed\u4ee3\u5668\u3002\u4e0b\u9762\u7684\u8bed\u53e5\u5c06\u5bb9\u5668\u4e2d\u7684\u503c\u4f20\u8f93\u5230cout\u8f93\u51fa\u6d41\u5bf9\u8c61\u4e2d\uff1a\n\n\ncopy(v.begin(), v.end(), ostream_iterator\nint\n(cout, \n\\t\n));\n\n\n\n\n\u7b2c\u4e09\u4e2a\u53c2\u6570\u5b9e\u4f8b\u5316\u4e86\nostream_iterator\nint\n\u7c7b\u578b\uff0c\u5e76\u5c06\u5b83\u4f5c\u4e3acopy()\u51fd\u6570\u7684\u8f93\u51fa\u76ee\u6807\u8fed\u4ee3\u5668\u5bf9\u8c61\u3002\"\\t\"\u5b57\u7b26\u4e32\u662f\u4f5c\u4e3a\u5206\u9694\u7b26\u3002\u8fd0\u884c\u7ed3\u679c\uff1a\n\n\n$ g++ outstrm.cpp\n$ ./a.out\n\nBefore sorting\n7136    8210    8265    5185    519     2906    2032    2273    101     4642\n\nAfter sorting\n101     519     2032    2273    2906    4642    5185    7136    8210    8265\n\n\n\n\n\u8fd9\u662fSTL\u795e\u5947\u7684\u4e00\u9762\u3002\u4e3a\u5b9a\u4e49\u8f93\u51fa\u6d41\u8fed\u4ee3\u5668\uff0cSTL\u63d0\u4f9b\u4e86\u6a21\u677f\u7c7bostream_iterator\u3002\u8fd9\u4e2a\u7c7b\u7684\u6784\u9020\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570\uff1a\u4e00\u4e2aostream\u5bf9\u8c61\u548c\u4e00\u4e2astring\u503c\u3002\u56e0\u6b64\u53ef\u4ee5\u8c61\u4e0b\u9762\u4e00\u6837\u7b80\u5355\u5730\u521b\u5efa\u4e00\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61\uff1a\n\n\nostream_iterator\nint\n(cout, \n\\n\n)\n\n\n\n\n\u8be5\u8fed\u4ee3\u5668\u53ef\u4ee5\u548c\u4efb\u4f55\u63a5\u53d7\u4e00\u4e2a\u8f93\u51fa\u8fed\u4ee3\u5668\u7684\u51fd\u6570\u4e00\u8d77\u4f7f\u7528\u3002\n\n\n\u63d2\u5165\u8fed\u4ee3\u5668\n\n\n\u63d2\u5165\u8fed\u4ee3\u5668\u7528\u4e8e\u5c06\u503c\u63d2\u5165\u5230\u5bb9\u5668\u4e2d\u3002\u5b83\u4eec\u4e5f\u53eb\u9002\u914d\u5668\uff0c\u56e0\u4e3a\u5b83\u4eec\u5c06\u5bb9\u5668\u9002\u914d\u6216\u8f6c\u5316\u4e3a\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u5e76\u7528\u4e8ecopy()\u8fd9\u6837\u7684\u7b97\u6cd5\u4e2d\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u7a0b\u5e8f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u94fe\u8868\u548c\u4e00\u4e2a\u77e2\u91cf\u5bb9\u5668\uff1a\n\n\nlist\ndouble\n dList;\nvector\ndouble\n dVector;\n\n\n\n\n\u901a\u8fc7\u4f7f\u7528front_inserter\u8fed\u4ee3\u5668\u5bf9\u8c61\uff0c\u53ef\u4ee5\u53ea\u7528\u5355\u4e2acopy()\u8bed\u53e5\u5c31\u5b8c\u6210\u5c06\u77e2\u91cf\u4e2d\u7684\u5bf9\u8c61\u63d2\u5165\u5230\u94fe\u8868\u524d\u7aef\u7684\u64cd\u4f5c\uff1a\n\n\ncopy(dVector.begin(), dVector.end(), front_inserter(dList));\n\n\n\n\n\u4e09\u79cd\u63d2\u5165\u8fed\u4ee3\u5668\u5982\u4e0b\uff1a\n\n\n\n\n\u666e\u901a\u63d2\u5165\u8fed\u4ee3\u5668\u5c06\u5bf9\u8c61\u63d2\u5165\u5230\u5bb9\u5668\u6307\u5b9a\u5bf9\u8c61\u7684\u524d\u9762\n\n\nFront inserters\u5c06\u5bf9\u8c61\u63d2\u5165\u5230\u6570\u636e\u96c6\u7684\u524d\u9762\u2014\u2014\u4f8b\u5982\uff0c\u94fe\u8868\u8868\u5934\u3002\n\n\nBack inserters\u5c06\u5bf9\u8c61\u63d2\u5165\u5230\u96c6\u5408\u7684\u5c3e\u90e8\u2014\u2014\u4f8b\u5982\uff0c\u77e2\u91cf\u7684\u5c3e\u90e8\uff0c\u5bfc\u81f4\u77e2\u91cf\u5bb9\u5668\u6269\u5c55\u3002\n\n\n\n\n\u4f7f\u7528\u63d2\u5165\u8fed\u4ee3\u5668\u53ef\u80fd\u5bfc\u81f4\u5bb9\u5668\u4e2d\u7684\u5176\u4ed6\u5bf9\u8c61\u79fb\u52a8\u4f4d\u7f6e\uff0c\u56e0\u800c\u4f7f\u5f97\u73b0\u5b58\u7684\u8fed\u4ee3\u5668\u975e\u6cd5\u3002\u4f8b\u5982\uff0c\u5c06\u4e00\u4e2a\u5bf9\u8c61\u63d2\u5165\u5230\u77e2\u91cf\u5bb9\u5668\u5c06\u5bfc\u81f4\u5176\u4ed6\u503c\u79fb\u52a8\u4f4d\u7f6e\u4ee5\u817e\u51fa\u7a7a\u95f4\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u63d2\u5165\u5230\u50cf\u94fe\u8868\u8fd9\u6837\u7684\u7ed3\u6784\u4e2d\u66f4\u4e3a\u6709\u6548\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u4f1a\u5bfc\u81f4\u5176\u4ed6\u5bf9\u8c61\u79fb\u52a8\u3002\n\n\ninsert.cpp\n\n\n#include \niostream\n\n#include \nalgorithm\n\n#include \nlist\n\n#include \niterator\n\n\nusing namespace std;\n\nint iArray[5] = {1,2,3,4,5};\nvoid Display(list\nint\n v, const char *s);\n\nint main()\n{\n    list\nint\n iList;\n    copy(iArray, iArray+5, front_inserter(iList));\n    Display(iList, \nBefore find and copy\n);\n    list\nint\n::iterator p = find(iList.begin(), iList.end(), 3);\n    copy(iArray, iArray + 2, inserter(iList,p));\n    Display(iList, \nAfter find and copy\n);\n    return 0;\n}\nvoid Display(list\nint\n v, const char *s)\n{\n    cout\ns\nendl;\n    copy(v.begin(), v.end(), ostream_iterator\nint\n(cout, \n));\n    cout\nendl;\n}\n\n\n\n\n\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a\n\n\n$ g++ insert.cpp\n$ ./a.out\nBefore find and copy\n5 4 3 2 1\nAfter find and copy\n5 4 1 2 3 2 1\n\n\n\n\n\u53ef\u4ee5\u5c06front_inserter\u66ff\u6362\u4e3aback_inserter\u8bd5\u8bd5\u3002\n\n\n\u5982\u679c\u7528find()\u53bb\u67e5\u627e\u5728\u5217\u8868\u4e2d\u4e0d\u5b58\u5728\u7684\u503c\uff0c\u4f8b\u598299\u3002\u7531\u4e8e\u8fd9\u65f6p\u5c06\u88ab\u8bbe\u7f6e\u4e3apast-the-end\u503c\uff0c\u6700\u540e\u7684copy()\u51fd\u6570\u5c06iArray\u7684\u503c\u9644\u52a0\u5230\u94fe\u8868\u7684\u540e\u90e8\u3002\n\n\n\u6df7\u5408\u8fed\u4ee3\u5668\u51fd\u6570\n\n\n\u5728\u6d89\u53ca\u5230\u5bb9\u5668\u548c\u7b97\u6cd5\u7684\u64cd\u4f5c\u4e2d\uff0c\u8fd8\u6709\u4e24\u4e2a\u8fed\u4ee3\u5668\u51fd\u6570\u975e\u5e38\u6709\u7528\uff1a\n\n\n\n\nadvance() \u6309\u6307\u5b9a\u7684\u6570\u76ee\u589e\u51cf\u8fed\u4ee3\u5668\n\n\ndistance() \u8fd4\u56de\u5230\u8fbe\u4e00\u4e2a\u8fed\u4ee3\u5668\u6240\u9700\uff08\u9012\u589e\uff09\u64cd\u4f5c\u7684\u6570\u76ee\u3002\n\n\n\n\n\u4f8b\u5982\uff1a\n\n\nlist\nint\n iList;\nlist\nint\n::iterator p = find(iList.begin(), iList.end(),2);\ncout\nbefore: p == \n*p \nendl;\nadvance(p,2);\ncout\nafter: p == \n*p\nendl;\nint k = 0;\ndistance(p, iList.end(),k);\ncout\nk == \nk \nendl;\n\n\n\n\nadvance()\u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5411\u524d\u63a8\u8fdb\u7684\u6570\u76ee\u3002\u5bf9\u4e8e\u524d\u63a8\u8fed\u4ee3\u5668\uff0c\u8be5\u503c\u5fc5\u987b\u4e3a\u6b63\uff0c\u800c\u5bf9\u4e8e\u53cc\u5411\u8fed\u4ee3\u5668\u548c\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\uff0c\u8be5\u503c\u53ef\u4ee5\u4e3a\u8d1f\u3002\n\n\n\u4f7f\u7528distance()\u51fd\u6570\u8fd4\u56de\u5230\u8fbe\u53e6\u4e00\u4e2a\u8fed\u4ee3\u5668\u6240\u9700\u8981\u7684\u6b65\u6570\u3002\n\n\n\u6ce8\u610f\n\n\ndistance()\u51fd\u6570\u662f\u8fed\u4ee3\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u9012\u589e\u7b2c\u4e09\u4e2a\u53c2\u6570\u3002\u56e0\u6b64\uff0c\u4f60\u5fc5\u987b\u521d\u59cb\u5316\u53c2\u6570\u3002\u672a\u521d\u59cb\u5316\u8be5\u53c2\u6570\u51e0\u4e4e\u6ce8\u5b9a\u8981\u5931\u8d25\u3002\n\n\n\u51fd\u6570\u548c\u51fd\u6570\u5bf9\u8c61\n\n\nSTL\u4e2d\uff0c\u51fd\u6570\u88ab\u79f0\u4e3a\u7b97\u6cd5\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u4eec\u548c\u6807\u51c6C\u5e93\u51fd\u6570\u76f8\u6bd4\uff0c\u5b83\u4eec\u66f4\u4e3a\u901a\u7528\u3002STL\u7b97\u6cd5\u901a\u8fc7\u91cd\u8f7doperator()\u51fd\u6570\u5b9e\u73b0\u4e3a\u6a21\u677f\u7c7b\u6216\u6a21\u677f\u51fd\u6570\u3002\u8fd9\u4e9b\u7c7b\u7528\u4e8e\u521b\u5efa\u51fd\u6570\u5bf9\u8c61\uff0c\u5bf9\u5bb9\u5668\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u5404\u79cd\u5404\u6837\u7684\u64cd\u4f5c\u3002\u4e0b\u9762\u7684\u51e0\u8282\u89e3\u91ca\u5982\u4f55\u4f7f\u7528\u51fd\u6570\u548c\u51fd\u6570\u5bf9\u8c61\u3002\n\n\n\u51fd\u6570\u548c\u65ad\u8a00\n\n\n\u7ecf\u5e38\u9700\u8981\u5bf9\u5bb9\u5668\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u64cd\u4f5c\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u80fd\u5e0c\u671b\u904d\u5386\u4e00\u4e2a\u5bb9\u5668\u4e2d\u6240\u6709\u5bf9\u8c61\u7684STL\u7b97\u6cd5\u80fd\u591f\u56de\u8c03\u81ea\u5df1\u7684\u51fd\u6570\u3002\u4f8b\u5982\uff1a\n\n\n#include \niostream\n\n#include \nstdlib.h\n\n#include \ntime.h\n\n#include \nvector\n\n#include \nalgorithm\n\n\nusing namespace std;\n\n#define VSIZE  24\nvector\nlong\n v(VSIZE);\n\nvoid initialize(long \nri);\nvoid show(const long \nri);\nbool isMinus(const long \nri);\n\nint main()\n{\n    srand(time(NULL));\n    for_each(v.begin(), v.end(), initialize);\n    cout\nVector of signed long integers\nendl;\n    for_each(v. begin(), v.end(), show);\n    cout\nendl;\n\n    int count = 0;\n    vector\nlong\n::iterator p;\n    p = find_if(v.begin(), v.end(), isMinus);\n    while(p != v.end())\n    {\n        count++;\n        p = find_if(p+1, v.end(), isMinus);\n    }\n    cout\nNumber of values:\nVSIZE\nendl;\n    cout\nNegative values:\ncount\nendl;\n    return 0;\n}\nvoid initialize(long \nri)\n{\n    ri = (rand() - (RAND_MAX/2));\n}\nvoid show(const long \nri)\n{\n    cout\nri\n;\n}\nbool isMinus(const long \nri)\n{\n    return (ri\n0);\n}\n\n\n\n\n\n\n\u6240\u8c13\u65ad\u8a00\u51fd\u6570\uff0c\u5c31\u662f\u8fd4\u56debool\u503c\u7684\u51fd\u6570\u3002\n\n\n\n\n\u51fd\u6570\u5bf9\u8c61\n\n\n\u9664\u4e86\u7ed9STL\u7b97\u6cd5\u4f20\u9012\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u4f60\u8fd8\u53ef\u80fd\u9700\u8981\u4f20\u9012\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u4ee5\u4fbf\u6267\u884c\u66f4\u590d\u6742\u7684\u64cd\u4f5c\u3002\u8fd9\u6837\u4e00\u4e2a\u5bf9\u8c61\u5c31\u53eb\u505a\u51fd\u6570\u5bf9\u8c61\u3002\u5b9e\u9645\u4e0a\u51fd\u6570\u5bf9\u8c61\u5c31\u662f\u4e00\u4e2a\u7c7b\uff0c\u4f46\u5b83\u548c\u56de\u8c03\u51fd\u6570\u4e00\u6837\u53ef\u4ee5\u88ab\u56de\u8c03\u3002\u4f8b\u5982\uff0c\u5728\u51fd\u6570\u5bf9\u8c61\u6bcf\u6b21\u88abfor_each()\u6216find_if()\u51fd\u6570\u8c03\u7528\u65f6\u53ef\u4ee5\u4fdd\u7559\u7edf\u8ba1\u4fe1\u606f\u3002\u51fd\u6570\u5bf9\u8c61\u662f\u901a\u8fc7\u91cd\u8f7doperator()()\u5b9e\u73b0\u7684\u3002\u5982\u679cTanyClass\u5b9a\u4e49\u4e86operator()()\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u8fd9\u4e48\u4f7f\u7528\uff1a\n\n\nTanyClass object;\nobject();\nfor_each(v.begin(), v.end(), object);\n\n\n\n\nSTL\u5b9a\u4e49\u4e86\u51e0\u4e2a\u51fd\u6570\u5bf9\u8c61\u3002\u7531\u4e8e\u5b83\u4eec\u662f\u6a21\u677f\uff0c\u6240\u4ee5\u80fd\u591f\u7528\u4e8e\u4efb\u4f55\u7c7b\u578b\uff0c\u5305\u62ecC/C++\u56fa\u6709\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982long\u3002\u6709\u4e9b\u51fd\u6570\u5bf9\u8c61\u4ece\u540d\u5b57\u4e2d\u5c31\u53ef\u4ee5\u770b\u51fa\u5b83\u7684\u7528\u9014\uff0c\u5982plus()\u548cmultiplies()\u3002\u7c7b\u4f3c\u7684greater()\u548cless-equal()\u7528\u4e8e\u6bd4\u8f83\u4e24\u4e2a\u503c\u3002\n\n\n\u6ce8\u610f\n\n\n\u6709\u4e9b\u7248\u672c\u7684ANSI C++ \u5b9a\u4e49\u4e86times()\u51fd\u6570\u5bf9\u8c61\uff0c\u800cGNU C++\u628a\u5b83\u547d\u540d\u4e3amultiplies()\u3002\u4f7f\u7528\u65f6\u5fc5\u987b\u5305\u542b\u5934\u6587\u4ef6\nfunctional\n\u3002\n\n\n\u4e00\u4e2a\u6709\u7528\u7684\u51fd\u6570\u5bf9\u8c61\u7684\u5e94\u7528\u662faccumulate()\u7b97\u6cd5\u3002\u8be5\u51fd\u6570\u8ba1\u7b97\u5bb9\u5668\u4e2d\u6240\u6709\u503c\u7684\u603b\u548c\u3002\u8bb0\u4f4f\u8fd9\u6837\u7684\u503c\u4e0d\u4e00\u5b9a\u662f\u7b80\u5355\u7684\u7c7b\u578b\uff0c\u901a\u8fc7\u91cd\u8f7doperator+()\uff0c\u4e5f\u53ef\u4ee5\u662f\u7c7b\u5bf9\u8c61\u3002\n\n\naccum.cpp\n\n\n#include \niostream\n\n#include \nnumeric\n //need accumulate()\n#include \nvector\n //need vector\n#include \nfunctional\n //need multiplies() or times()\n\nusing namespace std;\n\n#define MAX 10\nvector\nlong\n v(MAX);\n\nint main()\n{\n   for(int i = 0; i \n MAX; i++)\n       v[i] = i + 1;\n   long sum = accumulate(v.begin(), v.end(), 0);\n   cout\nSum of values ==\nsum\nendl;\n\n   long product = accumulate(v.begin(), v.end(), 1, multiplies\nlong\n());\n   cout\nProduct of values ==\nproduct\nendl;\n   return 0;\n}\n\n\n\n\n\u7f16\u8bd1\u8f93\u51fa\u5982\u4e0b\uff1a\n\n\n$ g++ accum.cpp\n$ ./a.out\nSum of values == 55\nProduct of values == 3628800\n\n\n\n\n\u6ce8\u610f\u4f7f\u7528\u4e86\u51fd\u6570\u5bf9\u8c61\u7684accumulate()\u7b97\u6cd5\u7684\u7528\u6cd5\u3002accumulate()\u5728\u5185\u90e8\u5c06\u6bcf\u4e2a\u5bb9\u5668\u4e2d\u7684\u5bf9\u8c61\u548c\u7b2c\u4e09\u4e2a\u53c2\u6570\u4f5c\u4e3amultiplies\u51fd\u6570\u5bf9\u8c61\u7684\u53c2\u6570\uff0cmultiplies(1,v)\u8ba1\u7b97\u4e58\u79ef\u3002VC\u4e2d\u7684\u8fd9\u4e9b\u6a21\u677f\u7684\u6e90\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\ntemplate \nclass _II, class _Ty\n\ninline _Ty accumulate(_II _F, _II _L, _Ty _V)\n{\n    for(; _F != _L; ++_F)\n        _V = _V + *_F;\n    return (_V);\n}\n\n\ntemplate \nclass _II, class _Ty, class _Bop\n\ninline _Ty accumulate(_II _F, _II _L, _Ty _V, _Bop _B)\n{\n    for(; _F != _L; ++_F)\n        _V = _B(_V, *_F);\n    return (_V);\n}\n\ntemplate \nclass _A1, class _A2, class _R\n\nstruct binary_function{\n    typedef _A1 first_argument_type;\n    typedef _A2 second_argument_type;\n    typedef _R result_type;\n};\n\ntemplate \nclass _Ty\n\nstruct multiplies:\nbinary_function\n_Ty, _Ty, _Ty\n\n{\n    _Ty operator()(const _Ty \n_X, const _Ty \n_Y) const\n    {\n        return (_X * _Y);\n    }\n};\n\n\n\n\n\u5f15\u8a00\uff1a\u5982\u679c\u4f60\u60f3\u6df1\u5165\u4e86\u89e3STL\u5230\u5e95\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff0c\u6700\u597d\u7684\u529e\u6cd5\u662f\u5199\u4e2a\u7b80\u5355\u7684\u7a0b\u5e8f\uff0c\u5c06\u7a0b\u5e8f\u4e2d\u6d89\u53ca\u5230\u7684\u6a21\u677f\u6e90\u7801\u7ed9copy\u4e0b\u6765\uff0c\u7a0d\u4f5c\u6574\u7406\uff0c\u5c31\u80fd\u770b\u61c2\u4e86\u3002\u6240\u4ee5\u6ca1\u6709\u5fc5\u8981\u53bb\u4e70\u4ec0\u4e48\u300aSTL\u6e90\u7801\u5256\u6790\u300b\u4e4b\u7c7b\u7684\u4e66\u7c4d\uff0c\u90a3\u4e9b\u4e66\u53ef\u80fd\u53cd\u800c\u6d6a\u8d39\u65f6\u95f4\u3002\n\n\n\u53d1\u751f\u5668\u51fd\u6570\u5bf9\u8c61\n\n\n\u6709\u4e00\u7c7b\u6709\u7528\u7684\u51fd\u6570\u5bf9\u8c61\u662f\u201c\u53d1\u751f\u5668\u201d(generator)\u3002\u8fd9\u7c7b\u51fd\u6570\u6709\u81ea\u5df1\u7684\u5185\u5b58\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u80fd\u591f\u4ece\u5148\u524d\u7684\u8c03\u7528\u4e2d\u8bb0\u4f4f\u4e00\u4e2a\u503c\u3002\u4f8b\u5982\u968f\u673a\u6570\u53d1\u751f\u5668\u51fd\u6570\u3002\n\n\n\u666e\u901a\u7684C\u7a0b\u5e8f\u5458\u4f7f\u7528\u9759\u6001\u6216\u5168\u5c40\u53d8\u91cf\u201c\u8bb0\u5fc6\u201d\u4e0a\u6b21\u8c03\u7528\u7684\u7ed3\u679c\u3002\u4f46\u8fd9\u6837\u505a\u7684\u7f3a\u70b9\u662f\u8be5\u51fd\u6570\u65e0\u6cd5\u548c\u5b83\u7684\u6570\u636e\u76f8\u5206\u79bb\uff0c\u8fd8\u6709\u4e2a\u7f3a\u70b9\u662f\u8981\u7528TLS\u624d\u80fd\u7ebf\u7a0b\u5b89\u5168\u3002\u663e\u7136\uff0c\u4f7f\u7528\u7c7b\u6765\u5c01\u88c5\u4e00\u5757:\u201c\u5185\u5b58\u201d\u66f4\u5b89\u5168\u53ef\u9760\u3002\u5148\u770b\u4e00\u4e0b\u4f8b\u5b50\uff1a\n\n\nrandfunc.cpp\n\n\n#include \niostream\n\n#include \nstdlib.h\n //need rand(), srand()\n#include \ntime.h\n //need random_shuffle()\n#include \nvector\n //need vector\n#include \nfunctional\n //need ptr_fun()\n#include \nalgorithm\n\n#include \niterator\n\n\nusing namespace std;\n\nint iarray[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };\n\nvector\nint\n v(iarray, iarray + 10);\n\nvoid Display(vector\nint\n vr, const char *s);\n\nunsigned int RandInt(const unsigned int n);\n\nint main()\n{\n    srand(time(NULL));\n    Display(v, \nBefore shuffle:\n);\n    pointer_to_unary_function\nunsigned int, unsigned int\n ptr_RandInt = ptr_fun(RandInt);\n    random_shuffle(v.begin(), v.end(), ptr_RandInt);\n    Display(v, \nAfter shuffle:\n);\n    return 0;\n}\nvoid Display(vector\nint\n vr, const char *s)\n{\n    cout \n endl \n s \n endl;\n    copy(vr.begin(), vr.end(), ostream_iterator\nint\n(cout, \n));\n    cout \n endl;\n}\n\nunsigned int RandInt(const unsigned int n)\n{\n    return rand() % n;\n}\n\n\n\n\n\u7f16\u8bd1\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a\n\n\n$ g++ randfunc.cpp\n$ ./a.out\nBefore shuffle:\n1 2 3 4 5 6 7 8 9 10\nAfter shuffle:\n6 7 2 8 3 5 10 1 9 4\n\n\u9996\u5148\u7528\u4e0b\u9762\u7684\u8bed\u53e5\u58f0\u660e\u4e00\u4e2a\u5bf9\u8c61\npointer_to_unary_function\nunsigned int, unsigned int\n ptr_RandInt = ptr_fun(RandInt);\n\n\n\n\n\u8fd9\u513f\u4f7f\u7528STL\u7684\u5355\u76ee\u51fd\u6570\u6a21\u677f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u91cfptr_RandInt, \u5e76\u5c06\u5730\u5740\u521d\u59cb\u5316\u5230\u6211\u4eec\u7684\u51fd\u6570RandInt()\u3002\u5355\u76ee\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u503c\u3002\u73b0\u5728random_shuffle()\u53ef\u4ee5\u5982\u4e0b\u8c03\u7528:\n\n\nrandom_shuffle(v.begin(), v.end(), ptr_RandInt);\n\n\n\n\n\u5728\u672c\u4f8b\u5b50\u4e2d\uff0c\u53d1\u751f\u5668\u53ea\u662f\u7b80\u5355\u7684\u8c03\u7528rand()\u51fd\u6570\u3002\n\n\n\u53d1\u751f\u5668\u51fd\u6570\u7c7b\u5bf9\u8c61\n\n\n\u4e0b\u9762\u7684\u4f8b\u5b50\u8bf4\u660e\u53d1\u751f\u5668\u51fd\u6570\u7c7b\u5bf9\u8c61\u7684\u4f7f\u7528\u3002\n\n\nfiborand.cpp\n\n\n#include \niostream\n\n#include \nalgorithm\n //need rand_shuffle()\n#include \nvector\n //need vector\n#include \nfunctional\n //need unary_function\n#include \niterator\n\n\nusing namespace std;\n\nint iarray[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };\nvector\nint\n v(iarray, iarray + 10);\nvoid Display(vector\nint\n \nvr, const char *s);\n\ntemplate\nclass Arg\n\nclass FiboRand:public unary_function\nArg, Arg\n\n{\n    int i, j;\n    Arg sequence[18];\npublic:\n    FiboRand();\n    Arg operator()(const Arg \narg);\n};\n\nvoid main()\n{\n    FiboRand\nint\n fibogen;\n    cout\nFibonacci random number generator\nendl;\n    cout\nusing random_shuffle and a function object\nendl;\n    Display(v,\nBefore shuffle:\n);\n    random_shuffle(v.begin(), v.end(), fibogen);\n    Display(v, \nAfter shuffle:\n);\n}\n\nvoid Display(vector\nint\n \nvr, const char *s)\n{\n    cout\nendl\ns\nendl;\n    copy(vr.begin(), vr.end(), ostream_iterator\nint\n(cout,\n));\n    cout\nendl;\n}\n\ntemplate\nclass Arg\n\nFiboRand\nArg\n::FiboRand()\n{\n    sequence[17]=1;\n    sequence[16]=2;\n    for(int n=15; n\n0; n--)\n        sequence[n]=sequence[n+1]+sequence[n+2];\n    i=17;\n    j = 5;\n}\n\ntemplate\nclass Arg\n\nArg FiboRand\nArg\n::operator()(const Arg \narg)\n{\n    Arg k=sequence[i]+sequence[j];\n    sequence[i]=k;\n    i--;\n    j--;\n    if(i==0) i=17;\n    if(j==0) j=17;\n    return k % arg;\n}\n\n\n\n\n\u7f16\u8bd1\u8fd0\u884c\u8f93\u51fa\u5982\u4e0b\uff1a\n\n\n$ g++ fiborand.cpp\n$ ./a.out\nFibonacci random number\ngenerator\nusing random_shuffle and a\nfunction object\nBefore shuffle:\n1 2 3 4 5 6 7 8 9 10\nAfter shuffle:\n6 8 5 4 3 7 10 1 9\n\n\n\n\n\u8be5\u7a0b\u5e8f\u7528\u5b8c\u5168\u4e0d\u540c\u7684\u65b9\u6cd5\u4f7f\u7528rand_shuffle\u3002Fibonacci\u53d1\u751f\u5668\u5c01\u88c5\u5728\u4e00\u4e2a\u7c7b\u4e2d\uff0c\u8be5\u7c7b\u80fd\u4ece\u5148\u524d\u7684\u201c\u4f7f\u7528\u201d\u4e2d\u8bb0\u5fc6\u8fd0\u884c\u7ed3\u679c\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u7c7bFiboRand\u7ef4\u62a4\u4e86\u4e00\u4e2a\u6570\u7ec4\u548c\u4e24\u4e2a\u7d22\u5f15\u53d8\u91cfi\u548cj\u3002 \n\n\nFiboRand\u7c7b\u7ee7\u627f\u81eaunary_function()\u6a21\u677f\uff1a\n\n\ntemplate\nclass Arg\n\nclass FiboRand: public unary_function\nArg, Arg\n{ ...\n\n\n\n\nArg\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\u3002\u8be5\u7c7b\u8fd8\u5b9a\u4e49\u4e86\u4e24\u4e2a\u6210\u5458\u51fd\u6570\uff0c\u4e00\u4e2a\u662f\u6784\u9020\u51fd\u6570\uff0c\u53e6\u4e00\u4e2a\u662foperator()()\u51fd\u6570\uff0c\u8be5\u64cd\u4f5c\u7b26\u5141\u8bb8random_shuffle()\u7b97\u6cd5\u50cf\u4e00\u4e2a\u51fd\u6570\u4e00\u6837\u201c\u8c03\u7528\u201d\u4e00\u4e2aFiboRand\u5bf9\u8c61\u3002\n\n\n\u7ed1\u5b9a\u5668\u51fd\u6570\u5bf9\u8c61\n\n\n\u4e00\u4e2a\u7ed1\u5b9a\u5668\u4f7f\u7528\u53e6\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61f()\u548c\u53c2\u6570\u503cV\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u3002\u88ab\u7ed1\u5b9a\u51fd\u6570\u5bf9\u8c61\u5fc5\u987b\u4e3a\u53cc\u76ee\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u6709\u4e24\u4e2a\u53c2\u6570\uff0cA\u548cB\u3002STL\u4e2d\u7684\u7ed1\u5b9a\u5668\u6709\uff1a\n\n\n\n\nbind1st() \u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\uff0c\u8be5\u51fd\u6570\u5bf9\u8c61\u5c06\u503cV\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570A\u3002\n\n\nbind2nd() \u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\uff0c\u8be5\u51fd\u6570\u5bf9\u8c61\u5c06\u503cV\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570B\u3002\n\n\n\n\n\u4e3e\u4f8b\u5982\u4e0b:\n\n\nbinder.cpp\n\n\n#include \niostream\n\n#include \nalgorithm\n\n#include \nfunctional\n\n#include \nlist\n\n\nusing namespace std;\n\nint iarray[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n\nlist\nint\n aList(iarray, iarray+10);\n\nint main()\n{\n    int k = 0;\n    k = count_if(aList.begin(), aList.end(), bind1st(greater\nint\n(),8));\n    cout\nNumber elements \n 8 == \nk\nendl;\n    return 0;\n}\n\n\n\n\ncount_if()\u8ba1\u7b97\u6ee1\u8db3\u7279\u5b9a\u6761\u4ef6\u7684\u5143\u7d20\u7684\u6570\u76ee\u3002\n\u8fd9\u662f\u901a\u8fc7\u5c06\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u548c\u4e00\u4e2a\u53c2\u6570\u6346\u7ed1\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5e76\u5c06\u8be5\u5bf9\u8c61\u4f5c\u4e3a\u7b97\u6cd5\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u5b9e\u73b0\u7684\u3002\u6ce8\u610f\u8fd9\u4e2a\u8868\u8fbe\u5f0f\uff1a\n\n\nbind1st(greater\nint\n(),8)\n\n\n\n\n\u8be5\u8868\u8fbe\u5f0f\u5c06\ngreater\nint\n()\n\u548c\u4e00\u4e2a\u53c2\u6570\u503c8\u6346\u7ed1\u4e3a\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u3002\u7531\u4e8e\u4f7f\u7528\u4e86bind1st()\uff0c\u6240\u4ee5\u8be5\u51fd\u6570\u76f8\u5f53\u4e8e\u8ba1\u7b97\u4e0b\u8ff0\u8868\u8fbe\u5f0f\uff1a\n\n\n8 \n q\n\n\n\n\n\u8868\u8fbe\u5f0f\u4e2d\u7684q\u662f\u5bb9\u5668\u4e2d\u7684\u5bf9\u8c61\u3002\u56e0\u6b64\uff0c\u5b8c\u6574\u7684\u8868\u8fbe\u5f0f\n\n\nk = count_if(aList.begin(), aList.end(), bind1st(greater\nint\n(),8));\n\n\n\n\n\u8ba1\u7b97\u6240\u6709\u5c0f\u4e8e\u6216\u7b49\u4e8e8\u7684\u5bf9\u8c61\u7684\u6570\u76ee\u3002\n\n\n\u5426\u5b9a\u51fd\u6570\u5bf9\u8c61\n\n\n\u6240\u8c13\u5426\u5b9a(negator)\u51fd\u6570\u5bf9\u8c61\uff0c\u5c31\u662f\u5b83\u4ece\u53e6\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u521b\u5efa\u800c\u6765\uff0c\u5982\u679c\u539f\u5148\u7684\u51fd\u6570\u8fd4\u56de\u771f\uff0c\u5219\u5426\u5b9a\u51fd\u6570\u5bf9\u8c61\u8fd4\u56de\u5047\u3002\u6709\u4e24\u4e2a\u5426\u5b9a\u51fd\u6570\u5bf9\u8c61\uff1anot1()\u548cnot2()\u3002\n\n\nnot1()\u6388\u53d7\u5355\u76ee\u51fd\u6570\u5bf9\u8c61\uff0cnot2()\u63a5\u53d7\u53cc\u76ee\u51fd\u6570\u5bf9\u8c61\u3002\u5426\u5b9a\u51fd\u6570\u5bf9\u8c61\u901a\u5e38\u548c\u7ed1\u5b9a\u5668\u4e00\u8d77\u4f7f\u7528\u3002\u4f8b\u5982\uff0c\u4e0a\u8282\u4e2d\u7528bind1nd\u6765\u641c\u7d22q\n=8\u7684\u503c\uff1a\n\n\nk = count_if(aList.begin(), aList.end(), bind1st(greater\nint\n(),8));\n\n\n\n\n\u5982\u679c\u8981\u641c\u7d22q\n8\u7684\u5bf9\u8c61\uff0c\u5219\u7528bind2st\u3002\u800c\u73b0\u5728\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a\n\n\nstrat = find_if(aList.begin(), aList.end(), not1(bind1st(greater\nint\n(),8)));\n\n\n\n\n\u4f60\u5fc5\u987b\u4f7f\u7528not1\uff0c\u56e0\u4e3abind1st\u8fd4\u56de\u5355\u76ee\u51fd\u6570\u3002\n\n\n\u603b\u7ed3\uff1a\u4f7f\u7528\u6807\u51c6\u6a21\u677f\u5e93\uff08STL\uff09\n\n\n\u5c3d\u7ba1\u5f88\u591a\u7a0b\u5e8f\u5458\u4ecd\u7136\u5728\u4f7f\u7528\u6807\u51c6C\u51fd\u6570\uff0c\u4f46\u662f\u8fd9\u5c31\u597d\u50cf\u9a91\u7740\u6bdb\u9a74\u5bfb\u627eMercedes\u4e00\u6837\u3002\u4f60\u5f53\u7136\u6700\u7ec8\u4e5f\u4f1a\u5230\u8fbe\u76ee\u6807\uff0c\u4f46\u662f\u4f60\u6d6a\u8d39\u4e86\u5f88\u591a\u65f6\u95f4\u3002\n\n\n\u5c3d\u7ba1\u6709\u65f6\u5019\u4f7f\u7528\u6807\u51c6C\u51fd\u6570\u786e\u5b9e\u65b9\u4fbf\uff08\u5982\u4f7f\u7528sprintf()\u8fdb\u884c\u683c\u5f0f\u5316\u8f93\u51fa\uff09\u3002\u4f46\u662fC\u51fd\u6570\u4e0d\u4f7f\u7528\u5f02\u5e38\u673a\u5236\u6765\u62a5\u544a\u9519\u8bef\uff0c\u4e5f\u4e0d\u9002\u5408\u5904\u7406\u65b0\u7684\u6570\u636e\u7c7b\u578b\u3002\u800c\u4e14\u6807\u51c6C\u51fd\u6570\u7ecf\u5e38\u4f7f\u7528\u5185\u5b58\u5206\u914d\u6280\u672f\uff0c\u6ca1\u6709\u7ecf\u9a8c\u7684\u7a0b\u5e8f\u5458\u5f88\u5bb9\u6613\u5199\u51fabug\u6765\u3002\n\n\nC++\u6807\u51c6\u5e93\u5219\u63d0\u4f9b\u4e86\u66f4\u4e3a\u5b89\u5168\uff0c\u66f4\u4e3a\u7075\u6d3b\u7684\u6570\u636e\u96c6\u5904\u7406\u65b9\u5f0f\u3002STL\u6700\u521d\u7531HP\u5b9e\u9a8c\u5ba4\u7684Alexander Stepanov\u548cMeng Lee\u5f00\u53d1\u3002\u6700\u8fd1\uff0cC++\u6807\u51c6\u59d4\u5458\u4f1a\u91c7\u7eb3\u4e86STL\uff0c\u5c3d\u7ba1\u5728\u4e0d\u540c\u7684\u5b9e\u73b0\u4e4b\u95f4\u4ecd\u6709\u7ec6\u8282\u5dee\u522b\u3002\n\n\nSTL\u7684\u6700\u4e3b\u8981\u7684\u4e24\u4e2a\u7279\u70b9\uff1a\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u5206\u79bb\uff0c\u975e\u9762\u5411\u5bf9\u8c61\u672c\u8d28\u3002\u8bbf\u95ee\u5bf9\u8c61\u662f\u901a\u8fc7\u50cf\u6307\u9488\u4e00\u6837\u7684\u8fed\u4ee3\u5668\u5b9e\u73b0\u7684\uff0c\u5bb9\u5668\u662f\u50cf\u94fe\u8868\u3001\u77e2\u91cf\u4e4b\u7c7b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u6309\u6a21\u677f\u65b9\u5f0f\u63d0\u4f9b\u3002\u7b97\u6cd5\u662f\u51fd\u6570\u6a21\u677f\uff0c\u7528\u4e8e\u64cd\u4f5c\u5bb9\u5668\u4e2d\u7684\u6570\u636e\u3002\u7531\u4e8eSTL\u4ee5\u6a21\u677f\u4e3a\u57fa\u7840\uff0c\u6240\u4ee5\u80fd\u7528\u4e8e\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u548c\u7ed3\u6784\u3002", 
            "title": "Learn STL In 30 Minutes"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#learn-stl-in-30-minutes", 
            "text": "", 
            "title": "Learn STL In 30 Minutes"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#stl", 
            "text": "\u8fd9\u7bc7\u6587\u7ae0\u662f\u6211\u4ece\u5317\u5927BBS\u4e0a\u8f6c\u6765\u7684\uff0c\u56e0\u4e3aBBS\u4e0a\u7684\u683c\u5f0f\u5f88\u4e71\uff0c\u5c31\u81ea\u5df1\u7528Markdown\u91cd\u65b0\u5199\u4e86\u4e00\u904d\uff0c\u4e00\u6765\u52a0\u6df1\u8bb0\u5fc6\uff0c\u4e8c\u6765\u4f5c\u4e3a\u4e2a\u4eba\u6536\u85cf\uff0c\u5982\u679c\u4f60\u89c9\u5f97\u5f88\u6709\u7528\uff0c\u90a3\u5c31\u8db3\u591f\u4e86\u3002\u4ee5\u4e0b\u4e3a\u6b63\u6587\u3002  \u8fd9\u662f\u672c\u5c0f\u4eba\u4e66\u3002\u539f\u540d\u662f \u300aUsing STL\u300b \uff0c\u4e0d\u77e5\u9053\u662f\u8c01\u5199\u7684\u3002\u4e0d\u8fc7\u6211\u5012\u89c9\u5f97\u5f88\u6709\u8da3\uff0c\u6240\u4ee5\u82b1\u4e86\u4e24\u4e2a\u665a\u4e0a\u628a\u5b83\u7ffb\u8bd1\u51fa\u6765\u3002\u6211\u6ca1\u6709\u5bf9\u7ffb\u8bd1\u51fa\u7684\u5185\u5bb9\u6821\u9a8c\u8fc7\u3002\u5982\u679c\u4f60\u6ca1\u6cd5\u5728\u4e09\u5341\u5206\u949f\u5185\u89c9\u5f97\u6709\u6240\u6536\u83b7\uff0c\u90a3\u4e48\u8d76\u7d27\u6254\u4e86\u5b83\u3002\u6587\u4e2d\u6211\u7701\u7565\u4e86\u5f88\u591a\u4e1c\u897f\u3002\u5fc3\u75bc\u5450\uff01\u6d6a\u8d39\u6211\u4e24\u4e2a\u665a\u4e0a\u3002  \u8bd1\u8005\uff1akary\ncontact:", 
            "title": "\u4e09\u5341\u5206\u949f\u638c\u63e1 STL"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#stl_1", 
            "text": "STL \u7684\u4e00\u4e2a\u91cd\u8981\u7279\u70b9\u662f\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u7684\u5206\u79bb\u3002\u5c3d\u7ba1\u8fd9\u662f\u4e2a\u7b80\u5355\u7684\u6982\u5ff5\uff0c\u4f46\u8fd9\u79cd\u5206\u79bb\u786e\u5b9e\u4f7f\u5f97STL\u53d8\u5f97\u975e\u5e38\u901a\u7528\u3002\u4f8b\u5982\uff0c\u7531\u4e8eSTL\u7684sort()\u51fd\u6570\u662f\u5b8c\u5168\u901a\u7528\u7684\uff0c\u4f60\u53ef\u4ee5\u7528\u5b83\u6765\u64cd\u4f5c\u51e0\u4e4e\u4efb\u4f55\u6570\u636e\u96c6\u5408\uff0c\u5305\u62ec\u94fe\u8868\uff0c\u5bb9\u5668\u548c\u6570\u7ec4\u3002", 
            "title": "STL \u6982\u8ff0"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_1", 
            "text": "", 
            "title": "\u8981\u70b9"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#stl_2", 
            "text": "\u4e3a\u4e86\u548c\u5176\u4ed6\u7ec4\u4ef6\u76f8\u533a\u522b\uff0c\u5728\u672c\u4e66\u4e2dSTL\u7b97\u6cd5\u7528\u540e\u63a5\u4e00\u5bf9\u5706\u62ec\u5f27\u7684\u65b9\u5f0f\u8868\u793a\uff0c\u4f8b\u5982sort()\u3002  STL\u53e6\u4e00\u4e2a\u91cd\u8981\u7279\u6027\u662f\u5b83\u4e0d\u662f\u9762\u5411\u5bf9\u8c61\u7684\u3002\u4e3a\u4e86\u5177\u6709\u8db3\u591f\u901a\u7528\u6027\uff0cSTL\u4e3b\u8981\u4f9d\u8d56\u4e8e\u6a21\u677f\u800c\u4e0d\u662f\u5c01\u88c5\u3001\u7ee7\u627f\u548c\u865a\u51fd\u6570\uff08\u591a\u6001\u6027\uff09\u2014\u2014 OOP\u7684\u4e09\u4e2a\u8981\u7d20\u3002\u4f60\u5728STL\u4e2d\u627e\u4e0d\u5230\u4efb\u4f55\u660e\u663e\u7684\u7c7b\u7ee7\u627f\u5173\u7cfb\u3002\u8fd9\u597d\u50cf\u662f\u4e00\u79cd\u5012\u9000\uff0c\u4f46\u8fd9\u6b63\u597d\u662f\u4f7f\u5f97STL\u7684\u7ec4\u4ef6\u5177\u6709\u5e7f\u6cdb\u901a\u7528\u6027\u7684\u5e95\u5c42\u7279\u5f81\u3002\u53e6\u5916\uff0c\u7531\u4e8eSTL\u662f\u57fa\u4e8e\u6a21\u677f\uff0c\u5185\u8054\u51fd\u6570\u7684\u4f7f\u7528\u4f7f\u5f97\u751f\u6210\u7684\u4ee3\u7801\u77ed\u5c0f\u9ad8\u6548\u3002", 
            "title": "STL\u7b97\u6cd5\u4f5c\u4e3a\u6a21\u677f\u51fd\u6570\u63d0\u4f9b\u3002"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_2", 
            "text": "\u786e\u4fdd\u5728\u7f16\u8bd1\u4f7f\u7528\u4e86STL\u7684\u7a0b\u5e8f\u4e2d\u81f3\u5c11\u8981\u4f7f\u7528  -O  \u4f18\u5316\u6765\u4fdd\u8bc1\u5185\u8054\u6269\u5c55\u3002STL\u63d0\u4f9b\u5927\u91cf\u7684\u6a21\u677f\u7c7b\u548c\u51fd\u6570\uff0c\u53ef\u4ee5\u5728OOP\u548c\u5e38\u89c4\u7f16\u7a0b\u4e2d\u4f7f\u7528\u3002\u6240\u6709\u7684STL\u7684\u5927\u7ea650\u4e2a\u7b97\u6cd5\u90fd\u662f\u5b8c\u5168\u901a\u7528\u7684\uff0c\u800c\u4e14\u4e0d\u4f9d\u8d56\u4e8e\u4efb\u4f55\u7279\u5b9a\u7684\u6570\u636e\u7c7b\u578b\u3002  \u4e0b\u9762\u7684\u5c0f\u8282\u8bf4\u660e\u4e86\u4e09\u4e2a\u57fa\u672c\u7684STL\u7ec4\u4ef6\uff1a    \u8fed\u4ee3\u5668\u63d0\u4f9b\u4e86\u8bbf\u95ee\u5bb9\u5668\u4e2d\u5bf9\u8c61\u7684\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u5bf9\u8fed\u4ee3\u5668\u6307\u5b9alist\u6216vector\u4e2d\u7684\u4e00\u5b9a\u8303\u56f4\u7684\u5bf9\u8c61\u3002\u8fed\u4ee3\u5668\u5c31\u5982\u540c\u4e00\u4e2a\u6307\u9488\u3002\u4e8b\u5b9e\u4e0a\uff0cC++\u7684\u6307\u9488\u4e5f\u662f\u4e00\u79cd\u8fed\u4ee3\u5668\u3002\u4f46\u662f\uff0c\u8fed\u4ee3\u5668\u4e5f\u53ef\u4ee5\u662f\u90a3\u4e9b\u5b9a\u4e49\u4e86operator*()\u4ee5\u53ca\u5176\u4ed6\u7c7b\u4f3c\u4e8e\u6307\u9488\u7684\u64cd\u4f5c\u7b26\u7684\u65b9\u6cd5\u7684\u7c7b\u5bf9\u8c61\u3002    \u5bb9\u5668\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5982list\uff0cvector\u548cdeques\uff0c\u4ee5\u6a21\u677f\u7c7b\u7684\u65b9\u6cd5\u63d0\u4f9b\u3002\u4e3a\u4e86\u8bbf\u95ee\u5bb9\u5668\u4e2d\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u7531\u5bb9\u5668\u7c7b\u8f93\u51fa\u7684\u8fed\u4ee3\u5668\u3002    \u7b97\u6cd5\u662f\u7528\u6765\u64cd\u4f5c\u5bb9\u5668\u4e2d\u7684\u6570\u636e\u7684\u6a21\u677f\u51fd\u6570\u3002\u4f8b\u5982\uff0cSTL\u7528sort()\u6765\u5bf9\u4e00\u4e2avector\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u6392\u5e8f\uff0c\u7528find()\u6765\u641c\u7d22\u4e00\u4e2alist\u4e2d\u7684\u5bf9\u8c61\u3002\u51fd\u6570\u672c\u8eab\u4e0e\u4ed6\u4eec\u64cd\u4f5c\u7684\u6570\u636e\u7684\u7ed3\u6784\u548c\u7c7b\u578b\u65e0\u5173\uff0c\u56e0\u6b64\u4ed6\u4eec\u53ef\u4ee5\u5728\u4ece\u7b80\u5355\u6570\u7ec4\u5230\u9ad8\u5ea6\u590d\u6742\u5bb9\u5668\u7684\u4efb\u4f55\u6570\u636e\u7ed3\u6784\u4e0a\u4f7f\u7528\u3002", 
            "title": "\u63d0\u793a"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_3", 
            "text": "\u4e3a\u4e86\u907f\u514d\u548c\u5176\u4ed6\u5934\u6587\u4ef6\u51b2\u7a81\uff0cSTL\u7684\u5934\u6587\u4ef6\u4e0d\u518d\u4f7f\u7528\u5e38\u89c4\u7684.h\u6269\u5c55\u3002\u4e3a\u4e86\u5305\u542b\u6807\u51c6\u7684string\u7c7b\uff0c\u8fed\u4ee3\u5668\u548c\u7b97\u6cd5\uff0c\u7528\u4e0b\u9762\u7684\u6307\u793a\u7b26\uff1a  #include  string \n#include  iterator \n#include  algorithm   \u5982\u679c\u4f60\u67e5\u770bSTL\u7684\u5934\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u50cfiterator.h\u548cstl_iterator.h\u8fd9\u6837\u7684\u5934\u6587\u4ef6\u3002\u7531\u4e8e\u8fd9\u4e9b\u540d\u5b57\u5728\u5404\u79cdSTL\u5b9e\u73b0\u4e4b\u95f4\u90fd\u53ef\u80fd\u4e0d\u540c\uff0c\u4f60\u5e94\u8be5\u907f\u514d\u4f7f\u7528\u8fd9\u4e9b\u540d\u5b57\u6765\u5f15\u7528\u8fd9\u4e9b\u5934\u6587\u4ef6\u3002\u4e3a\u4e86\u786e\u4fdd\u53ef\u79fb\u690d\u6027\uff0c\u4f7f\u7528\u76f8\u5e94\u7684\u6ca1\u6709.h\u540e\u7f00\u7684\u6587\u4ef6\u540d\u3002\u88681\u5217\u51fa\u4e86\u6700\u5e38\u4f7f\u7528\u7684\u5404\u79cd\u5bb9\u5668\u7c7b\u7684\u5934\u6587\u4ef6\u3002\u8be5\u8868\u5e76\u4e0d\u5b8c\u6574\uff0c\u5bf9\u4e8e\u5176\u4ed6\u5934\u6587\u4ef6\uff0c\u6211\u5c06\u5728\u672c\u7ae0\u548c\u540e\u9762\u7684\u4e24\u7ae0\u4e2d\u4ecb\u7ecd\u3002", 
            "title": "\u5934\u6587\u4ef6"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#1-stl", 
            "text": "#include  Container Class      deque  deque    list  list    map  map, multimap    queue  queue, priority_queue    set  set, multiset    stack  stack    vector  vector,  vector bool", 
            "title": "\u88681 STL\u5934\u6587\u4ef6\u548c\u5bb9\u5668\u7c7b"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_4", 
            "text": "\u4f60\u7684\u7f16\u8bd1\u5668\u53ef\u80fd\u4e0d\u80fd\u8bc6\u522b\u540d\u5b57\u7a7a\u95f4\u3002\u540d\u5b57\u7a7a\u95f4\u5c31\u597d\u50cf\u4e00\u4e2a\u4fe1\u5c01\uff0c\u5c06\u6807\u5fd7\u7b26\u5c01\u88c5\u5728\u53e6\u4e00\u4e2a\u540d\u5b57\u4e2d\u3002\u6807\u5fd7\u7b26\u53ea\u5728\u540d\u5b57\u7a7a\u95f4\u4e2d\u5b58\u5728\uff0c\u56e0\u800c\u907f\u514d\u4e86\u548c\u5176\u4ed6\u6807\u5fd7\u7b26\u51b2\u7a81\u3002\u4f8b\u5982\uff0c\u53ef\u80fd\u6709\u5176\u4ed6\u5e93\u548c\u7a0b\u5e8f\u6a21\u5757\u5b9a\u4e49\u4e86sort()\u51fd\u6570\uff0c\u4e3a\u4e86\u907f\u514d\u548cSTL\u7684sort()\u51b2\u7a81\uff0cSTL\u7684sort()\u7b97\u6cd5\u7f16\u8bd1\u4e3astd::sort()\uff0c\u4ece\u800c\u907f\u514d\u4e86\u540d\u5b57\u51b2\u7a81\u3002  \u5c3d\u7ba1\u4f60\u7684\u7f16\u8bd1\u5668\u53ef\u80fd\u6ca1\u6709\u5b9e\u73b0\u540d\u5b57\u7a7a\u95f4\uff0c\u4f60\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u4ed6\u4eec\u3002\u4e3a\u4e86\u4f7f\u7528STL\uff0c\u53ef\u4ee5\u5c06\u4e0b\u9762\u7684\u6307\u793a\u7b26\u63d2\u5165\u5230\u4f60\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\u4e2d\uff0c\u5178\u578b\u7684\u662f\u5728\u6240\u6709\u7684#include\u6307\u793a\u7b26\u7684\u540e\u9762\uff1a  using namespace std;", 
            "title": "\u540d\u5b57\u7a7a\u95f4"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_5", 
            "text": "\u8fed\u4ee3\u5668\u63d0\u4f9b\u5bf9\u4e00\u4e2a\u5bb9\u5668\u4e2d\u7684\u5bf9\u8c61\u7684\u8bbf\u95ee\u65b9\u6cd5\uff0c\u5e76\u4e14\u5b9a\u4e49\u4e86\u5bb9\u5668\u4e2d\u5bf9\u8c61\u7684\u8303\u56f4\u3002\u8fed\u4ee3\u5668\u5c31\u5982\u540c\u4e00\u4e2a\u6307\u9488\u3002\u4e8b\u5b9e\u4e0a\uff0cC++\u7684\u6307\u9488\u4e5f\u662f\u4e00\u79cd\u8fed\u4ee3\u5668\u3002\u4f46\u662f\uff0c\u8fed\u4ee3\u5668\u4e0d\u4ec5\u4ec5\u662f\u6307\u9488\uff0c\u56e0\u6b64\u4f60\u4e0d\u80fd\u8ba4\u4e3a\u4ed6\u4eec\u4e00\u5b9a\u5177\u6709\u5730\u5740\u503c\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u6570\u7ec4\u7d22\u5f15\uff0c\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u79cd\u8fed\u4ee3\u5668\u3002  \u8fed\u4ee3\u5668\u6709\u5404\u79cd\u4e0d\u540c\u7684\u521b\u5efa\u65b9\u6cd5\u3002\u7a0b\u5e8f\u53ef\u80fd\u628a\u8fed\u4ee3\u5668\u4f5c\u4e3a\u4e00\u4e2a\u53d8\u91cf\u521b\u5efa\u3002\u4e00\u4e2aSTL\u5bb9\u5668\u7c7b\u53ef\u80fd\u4e3a\u4e86\u4f7f\u7528\u4e00\u4e2a\u7279\u5b9a\u7c7b\u578b\u7684\u6570\u636e\u800c\u521b\u5efa\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002\u4f5c\u4e3a\u6307\u9488\uff0c\u5fc5\u987b\u80fd\u591f\u4f7f\u7528 * \u64cd\u4f5c\u7b26\u83b7\u53d6\u6570\u636e\u3002\u4f60\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u6570\u5b66\u64cd\u4f5c\u7b26\u5982 ++ \u3002\u5178\u578b\u7684\uff0c++\u64cd\u4f5c\u7b26\u7528\u6765\u9012\u589e\u8fed\u4ee3\u5668\uff0c\u4ee5\u8bbf\u95ee\u5bb9\u5668\u4e2d\u7684\u4e0b\u4e00\u4e2a\u5bf9\u8c61\u3002\u5982\u679c\u8fed\u4ee3\u5668\u5230\u8fbe\u4e86\u5bb9\u5668\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u540e\u9762\uff0c\u5219\u8fed\u4ee3\u5668\u53d8\u6210past-the-end\u503c\u3002\u4f7f\u7528\u4e00\u4e2apast-the-end\u503c\u7684\u6307\u9488\u6765\u8bbf\u95ee\u5bf9\u8c61\u662f\u975e\u6cd5\u7684\uff0c\u5c31\u597d\u50cf\u4f7f\u7528NULL\u6216\u672a\u521d\u59cb\u5316\u7684\u6307\u9488\u4e00\u6837\u3002", 
            "title": "\u8fed\u4ee3\u5668"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_6", 
            "text": "STL\u4e0d\u4fdd\u8bc1\u53ef\u4ee5\u4ece\u53e6\u4e00\u4e2a\u8fed\u4ee3\u5668\u6765\u62b5\u8fbe\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002\u4f8b\u5982\uff0c\u5f53\u5bf9\u4e00\u4e2a\u96c6\u5408\u4e2d\u7684\u5bf9\u8c61\u6392\u5e8f\u65f6\uff0c\u5982\u679c\u4f60\u5728\u4e0d\u540c\u7684\u7ed3\u6784\u4e2d\u6307\u5b9a\u4e86\u4e24\u4e2a\u8fed\u4ee3\u5668\uff0c\u7b2c\u4e8c\u4e2a\u8fed\u4ee3\u5668\u65e0\u6cd5\u4ece\u7b2c\u4e00\u4e2a\u8fed\u4ee3\u5668\u62b5\u8fbe\uff0c\u6b64\u65f6\u7a0b\u5e8f\u6ce8\u5b9a\u8981\u5931\u8d25\u3002\u8fd9\u662fSTL\u7075\u6d3b\u6027\u7684\u4e00\u4e2a\u4ee3\u4ef7\u3002STL\u4e0d\u4fdd\u8bc1\u68c0\u6d4b\u6beb\u65e0\u9053\u7406\u7684\u9519\u8bef\u3002", 
            "title": "\u63d0\u793a"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_7", 
            "text": "\u5bf9\u4e8eSTL\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e94\u79cd\u8fed\u4ee3\u5668\u3002\u4e0b\u9762\u7b80\u8981\u8bf4\u660e\u4e86\u8fd9\u4e94\u79cd\u7c7b\u578b\uff1a   Input iterators \u63d0\u4f9b\u5bf9\u6570\u636e\u7684\u53ea\u8bfb\u8bbf\u95ee\u3002  Output iterators \u63d0\u4f9b\u5bf9\u6570\u636e\u7684\u53ea\u5199\u8bbf\u95ee\u3002  Forward iterators \u63d0\u4f9b\u8bfb\u5199\u64cd\u4f5c\uff0c\u5e76\u80fd\u5411\u524d\u63a8\u8fdb\u8fed\u4ee3\u5668  Bidirectional iterators \u63d0\u4f9b\u8bfb\u5199\u64cd\u4f5c\uff0c\u5e76\u80fd\u5411\u524d\u548c\u5411\u540e\u64cd\u4f5c\u3002  Random access iterators \u63d0\u4f9b\u8bfb\u5199\u64cd\u4f5c\uff0c\u5e76\u80fd\u5728\u6570\u636e\u4e2d\u968f\u673a\u79fb\u52a8\u3002   \u5c3d\u7ba1\u5404\u79cd\u4e0d\u540c\u7684STL\u5b9e\u73b0\u7ec6\u8282\u65b9\u9762\u6709\u6240\u4e0d\u540c\uff0c\u8fd8\u662f\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684\u8fed\u4ee3\u5668\u60f3\u50cf\u4e3a\u4e00\u79cd\u7c7b\u7ee7\u627f\u5173\u7cfb\u3002\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bf4\u6211\uff0c\u4e0b\u9762\u7684\u8fed\u4ee3\u5668\u7ee7\u627f\u81ea\u4e0a\u9762\u7684\u8fed\u4ee3\u5668\u3002\u7531\u4e8e\u8fd9\u79cd\u7ee7\u627f\u5173\u7cfb\uff0c\u4f60\u53ef\u4ee5\u5c06\u4e00\u4e2aForward\u8fed\u4ee3\u5668\u4f5c\u4e3a\u4e00\u4e2aoutput\u6216input\u8fed\u4ee3\u5668\u4f7f\u7528\u3002\u540c\u6837\uff0c\u5982\u679c\u4e00\u4e2a\u7b97\u6cd5\u8981\u6c42\u662f\u4e00\u4e2abidirectional\u8fed\u4ee3\u5668\uff0c\u90a3\u4e48\u53ea\u80fd\u4f7f\u7528\u8be5\u79cd\u7c7b\u578b\u548c\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\u3002", 
            "title": "\u8fed\u4ee3\u5668\u7684\u7c7b\u578b"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_8", 
            "text": "\u6b63\u5982\u4e0b\u9762\u7684\u5c0f\u7a0b\u5e8f\u663e\u793a\u7684\uff0c\u4e00\u4e2a\u6307\u9488\u4e5f\u662f\u4e00\u79cd\u8fed\u4ee3\u5668\u3002\u8be5\u7a0b\u5e8f\u540c\u6837\u663e\u793a\u4e86STL\u7684\u4e00\u4e2a\u4e3b\u8981\u7279\u5f81\u2014\u2014\u5b83\u4e0d\u53ea\u662f\u80fd\u591f\u7528\u4e8e\u5b83\u81ea\u5df1\u7684\u7c7b\u7c7b\u578b\uff0c\u800c\u4e14\u4e5f\u80fd\u7528\u4e8e\u4efb\u4f55C\u6216C++\u7c7b\u578b\u3002iterdemo.cpp\u663e\u793a\u4e86\u5982\u4f55\u628a\u6307\u9488\u4f5c\u4e3a\u8fed\u4ee3\u5668\u7528\u4e8eSTL\u7684find()\u7b97\u6cd5\u6765\u641c\u7d22\u666e\u901a\u7684\u6570\u7ec4\u3002", 
            "title": "\u6307\u9488\u8fed\u4ee3\u5668"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#iterdemocpp", 
            "text": "#include  iostream \n#include  algorithm \n\nusing namespace std;\n\n#define SIZE 100\nint iarray[SIZE];\n\nint main()\n{\n    iarray[20] = 50;\n\n    int *ip = find(iarray, iarray + SIZE, 50);\n\n    if(ip == iarray + SIZE)\n        cout 50 not found in array endl;\n    else\n        cout *ip  found in array endl;\n\n    return 0;\n}  \u5728\u5f15\u7528\u4e86I/O\u6d41\u5e93\u548cSTL\u7b97\u6cd5\u5934\u6587\u4ef6\uff08\u6ce8\u610f\u6ca1\u6709.h\u540e\u7f00\uff09\uff0c\u8be5\u7a0b\u5e8f\u544a\u8bc9\u7f16\u8bd1\u5668\u4f7f\u7528std\u540d\u5b57\u7a7a\u95f4\u3002  \u7a0b\u5e8f\u4e2d\u5b9a\u4e49\u4e86\u5c3a\u5bf8\u4e3aSIZE\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u6240\u4ee5\u8fd0\u884c\u65f6\u6570\u7ec4\u81ea\u52a8\u521d\u59cb\u5316\u4e3a\u96f6\u3002\u4e0b\u9762\u7684\u8bed\u53e5\u5c06\u5728\u7d22\u5f1520\u4f4d\u7f6e\u5904\u7684\u5143\u7d20\u8bbe\u7f6e\u4e3a50\uff0c\u5e76\u4f7f\u7528find()\u7b97\u6cd5\u6765\u641c\u7d22\u503c50:  iarray[20] = 50;\nint *ip = find(iarray, iarray + SIZE, 50);  find()\u51fd\u6570\u63a5\u53d7\u4e09\u4e2a\u53c2\u6570\u3002\u5934\u4e24\u4e2a\u5b9a\u4e49\u4e86\u641c\u7d22\u7684\u8303\u56f4\u3002\u7531\u4e8eC\u548cC++\u6570\u7ec4\u7b49\u540c\u4e8e\u6307\u9488\uff0c\u8868\u8fbe\u5f0fiarray\u6307\u5411\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002\u800c\u7b2c\u4e8c\u4e2a\u53c2\u6570iarray+SIZE\u7b49\u540c\u4e8epast-the-end\u503c\uff0c\u4e5f\u5c31\u662f\u6570\u7ec4\u4e2d\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u540e\u9762\u4f4d\u7f6e\u3002\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u5f85\u5b9a\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f50.  find()\u51fd\u6570\u8fd4\u56de\u548c\u524d\u4e24\u4e2a\u53c2\u6570\u76f8\u540c\u7c7b\u578b\u7684\u8fed\u4ee3\u5668\uff0c\u8fd9\u513f\u662f\u4e00\u4e2a\u6307\u5411\u6574\u6570\u7684\u6307\u9488ip\u3002", 
            "title": "iterdemo.cpp"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_9", 
            "text": "\u5fc5\u987b\u8bb0\u4f4fSTL\u4f7f\u7528\u6a21\u677f\u3002\u56e0\u6b64\uff0cSTL\u51fd\u6570\u81ea\u52a8\u6839\u636e\u5b83\u4eec\u4f7f\u7528\u6570\u636e\u7c7b\u578b\u6765\u6784\u9020\u3002  \u4e3a\u4e86\u5224\u65adfind()\u662f\u5426\u6210\u529f\uff0c\u4f8b\u5b50\u4e2d\u6d4b\u8bd5ip\u548cpast-the-end\u503c\u662f\u5426\u76f8\u7b49:  if(ip == iarray + SIZE) ...  \u5982\u679c\u8868\u8fbe\u5f0f\u4e3a\u771f\uff0c\u5219\u8868\u793a\u5728\u641c\u7d22\u8303\u56f4\u5185\u6ca1\u6709\u6307\u5b9a\u7684\u503c\u3002\u5426\u5219\u5c31\u662f\u6307\u5411\u4e00\u4e2a\u5408\u6cd5\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8fd9\u65f6\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u8bed\u53e5\u663e\u793a\uff1a  cout *ip  found in array endl;  \u6d4b\u8bd5\u51fd\u6570\u8fd4\u56de\u503c\u548cNULL\u662f\u5426\u76f8\u7b49\u662f\u4e0d\u6b63\u786e\u7684\u3002\u4e0d\u8981\u50cf\u4e0b\u9762\u8fd9\u6837\u4f7f\u7528\uff1a  int *ip = find(iarray, iarray + SIZE, 50);\nif(ip != NULL) ...//incorrect  \u5f53\u4f7f\u7528STL\u51fd\u6570\u65f6\uff0c\u53ea\u80fd\u6d4b\u8bd5ip\u662f\u5426\u548cpast-the-end\u503c\u76f8\u7b49\u3002\u5c3d\u7ba1\u5728\u672c\u4f8b\u4e2dip\u662f\u4e00\u4e2aC++\u6307\u9488\uff0c\u5176\u7528\u6cd5\u4e5f\u5fc5\u987b\u7b26\u5408STL\u8fed\u4ee3\u5668\u7684\u539f\u5219\u3002", 
            "title": "\u63d0\u793a"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_10", 
            "text": "\u5c3d\u7ba1C++\u6307\u9488\u4e5f\u662f\u8fed\u4ee3\u5668\uff0c\u4f46\u7528\u7684\u66f4\u591a\u7684\u662f\u5bb9\u5668\u8fed\u4ee3\u5668\u3002\u5bb9\u5668\u8fed\u4ee3\u5668\u7528\u6cd5\u548citerdemo.cpp\u4e00\u6837\uff0c\u4f46\u548c\u5c06\u8fed\u4ee3\u5668\u58f0\u660e\u4e3a\u6307\u9488\u53d8\u91cf\u4e0d\u540c\u7684\u662f\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u5bb9\u5668\u7c7b\u65b9\u6cd5\u6765\u83b7\u53d6\u8fed\u4ee3\u5668\u5bf9\u8c61\u3002  \u4e24\u4e2a\u5178\u578b\u7684\u5bb9\u5668\u7c7b\u65b9\u6cd5\u662fbegin()\u548cend()\u3002\u5b83\u4eec\u5728\u5927\u591a\u6570\u5bb9\u5668\u4e2d\u8868\u793a\u6574\u4e2a\u5bb9\u5668\u8303\u56f4\u3002\u5176\u4ed6\u4e00\u4e9b\u5bb9\u5668\u8fd8\u4f7f\u7528rbegin()\u548crend()\u65b9\u6cd5\u63d0\u4f9b\u53cd\u5411\u8fed\u4ee3\u5668\uff0c\u4ee5\u6309\u53cd\u5411\u987a\u5e8f\u6307\u5b9a\u5bf9\u8c61\u8303\u56f4\u3002  \u4e0b\u9762\u7684\u7a0b\u5e8f\u521b\u5efa\u4e86\u4e00\u4e2a\u77e2\u91cf\u5bb9\u5668\uff08STL\u4e2d\u548c\u6570\u7ec4\u7b49\u4ef7\u7684\u5bf9\u8c61\uff09\uff0c\u4f7f\u7528\u8fed\u4ee3\u5668\u5728\u5176\u4e2d\u641c\u7d22\u3002\u8be5\u7a0b\u5e8f\u548c\u524d\u4e00\u7ae0\u4e2d\u7684\u7a0b\u5e8f\u76f8\u540c\u3002", 
            "title": "\u5bb9\u5668\u8fed\u4ee3\u5668"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#vectdemocpp", 
            "text": "#include  iostream \n#include  algorithm \n#include  vector \n\nusing namespace std;\n\nvector int  intVector(100);\n\nvoid main()\n{\n    intVector[20] = 50;\n    vector int ::iterator intIter = find(intVector.begin(), intVector.end(), 50);\n\n    if(intIter != intVector.end())\n        cout Vector contains value  *intIter endl;\n    else\n        cout Vector does not contain 50 endl;\n}  \u6ce8\u610f\u7528\u4e0b\u9762\u7684\u65b9\u6cd5\u663e\u793a\u641c\u7d22\u5230\u7684\u6570\u636e\uff1a  cout Vector contains value  *intIter endl;", 
            "title": "vectdemo.cpp"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_11", 
            "text": "\u548c\u6307\u9488\u4e00\u6837\uff0c\u4f60\u53ef\u4ee5\u7ed9\u4e00\u4e2a\u8fed\u4ee3\u5668\u8d4b\u503c\u3002\u4f8b\u5982\uff0c\u9996\u5148\u58f0\u660e\u4e00\u4e2a\u8fed\u4ee3\u5668\uff1a  vector int ::iterator first;  \u8be5\u8bed\u53e5\u521b\u5efa\u4e86\u4e00\u4e2a vector int \u7c7b\u7684\u8fed\u4ee3\u5668\u3002\u4e0b\u9762\u7684\u8bed\u53e5\u5c06\u8be5\u8fed\u4ee3\u5668\u8bbe\u7f6e\u5230intVector\u7684\u7b2c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5e76\u5c06\u5b83\u6307\u5411\u7684\u5bf9\u8c61\u503c\u8bbe\u7f6e\u4e3a123:  first = intVector.begin();\n*first = 123;  \u8fd9\u79cd\u8d4b\u503c\u5bf9\u4e8e\u5927\u591a\u6570\u5bb9\u5668\u7c7b\u90fd\u662f\u5141\u8bb8\u7684\uff0c\u9664\u4e86\u53ea\u8bfb\u53d8\u91cf\u3002\u4e3a\u4e86\u9632\u6b62\u9519\u8bef\u8d4b\u503c\uff0c\u53ef\u4ee5\u58f0\u660e\u8fed\u4ee3\u5668\u4e3a\uff1a  const vector int :: const_iterator result;\nresult = find(intVector.begin(), intVector.end(), value);\nif(result != intVector.end())\n    *result = 123; //\u53d1\u751f\u9519\u8bef\uff0c\u4e0d\u80fd\u7ed9\u5e38\u91cf\u8d4b\u503c", 
            "title": "\u5e38\u91cf\u8fed\u4ee3\u5668"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_12", 
            "text": "\u53e6\u4e00\u79cd\u9632\u6b62\u6570\u636e\u88ab\u6539\u53d8\u7684\u65b9\u6cd5\u662f\u5c06\u5bb9\u5668\u58f0\u660e\u4e3aconst\u7c7b\u578b.", 
            "title": "\u8b66\u544a"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_13", 
            "text": "\u4f60\u5df2\u7ecf\u89c1\u5230\u4e86\u8fed\u4ee3\u5668\u7684\u4e00\u4e9b\u4f8b\u5b50\uff0c\u73b0\u5728\u6211\u4eec\u5c06\u5173\u6ce8\u6bcf\u79cd\u7279\u5b9a\u7684\u8fed\u4ee3\u5668\u5982\u4f55\u4f7f\u7528\u3002\u7531\u4e8e\u4f7f\u7528\u8fed\u4ee3\u5668\u9700\u8981\u5173\u4e8eSTL\u5bb9\u5668\u7c7b\u548c\u7b97\u6cd5\u7684\u77e5\u8bc6\uff0c\u5728\u9605\u8bfb\u4e86\u540e\u9762\u7684\u4e24\u7ae0\u540e\u4f60\u53ef\u80fd\u9700\u8981\u91cd\u65b0\u590d\u4e60\u4e00\u4e0b\u672c\u7ae0\u5185\u5bb9\u3002", 
            "title": "\u4f7f\u7528\u8fed\u4ee3\u5668\u7f16\u7a0b"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_14", 
            "text": "\u8f93\u5165\u8fed\u4ee3\u5668\u662f\u6700\u666e\u901a\u7684\u7c7b\u578b\u3002\u8f93\u5165\u8fed\u4ee3\u5668\u81f3\u5c11\u80fd\u591f\u4f7f\u7528==\u548c!=\u6d4b\u8bd5\u662f\u5426\u76f8\u7b49;\u4f7f\u7528*\u6765\u8bbf\u95ee\u6570\u636e\uff1b\u4f7f\u7528++\u64cd\u4f5c\u6765\u9012\u63a8\u8fed\u4ee3\u5668\u5230\u4e0b\u4e00\u4e2a\u5143\u7d20\u6216\u5230\u8fbepast-the-end\u503c\u3002  \u4e3a\u4e86\u7406\u89e3\u8fed\u4ee3\u5668\u4ee5\u53caSTL\u51fd\u6570\u662f\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\u7684\uff0c\u73b0\u5728\u6765\u770b\u4e00\u4e0bfind()\u6a21\u677f\u51fd\u6570\u7684\u5b9a\u4e49:  template  class InputIterator, class T \nInputIterator find(InputIterator first, InputIterator last, const T  value)\n{\n    while(first != last   *first != value)\n        ++first;\n    return first;\n}", 
            "title": "\u8f93\u5165\u8fed\u4ee3\u5668"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_15", 
            "text": "\u5728find()\u7b97\u6cd5\u4e2d\uff0c\u6ce8\u610f\u5982\u679cfirst\u548clast\u6307\u5411\u4e0d\u540c\u7684\u5bb9\u5668\uff0c\u8be5\u7b97\u6cd5\u53ef\u80fd\u9677\u5165\u6b7b\u5faa\u73af\u3002", 
            "title": "\u6ce8\u610f"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_16", 
            "text": "\u8f93\u51fa\u8fed\u4ee3\u5668\u7f3a\u7701\u53ea\u5199\uff0c\u901a\u5e38\u7528\u4e8e\u5c06\u6570\u636e\u4ece\u4e00\u4e2a\u4f4d\u7f6e\u62f7\u8d1d\u5230\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u3002\u7531\u4e8e\u8f93\u51fa\u8fed\u4ee3\u5668\u65e0\u6cd5\u8bfb\u53d6\u5bf9\u8c61\uff0c\u56e0\u4e9b\u4f60\u4e0d\u4f1a\u5728\u4efb\u4f55\u641c\u7d22\u548c\u5176\u4ed6\u7b97\u6cd5\u4e2d\u4f7f\u7528\u5b83\u3002\u8981\u60f3\u8bfb\u53d6\u4e00\u4e2a\u62f7\u8d1d\u7684\u503c\uff0c\u5fc5\u987b\u4f7f\u7528\u53e6\u4e00\u4e2a\u8f93\u5165\u8fed\u4ee3\u5668\uff08\u6216\u5b83\u7684\u7ee7\u627f\u8fed\u4ee3\u5668\uff09\u3002", 
            "title": "\u8f93\u51fa\u8fed\u4ee3\u5668"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#outitercpp", 
            "text": "#include  iostream \n#include  algorithm  //need copy()\n#include  vector  //need vector\n\nusing namespace std;\n\ndouble darray[10] = { 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9 };\n\nvector double  vdouble(10);\n\nint main()\n{\n    vector double :: iterator outputIterator = vdouble.begin();\n    copy(darray, darray + 10, outputIterator);\n    while(outputIterator != vdouble.end())\n    {\n        cout *outputIterator endl;\n        outputIterator++;\n    }\n    return 0;\n}", 
            "title": "outIter.cpp"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_17", 
            "text": "\u5f53\u4f7f\u7528copy()\u7b97\u6cd5\u7684\u65f6\u5019\uff0c\u4f60\u5fc5\u987b\u786e\u4fdd\u76ee\u6807\u5bb9\u5668\u6709\u8db3\u591f\u5927\u7684\u7a7a\u95f4\uff0c\u6216\u8005\u5bb9\u5668\u672c\u8eab\u662f\u81ea\u52a8\u6269\u5c55\u7684\u3002", 
            "title": "\u6ce8\u610f"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_18", 
            "text": "\u524d\u63a8\u8fed\u4ee3\u5668\u80fd\u591f\u8bfb\u5199\u6570\u636e\u503c\uff0c\u5e76\u80fd\u591f\u5411\u524d\u63a8\u8fdb\u5230\u4e0b\u4e00\u4e2a\u503c\u3002\u4f46\u662f\u6ca1\u6cd5\u9012\u51cf\u3002replace()\u7b97\u6cd5\u663e\u793a\u4e86\u524d\u63a8\u8fed\u4ee3\u5668\u7684\u4f7f\u7528\u65b9\u6cd5\u3002  template  class ForwardIterator, class T \nvoid replace(ForwardIterator first, ForwardIterator last, const T  old_value, const T  new_value);", 
            "title": "\u524d\u63a8\u8fed\u4ee3\u5668"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_19", 
            "text": "replace()\u5c06[first, last]\u8303\u56f4\u5185\u7684\u6240\u6709\u503c\u4e3aold_value\u7684\u5bf9\u8c61\u66ff\u6362\u4e3anew_value\uff1a  replace(vdouble.begin(),vdouble.end(),1.5,3.1415926);", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_20", 
            "text": "\u53cc\u5411\u8fed\u4ee3\u5668\u8981\u6c42\u80fd\u591f\u589e\u51cf\u3002\u5982reverse()\u7b97\u6cd5\u8981\u6c42\u4e24\u4e2a\u53cc\u5411\u8fed\u4ee3\u5668\u4f5c\u4e3a\u53c2\u6570\uff1a  template  class BidirectionalIterator \nvoid reverse(BidirectionalIterator first, BidirectionalIterator last);", 
            "title": "\u53cc\u5411\u8fed\u4ee3\u5668"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_21", 
            "text": "reverse()\u51fd\u6570\u6765\u5bf9\u5bb9\u5668\u8fdb\u884c\u9006\u5411\u6392\u5e8f\uff1a  reverse(vdoule.begin(), vdouble.end());", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_22", 
            "text": "\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\u80fd\u591f\u4ee5\u4efb\u610f\u987a\u5e8f\u8bbf\u95ee\u6570\u636e\uff0c\u5e76\u80fd\u7528\u4e8e\u8bfb\u5199\u6570\u636e\uff08\u4e0d\u662fconst\u7684C++\u6307\u9488\u4e5f\u662f\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\uff09\u3002STL\u7684\u6392\u5e8f\u548c\u641c\u7d22\u51fd\u6570\u4f7f\u7528\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\u3002\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\u53ef\u4ee5\u4f7f\u7528\u5173\u7cfb\u64cd\u4f5c\u7b26\u4f5c\u6bd4\u8f83\u3002  random_shuffle()  \u51fd\u6570\u968f\u673a\u6253\u4e71\u539f\u5148\u7684\u987a\u5e8f\u58f0\u660e\u4e3a\uff1a  template  class RandomAccessIterator \nvoid random_shuffle(RandomAccessIterator first, RandomAccessIterator last);", 
            "title": "\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_23", 
            "text": "random_shuffle(vdouble.begin(), vdouble.end());", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_24", 
            "text": "\u8981\u5b66\u4f1a\u4f7f\u7528\u8fed\u4ee3\u5668\u548c\u5bb9\u5668\u4ee5\u53ca\u7b97\u6cd5\uff0c\u9700\u8981\u5b66\u4e60\u4e0b\u9762\u7684\u65b0\u6280\u672f\u3002", 
            "title": "\u8fed\u4ee3\u5668\u6280\u672f"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_25", 
            "text": "\u672c\u4e66\u7684\u5f88\u591a\u4f8b\u5b50\u7a0b\u5e8f\u4f7f\u7528I/O\u6d41\u8bed\u53e5\u6765\u8bfb\u5199\u6570\u636e\u3002\u4f8b\u5982\uff1a  int value;\ncout Enter value: ;\ncin value;\ncout You entered  value endl;  \u5bf9\u4e8e\u8fed\u4ee3\u5668\uff0c\u6709\u53e6\u4e00\u79cd\u65b9\u6cd5\u4f7f\u7528\u6d41\u548c\u6807\u51c6\u51fd\u6570\u3002\u7406\u89e3\u7684\u8981\u70b9\u662f\u5c06\u8f93\u5165/\u8f93\u51fa\u6d41\u4f5c\u4e3a\n\u5bb9\u5668\u770b\u5f85\u3002\u56e0\u6b64\uff0c\u4efb\u4f55\u63a5\u53d7\u8fed\u4ee3\u5668\u53c2\u6570\u7684\u7b97\u6cd5\u90fd\u53ef\u4ee5\u548c\u6d41\u4e00\u8d77\u5de5\u4f5c\u3002", 
            "title": "\u6d41\u548c\u8fed\u4ee3\u5668"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#outstrmcpp", 
            "text": "#include  iostream \n#include  stdlib.h  // need rand(), srand()\n#include  time.h  //need time()\n#include  algorithm  //need sort(),copy()\n#include  vector  //need vector\n#include  iterator \n\nusing namespace std;\n\nvoid Display(vector int  v, const char *s);\n\nint main()\n{\n    srand(time(NULL));\n    vector int  collection(10);\n    for(int i = 0; i   10; i++)\n        collection[i]=rand()%10000;\n    Display(collection,  Before sorting );\n    sort(collection.begin(), collection.end());\n    Display(collection,  After sorting );\n    return 0;\n}\n\nvoid Display(vector int  v, const char *s)\n{\n    cout endl s endl;\n    copy(v.begin(), v.end(), ostream_iterator int (cout,  \\t ));\n    cout endl;\n}  \u51fd\u6570Display()\u663e\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u4e00\u4e2a\u8f93\u51fa\u6d41\u8fed\u4ee3\u5668\u3002\u4e0b\u9762\u7684\u8bed\u53e5\u5c06\u5bb9\u5668\u4e2d\u7684\u503c\u4f20\u8f93\u5230cout\u8f93\u51fa\u6d41\u5bf9\u8c61\u4e2d\uff1a  copy(v.begin(), v.end(), ostream_iterator int (cout,  \\t ));  \u7b2c\u4e09\u4e2a\u53c2\u6570\u5b9e\u4f8b\u5316\u4e86 ostream_iterator int \u7c7b\u578b\uff0c\u5e76\u5c06\u5b83\u4f5c\u4e3acopy()\u51fd\u6570\u7684\u8f93\u51fa\u76ee\u6807\u8fed\u4ee3\u5668\u5bf9\u8c61\u3002\"\\t\"\u5b57\u7b26\u4e32\u662f\u4f5c\u4e3a\u5206\u9694\u7b26\u3002\u8fd0\u884c\u7ed3\u679c\uff1a  $ g++ outstrm.cpp\n$ ./a.out\n\nBefore sorting\n7136    8210    8265    5185    519     2906    2032    2273    101     4642\n\nAfter sorting\n101     519     2032    2273    2906    4642    5185    7136    8210    8265  \u8fd9\u662fSTL\u795e\u5947\u7684\u4e00\u9762\u3002\u4e3a\u5b9a\u4e49\u8f93\u51fa\u6d41\u8fed\u4ee3\u5668\uff0cSTL\u63d0\u4f9b\u4e86\u6a21\u677f\u7c7bostream_iterator\u3002\u8fd9\u4e2a\u7c7b\u7684\u6784\u9020\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570\uff1a\u4e00\u4e2aostream\u5bf9\u8c61\u548c\u4e00\u4e2astring\u503c\u3002\u56e0\u6b64\u53ef\u4ee5\u8c61\u4e0b\u9762\u4e00\u6837\u7b80\u5355\u5730\u521b\u5efa\u4e00\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61\uff1a  ostream_iterator int (cout,  \\n )  \u8be5\u8fed\u4ee3\u5668\u53ef\u4ee5\u548c\u4efb\u4f55\u63a5\u53d7\u4e00\u4e2a\u8f93\u51fa\u8fed\u4ee3\u5668\u7684\u51fd\u6570\u4e00\u8d77\u4f7f\u7528\u3002", 
            "title": "outStrm.cpp"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_26", 
            "text": "\u63d2\u5165\u8fed\u4ee3\u5668\u7528\u4e8e\u5c06\u503c\u63d2\u5165\u5230\u5bb9\u5668\u4e2d\u3002\u5b83\u4eec\u4e5f\u53eb\u9002\u914d\u5668\uff0c\u56e0\u4e3a\u5b83\u4eec\u5c06\u5bb9\u5668\u9002\u914d\u6216\u8f6c\u5316\u4e3a\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u5e76\u7528\u4e8ecopy()\u8fd9\u6837\u7684\u7b97\u6cd5\u4e2d\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u7a0b\u5e8f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u94fe\u8868\u548c\u4e00\u4e2a\u77e2\u91cf\u5bb9\u5668\uff1a  list double  dList;\nvector double  dVector;  \u901a\u8fc7\u4f7f\u7528front_inserter\u8fed\u4ee3\u5668\u5bf9\u8c61\uff0c\u53ef\u4ee5\u53ea\u7528\u5355\u4e2acopy()\u8bed\u53e5\u5c31\u5b8c\u6210\u5c06\u77e2\u91cf\u4e2d\u7684\u5bf9\u8c61\u63d2\u5165\u5230\u94fe\u8868\u524d\u7aef\u7684\u64cd\u4f5c\uff1a  copy(dVector.begin(), dVector.end(), front_inserter(dList));  \u4e09\u79cd\u63d2\u5165\u8fed\u4ee3\u5668\u5982\u4e0b\uff1a   \u666e\u901a\u63d2\u5165\u8fed\u4ee3\u5668\u5c06\u5bf9\u8c61\u63d2\u5165\u5230\u5bb9\u5668\u6307\u5b9a\u5bf9\u8c61\u7684\u524d\u9762  Front inserters\u5c06\u5bf9\u8c61\u63d2\u5165\u5230\u6570\u636e\u96c6\u7684\u524d\u9762\u2014\u2014\u4f8b\u5982\uff0c\u94fe\u8868\u8868\u5934\u3002  Back inserters\u5c06\u5bf9\u8c61\u63d2\u5165\u5230\u96c6\u5408\u7684\u5c3e\u90e8\u2014\u2014\u4f8b\u5982\uff0c\u77e2\u91cf\u7684\u5c3e\u90e8\uff0c\u5bfc\u81f4\u77e2\u91cf\u5bb9\u5668\u6269\u5c55\u3002   \u4f7f\u7528\u63d2\u5165\u8fed\u4ee3\u5668\u53ef\u80fd\u5bfc\u81f4\u5bb9\u5668\u4e2d\u7684\u5176\u4ed6\u5bf9\u8c61\u79fb\u52a8\u4f4d\u7f6e\uff0c\u56e0\u800c\u4f7f\u5f97\u73b0\u5b58\u7684\u8fed\u4ee3\u5668\u975e\u6cd5\u3002\u4f8b\u5982\uff0c\u5c06\u4e00\u4e2a\u5bf9\u8c61\u63d2\u5165\u5230\u77e2\u91cf\u5bb9\u5668\u5c06\u5bfc\u81f4\u5176\u4ed6\u503c\u79fb\u52a8\u4f4d\u7f6e\u4ee5\u817e\u51fa\u7a7a\u95f4\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u63d2\u5165\u5230\u50cf\u94fe\u8868\u8fd9\u6837\u7684\u7ed3\u6784\u4e2d\u66f4\u4e3a\u6709\u6548\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u4f1a\u5bfc\u81f4\u5176\u4ed6\u5bf9\u8c61\u79fb\u52a8\u3002", 
            "title": "\u63d2\u5165\u8fed\u4ee3\u5668"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#insertcpp", 
            "text": "#include  iostream \n#include  algorithm \n#include  list \n#include  iterator \n\nusing namespace std;\n\nint iArray[5] = {1,2,3,4,5};\nvoid Display(list int  v, const char *s);\n\nint main()\n{\n    list int  iList;\n    copy(iArray, iArray+5, front_inserter(iList));\n    Display(iList,  Before find and copy );\n    list int ::iterator p = find(iList.begin(), iList.end(), 3);\n    copy(iArray, iArray + 2, inserter(iList,p));\n    Display(iList,  After find and copy );\n    return 0;\n}\nvoid Display(list int  v, const char *s)\n{\n    cout s endl;\n    copy(v.begin(), v.end(), ostream_iterator int (cout,  ));\n    cout endl;\n}  \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a  $ g++ insert.cpp\n$ ./a.out\nBefore find and copy\n5 4 3 2 1\nAfter find and copy\n5 4 1 2 3 2 1  \u53ef\u4ee5\u5c06front_inserter\u66ff\u6362\u4e3aback_inserter\u8bd5\u8bd5\u3002  \u5982\u679c\u7528find()\u53bb\u67e5\u627e\u5728\u5217\u8868\u4e2d\u4e0d\u5b58\u5728\u7684\u503c\uff0c\u4f8b\u598299\u3002\u7531\u4e8e\u8fd9\u65f6p\u5c06\u88ab\u8bbe\u7f6e\u4e3apast-the-end\u503c\uff0c\u6700\u540e\u7684copy()\u51fd\u6570\u5c06iArray\u7684\u503c\u9644\u52a0\u5230\u94fe\u8868\u7684\u540e\u90e8\u3002", 
            "title": "insert.cpp"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_27", 
            "text": "\u5728\u6d89\u53ca\u5230\u5bb9\u5668\u548c\u7b97\u6cd5\u7684\u64cd\u4f5c\u4e2d\uff0c\u8fd8\u6709\u4e24\u4e2a\u8fed\u4ee3\u5668\u51fd\u6570\u975e\u5e38\u6709\u7528\uff1a   advance() \u6309\u6307\u5b9a\u7684\u6570\u76ee\u589e\u51cf\u8fed\u4ee3\u5668  distance() \u8fd4\u56de\u5230\u8fbe\u4e00\u4e2a\u8fed\u4ee3\u5668\u6240\u9700\uff08\u9012\u589e\uff09\u64cd\u4f5c\u7684\u6570\u76ee\u3002   \u4f8b\u5982\uff1a  list int  iList;\nlist int ::iterator p = find(iList.begin(), iList.end(),2);\ncout before: p ==  *p  endl;\nadvance(p,2);\ncout after: p ==  *p endl;\nint k = 0;\ndistance(p, iList.end(),k);\ncout k ==  k  endl;  advance()\u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5411\u524d\u63a8\u8fdb\u7684\u6570\u76ee\u3002\u5bf9\u4e8e\u524d\u63a8\u8fed\u4ee3\u5668\uff0c\u8be5\u503c\u5fc5\u987b\u4e3a\u6b63\uff0c\u800c\u5bf9\u4e8e\u53cc\u5411\u8fed\u4ee3\u5668\u548c\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\uff0c\u8be5\u503c\u53ef\u4ee5\u4e3a\u8d1f\u3002  \u4f7f\u7528distance()\u51fd\u6570\u8fd4\u56de\u5230\u8fbe\u53e6\u4e00\u4e2a\u8fed\u4ee3\u5668\u6240\u9700\u8981\u7684\u6b65\u6570\u3002", 
            "title": "\u6df7\u5408\u8fed\u4ee3\u5668\u51fd\u6570"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_28", 
            "text": "distance()\u51fd\u6570\u662f\u8fed\u4ee3\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u9012\u589e\u7b2c\u4e09\u4e2a\u53c2\u6570\u3002\u56e0\u6b64\uff0c\u4f60\u5fc5\u987b\u521d\u59cb\u5316\u53c2\u6570\u3002\u672a\u521d\u59cb\u5316\u8be5\u53c2\u6570\u51e0\u4e4e\u6ce8\u5b9a\u8981\u5931\u8d25\u3002", 
            "title": "\u6ce8\u610f"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_29", 
            "text": "STL\u4e2d\uff0c\u51fd\u6570\u88ab\u79f0\u4e3a\u7b97\u6cd5\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u4eec\u548c\u6807\u51c6C\u5e93\u51fd\u6570\u76f8\u6bd4\uff0c\u5b83\u4eec\u66f4\u4e3a\u901a\u7528\u3002STL\u7b97\u6cd5\u901a\u8fc7\u91cd\u8f7doperator()\u51fd\u6570\u5b9e\u73b0\u4e3a\u6a21\u677f\u7c7b\u6216\u6a21\u677f\u51fd\u6570\u3002\u8fd9\u4e9b\u7c7b\u7528\u4e8e\u521b\u5efa\u51fd\u6570\u5bf9\u8c61\uff0c\u5bf9\u5bb9\u5668\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u5404\u79cd\u5404\u6837\u7684\u64cd\u4f5c\u3002\u4e0b\u9762\u7684\u51e0\u8282\u89e3\u91ca\u5982\u4f55\u4f7f\u7528\u51fd\u6570\u548c\u51fd\u6570\u5bf9\u8c61\u3002", 
            "title": "\u51fd\u6570\u548c\u51fd\u6570\u5bf9\u8c61"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_30", 
            "text": "\u7ecf\u5e38\u9700\u8981\u5bf9\u5bb9\u5668\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u64cd\u4f5c\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u80fd\u5e0c\u671b\u904d\u5386\u4e00\u4e2a\u5bb9\u5668\u4e2d\u6240\u6709\u5bf9\u8c61\u7684STL\u7b97\u6cd5\u80fd\u591f\u56de\u8c03\u81ea\u5df1\u7684\u51fd\u6570\u3002\u4f8b\u5982\uff1a  #include  iostream \n#include  stdlib.h \n#include  time.h \n#include  vector \n#include  algorithm \n\nusing namespace std;\n\n#define VSIZE  24\nvector long  v(VSIZE);\n\nvoid initialize(long  ri);\nvoid show(const long  ri);\nbool isMinus(const long  ri);\n\nint main()\n{\n    srand(time(NULL));\n    for_each(v.begin(), v.end(), initialize);\n    cout Vector of signed long integers endl;\n    for_each(v. begin(), v.end(), show);\n    cout endl;\n\n    int count = 0;\n    vector long ::iterator p;\n    p = find_if(v.begin(), v.end(), isMinus);\n    while(p != v.end())\n    {\n        count++;\n        p = find_if(p+1, v.end(), isMinus);\n    }\n    cout Number of values: VSIZE endl;\n    cout Negative values: count endl;\n    return 0;\n}\nvoid initialize(long  ri)\n{\n    ri = (rand() - (RAND_MAX/2));\n}\nvoid show(const long  ri)\n{\n    cout ri ;\n}\nbool isMinus(const long  ri)\n{\n    return (ri 0);\n}   \u6240\u8c13\u65ad\u8a00\u51fd\u6570\uff0c\u5c31\u662f\u8fd4\u56debool\u503c\u7684\u51fd\u6570\u3002", 
            "title": "\u51fd\u6570\u548c\u65ad\u8a00"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_31", 
            "text": "\u9664\u4e86\u7ed9STL\u7b97\u6cd5\u4f20\u9012\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u4f60\u8fd8\u53ef\u80fd\u9700\u8981\u4f20\u9012\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u4ee5\u4fbf\u6267\u884c\u66f4\u590d\u6742\u7684\u64cd\u4f5c\u3002\u8fd9\u6837\u4e00\u4e2a\u5bf9\u8c61\u5c31\u53eb\u505a\u51fd\u6570\u5bf9\u8c61\u3002\u5b9e\u9645\u4e0a\u51fd\u6570\u5bf9\u8c61\u5c31\u662f\u4e00\u4e2a\u7c7b\uff0c\u4f46\u5b83\u548c\u56de\u8c03\u51fd\u6570\u4e00\u6837\u53ef\u4ee5\u88ab\u56de\u8c03\u3002\u4f8b\u5982\uff0c\u5728\u51fd\u6570\u5bf9\u8c61\u6bcf\u6b21\u88abfor_each()\u6216find_if()\u51fd\u6570\u8c03\u7528\u65f6\u53ef\u4ee5\u4fdd\u7559\u7edf\u8ba1\u4fe1\u606f\u3002\u51fd\u6570\u5bf9\u8c61\u662f\u901a\u8fc7\u91cd\u8f7doperator()()\u5b9e\u73b0\u7684\u3002\u5982\u679cTanyClass\u5b9a\u4e49\u4e86operator()()\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u8fd9\u4e48\u4f7f\u7528\uff1a  TanyClass object;\nobject();\nfor_each(v.begin(), v.end(), object);  STL\u5b9a\u4e49\u4e86\u51e0\u4e2a\u51fd\u6570\u5bf9\u8c61\u3002\u7531\u4e8e\u5b83\u4eec\u662f\u6a21\u677f\uff0c\u6240\u4ee5\u80fd\u591f\u7528\u4e8e\u4efb\u4f55\u7c7b\u578b\uff0c\u5305\u62ecC/C++\u56fa\u6709\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982long\u3002\u6709\u4e9b\u51fd\u6570\u5bf9\u8c61\u4ece\u540d\u5b57\u4e2d\u5c31\u53ef\u4ee5\u770b\u51fa\u5b83\u7684\u7528\u9014\uff0c\u5982plus()\u548cmultiplies()\u3002\u7c7b\u4f3c\u7684greater()\u548cless-equal()\u7528\u4e8e\u6bd4\u8f83\u4e24\u4e2a\u503c\u3002", 
            "title": "\u51fd\u6570\u5bf9\u8c61"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_32", 
            "text": "\u6709\u4e9b\u7248\u672c\u7684ANSI C++ \u5b9a\u4e49\u4e86times()\u51fd\u6570\u5bf9\u8c61\uff0c\u800cGNU C++\u628a\u5b83\u547d\u540d\u4e3amultiplies()\u3002\u4f7f\u7528\u65f6\u5fc5\u987b\u5305\u542b\u5934\u6587\u4ef6 functional \u3002  \u4e00\u4e2a\u6709\u7528\u7684\u51fd\u6570\u5bf9\u8c61\u7684\u5e94\u7528\u662faccumulate()\u7b97\u6cd5\u3002\u8be5\u51fd\u6570\u8ba1\u7b97\u5bb9\u5668\u4e2d\u6240\u6709\u503c\u7684\u603b\u548c\u3002\u8bb0\u4f4f\u8fd9\u6837\u7684\u503c\u4e0d\u4e00\u5b9a\u662f\u7b80\u5355\u7684\u7c7b\u578b\uff0c\u901a\u8fc7\u91cd\u8f7doperator+()\uff0c\u4e5f\u53ef\u4ee5\u662f\u7c7b\u5bf9\u8c61\u3002", 
            "title": "\u6ce8\u610f"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#accumcpp", 
            "text": "#include  iostream \n#include  numeric  //need accumulate()\n#include  vector  //need vector\n#include  functional  //need multiplies() or times()\n\nusing namespace std;\n\n#define MAX 10\nvector long  v(MAX);\n\nint main()\n{\n   for(int i = 0; i   MAX; i++)\n       v[i] = i + 1;\n   long sum = accumulate(v.begin(), v.end(), 0);\n   cout Sum of values == sum endl;\n\n   long product = accumulate(v.begin(), v.end(), 1, multiplies long ());\n   cout Product of values == product endl;\n   return 0;\n}  \u7f16\u8bd1\u8f93\u51fa\u5982\u4e0b\uff1a  $ g++ accum.cpp\n$ ./a.out\nSum of values == 55\nProduct of values == 3628800  \u6ce8\u610f\u4f7f\u7528\u4e86\u51fd\u6570\u5bf9\u8c61\u7684accumulate()\u7b97\u6cd5\u7684\u7528\u6cd5\u3002accumulate()\u5728\u5185\u90e8\u5c06\u6bcf\u4e2a\u5bb9\u5668\u4e2d\u7684\u5bf9\u8c61\u548c\u7b2c\u4e09\u4e2a\u53c2\u6570\u4f5c\u4e3amultiplies\u51fd\u6570\u5bf9\u8c61\u7684\u53c2\u6570\uff0cmultiplies(1,v)\u8ba1\u7b97\u4e58\u79ef\u3002VC\u4e2d\u7684\u8fd9\u4e9b\u6a21\u677f\u7684\u6e90\u4ee3\u7801\u5982\u4e0b\uff1a  template  class _II, class _Ty \ninline _Ty accumulate(_II _F, _II _L, _Ty _V)\n{\n    for(; _F != _L; ++_F)\n        _V = _V + *_F;\n    return (_V);\n}\n\n\ntemplate  class _II, class _Ty, class _Bop \ninline _Ty accumulate(_II _F, _II _L, _Ty _V, _Bop _B)\n{\n    for(; _F != _L; ++_F)\n        _V = _B(_V, *_F);\n    return (_V);\n}\n\ntemplate  class _A1, class _A2, class _R \nstruct binary_function{\n    typedef _A1 first_argument_type;\n    typedef _A2 second_argument_type;\n    typedef _R result_type;\n};\n\ntemplate  class _Ty \nstruct multiplies:\nbinary_function _Ty, _Ty, _Ty \n{\n    _Ty operator()(const _Ty  _X, const _Ty  _Y) const\n    {\n        return (_X * _Y);\n    }\n};  \u5f15\u8a00\uff1a\u5982\u679c\u4f60\u60f3\u6df1\u5165\u4e86\u89e3STL\u5230\u5e95\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff0c\u6700\u597d\u7684\u529e\u6cd5\u662f\u5199\u4e2a\u7b80\u5355\u7684\u7a0b\u5e8f\uff0c\u5c06\u7a0b\u5e8f\u4e2d\u6d89\u53ca\u5230\u7684\u6a21\u677f\u6e90\u7801\u7ed9copy\u4e0b\u6765\uff0c\u7a0d\u4f5c\u6574\u7406\uff0c\u5c31\u80fd\u770b\u61c2\u4e86\u3002\u6240\u4ee5\u6ca1\u6709\u5fc5\u8981\u53bb\u4e70\u4ec0\u4e48\u300aSTL\u6e90\u7801\u5256\u6790\u300b\u4e4b\u7c7b\u7684\u4e66\u7c4d\uff0c\u90a3\u4e9b\u4e66\u53ef\u80fd\u53cd\u800c\u6d6a\u8d39\u65f6\u95f4\u3002", 
            "title": "accum.cpp"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_33", 
            "text": "\u6709\u4e00\u7c7b\u6709\u7528\u7684\u51fd\u6570\u5bf9\u8c61\u662f\u201c\u53d1\u751f\u5668\u201d(generator)\u3002\u8fd9\u7c7b\u51fd\u6570\u6709\u81ea\u5df1\u7684\u5185\u5b58\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u80fd\u591f\u4ece\u5148\u524d\u7684\u8c03\u7528\u4e2d\u8bb0\u4f4f\u4e00\u4e2a\u503c\u3002\u4f8b\u5982\u968f\u673a\u6570\u53d1\u751f\u5668\u51fd\u6570\u3002  \u666e\u901a\u7684C\u7a0b\u5e8f\u5458\u4f7f\u7528\u9759\u6001\u6216\u5168\u5c40\u53d8\u91cf\u201c\u8bb0\u5fc6\u201d\u4e0a\u6b21\u8c03\u7528\u7684\u7ed3\u679c\u3002\u4f46\u8fd9\u6837\u505a\u7684\u7f3a\u70b9\u662f\u8be5\u51fd\u6570\u65e0\u6cd5\u548c\u5b83\u7684\u6570\u636e\u76f8\u5206\u79bb\uff0c\u8fd8\u6709\u4e2a\u7f3a\u70b9\u662f\u8981\u7528TLS\u624d\u80fd\u7ebf\u7a0b\u5b89\u5168\u3002\u663e\u7136\uff0c\u4f7f\u7528\u7c7b\u6765\u5c01\u88c5\u4e00\u5757:\u201c\u5185\u5b58\u201d\u66f4\u5b89\u5168\u53ef\u9760\u3002\u5148\u770b\u4e00\u4e0b\u4f8b\u5b50\uff1a", 
            "title": "\u53d1\u751f\u5668\u51fd\u6570\u5bf9\u8c61"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#randfunccpp", 
            "text": "#include  iostream \n#include  stdlib.h  //need rand(), srand()\n#include  time.h  //need random_shuffle()\n#include  vector  //need vector\n#include  functional  //need ptr_fun()\n#include  algorithm \n#include  iterator \n\nusing namespace std;\n\nint iarray[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };\n\nvector int  v(iarray, iarray + 10);\n\nvoid Display(vector int  vr, const char *s);\n\nunsigned int RandInt(const unsigned int n);\n\nint main()\n{\n    srand(time(NULL));\n    Display(v,  Before shuffle: );\n    pointer_to_unary_function unsigned int, unsigned int  ptr_RandInt = ptr_fun(RandInt);\n    random_shuffle(v.begin(), v.end(), ptr_RandInt);\n    Display(v,  After shuffle: );\n    return 0;\n}\nvoid Display(vector int  vr, const char *s)\n{\n    cout   endl   s   endl;\n    copy(vr.begin(), vr.end(), ostream_iterator int (cout,  ));\n    cout   endl;\n}\n\nunsigned int RandInt(const unsigned int n)\n{\n    return rand() % n;\n}  \u7f16\u8bd1\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a  $ g++ randfunc.cpp\n$ ./a.out\nBefore shuffle:\n1 2 3 4 5 6 7 8 9 10\nAfter shuffle:\n6 7 2 8 3 5 10 1 9 4\n\n\u9996\u5148\u7528\u4e0b\u9762\u7684\u8bed\u53e5\u58f0\u660e\u4e00\u4e2a\u5bf9\u8c61\npointer_to_unary_function unsigned int, unsigned int  ptr_RandInt = ptr_fun(RandInt);  \u8fd9\u513f\u4f7f\u7528STL\u7684\u5355\u76ee\u51fd\u6570\u6a21\u677f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u91cfptr_RandInt, \u5e76\u5c06\u5730\u5740\u521d\u59cb\u5316\u5230\u6211\u4eec\u7684\u51fd\u6570RandInt()\u3002\u5355\u76ee\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u503c\u3002\u73b0\u5728random_shuffle()\u53ef\u4ee5\u5982\u4e0b\u8c03\u7528:  random_shuffle(v.begin(), v.end(), ptr_RandInt);  \u5728\u672c\u4f8b\u5b50\u4e2d\uff0c\u53d1\u751f\u5668\u53ea\u662f\u7b80\u5355\u7684\u8c03\u7528rand()\u51fd\u6570\u3002", 
            "title": "randfunc.cpp"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_34", 
            "text": "\u4e0b\u9762\u7684\u4f8b\u5b50\u8bf4\u660e\u53d1\u751f\u5668\u51fd\u6570\u7c7b\u5bf9\u8c61\u7684\u4f7f\u7528\u3002", 
            "title": "\u53d1\u751f\u5668\u51fd\u6570\u7c7b\u5bf9\u8c61"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#fiborandcpp", 
            "text": "#include  iostream \n#include  algorithm  //need rand_shuffle()\n#include  vector  //need vector\n#include  functional  //need unary_function\n#include  iterator \n\nusing namespace std;\n\nint iarray[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };\nvector int  v(iarray, iarray + 10);\nvoid Display(vector int   vr, const char *s);\n\ntemplate class Arg \nclass FiboRand:public unary_function Arg, Arg \n{\n    int i, j;\n    Arg sequence[18];\npublic:\n    FiboRand();\n    Arg operator()(const Arg  arg);\n};\n\nvoid main()\n{\n    FiboRand int  fibogen;\n    cout Fibonacci random number generator endl;\n    cout using random_shuffle and a function object endl;\n    Display(v, Before shuffle: );\n    random_shuffle(v.begin(), v.end(), fibogen);\n    Display(v,  After shuffle: );\n}\n\nvoid Display(vector int   vr, const char *s)\n{\n    cout endl s endl;\n    copy(vr.begin(), vr.end(), ostream_iterator int (cout, ));\n    cout endl;\n}\n\ntemplate class Arg \nFiboRand Arg ::FiboRand()\n{\n    sequence[17]=1;\n    sequence[16]=2;\n    for(int n=15; n 0; n--)\n        sequence[n]=sequence[n+1]+sequence[n+2];\n    i=17;\n    j = 5;\n}\n\ntemplate class Arg \nArg FiboRand Arg ::operator()(const Arg  arg)\n{\n    Arg k=sequence[i]+sequence[j];\n    sequence[i]=k;\n    i--;\n    j--;\n    if(i==0) i=17;\n    if(j==0) j=17;\n    return k % arg;\n}  \u7f16\u8bd1\u8fd0\u884c\u8f93\u51fa\u5982\u4e0b\uff1a  $ g++ fiborand.cpp\n$ ./a.out\nFibonacci random number\ngenerator\nusing random_shuffle and a\nfunction object\nBefore shuffle:\n1 2 3 4 5 6 7 8 9 10\nAfter shuffle:\n6 8 5 4 3 7 10 1 9  \u8be5\u7a0b\u5e8f\u7528\u5b8c\u5168\u4e0d\u540c\u7684\u65b9\u6cd5\u4f7f\u7528rand_shuffle\u3002Fibonacci\u53d1\u751f\u5668\u5c01\u88c5\u5728\u4e00\u4e2a\u7c7b\u4e2d\uff0c\u8be5\u7c7b\u80fd\u4ece\u5148\u524d\u7684\u201c\u4f7f\u7528\u201d\u4e2d\u8bb0\u5fc6\u8fd0\u884c\u7ed3\u679c\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u7c7bFiboRand\u7ef4\u62a4\u4e86\u4e00\u4e2a\u6570\u7ec4\u548c\u4e24\u4e2a\u7d22\u5f15\u53d8\u91cfi\u548cj\u3002   FiboRand\u7c7b\u7ee7\u627f\u81eaunary_function()\u6a21\u677f\uff1a  template class Arg \nclass FiboRand: public unary_function Arg, Arg { ...  Arg\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\u3002\u8be5\u7c7b\u8fd8\u5b9a\u4e49\u4e86\u4e24\u4e2a\u6210\u5458\u51fd\u6570\uff0c\u4e00\u4e2a\u662f\u6784\u9020\u51fd\u6570\uff0c\u53e6\u4e00\u4e2a\u662foperator()()\u51fd\u6570\uff0c\u8be5\u64cd\u4f5c\u7b26\u5141\u8bb8random_shuffle()\u7b97\u6cd5\u50cf\u4e00\u4e2a\u51fd\u6570\u4e00\u6837\u201c\u8c03\u7528\u201d\u4e00\u4e2aFiboRand\u5bf9\u8c61\u3002", 
            "title": "fiborand.cpp"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_35", 
            "text": "\u4e00\u4e2a\u7ed1\u5b9a\u5668\u4f7f\u7528\u53e6\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61f()\u548c\u53c2\u6570\u503cV\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u3002\u88ab\u7ed1\u5b9a\u51fd\u6570\u5bf9\u8c61\u5fc5\u987b\u4e3a\u53cc\u76ee\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u6709\u4e24\u4e2a\u53c2\u6570\uff0cA\u548cB\u3002STL\u4e2d\u7684\u7ed1\u5b9a\u5668\u6709\uff1a   bind1st() \u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\uff0c\u8be5\u51fd\u6570\u5bf9\u8c61\u5c06\u503cV\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570A\u3002  bind2nd() \u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\uff0c\u8be5\u51fd\u6570\u5bf9\u8c61\u5c06\u503cV\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570B\u3002   \u4e3e\u4f8b\u5982\u4e0b:", 
            "title": "\u7ed1\u5b9a\u5668\u51fd\u6570\u5bf9\u8c61"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#bindercpp", 
            "text": "#include  iostream \n#include  algorithm \n#include  functional \n#include  list \n\nusing namespace std;\n\nint iarray[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n\nlist int  aList(iarray, iarray+10);\n\nint main()\n{\n    int k = 0;\n    k = count_if(aList.begin(), aList.end(), bind1st(greater int (),8));\n    cout Number elements   8 ==  k endl;\n    return 0;\n}  count_if()\u8ba1\u7b97\u6ee1\u8db3\u7279\u5b9a\u6761\u4ef6\u7684\u5143\u7d20\u7684\u6570\u76ee\u3002\n\u8fd9\u662f\u901a\u8fc7\u5c06\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u548c\u4e00\u4e2a\u53c2\u6570\u6346\u7ed1\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5e76\u5c06\u8be5\u5bf9\u8c61\u4f5c\u4e3a\u7b97\u6cd5\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u5b9e\u73b0\u7684\u3002\u6ce8\u610f\u8fd9\u4e2a\u8868\u8fbe\u5f0f\uff1a  bind1st(greater int (),8)  \u8be5\u8868\u8fbe\u5f0f\u5c06 greater int () \u548c\u4e00\u4e2a\u53c2\u6570\u503c8\u6346\u7ed1\u4e3a\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u3002\u7531\u4e8e\u4f7f\u7528\u4e86bind1st()\uff0c\u6240\u4ee5\u8be5\u51fd\u6570\u76f8\u5f53\u4e8e\u8ba1\u7b97\u4e0b\u8ff0\u8868\u8fbe\u5f0f\uff1a  8   q  \u8868\u8fbe\u5f0f\u4e2d\u7684q\u662f\u5bb9\u5668\u4e2d\u7684\u5bf9\u8c61\u3002\u56e0\u6b64\uff0c\u5b8c\u6574\u7684\u8868\u8fbe\u5f0f  k = count_if(aList.begin(), aList.end(), bind1st(greater int (),8));  \u8ba1\u7b97\u6240\u6709\u5c0f\u4e8e\u6216\u7b49\u4e8e8\u7684\u5bf9\u8c61\u7684\u6570\u76ee\u3002", 
            "title": "binder.cpp"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#_36", 
            "text": "\u6240\u8c13\u5426\u5b9a(negator)\u51fd\u6570\u5bf9\u8c61\uff0c\u5c31\u662f\u5b83\u4ece\u53e6\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u521b\u5efa\u800c\u6765\uff0c\u5982\u679c\u539f\u5148\u7684\u51fd\u6570\u8fd4\u56de\u771f\uff0c\u5219\u5426\u5b9a\u51fd\u6570\u5bf9\u8c61\u8fd4\u56de\u5047\u3002\u6709\u4e24\u4e2a\u5426\u5b9a\u51fd\u6570\u5bf9\u8c61\uff1anot1()\u548cnot2()\u3002  not1()\u6388\u53d7\u5355\u76ee\u51fd\u6570\u5bf9\u8c61\uff0cnot2()\u63a5\u53d7\u53cc\u76ee\u51fd\u6570\u5bf9\u8c61\u3002\u5426\u5b9a\u51fd\u6570\u5bf9\u8c61\u901a\u5e38\u548c\u7ed1\u5b9a\u5668\u4e00\u8d77\u4f7f\u7528\u3002\u4f8b\u5982\uff0c\u4e0a\u8282\u4e2d\u7528bind1nd\u6765\u641c\u7d22q =8\u7684\u503c\uff1a  k = count_if(aList.begin(), aList.end(), bind1st(greater int (),8));  \u5982\u679c\u8981\u641c\u7d22q 8\u7684\u5bf9\u8c61\uff0c\u5219\u7528bind2st\u3002\u800c\u73b0\u5728\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a  strat = find_if(aList.begin(), aList.end(), not1(bind1st(greater int (),8)));  \u4f60\u5fc5\u987b\u4f7f\u7528not1\uff0c\u56e0\u4e3abind1st\u8fd4\u56de\u5355\u76ee\u51fd\u6570\u3002", 
            "title": "\u5426\u5b9a\u51fd\u6570\u5bf9\u8c61"
        }, 
        {
            "location": "/tech/Learn STL In 30 Minutes/#stl_3", 
            "text": "\u5c3d\u7ba1\u5f88\u591a\u7a0b\u5e8f\u5458\u4ecd\u7136\u5728\u4f7f\u7528\u6807\u51c6C\u51fd\u6570\uff0c\u4f46\u662f\u8fd9\u5c31\u597d\u50cf\u9a91\u7740\u6bdb\u9a74\u5bfb\u627eMercedes\u4e00\u6837\u3002\u4f60\u5f53\u7136\u6700\u7ec8\u4e5f\u4f1a\u5230\u8fbe\u76ee\u6807\uff0c\u4f46\u662f\u4f60\u6d6a\u8d39\u4e86\u5f88\u591a\u65f6\u95f4\u3002  \u5c3d\u7ba1\u6709\u65f6\u5019\u4f7f\u7528\u6807\u51c6C\u51fd\u6570\u786e\u5b9e\u65b9\u4fbf\uff08\u5982\u4f7f\u7528sprintf()\u8fdb\u884c\u683c\u5f0f\u5316\u8f93\u51fa\uff09\u3002\u4f46\u662fC\u51fd\u6570\u4e0d\u4f7f\u7528\u5f02\u5e38\u673a\u5236\u6765\u62a5\u544a\u9519\u8bef\uff0c\u4e5f\u4e0d\u9002\u5408\u5904\u7406\u65b0\u7684\u6570\u636e\u7c7b\u578b\u3002\u800c\u4e14\u6807\u51c6C\u51fd\u6570\u7ecf\u5e38\u4f7f\u7528\u5185\u5b58\u5206\u914d\u6280\u672f\uff0c\u6ca1\u6709\u7ecf\u9a8c\u7684\u7a0b\u5e8f\u5458\u5f88\u5bb9\u6613\u5199\u51fabug\u6765\u3002  C++\u6807\u51c6\u5e93\u5219\u63d0\u4f9b\u4e86\u66f4\u4e3a\u5b89\u5168\uff0c\u66f4\u4e3a\u7075\u6d3b\u7684\u6570\u636e\u96c6\u5904\u7406\u65b9\u5f0f\u3002STL\u6700\u521d\u7531HP\u5b9e\u9a8c\u5ba4\u7684Alexander Stepanov\u548cMeng Lee\u5f00\u53d1\u3002\u6700\u8fd1\uff0cC++\u6807\u51c6\u59d4\u5458\u4f1a\u91c7\u7eb3\u4e86STL\uff0c\u5c3d\u7ba1\u5728\u4e0d\u540c\u7684\u5b9e\u73b0\u4e4b\u95f4\u4ecd\u6709\u7ec6\u8282\u5dee\u522b\u3002  STL\u7684\u6700\u4e3b\u8981\u7684\u4e24\u4e2a\u7279\u70b9\uff1a\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u5206\u79bb\uff0c\u975e\u9762\u5411\u5bf9\u8c61\u672c\u8d28\u3002\u8bbf\u95ee\u5bf9\u8c61\u662f\u901a\u8fc7\u50cf\u6307\u9488\u4e00\u6837\u7684\u8fed\u4ee3\u5668\u5b9e\u73b0\u7684\uff0c\u5bb9\u5668\u662f\u50cf\u94fe\u8868\u3001\u77e2\u91cf\u4e4b\u7c7b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u6309\u6a21\u677f\u65b9\u5f0f\u63d0\u4f9b\u3002\u7b97\u6cd5\u662f\u51fd\u6570\u6a21\u677f\uff0c\u7528\u4e8e\u64cd\u4f5c\u5bb9\u5668\u4e2d\u7684\u6570\u636e\u3002\u7531\u4e8eSTL\u4ee5\u6a21\u677f\u4e3a\u57fa\u7840\uff0c\u6240\u4ee5\u80fd\u7528\u4e8e\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u548c\u7ed3\u6784\u3002", 
            "title": "\u603b\u7ed3\uff1a\u4f7f\u7528\u6807\u51c6\u6a21\u677f\u5e93\uff08STL\uff09"
        }, 
        {
            "location": "/tech/Installation of Ubuntu 16.04 On UDisk/", 
            "text": "Installation of Ubuntu 16.04 On UDisk\n\n\n\u5b89\u88c5Ubuntu 16.04\n\n\n\u6211\u662f\u5728Mac\u7535\u8111\u4e0b\u5de5\u4f5c\u7684\uff0c\u9996\u5148\u9700\u8981\u5236\u4f5c\u4e00\u4e2aU\u76d8\u5b89\u88c5\u76d8\u3002\u56e0\u4e3aMac\u7535\u8111\u662f\u901a\u8fc7UEFI\u5f15\u5bfc\u7684\uff0c\u6240\u4ee5\u9700\u8981\u5c06U\u76d8\u5206\u533a\u4e3aGUID\u683c\u5f0f\u7684\uff0c\u5f53\u7136\u5982\u679c\u4f60\u4e0d\u662f\u5728Mac\u4e0b\u5de5\u4f5c\uff0c\u5c31\u4e0d\u5fc5\u5206\u533a\u4e3aGUID\u4e86\uff0c\u8fd9\u6837\u5206\u533a\u53ea\u662f\u4e3a\u4e86\u8ba9UEFI\u53ef\u4ee5\u5728\u5f15\u5bfc\u83dc\u5355\u4e2d\u663e\u793a\u5236\u4f5c\u597d\u7684U\u76d8\u5b89\u88c5\u76d8\u3002\n\n\n\u5728Mac\u4e0b\u5236U\u76d8\u5b89\u88c5\u76d8\uff0c\u9996\u5148\u8981\u5c06\u4e0b\u8f7d\u597d\u7684IOS\u955c\u50cf\u6587\u4ef6\u8f6c\u5316\u6210\u4e3aIMG\u683c\u5f0f\uff0c\u5047\u8bbe\u6211\u7684Ubuntu\u7cfb\u7edfIOS\u6587\u4ef6\u540d\u4e3a\uff1a\nubuntu-16.04-desktop-i386.iso\n, \u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u683c\u5f0f\u8f6c\u5316:\n\n\nlocalhost:Downloads wangzhizhou$  hdiutil convert -format UDRW -o ubuntu-16.04-desktop-i386.img ubuntu-16.04-desktop-i386.iso\n\n\n\n\n\u8f6c\u5316\u540e\u7684\u6587\u4ef6\u540d\u4e3a\uff1a\nubuntu-16.04-desktop-i386.img.dmg\n\uff0c\u8fd9\u4e2a\u5176\u5b9e\u540d\u5b57\u6ca1\u4ec0\u4e48\u5173\u7cfb\uff0c\u91cd\u8981\u7684\u662f\u955c\u50cf\u7684\u5185\u5bb9\u6309\u7167Mac\u53ef\u8bc6\u522b\u7684\u683c\u5f0f\u5f97\u5230\u4e86\u8f6c\u5316\uff0c\u4e4b\u540e\u6211\u4eec\u5c31\u5c06\u8f6c\u5316\u540e\u7684\u6587\u4ef6\u5199\u5165U\u76d8\u3002\n\n\n\u5199\u5165U\u76d8\u524d\uff0c\u9996\u5148\u8981\u627e\u5230U\u76d8\uff0c\u6211\u4eec\u4f7f\u7528\ndiskutil list\n\u5c06\u5f53\u524d\u63d2\u5165\u7535\u8111\u7684\u6240\u6709\u78c1\u76d8\u663e\u793a\u51fa\u6765\uff0c\u627e\u51fa\u6211\u4eec\u60f3\u8981\u5199\u5165\u7684\u90a3\u4e2a,\u6211\u8fd9\u91cc\u663e\u793a\u5982\u4e0b\uff1a\n\n\nlocalhost:Downloads wangzhizhou$ diskutil list\n/dev/disk0 (internal, physical):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:      GUID_partition_scheme                        *121.3 GB   disk0\n   1:                        EFI EFI                     209.7 MB   disk0s1\n   2:          Apple_CoreStorage Macintosh HD            120.5 GB   disk0s2\n   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3\n/dev/disk1 (internal, virtual):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:                  Apple_HFS Macintosh HD           +120.1 GB   disk1\n                                 Logical Volume on disk0s2\n                                 DA03CC12-7D54-44AA-ADC8-424073352296\n                                 Unlocked Encrypted\n/dev/disk2 (external, physical):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:      GUID_partition_scheme                        *61.9 GB    disk2\n   1:                        EFI EFI                     209.7 MB   disk2s1\n   2:                  Apple_HFS                         61.6 GB    disk2s2\n\n\n\n\n\u4ece\u4e0a\u9762\u770b\u51fa\uff0c\u6211\u8981\u5199\u5165\u7684U\u76d8\u662f\n/dev/disk2\n,\u56e0\u4e3a\u5b83\u662f\u5916\u90e8\u7269\u7406\u76d8\uff0c\u5e76\u78c1\u76d8\u5927\u5c0f\u4e0e\u6211\u7684U\u76d8\u5927\u5c0f\u4e00\u81f4\uff0c64GB\u5de6\u53f3\u3002\u6211\u5df2\u7ecf\u4f7f\u7528\u78c1\u76d8\u5de5\u5177\u628a\u5b83\u683c\u5f0f\u5316\u6210GUID\u5206\u533a\uff0c\u6240\u4ee5\u652f\u6301UEFI\u5f15\u5bfc\u3002\n\n\n\u6211\u4eec\u5148\u7528\u547d\u4ee4\u628aU\u76d8\u63a8\u51fa\uff0c\u8fd9\u6837\u4e5f\u80fd\u8fdb\u884c\u5199\u5165\u64cd\u4f5c\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u5199\u5165\u7cfb\u7edf\u955c\u50cf\uff0c\u5982\u679c\u4e0d\u63a8\u51fa\u5c31\u5199\u5165\u7684\u8bdd\uff0c\u4e0d\u80fd\u5199\u5230\u78c1\u76d8\u7684\u6700\u5f00\u59cb\u90e8\u5206\uff0c\u4e5f\u5c31\u65e0\u6cd5\u8fdb\u884c\u5f15\u5bfc\u3002\u6211U\u76d8\u7684\u6302\u8f7d\u70b9\u4e3a\n/Volumes/Ubuntu/\n\uff0c\u6240\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff1a\n\n\nlocalhost:Downloads wangzhizhou$ diskutil unmount /Volumes/Ubuntu/\nVolume Ubuntu on disk2s2 unmounted\n\n\n\n\n\u65e2\u7136U\u76d8\u5df2\u4ece\u6302\u8f7d\u70b9\u5378\u8f7d\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5199\u5165\u7cfb\u7edf\u955c\u50cf\u6587\u4ef6\u4e86\uff0c\u6ce8\u610f\u662f\u8f6c\u5316\u540e\u7684\u6587\u4ef6\nubuntu-16.04-desktop-i386.img.dmg\n:\n\n\nlocalhost:Downloads wangzhizhou$ sudo dd if=ubuntu-16.04-desktop-i386.img.dmg of=/dev/rdisk2 bs=1024m\nPassword:\n1+1 records in\n1+1 records out\n1504051200 bytes transferred in 96.270441 secs (15623188 bytes/sec)\n\n\n\n\n\u6ce8\u610f\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\n/dev/rdisk2\n\u4f5c\u4e3a\u5199\u5165\u7684\u76ee\u6807\u78c1\u76d8\uff0crdisk2\u5bf9\u5e94\u4e8edisk2\uff0c\u901a\u5e38\u4f7f\u7528\u5b83\u80fd\u591f\u4ee5\u66f4\u5feb\u7684\u901f\u5ea6\u5199\u5165U\u76d8\uff0cr\u4ee3\u8868removeable\uff0c\u5373\u53ef\u79fb\u52a8\u78c1\u76d8\u7684\u610f\u601d\u3002\n\n\n\u73b0\u5728\u6211\u4eec\u91cd\u542fMac\uff0c\u5e76\u5728\u91cd\u542f\u8fc7\u7a0b\u4e2d\u6309\u4e0b\noption\n\u4e0d\u653e\u76f4\u5230\u542f\u52a8\u83dc\u5355\u51fa\u73b0\u6211\u4eec\u7684U\u76d8\u5b89\u88c5\u76d8\uff0c\u5982\u679c\u6ca1\u6709\u51fa\u73b0\uff0c\u8bf4\u660e\u6ca1\u6709\u5236\u4f5c\u6210\u529f\uff0c\u4e00\u5b9a\u662f\u54ea\u4e2a\u73af\u8282\u6ca1\u6709\u6309\u6b65\u9aa4\u6765\uff0c\u9700\u8981\u91cd\u5934\u6765\u4e00\u904d\u3002\u6ce8\u610fU\u76d8\u8981\u63d2\u5728\u7535\u8111\u4e0a\u3002\n\n\nlocalhost:Downloads wangzhizhou$ sudo reboot\n\n\n\n\n\u91cd\u542f\u7535\u8111\n\n\n\u4e4b\u540e\u5c31\u662f\u6b63\u5e38\u7684\u5b89\u88c5Ubuntu\u4e86\uff0c\u81ea\u5df1\u53bb\u6478\u7d22\u5427\uff5e\n\n\n\u6211\u9760\uff0c\u5f00\u673a\u540e\u5c45\u7136\u4e0d\u80fd\u5f15\u5bfc\uff0c\u7ecf\u8fc7\u4e0d\u65ad\u7684\u767e\u5ea6\uff0c\u6709\u7f51\u53cb\u79f0Ubuntu\u53ea\u5bf964\u4f4d\u7248\u672c\u63d0\u4f9bUEFI\u5f15\u5bfc\u6a21\u5f0f\uff0c\u545c\u547c\uff0c\u53c8\u5f97\u91cd\u65b0\u6765\u4e00\u904d\u3002\u5148\u4e0b\u8f7d\u4e00\u4e2a64\u4f4d\u7248\u7684Ubuntu\u5b89\u88c5\u955c\u50cf\uff0c\u7136\u540e\u518d\u91cd\u65b0\u6765\u4e00\u6b21\u5427\u3002\u5982\u679c\u4f7f\u7528\u4f20\u7edfBIOS\u5f15\u5bfc\u5b8c\u5168\u4e0d\u5b58\u5728\u8fd9\u79cd\u60c5\u51b5\u3002\n\n\n\u8fd9\u6b21\u6587\u4ef6\u540d\u4e3a\uff1a\nubuntu-16.04-desktop-amd64.iso\n,\u5c31\u4e0d\u4e00\u4e00\u8bf4\u660e\u4e86\uff0c\u76f4\u63a5\u8d34\u547d\u4ee4\u884c\uff1a\n\n\nlocalhost:Downloads JokerAtBaoFeng$ diskutil list\n/dev/disk0 (internal, physical):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:      GUID_partition_scheme                        *251.0 GB   disk0\n   1:                        EFI EFI                     209.7 MB   disk0s1\n   2:          Apple_CoreStorage Macintosh HD            250.1 GB   disk0s2\n   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3\n/dev/disk1 (internal, virtual):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:                  Apple_HFS Macintosh HD           +249.8 GB   disk1\n                                 Logical Volume on disk0s2\n                                 3B2115D8-1852-411F-9052-ABA876FD6128\n                                 Unencrypted\n/dev/disk2 (external, physical):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:      GUID_partition_scheme                        *61.9 GB    disk2\n   1:                        EFI EFI                     209.7 MB   disk2s1\n   2:                  Apple_HFS Ubuntu16.04_64          61.6 GB    disk2s2\nlocalhost:Downloads JokerAtBaoFeng$ diskutil unmountDisk /dev/disk2\nUnmount of all volumes on disk2 was successful\nlocalhost:Downloads JokerAtBaoFeng$ hdiutil convert -format UDRW -o ubuntu-16.04-desktop-amd64 ubuntu-16.04-desktop-amd64.iso\n\u6b63\u5728\u8bfb\u53d6Driver Descriptor Map\uff08DDM\uff1a0\uff09\u2026\n\u6b63\u5728\u8bfb\u53d6Ubuntu 16.04 LTS amd64          \uff08Apple_ISO\uff1a1\uff09\u2026\n\u6b63\u5728\u8bfb\u53d6Apple\uff08Apple_partition_map\uff1a2\uff09\u2026\n\u6b63\u5728\u8bfb\u53d6Ubuntu 16.04 LTS amd64          \uff08Apple_ISO\uff1a3\uff09\u2026\n..............................................................................\n\u6b63\u5728\u8bfb\u53d6EFI\uff08Apple_HFS\uff1a4\uff09\u2026\n..............................................................................\n\u6b63\u5728\u8bfb\u53d6Ubuntu 16.04 LTS amd64          \uff08Apple_ISO\uff1a5\uff09\u2026\n..............................................................................\n\u5df2\u8017\u65f6\uff1a 3.304s\n\u901f\u5ea6\uff1a428.8M \u5b57\u8282/\u79d2\n\u8282\u7701\uff1a0.0%\ncreated: /Users/JokerAtBaoFeng/Downloads/ubuntu-16.04-desktop-amd64.dmg\nlocalhost:Downloads JokerAtBaoFeng$ sudo dd if=ubuntu-16.04-desktop-amd64.dmg of=/dev/rdisk2 bs=1024m\nPassword:\n1+1 records in\n1+1 records out\n1485881344 bytes transferred in 95.220324 secs (15604666 bytes/sec)\n\n\n\n\n\u7cfb\u7edf\u955c\u50cf\u5199\u5165\u5b8c\u6210\u540e\uff0c\u4f1a\u5f39\u51fa\u4e00\u4e2a\u5bf9\u8bdd\u6846\uff0c\u9009\u62e9\u5ffd\u7565\u5373\u53ef\u3002\u8fd9\u6b21\u5e94\u8be5\u53ef\u4ee5\u4e86\uff0c64\u4f4dUbuntu\u652f\u6301UEFI\u542f\u52a8\uff0c\u5e76\u4e14\u6211\u4eec\u7684U\u76d8\u5df2\u7ecf\u6309GUID\u5206\u533a\u65b9\u6848\u5206\u8fc7\u533a\uff0c\u73b0\u5728\u91cd\u542fMac\uff0c\u5e76\u6309\u4f4f\noption\n\u4e0d\u653e\u5373\u53ef\u3002\u542f\u52a8\u83dc\u5355\u8fd9\u6b21\u4f1a\u5f39\u51faU\u76d8\u5b89\u88c5\u76d8\u9009\u9879\u4e86\u3002\n\n\n\u54e6\u8fd9\u91cc\u53c8\u51fa\u73b0\u95ee\u9898\u4e86\uff0c\u6309\u4f4f\noption\n\u91cd\u542f\u540e\u4f9d\u7136\u6ca1\u6709\u5f15\u5bfc\u9879\uff0c\u8fd9\u662f\u56e0\u4e3a\u5b89\u88c5\u8fc7\u7a0b\u4e2d\uff0cEFI\u5f15\u5bfc\u6587\u4ef6\u88ab\u5b89\u88c5\u5230\u4e86\u7cfb\u7edf\u78c1\u76d8\u7684EFI\u5206\u533a\u4e86\uff0c\u6211\u4eec\u9700\u8981\u628a\u90a3\u4e2a\u6587\u4ef6\u62f7\u5230\u5b89\u88c5\u7cfb\u7edf\u7684U\u76d8\u4e0a\u7684\u90a3\u4e2aEFI\u5206\u533a\u3002\u6211\u4eec\u8fdb\u5165Mactonish HD\uff0c\u542f\u52a8OS X\uff0c\u5728\u547d\u4ee4\u884c\u4e2d\u628a\u6240\u6709\u78c1\u76d8\u90fd\u5217\u51fa\u6765\uff1a\n\n\nlocalhost:ubuntu wangzhizhou$ diskutil list\n/dev/disk0 (internal, physical):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:      GUID_partition_scheme                        *121.3 GB   disk0\n   1:                        EFI EFI                     209.7 MB   disk0s1\n   2:          Apple_CoreStorage Macintosh HD            120.5 GB   disk0s2\n   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3\n/dev/disk1 (internal, virtual):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:                  Apple_HFS Macintosh HD           +120.1 GB   disk1\n                                 Logical Volume on disk0s2\n                                 DA03CC12-7D54-44AA-ADC8-424073352296\n                                 Unlocked Encrypted\n/dev/disk2 (external, physical):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:      GUID_partition_scheme                        *62.6 GB    disk2\n   1:                        EFI NO NAME                 499.1 MB   disk2s1\n   2:        Bios Boot Partition                         127.9 MB   disk2s2\n   3:                 Linux Swap                         4.1 GB     disk2s3\n   4:           Linux Filesystem                         57.9 GB    disk2s4\n\n\n\n\n\u6211\u4eec\u5c06EFI\u5206\u533a\uff1a\u001d\n/dev/disk0s1\n\u548c\n/dev/disk2s1\n\u90fd\u6302\u8f7d\u5230\u8def\u5f84\n/Volumes\n\u4e0b\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\uff1a\n\n\nlocalhost:~ wangzhizhou$ diskutil mount /dev/disk0s1;diskutil mount /dev/disk2s1\nVolume EFI on /dev/disk0s1 mounted\nVolume NO NAME on /dev/disk2s1 mounted\nlocalhost:~ wangzhizhou$ ls /Volumes/\nEFI     Macintosh HD    NO NAME\nlocalhost:NO NAME wangzhizhou$ ls /Volumes/EFI/ /Volumes/NO\\ NAME/\n/Volumes/EFI/:\nEFI\n\n/Volumes/NO NAME/:\n\n\n\n\n/Volumes\n\u4e0b\nEFI\n\u548c\nNO NAME\n\u76ee\u5f55\u5c31\u662f\u4e24\u4e2aEFI\u5206\u533a\u7684\u6302\u8f7d\u70b9\uff0c\u4f60\u53d1\u73b0\n/Volumes/NO NAME/\n\u76ee\u5f55\u4e0b\u9762\u4ec0\u4e48\u4e5f\u6ca1\u6709\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48U\u76d8\u7cfb\u7edf\u76d8\u5df2\u7ecf\u5b89\u88c5\u6210\u529f\u4e86\u5374\u6ca1\u6cd5\u5f15\u5bfc\u3002\u56e0\u4e3a\u5b83\u4eec\u9519\u8bef\u7684\u5b89\u88c5\u5728\u4e86\n/dev/disk0s1\n\u4e0b\u4e86,\u4e5f\u5c31\u662f\u6302\u8f7d\u70b9\n/Volumes/EFI\n\u4e0b\u4e86,\u6211\u4eec\u9700\u8981\u628a\u8fd9\u4e9b\u6587\u4ef6\u590d\u5236\u5230\n/Volumes/NO NAME/\n,\u4e0b\uff0c\u5e76\u4f5c\u4e00\u4e9b\u8c03\u6574\uff0c\u7528\u547d\u4ee4\u884c\u8bf4\u660e\u5427\uff0c\u6587\u5b57\u6709\u70b9\u4e0d\u592a\u6e05\u695a\u4e86\uff1a\n\n\nlocalhost:NO NAME wangzhizhou$ cp -r /Volumes/EFI/* /Volumes/NO\\ NAME/\nlocalhost:EFI wangzhizhou$ cd /Volumes/NO\\ NAME/EFI/\nlocalhost:EFI wangzhizhou$ ls\nAPPLE   ubuntu\nlocalhost:EFI wangzhizhou$ pwd\n/Volumes/NO NAME/EFI\nlocalhost:EFI wangzhizhou$ rm -rf APPLE/\nlocalhost:EFI wangzhizhou$ mkdir boot\nlocalhost:EFI wangzhizhou$ cp ubuntu/grubx64.efi boot/bootx64.efi\nlocalhost:EFI wangzhizhou$ cd /Volumes/EFI/EFI/\nlocalhost:EFI wangzhizhou$ ls\nAPPLE   ubuntu\nlocalhost:EFI wangzhizhou$ rm -rf ubuntu/\nlocalhost:EFI wangzhizhou$ cd /Volumes/\nlocalhost:Volumes wangzhizhou$ diskutil umount EFI;diskutil umount NO\\ NAME/\nVolume EFI on disk0s1 unmounted\nUnmount successful for NO NAME/\n\n\n\n\n\u597d\u4e86\u6211\u4eec\u7684\u7cfb\u7edfU\u76d8\u4e0a\u7684EFI\u5206\u533a\u5df2\u7ecf\u6709\u4e86\u5f15\u5bfc\u4fe1\u606f\uff0c\u8fd9\u6b21\u6309\u4f4f\noption\n\u5e76\u91cd\u542f\u5e94\u8be5\u80fd\u591f\u5f15\u5bfcUbuntu\u542f\u52a8\u4e86\u3002\n\n\nlocalhost:Volumes wangzhizhou$ sudo reboot", 
            "title": "Installation of Ubuntu 16.04 On UDisk"
        }, 
        {
            "location": "/tech/Installation of Ubuntu 16.04 On UDisk/#installation-of-ubuntu-1604-on-udisk", 
            "text": "", 
            "title": "Installation of Ubuntu 16.04 On UDisk"
        }, 
        {
            "location": "/tech/Installation of Ubuntu 16.04 On UDisk/#ubuntu-1604", 
            "text": "\u6211\u662f\u5728Mac\u7535\u8111\u4e0b\u5de5\u4f5c\u7684\uff0c\u9996\u5148\u9700\u8981\u5236\u4f5c\u4e00\u4e2aU\u76d8\u5b89\u88c5\u76d8\u3002\u56e0\u4e3aMac\u7535\u8111\u662f\u901a\u8fc7UEFI\u5f15\u5bfc\u7684\uff0c\u6240\u4ee5\u9700\u8981\u5c06U\u76d8\u5206\u533a\u4e3aGUID\u683c\u5f0f\u7684\uff0c\u5f53\u7136\u5982\u679c\u4f60\u4e0d\u662f\u5728Mac\u4e0b\u5de5\u4f5c\uff0c\u5c31\u4e0d\u5fc5\u5206\u533a\u4e3aGUID\u4e86\uff0c\u8fd9\u6837\u5206\u533a\u53ea\u662f\u4e3a\u4e86\u8ba9UEFI\u53ef\u4ee5\u5728\u5f15\u5bfc\u83dc\u5355\u4e2d\u663e\u793a\u5236\u4f5c\u597d\u7684U\u76d8\u5b89\u88c5\u76d8\u3002  \u5728Mac\u4e0b\u5236U\u76d8\u5b89\u88c5\u76d8\uff0c\u9996\u5148\u8981\u5c06\u4e0b\u8f7d\u597d\u7684IOS\u955c\u50cf\u6587\u4ef6\u8f6c\u5316\u6210\u4e3aIMG\u683c\u5f0f\uff0c\u5047\u8bbe\u6211\u7684Ubuntu\u7cfb\u7edfIOS\u6587\u4ef6\u540d\u4e3a\uff1a ubuntu-16.04-desktop-i386.iso , \u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u683c\u5f0f\u8f6c\u5316:  localhost:Downloads wangzhizhou$  hdiutil convert -format UDRW -o ubuntu-16.04-desktop-i386.img ubuntu-16.04-desktop-i386.iso  \u8f6c\u5316\u540e\u7684\u6587\u4ef6\u540d\u4e3a\uff1a ubuntu-16.04-desktop-i386.img.dmg \uff0c\u8fd9\u4e2a\u5176\u5b9e\u540d\u5b57\u6ca1\u4ec0\u4e48\u5173\u7cfb\uff0c\u91cd\u8981\u7684\u662f\u955c\u50cf\u7684\u5185\u5bb9\u6309\u7167Mac\u53ef\u8bc6\u522b\u7684\u683c\u5f0f\u5f97\u5230\u4e86\u8f6c\u5316\uff0c\u4e4b\u540e\u6211\u4eec\u5c31\u5c06\u8f6c\u5316\u540e\u7684\u6587\u4ef6\u5199\u5165U\u76d8\u3002  \u5199\u5165U\u76d8\u524d\uff0c\u9996\u5148\u8981\u627e\u5230U\u76d8\uff0c\u6211\u4eec\u4f7f\u7528 diskutil list \u5c06\u5f53\u524d\u63d2\u5165\u7535\u8111\u7684\u6240\u6709\u78c1\u76d8\u663e\u793a\u51fa\u6765\uff0c\u627e\u51fa\u6211\u4eec\u60f3\u8981\u5199\u5165\u7684\u90a3\u4e2a,\u6211\u8fd9\u91cc\u663e\u793a\u5982\u4e0b\uff1a  localhost:Downloads wangzhizhou$ diskutil list\n/dev/disk0 (internal, physical):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:      GUID_partition_scheme                        *121.3 GB   disk0\n   1:                        EFI EFI                     209.7 MB   disk0s1\n   2:          Apple_CoreStorage Macintosh HD            120.5 GB   disk0s2\n   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3\n/dev/disk1 (internal, virtual):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:                  Apple_HFS Macintosh HD           +120.1 GB   disk1\n                                 Logical Volume on disk0s2\n                                 DA03CC12-7D54-44AA-ADC8-424073352296\n                                 Unlocked Encrypted\n/dev/disk2 (external, physical):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:      GUID_partition_scheme                        *61.9 GB    disk2\n   1:                        EFI EFI                     209.7 MB   disk2s1\n   2:                  Apple_HFS                         61.6 GB    disk2s2  \u4ece\u4e0a\u9762\u770b\u51fa\uff0c\u6211\u8981\u5199\u5165\u7684U\u76d8\u662f /dev/disk2 ,\u56e0\u4e3a\u5b83\u662f\u5916\u90e8\u7269\u7406\u76d8\uff0c\u5e76\u78c1\u76d8\u5927\u5c0f\u4e0e\u6211\u7684U\u76d8\u5927\u5c0f\u4e00\u81f4\uff0c64GB\u5de6\u53f3\u3002\u6211\u5df2\u7ecf\u4f7f\u7528\u78c1\u76d8\u5de5\u5177\u628a\u5b83\u683c\u5f0f\u5316\u6210GUID\u5206\u533a\uff0c\u6240\u4ee5\u652f\u6301UEFI\u5f15\u5bfc\u3002  \u6211\u4eec\u5148\u7528\u547d\u4ee4\u628aU\u76d8\u63a8\u51fa\uff0c\u8fd9\u6837\u4e5f\u80fd\u8fdb\u884c\u5199\u5165\u64cd\u4f5c\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u5199\u5165\u7cfb\u7edf\u955c\u50cf\uff0c\u5982\u679c\u4e0d\u63a8\u51fa\u5c31\u5199\u5165\u7684\u8bdd\uff0c\u4e0d\u80fd\u5199\u5230\u78c1\u76d8\u7684\u6700\u5f00\u59cb\u90e8\u5206\uff0c\u4e5f\u5c31\u65e0\u6cd5\u8fdb\u884c\u5f15\u5bfc\u3002\u6211U\u76d8\u7684\u6302\u8f7d\u70b9\u4e3a /Volumes/Ubuntu/ \uff0c\u6240\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff1a  localhost:Downloads wangzhizhou$ diskutil unmount /Volumes/Ubuntu/\nVolume Ubuntu on disk2s2 unmounted  \u65e2\u7136U\u76d8\u5df2\u4ece\u6302\u8f7d\u70b9\u5378\u8f7d\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5199\u5165\u7cfb\u7edf\u955c\u50cf\u6587\u4ef6\u4e86\uff0c\u6ce8\u610f\u662f\u8f6c\u5316\u540e\u7684\u6587\u4ef6 ubuntu-16.04-desktop-i386.img.dmg :  localhost:Downloads wangzhizhou$ sudo dd if=ubuntu-16.04-desktop-i386.img.dmg of=/dev/rdisk2 bs=1024m\nPassword:\n1+1 records in\n1+1 records out\n1504051200 bytes transferred in 96.270441 secs (15623188 bytes/sec)  \u6ce8\u610f\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 /dev/rdisk2 \u4f5c\u4e3a\u5199\u5165\u7684\u76ee\u6807\u78c1\u76d8\uff0crdisk2\u5bf9\u5e94\u4e8edisk2\uff0c\u901a\u5e38\u4f7f\u7528\u5b83\u80fd\u591f\u4ee5\u66f4\u5feb\u7684\u901f\u5ea6\u5199\u5165U\u76d8\uff0cr\u4ee3\u8868removeable\uff0c\u5373\u53ef\u79fb\u52a8\u78c1\u76d8\u7684\u610f\u601d\u3002  \u73b0\u5728\u6211\u4eec\u91cd\u542fMac\uff0c\u5e76\u5728\u91cd\u542f\u8fc7\u7a0b\u4e2d\u6309\u4e0b option \u4e0d\u653e\u76f4\u5230\u542f\u52a8\u83dc\u5355\u51fa\u73b0\u6211\u4eec\u7684U\u76d8\u5b89\u88c5\u76d8\uff0c\u5982\u679c\u6ca1\u6709\u51fa\u73b0\uff0c\u8bf4\u660e\u6ca1\u6709\u5236\u4f5c\u6210\u529f\uff0c\u4e00\u5b9a\u662f\u54ea\u4e2a\u73af\u8282\u6ca1\u6709\u6309\u6b65\u9aa4\u6765\uff0c\u9700\u8981\u91cd\u5934\u6765\u4e00\u904d\u3002\u6ce8\u610fU\u76d8\u8981\u63d2\u5728\u7535\u8111\u4e0a\u3002  localhost:Downloads wangzhizhou$ sudo reboot  \u91cd\u542f\u7535\u8111  \u4e4b\u540e\u5c31\u662f\u6b63\u5e38\u7684\u5b89\u88c5Ubuntu\u4e86\uff0c\u81ea\u5df1\u53bb\u6478\u7d22\u5427\uff5e  \u6211\u9760\uff0c\u5f00\u673a\u540e\u5c45\u7136\u4e0d\u80fd\u5f15\u5bfc\uff0c\u7ecf\u8fc7\u4e0d\u65ad\u7684\u767e\u5ea6\uff0c\u6709\u7f51\u53cb\u79f0Ubuntu\u53ea\u5bf964\u4f4d\u7248\u672c\u63d0\u4f9bUEFI\u5f15\u5bfc\u6a21\u5f0f\uff0c\u545c\u547c\uff0c\u53c8\u5f97\u91cd\u65b0\u6765\u4e00\u904d\u3002\u5148\u4e0b\u8f7d\u4e00\u4e2a64\u4f4d\u7248\u7684Ubuntu\u5b89\u88c5\u955c\u50cf\uff0c\u7136\u540e\u518d\u91cd\u65b0\u6765\u4e00\u6b21\u5427\u3002\u5982\u679c\u4f7f\u7528\u4f20\u7edfBIOS\u5f15\u5bfc\u5b8c\u5168\u4e0d\u5b58\u5728\u8fd9\u79cd\u60c5\u51b5\u3002  \u8fd9\u6b21\u6587\u4ef6\u540d\u4e3a\uff1a ubuntu-16.04-desktop-amd64.iso ,\u5c31\u4e0d\u4e00\u4e00\u8bf4\u660e\u4e86\uff0c\u76f4\u63a5\u8d34\u547d\u4ee4\u884c\uff1a  localhost:Downloads JokerAtBaoFeng$ diskutil list\n/dev/disk0 (internal, physical):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:      GUID_partition_scheme                        *251.0 GB   disk0\n   1:                        EFI EFI                     209.7 MB   disk0s1\n   2:          Apple_CoreStorage Macintosh HD            250.1 GB   disk0s2\n   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3\n/dev/disk1 (internal, virtual):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:                  Apple_HFS Macintosh HD           +249.8 GB   disk1\n                                 Logical Volume on disk0s2\n                                 3B2115D8-1852-411F-9052-ABA876FD6128\n                                 Unencrypted\n/dev/disk2 (external, physical):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:      GUID_partition_scheme                        *61.9 GB    disk2\n   1:                        EFI EFI                     209.7 MB   disk2s1\n   2:                  Apple_HFS Ubuntu16.04_64          61.6 GB    disk2s2\nlocalhost:Downloads JokerAtBaoFeng$ diskutil unmountDisk /dev/disk2\nUnmount of all volumes on disk2 was successful\nlocalhost:Downloads JokerAtBaoFeng$ hdiutil convert -format UDRW -o ubuntu-16.04-desktop-amd64 ubuntu-16.04-desktop-amd64.iso\n\u6b63\u5728\u8bfb\u53d6Driver Descriptor Map\uff08DDM\uff1a0\uff09\u2026\n\u6b63\u5728\u8bfb\u53d6Ubuntu 16.04 LTS amd64          \uff08Apple_ISO\uff1a1\uff09\u2026\n\u6b63\u5728\u8bfb\u53d6Apple\uff08Apple_partition_map\uff1a2\uff09\u2026\n\u6b63\u5728\u8bfb\u53d6Ubuntu 16.04 LTS amd64          \uff08Apple_ISO\uff1a3\uff09\u2026\n..............................................................................\n\u6b63\u5728\u8bfb\u53d6EFI\uff08Apple_HFS\uff1a4\uff09\u2026\n..............................................................................\n\u6b63\u5728\u8bfb\u53d6Ubuntu 16.04 LTS amd64          \uff08Apple_ISO\uff1a5\uff09\u2026\n..............................................................................\n\u5df2\u8017\u65f6\uff1a 3.304s\n\u901f\u5ea6\uff1a428.8M \u5b57\u8282/\u79d2\n\u8282\u7701\uff1a0.0%\ncreated: /Users/JokerAtBaoFeng/Downloads/ubuntu-16.04-desktop-amd64.dmg\nlocalhost:Downloads JokerAtBaoFeng$ sudo dd if=ubuntu-16.04-desktop-amd64.dmg of=/dev/rdisk2 bs=1024m\nPassword:\n1+1 records in\n1+1 records out\n1485881344 bytes transferred in 95.220324 secs (15604666 bytes/sec)  \u7cfb\u7edf\u955c\u50cf\u5199\u5165\u5b8c\u6210\u540e\uff0c\u4f1a\u5f39\u51fa\u4e00\u4e2a\u5bf9\u8bdd\u6846\uff0c\u9009\u62e9\u5ffd\u7565\u5373\u53ef\u3002\u8fd9\u6b21\u5e94\u8be5\u53ef\u4ee5\u4e86\uff0c64\u4f4dUbuntu\u652f\u6301UEFI\u542f\u52a8\uff0c\u5e76\u4e14\u6211\u4eec\u7684U\u76d8\u5df2\u7ecf\u6309GUID\u5206\u533a\u65b9\u6848\u5206\u8fc7\u533a\uff0c\u73b0\u5728\u91cd\u542fMac\uff0c\u5e76\u6309\u4f4f option \u4e0d\u653e\u5373\u53ef\u3002\u542f\u52a8\u83dc\u5355\u8fd9\u6b21\u4f1a\u5f39\u51faU\u76d8\u5b89\u88c5\u76d8\u9009\u9879\u4e86\u3002  \u54e6\u8fd9\u91cc\u53c8\u51fa\u73b0\u95ee\u9898\u4e86\uff0c\u6309\u4f4f option \u91cd\u542f\u540e\u4f9d\u7136\u6ca1\u6709\u5f15\u5bfc\u9879\uff0c\u8fd9\u662f\u56e0\u4e3a\u5b89\u88c5\u8fc7\u7a0b\u4e2d\uff0cEFI\u5f15\u5bfc\u6587\u4ef6\u88ab\u5b89\u88c5\u5230\u4e86\u7cfb\u7edf\u78c1\u76d8\u7684EFI\u5206\u533a\u4e86\uff0c\u6211\u4eec\u9700\u8981\u628a\u90a3\u4e2a\u6587\u4ef6\u62f7\u5230\u5b89\u88c5\u7cfb\u7edf\u7684U\u76d8\u4e0a\u7684\u90a3\u4e2aEFI\u5206\u533a\u3002\u6211\u4eec\u8fdb\u5165Mactonish HD\uff0c\u542f\u52a8OS X\uff0c\u5728\u547d\u4ee4\u884c\u4e2d\u628a\u6240\u6709\u78c1\u76d8\u90fd\u5217\u51fa\u6765\uff1a  localhost:ubuntu wangzhizhou$ diskutil list\n/dev/disk0 (internal, physical):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:      GUID_partition_scheme                        *121.3 GB   disk0\n   1:                        EFI EFI                     209.7 MB   disk0s1\n   2:          Apple_CoreStorage Macintosh HD            120.5 GB   disk0s2\n   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3\n/dev/disk1 (internal, virtual):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:                  Apple_HFS Macintosh HD           +120.1 GB   disk1\n                                 Logical Volume on disk0s2\n                                 DA03CC12-7D54-44AA-ADC8-424073352296\n                                 Unlocked Encrypted\n/dev/disk2 (external, physical):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:      GUID_partition_scheme                        *62.6 GB    disk2\n   1:                        EFI NO NAME                 499.1 MB   disk2s1\n   2:        Bios Boot Partition                         127.9 MB   disk2s2\n   3:                 Linux Swap                         4.1 GB     disk2s3\n   4:           Linux Filesystem                         57.9 GB    disk2s4  \u6211\u4eec\u5c06EFI\u5206\u533a\uff1a\u001d /dev/disk0s1 \u548c /dev/disk2s1 \u90fd\u6302\u8f7d\u5230\u8def\u5f84 /Volumes \u4e0b\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\uff1a  localhost:~ wangzhizhou$ diskutil mount /dev/disk0s1;diskutil mount /dev/disk2s1\nVolume EFI on /dev/disk0s1 mounted\nVolume NO NAME on /dev/disk2s1 mounted\nlocalhost:~ wangzhizhou$ ls /Volumes/\nEFI     Macintosh HD    NO NAME\nlocalhost:NO NAME wangzhizhou$ ls /Volumes/EFI/ /Volumes/NO\\ NAME/\n/Volumes/EFI/:\nEFI\n\n/Volumes/NO NAME/:  /Volumes \u4e0b EFI \u548c NO NAME \u76ee\u5f55\u5c31\u662f\u4e24\u4e2aEFI\u5206\u533a\u7684\u6302\u8f7d\u70b9\uff0c\u4f60\u53d1\u73b0 /Volumes/NO NAME/ \u76ee\u5f55\u4e0b\u9762\u4ec0\u4e48\u4e5f\u6ca1\u6709\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48U\u76d8\u7cfb\u7edf\u76d8\u5df2\u7ecf\u5b89\u88c5\u6210\u529f\u4e86\u5374\u6ca1\u6cd5\u5f15\u5bfc\u3002\u56e0\u4e3a\u5b83\u4eec\u9519\u8bef\u7684\u5b89\u88c5\u5728\u4e86 /dev/disk0s1 \u4e0b\u4e86,\u4e5f\u5c31\u662f\u6302\u8f7d\u70b9 /Volumes/EFI \u4e0b\u4e86,\u6211\u4eec\u9700\u8981\u628a\u8fd9\u4e9b\u6587\u4ef6\u590d\u5236\u5230 /Volumes/NO NAME/ ,\u4e0b\uff0c\u5e76\u4f5c\u4e00\u4e9b\u8c03\u6574\uff0c\u7528\u547d\u4ee4\u884c\u8bf4\u660e\u5427\uff0c\u6587\u5b57\u6709\u70b9\u4e0d\u592a\u6e05\u695a\u4e86\uff1a  localhost:NO NAME wangzhizhou$ cp -r /Volumes/EFI/* /Volumes/NO\\ NAME/\nlocalhost:EFI wangzhizhou$ cd /Volumes/NO\\ NAME/EFI/\nlocalhost:EFI wangzhizhou$ ls\nAPPLE   ubuntu\nlocalhost:EFI wangzhizhou$ pwd\n/Volumes/NO NAME/EFI\nlocalhost:EFI wangzhizhou$ rm -rf APPLE/\nlocalhost:EFI wangzhizhou$ mkdir boot\nlocalhost:EFI wangzhizhou$ cp ubuntu/grubx64.efi boot/bootx64.efi\nlocalhost:EFI wangzhizhou$ cd /Volumes/EFI/EFI/\nlocalhost:EFI wangzhizhou$ ls\nAPPLE   ubuntu\nlocalhost:EFI wangzhizhou$ rm -rf ubuntu/\nlocalhost:EFI wangzhizhou$ cd /Volumes/\nlocalhost:Volumes wangzhizhou$ diskutil umount EFI;diskutil umount NO\\ NAME/\nVolume EFI on disk0s1 unmounted\nUnmount successful for NO NAME/  \u597d\u4e86\u6211\u4eec\u7684\u7cfb\u7edfU\u76d8\u4e0a\u7684EFI\u5206\u533a\u5df2\u7ecf\u6709\u4e86\u5f15\u5bfc\u4fe1\u606f\uff0c\u8fd9\u6b21\u6309\u4f4f option \u5e76\u91cd\u542f\u5e94\u8be5\u80fd\u591f\u5f15\u5bfcUbuntu\u542f\u52a8\u4e86\u3002  localhost:Volumes wangzhizhou$ sudo reboot", 
            "title": "\u5b89\u88c5Ubuntu 16.04"
        }, 
        {
            "location": "/tech/Configure Git Server With Ubuntn and Apache 2/", 
            "text": "Configure Git Server With Ubuntu and Apache 2\n\n\nI always wanted to establish a local git server that I can push my code or other material on it. But there is no enough time for me to take it into practice. And This weekend, I make it working. So, I want to record this process for review.\n\n\nI have a \nRaspberry pi 3 Model B\n card computer, and Ubuntu system is hosted on it. So, I can manipulate it through the \nssh\n protocol by my Mac Book Pro terminal.\n\n\nSo, Let's start working!\n\n\nFirst, we should install the \ngit\n and \nApache Http Server\n, using command as follow:\n\n\nsudo apt-get -y install git apache2\n\n\n\n\nWith \ngit\n installed, we can create our repositories on local disk.\n\n\nWith \nApache2 Http Server\n installed, we can make the local disk repositories be access by other people connecting the same local network. \n\n\nSo, we should go under the directory: \n/var/www/html/\n to create our bare git repository and configure it with command: \n\n\npi@raspberrypi:~/Documents $ sudo git init --bare /var/www/html/sample.git\nInitialized empty Git repository in /var/www/html/sample.git/\npi@raspberrypi:~ $ cd /var/www/html/sample.git/hooks/\npi@raspberrypi:/var/www/html/sample.git/hooks $ sudo mv post-update.sample post-update\npi@raspberrypi:/var/www/html/sample.git/hooks $ sudo chmod a+x post-update \npi@raspberrypi:/var/www/html/sample.git/hooks $ cd ..\npi@raspberrypi:/var/www/html/sample.git $ sudo git update-server-info\n\n\n\n\nbecause the directory:\n/var/www/html/\n is the default apache2 http server's root directory.\n\n\nAfter we create the bare git repository under the server root directory, we should start the apache2 http server to make this repository been access by other in the same network.\n\n\nBefore we start apache, we should configure it. We add the line:\n\n\nServerName localhost:80\n\n\n\n\ninto the top of the configuration file named: \napache2.conf\n, which is under directory: \n/etc/apache2/\n. We can use the \nvim\n editor the change it as follow:\n\n\nsudo vi /etc/apache2/apache2.conf\n\n\n\n\nThe \napache2.conf\n be changed as follow:\n\n\nServerName localhost:80\n# This is the main Apache server configuration file.  It contains the\n# configuration directives that give the server its instructions.\n# See http://httpd.apache.org/docs/2.4/ for detailed information about\n# the directives and /usr/share/doc/apache2/README.Debian about Debian specific\n# hints.\n#\n#\n# Summary of how the Apache 2 configuration works in Debian:\n# The Apache 2 web server configuration in Debian is quite different to\n# upstream's suggested way to configure the web server. This is because Debian's\n# default Apache2 installation attempts to make adding and removing modules,\n# virtual hosts, and extra configuration directives as flexible as possible, in\n# order to make automating the changes and administering the server as easy as\n# possible.\n\n# It is split into several files forming the configuration hierarchy outlined\n# below, all located in the /etc/apache2/ directory:\n#\n#       /etc/apache2/\n#       |-- apache2.conf\n#       |       `--  ports.conf\n#       |-- mods-enabled\n#       |       |-- *.load\n\n\n\n\n\nWe save the changed file and exit with \n:wq\n vim command.\n\n\nNow, we shoud start the http serve using the command: \n\n\npi@raspberrypi:~ $ sudo /etc/init.d/apache2 restart \n[ ok ] Restarting apache2 (via systemctl): apache2.service.\n\n\n\n\nif you use your browser with url: \nhttp://192.168.0.121\n and see some web page with title \nApache2 Debian Default Page\n, congratulation! you web server is working.\n\n\n\n\nNote:\n  The \nip: 192.168.0.121\n may be not the same as you, because I installed the \nApache\n on my RPi3 and access from my notebook. Or you can use the \n127.0.0.1\n if you work in the same one computer)\n\n\n\n\nThen you can clone you repository from the apache http server with the command on another computer in the same network:\n\n\nlocalhost:~ wangzhizhou$ git clone http://192.168.0.121/sample.git\nCloning into 'sample'...\nwarning: You appear to have cloned an empty repository.\nChecking connectivity... done.\n\n\n\n\nOf course, you can clone the repository under the same computer with the command: \n\n\npi@raspberrypi:~ $ git clone http://localhost/sample.git\nCloning into 'sample'...\nwarning: You appear to have cloned an empty repository.\nChecking connectivity... done.\n\n\n\n\nor\n\n\npi@raspberrypi:~ $ git clone http://127.0.0.1/sample.git\nCloning into 'sample'...\nwarning: You appear to have cloned an empty repository.\nChecking connectivity... done.\n\n\n\n\nBecause, the \nlocalhost\n is equal the ip: \n127.0.0.1\n\n\nNow, you can pull repository from server, but you can not push your code to it, because the server directory access permission should be configured properly! This should be studied deeperly!", 
            "title": "Configure Git Server With Ubuntn and Apache 2"
        }, 
        {
            "location": "/tech/Configure Git Server With Ubuntn and Apache 2/#configure-git-server-with-ubuntu-and-apache-2", 
            "text": "I always wanted to establish a local git server that I can push my code or other material on it. But there is no enough time for me to take it into practice. And This weekend, I make it working. So, I want to record this process for review.  I have a  Raspberry pi 3 Model B  card computer, and Ubuntu system is hosted on it. So, I can manipulate it through the  ssh  protocol by my Mac Book Pro terminal.  So, Let's start working!  First, we should install the  git  and  Apache Http Server , using command as follow:  sudo apt-get -y install git apache2  With  git  installed, we can create our repositories on local disk.  With  Apache2 Http Server  installed, we can make the local disk repositories be access by other people connecting the same local network.   So, we should go under the directory:  /var/www/html/  to create our bare git repository and configure it with command:   pi@raspberrypi:~/Documents $ sudo git init --bare /var/www/html/sample.git\nInitialized empty Git repository in /var/www/html/sample.git/\npi@raspberrypi:~ $ cd /var/www/html/sample.git/hooks/\npi@raspberrypi:/var/www/html/sample.git/hooks $ sudo mv post-update.sample post-update\npi@raspberrypi:/var/www/html/sample.git/hooks $ sudo chmod a+x post-update \npi@raspberrypi:/var/www/html/sample.git/hooks $ cd ..\npi@raspberrypi:/var/www/html/sample.git $ sudo git update-server-info  because the directory: /var/www/html/  is the default apache2 http server's root directory.  After we create the bare git repository under the server root directory, we should start the apache2 http server to make this repository been access by other in the same network.  Before we start apache, we should configure it. We add the line:  ServerName localhost:80  into the top of the configuration file named:  apache2.conf , which is under directory:  /etc/apache2/ . We can use the  vim  editor the change it as follow:  sudo vi /etc/apache2/apache2.conf  The  apache2.conf  be changed as follow:  ServerName localhost:80\n# This is the main Apache server configuration file.  It contains the\n# configuration directives that give the server its instructions.\n# See http://httpd.apache.org/docs/2.4/ for detailed information about\n# the directives and /usr/share/doc/apache2/README.Debian about Debian specific\n# hints.\n#\n#\n# Summary of how the Apache 2 configuration works in Debian:\n# The Apache 2 web server configuration in Debian is quite different to\n# upstream's suggested way to configure the web server. This is because Debian's\n# default Apache2 installation attempts to make adding and removing modules,\n# virtual hosts, and extra configuration directives as flexible as possible, in\n# order to make automating the changes and administering the server as easy as\n# possible.\n\n# It is split into several files forming the configuration hierarchy outlined\n# below, all located in the /etc/apache2/ directory:\n#\n#       /etc/apache2/\n#       |-- apache2.conf\n#       |       `--  ports.conf\n#       |-- mods-enabled\n#       |       |-- *.load  We save the changed file and exit with  :wq  vim command.  Now, we shoud start the http serve using the command:   pi@raspberrypi:~ $ sudo /etc/init.d/apache2 restart \n[ ok ] Restarting apache2 (via systemctl): apache2.service.  if you use your browser with url:  http://192.168.0.121  and see some web page with title  Apache2 Debian Default Page , congratulation! you web server is working.   Note:   The  ip: 192.168.0.121  may be not the same as you, because I installed the  Apache  on my RPi3 and access from my notebook. Or you can use the  127.0.0.1  if you work in the same one computer)   Then you can clone you repository from the apache http server with the command on another computer in the same network:  localhost:~ wangzhizhou$ git clone http://192.168.0.121/sample.git\nCloning into 'sample'...\nwarning: You appear to have cloned an empty repository.\nChecking connectivity... done.  Of course, you can clone the repository under the same computer with the command:   pi@raspberrypi:~ $ git clone http://localhost/sample.git\nCloning into 'sample'...\nwarning: You appear to have cloned an empty repository.\nChecking connectivity... done.  or  pi@raspberrypi:~ $ git clone http://127.0.0.1/sample.git\nCloning into 'sample'...\nwarning: You appear to have cloned an empty repository.\nChecking connectivity... done.  Because, the  localhost  is equal the ip:  127.0.0.1  Now, you can pull repository from server, but you can not push your code to it, because the server directory access permission should be configured properly! This should be studied deeperly!", 
            "title": "Configure Git Server With Ubuntu and Apache 2"
        }, 
        {
            "location": "/tech/Add Watermark on Video with OpenCV and FFmpeg/", 
            "text": "Add Watermark on Video with OpenCV and FFmpeg\n\n\n\u4e4b\u524d\u5199\u8fc7\u4e00\u7bc7\nuse opencv to add watermark in a video\n\uff0c\u4f46\u662f\u53d1\u73b0\u6709\u4e2a\u95ee\u9898\uff1a\n\n\n\n\n\u5904\u7406\u540e\u7684\u89c6\u9891\u65e0\u6cd5\u4fdd\u7559\u539f\u6765\u89c6\u9891\u4e2d\u7684\u97f3\u9891\u4fe1\u606f\n\n\n\n\n\u6240\u4ee5\u51b3\u5b9a\u518d\u63a2\u7a76\u4e00\u4e0b\u3002\n\n\n\u7ecf\u8fc7\u8c03\u67e5\u53d1\u73b0\nFFmpeg\n\u5e94\u7528\u76f8\u5f53\u5e7f\u6cdb\uff0c\u51e0\u4e4e\u662f\u97f3\u89c6\u9891\u9886\u57df\u7684\u745e\u58eb\u519b\u5200\uff0c\u6240\u4ee5\u6211\u4e5f\u8bd5\u4e00\u4e0b\u6c34\uff0c\u7ecf\u8fc7\u4e09\u4e2a\u661f\u671f\u7684\u6478\u7d22\uff0c\u7ec8\u4e8e\u521d\u6b65\u89e3\u51b3\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u90a3\u4e2a\u95ee\u9898\u3002\u89c9\u5f97\u76f8\u5f53\u7684\u6b23\u6170\uff0c\u5bf9\u81ea\u5df1\u611f\u5230\u975e\u5e38\u6ee1\u610f ;-)\n\n\n\u7a0b\u5e8f\u7684\u4e3b\u8981\u529f\u80fd\u662f\uff0c\u8bfb\u5165\u4e00\u4e2a\u89c6\u9891(\u5176\u4e2d\u5305\u542b\u97f3\u9891)\uff0c\u7ed9\u89c6\u9891\u56fe\u50cf\u5de6\u4e0a\u89d2\u6dfb\u52a0\u4e00\u4e2a\u9ec4\u8272\u65b9\u5757\u540e\uff0c\u8f93\u51fa\u6210\u76f8\u540c\u683c\u5f0f\u7684\u89c6\u9891\u6587\u4ef6\uff0c\u5e76\u4fdd\u7559\u539f\u6587\u4ef6\u4e2d\u7684\u97f3\u9891\u4fe1\u606f\u3002\n\n\n\u4ee3\u7801\u6587\u4ef6: \nffmpeg-opencv-transcode.cpp\n\n\n\u6e90\u4ee3\u7801\n\n\n/**\n * Copyright (c) 2010 Nicolas George\n * Copyright (c) 2011 Stefano Sabatini\n * Copyright (c) 2014 Andrey Utkin\n\n * Copyright (c) 2016 Wang Zhizhou  email: 824219521@qq.com\n *      modified from ffmpeg offical example named: transcoding.c\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \nSoftware\n), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \nAS IS\n, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nextern \nC\n\n{\n#include \nlibavcodec/avcodec.h\n\n#include \nlibavformat/avformat.h\n\n#include \nlibavfilter/avfiltergraph.h\n\n#include \nlibavfilter/buffersink.h\n\n#include \nlibavfilter/buffersrc.h\n\n#include \nlibavutil/opt.h\n\n#include \nlibavutil/pixdesc.h\n\n#include \nlibswscale/swscale.h\n\n}\n\nstatic AVFormatContext *ifmt_ctx;\nstatic AVFormatContext *ofmt_ctx;\n\nstatic int open_input_file(const char *filename){\n    int ret;\n    unsigned int i;\n    ifmt_ctx = NULL;\n    if ((ret = avformat_open_input(\nifmt_ctx, filename, NULL, NULL)) \n 0) {\n        av_log(NULL, AV_LOG_ERROR, \nCannot open input file\\n\n);\n        return ret;\n    }\n    if ((ret = avformat_find_stream_info(ifmt_ctx, NULL)) \n 0) {\n        av_log(NULL, AV_LOG_ERROR, \nCannot find stream information\\n\n);\n        return ret;\n    }\n    for (i = 0; i \n ifmt_ctx-\nnb_streams; i++) {\n        AVStream *stream;\n        AVCodecContext *codec_ctx;\n        stream = ifmt_ctx-\nstreams[i];\n        codec_ctx = stream-\ncodec;\n        /* Reencode video \n audio and remux subtitles etc. */\n        if (codec_ctx-\ncodec_type == AVMEDIA_TYPE_VIDEO) {\n            /* Open decoder */\n            ret = avcodec_open2(codec_ctx,\n                                avcodec_find_decoder(codec_ctx-\ncodec_id), NULL);\n            if (ret \n 0) {\n                av_log(NULL, AV_LOG_ERROR, \nFailed to open decoder for stream #%u\\n\n, i);\n                return ret;\n            }\n        }\n    }\n    av_dump_format(ifmt_ctx, 0, filename, 0);\n    return 0;\n}\nstatic int open_output_file(const char *filename){\n    AVStream *out_stream;\n    AVStream *in_stream;\n    AVCodecContext *dec_ctx, *enc_ctx;\n    AVCodec *encoder;\n    int ret;\n    unsigned int i;\n    ofmt_ctx = NULL;\n    avformat_alloc_output_context2(\nofmt_ctx, NULL, NULL, filename);\n    if (!ofmt_ctx) {\n        av_log(NULL, AV_LOG_ERROR, \nCould not create output context\\n\n);\n        return AVERROR_UNKNOWN;\n    }\n    for (i = 0; i \n ifmt_ctx-\nnb_streams; i++) {\n        out_stream = avformat_new_stream(ofmt_ctx, NULL);\n        if (!out_stream) {\n            av_log(NULL, AV_LOG_ERROR, \nFailed allocating output stream\\n\n);\n            return AVERROR_UNKNOWN;\n        }\n        in_stream = ifmt_ctx-\nstreams[i];\n        dec_ctx = in_stream-\ncodec;\n        enc_ctx = out_stream-\ncodec;\n        if (dec_ctx-\ncodec_type == AVMEDIA_TYPE_VIDEO) {\n            /* in this example, we choose transcoding to same codec */\n            encoder = avcodec_find_encoder(dec_ctx-\ncodec_id);\n            if (!encoder) {\n                av_log(NULL, AV_LOG_FATAL, \nNecessary encoder not found\\n\n);\n                return AVERROR_INVALIDDATA;\n            }\n            /* In this example, we transcode to same properties (picture size,\n             * sample rate etc.). These properties can be changed for output\n             * streams easily using filters */\n\n            if (ofmt_ctx-\noformat-\nflags \n AVFMT_GLOBALHEADER)\n                enc_ctx-\nflags |= AV_CODEC_FLAG_GLOBAL_HEADER;\n\n\n            enc_ctx-\nheight = dec_ctx-\nheight;\n            enc_ctx-\nwidth = dec_ctx-\nwidth;\n            enc_ctx-\nsample_aspect_ratio = dec_ctx-\nsample_aspect_ratio;\n            /* take first format from list of supported formats */\n            if (encoder-\npix_fmts)\n                enc_ctx-\npix_fmt = encoder-\npix_fmts[0];\n            else\n                enc_ctx-\npix_fmt = dec_ctx-\npix_fmt;\n            /* video time_base can be set to whatever is handy and supported by encoder */\n            enc_ctx-\ntime_base = dec_ctx-\ntime_base;\n            out_stream-\ntime_base = enc_ctx-\ntime_base;\n\n            if(dec_ctx-\ncodec_id == AV_CODEC_ID_H264)\n            {\n                enc_ctx-\nme_range = 16;\n                enc_ctx-\nmax_qdiff = 4;\n                enc_ctx-\nqmin = 11;\n                enc_ctx-\nqmax =30;\n                enc_ctx-\nqcompress = 0.7;\n            }\n\n            /* Third parameter can be used to pass settings to encoder */\n            ret = avcodec_open2(enc_ctx, encoder, NULL);\n            if (ret \n 0) {\n                av_log(NULL, AV_LOG_ERROR, \nCannot open video encoder for stream #%u\\n\n, i);\n                return ret;\n            }\n        } else if (dec_ctx-\ncodec_type == AVMEDIA_TYPE_UNKNOWN) {\n            av_log(NULL, AV_LOG_FATAL, \nElementary stream #%d is of unknown type, cannot proceed\\n\n, i);\n            return AVERROR_INVALIDDATA;\n        } else {\n            /* if this stream must be remuxed */\n            ret = avcodec_copy_context(ofmt_ctx-\nstreams[i]-\ncodec,\n                                       ifmt_ctx-\nstreams[i]-\ncodec);\n\n            if(AVMEDIA_TYPE_AUDIO == ofmt_ctx-\nstreams[i]-\ncodec-\ncodec_type)\n            {\n                ofmt_ctx-\nstreams[i]-\ncodec-\ncodec_tag = 0;\n            }\n\n            if (ret \n 0) {\n                av_log(NULL, AV_LOG_ERROR, \nCopying stream context failed\\n\n);\n                return ret;\n            }\n        }\n    }\n    av_dump_format(ofmt_ctx, 0, filename, 1);\n    if (!(ofmt_ctx-\noformat-\nflags \n AVFMT_NOFILE)) {\n        ret = avio_open(\nofmt_ctx-\npb, filename, AVIO_FLAG_WRITE);\n        if (ret \n 0) {\n            av_log(NULL, AV_LOG_ERROR, \nCould not open output file '%s'\n, filename);\n            return ret;\n        }\n    }\n    /* init muxer, write output file header */\n    ret = avformat_write_header(ofmt_ctx, NULL);\n    if (ret \n 0) {\n        av_log(NULL, AV_LOG_ERROR, \nError occurred when opening output file\\n\n);\n        return ret;\n    }\n    return 0;\n}\nstatic int encode_write_frame(AVFrame *filt_frame, unsigned int stream_index, int *got_frame) {\n    int ret;\n    int got_frame_local;\n    AVPacket enc_pkt;\n    if (!got_frame)\n        got_frame = \ngot_frame_local;\n    av_log(NULL, AV_LOG_INFO, \nEncoding frame\\n\n);\n    /* encode filtered frame */\n    enc_pkt.data = NULL;\n    enc_pkt.size = 0;\n    av_init_packet(\nenc_pkt);\n    ret = avcodec_encode_video2(ofmt_ctx-\nstreams[stream_index]-\ncodec, \nenc_pkt,\n                   filt_frame, got_frame);\n    av_frame_free(\nfilt_frame);\n    if (ret \n 0)\n        return ret;\n    if (!(*got_frame))\n        return 0;\n    /* prepare packet for muxing */\n    enc_pkt.stream_index = stream_index;\n    av_packet_rescale_ts(\nenc_pkt,\n                         ofmt_ctx-\nstreams[stream_index]-\ncodec-\ntime_base,\n                         ofmt_ctx-\nstreams[stream_index]-\ntime_base);\n    av_log(NULL, AV_LOG_DEBUG, \nMuxing frame\\n\n);\n    /* mux encoded frame */\n    ret = av_interleaved_write_frame(ofmt_ctx, \nenc_pkt);\n    return ret;\n}\nstatic int flush_encoder(unsigned int stream_index){\n    int ret;\n    int got_frame;\n    if (!(ofmt_ctx-\nstreams[stream_index]-\ncodec-\ncodec-\ncapabilities \n\n          AV_CODEC_CAP_DELAY))\n        return 0;\n    while (1) {\n        av_log(NULL, AV_LOG_INFO, \nFlushing stream #%u encoder\\n\n, stream_index);\n        ret = encode_write_frame(NULL, stream_index, \ngot_frame);\n        if (ret \n 0)\n            break;\n        if (!got_frame)\n            return 0;\n    }\n    return ret;\n}\n\n//#define USE_OPENCV //\u6ce8\u91ca\u8fd9\u4e00\u53e5\u540e\u8fd0\u884c\uff0c\u5bf9\u5e94\u4e0d\u52a0\u6c34\u5370\u7684\u8f93\u51fa\u89c6\u9891\n\n#ifdef USE_OPENCV\n#include \nopencv2/opencv.hpp\n\nusing namespace std;\nusing namespace cv;\n\n\n\n/** \u8fd9\u4e2a\u51fd\u6570\u91cc\u4f7f\u7528OpenCV\u5904\u7406\u56fe\u50cf **/\nvoid addWaterMarkOnTheImage(Mat \nimageFrame)\n{\n    Mat waterMark = Mat(100,100,CV_8UC3,Scalar(0,255,255)); //\u6a21\u62df\u6c34\u5370\u56fe\u50cf\n\n    Mat imageROI = imageFrame(Rect(10,10,waterMark.cols,waterMark.rows));\n\n    cv::addWeighted(imageROI, 0, waterMark, 1, 0, imageROI); //\u6dfb\u52a0\u6c34\u5370\u5230\u89c6\u9891\u56fe\u50cf\u5e27\u4e0a\n}\n/** ------ **/\n\n\n\n\nAVFrame* useOpenCVProcessFrame(AVFrame *frame, int stream_index)\n{\n    AVStream *in_stream = ifmt_ctx-\nstreams[stream_index];\n    AVCodecContext *pCodecCtx = in_stream-\ncodec;\n\n    AVFrame  *pFrameRGB = NULL;\n\n    /* \u6e90\u56fe\u50cf\u683c\u5f0f\u5411BGR24\u8f6c\u6362 */\n    struct SwsContext * img_convert_ctx = NULL;\n    if(img_convert_ctx == NULL){\n        img_convert_ctx = sws_getContext(pCodecCtx-\nwidth, pCodecCtx-\nheight,\n                                         pCodecCtx-\npix_fmt, pCodecCtx-\nwidth, pCodecCtx-\nheight,\n                                         AV_PIX_FMT_BGR24, SWS_BICUBIC, NULL, NULL, NULL);\n    }\n    pFrameRGB = av_frame_alloc();\n    int size = avpicture_get_size(AV_PIX_FMT_BGR24, pCodecCtx-\nwidth, pCodecCtx-\nheight);\n    uint8_t  *out_bufferRGB = new uint8_t[size];\n\n    avpicture_fill((AVPicture *)pFrameRGB, out_bufferRGB, AV_PIX_FMT_BGR24, pCodecCtx-\nwidth, pCodecCtx-\nheight);\n\n    sws_scale(img_convert_ctx, frame-\ndata, frame-\nlinesize, 0, pCodecCtx-\nheight, pFrameRGB-\ndata, pFrameRGB-\nlinesize);\n\n    Mat imageFrame = Mat(pCodecCtx-\nheight, pCodecCtx-\nwidth, CV_8UC3);\n\n    memcpy(imageFrame.data, out_bufferRGB, size);\n    delete[] out_bufferRGB;\n    /*** \u6e90\u56fe\u50cf\u683c\u5f0f\u5411BGR24\u8f6c\u6362\u7ed3\u675f ***/\n\n\n    addWaterMarkOnTheImage(imageFrame);//\u4f7f\u7528OpenCV\u5411\u56fe\u50cf\u6dfb\u52a0\u6c34\u5370\n\n\n    imshow(\nimage\n,imageFrame);\n    waitKey(1);\n\n\n    //OpenCV Mat\u56fe\u50cf\u6570\u636e\u8f6c\u4e3aFFmpeg AVFrame\u56fe\u50cf\u5e27\u6570\u636e\n    avpicture_fill((AVPicture *)pFrameRGB, imageFrame.data,AV_PIX_FMT_BGR24, pCodecCtx-\nwidth, pCodecCtx-\nheight);\n\n    /* BGR24\u5411\u6e90\u56fe\u50cf\u683c\u5f0f\u8f6c\u6362 */\n    struct SwsContext * convert_ctx = NULL;\n    if(convert_ctx == NULL){\n        convert_ctx = sws_getContext(pCodecCtx-\nwidth, pCodecCtx-\nheight,\n                                         AV_PIX_FMT_BGR24, pCodecCtx-\nwidth, pCodecCtx-\nheight,\n                                         pCodecCtx-\npix_fmt, SWS_BICUBIC, NULL, NULL, NULL);\n    }\n\n    AVFrame *srcFrame = av_frame_alloc();\n    size = avpicture_get_size(pCodecCtx-\npix_fmt, pCodecCtx-\nwidth, pCodecCtx-\nheight);\n    uint8_t  *out_buffer = new uint8_t[size];\n\n    avpicture_fill((AVPicture *)srcFrame, out_buffer, pCodecCtx-\npix_fmt, pCodecCtx-\nwidth, pCodecCtx-\nheight);\n\n    sws_scale(convert_ctx, pFrameRGB-\ndata, pFrameRGB-\nlinesize, 0, pCodecCtx-\nheight, srcFrame-\ndata, srcFrame-\nlinesize);\n\n    delete[] out_buffer;\n    /*** BGR24\u5411\u6e90\u56fe\u50cf\u683c\u5f0f\u8f6c\u6362\u7ed3\u675f ***/\n    av_free(pFrameRGB);\n\n    srcFrame-\nwidth = frame-\nwidth;\n    srcFrame-\nheight = frame-\nheight;\n    srcFrame-\nformat = frame-\nformat;\n\n    av_frame_copy_props(srcFrame, frame);\n\n    return srcFrame;\n}\n\n#endif\n\n\nint main(int argc, char **argv){\n    int ret;\n    AVPacket packet = { .data = NULL, .size = 0 };\n    AVFrame *frame = NULL;\n    enum AVMediaType type;\n    unsigned int stream_index;\n    unsigned int i;\n    int got_frame;\n    if (argc != 3) {\n        av_log(NULL, AV_LOG_ERROR, \nUsage: %s \ninput file\n \noutput file\n\\n\n, argv[0]);\n        return 1;\n    }\n    av_register_all();\n    avfilter_register_all();\n    if ((ret = open_input_file(argv[1])) \n 0)\n        goto end;\n    if ((ret = open_output_file(argv[2])) \n 0)\n        goto end;\n    /* read all packets */\n    while (1) {\n        if ((ret = av_read_frame(ifmt_ctx, \npacket)) \n 0)\n            break;\n        stream_index = packet.stream_index;\n        type = ifmt_ctx-\nstreams[packet.stream_index]-\ncodec-\ncodec_type;\n        av_log(NULL, AV_LOG_DEBUG, \nDemuxer gave frame of stream_index %u\\n\n,\n               stream_index);\n        if (type == AVMEDIA_TYPE_VIDEO) {\n            av_log(NULL, AV_LOG_DEBUG, \nGoing to reencode\nfilter the frame\\n\n);\n            frame = av_frame_alloc();\n            if (!frame) {\n                ret = AVERROR(ENOMEM);\n                break;\n            }\n            av_packet_rescale_ts(\npacket,\n                                 ifmt_ctx-\nstreams[stream_index]-\ntime_base,\n                                 ifmt_ctx-\nstreams[stream_index]-\ncodec-\ntime_base);\n\n            ret = avcodec_decode_video2(ifmt_ctx-\nstreams[stream_index]-\ncodec, frame,\n                           \ngot_frame, \npacket);\n            if (ret \n 0) {\n                av_frame_free(\nframe);\n                av_log(NULL, AV_LOG_ERROR, \nDecoding failed\\n\n);\n                break;\n            }\n            if (got_frame) {\n\n#ifdef USE_OPENCV\n                AVFrame *convertFrame = useOpenCVProcessFrame(frame,stream_index);\n                convertFrame-\npts = av_frame_get_best_effort_timestamp(frame);\n                convertFrame-\npict_type =  AV_PICTURE_TYPE_NONE;\n                ret = encode_write_frame(convertFrame, stream_index, NULL);\n#else\n                frame-\npts = av_frame_get_best_effort_timestamp(frame);\n                frame-\npict_type =  AV_PICTURE_TYPE_NONE;\n                ret = encode_write_frame(frame, stream_index, NULL);\n#endif\n\n                if (ret \n 0)\n                    goto end;\n            } else {\n                av_frame_free(\nframe);\n            }\n        } else {\n            /* remux this frame without reencoding */\n            av_packet_rescale_ts(\npacket,\n                                 ifmt_ctx-\nstreams[stream_index]-\ntime_base,\n                                 ofmt_ctx-\nstreams[stream_index]-\ntime_base);\n            ret = av_interleaved_write_frame(ofmt_ctx, \npacket);\n            if (ret \n 0)\n                goto end;\n        }\n        av_packet_unref(\npacket);\n    }\n    /* flush filters and encoders */\n    for (i = 0; i \n ifmt_ctx-\nnb_streams; i++) {\n        /* flush encoder */\n        if(ifmt_ctx-\nstreams[i]-\ncodec-\ncodec_type == AVMEDIA_TYPE_VIDEO)\n        {\n            ret = flush_encoder(i);\n            if (ret \n 0) {\n                av_log(NULL, AV_LOG_ERROR, \nFlushing encoder failed\\n\n);\n                goto end;\n            }\n        }\n    }\n    av_write_trailer(ofmt_ctx);\nend:\n    av_packet_unref(\npacket);\n    for (i = 0; i \n ifmt_ctx-\nnb_streams; i++) {\n        avcodec_close(ifmt_ctx-\nstreams[i]-\ncodec);\n        if (ofmt_ctx \n ofmt_ctx-\nnb_streams \n i \n ofmt_ctx-\nstreams[i] \n ofmt_ctx-\nstreams[i]-\ncodec)\n            avcodec_close(ofmt_ctx-\nstreams[i]-\ncodec);\n    }\n    avformat_close_input(\nifmt_ctx);\n    if (ofmt_ctx \n !(ofmt_ctx-\noformat-\nflags \n AVFMT_NOFILE))\n        avio_closep(\nofmt_ctx-\npb);\n    avformat_free_context(ofmt_ctx);\n    if (ret \n 0)\n        av_log(NULL, AV_LOG_ERROR, \nError occurred: %s\\n\n, av_err2str(ret));\n    return ret ? 1 : 0;\n}\n\n\n\n\n\u672c\u7a0b\u5e8f\u8fd0\u884c\u8c03\u7528\u4e86\nffmpeg-2.8.6\n\u548c\nopencv-3.0.1\n\u7248\u7684\u5e93(\u5e93\u7684\u5b89\u88c5\u8bfb\u8005\u8fd8\u662f\u81ea\u5df1\u641e\u5b9a\u5427\uff0c\u6709\u4e8b\u8054\u7cfb: 824219521@qq.com)\n\n\n\u7f16\u8bd1\n\n\n\u4f7f\u7528g++\u7f16\u8bd1\uff0c\u7f16\u8bd1\u547d\u4ee4\u5982\u4e0b\uff1a\n\n\ng++ ffmpeg-opencv-transcode.cpp -I/usr/local/include -L/usr/local/lib -lavcodec -lavformat -lswscale -lavfilter -lavutil -lx264 -lz -lm -lopencv_imgproc -lopencv_highgui -lopencv_core\n\n\n\n\n\u4f7f\u7528\n\n\n\u4f7f\u7528\u65b9\u6cd5\uff1a\n\n\n./a.out input.mp4 output.mp4\n\n\n\n\n\u6d4b\u8bd5\u89c6\u9891\n\n\n\u8fd9\u91cc\u6709\u51e0\u4e2a\u6d4b\u8bd5\u89c6\u9891\u53ef\u4f9b\u4f7f\u7528\uff1a\n\n\n\n\n\n\n1.mp4\n\n\n\n\n\n\n2.mp4", 
            "title": "Add Watermark on Video with OpenCV and FFmpeg"
        }, 
        {
            "location": "/tech/Add Watermark on Video with OpenCV and FFmpeg/#add-watermark-on-video-with-opencv-and-ffmpeg", 
            "text": "\u4e4b\u524d\u5199\u8fc7\u4e00\u7bc7 use opencv to add watermark in a video \uff0c\u4f46\u662f\u53d1\u73b0\u6709\u4e2a\u95ee\u9898\uff1a   \u5904\u7406\u540e\u7684\u89c6\u9891\u65e0\u6cd5\u4fdd\u7559\u539f\u6765\u89c6\u9891\u4e2d\u7684\u97f3\u9891\u4fe1\u606f   \u6240\u4ee5\u51b3\u5b9a\u518d\u63a2\u7a76\u4e00\u4e0b\u3002  \u7ecf\u8fc7\u8c03\u67e5\u53d1\u73b0 FFmpeg \u5e94\u7528\u76f8\u5f53\u5e7f\u6cdb\uff0c\u51e0\u4e4e\u662f\u97f3\u89c6\u9891\u9886\u57df\u7684\u745e\u58eb\u519b\u5200\uff0c\u6240\u4ee5\u6211\u4e5f\u8bd5\u4e00\u4e0b\u6c34\uff0c\u7ecf\u8fc7\u4e09\u4e2a\u661f\u671f\u7684\u6478\u7d22\uff0c\u7ec8\u4e8e\u521d\u6b65\u89e3\u51b3\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u90a3\u4e2a\u95ee\u9898\u3002\u89c9\u5f97\u76f8\u5f53\u7684\u6b23\u6170\uff0c\u5bf9\u81ea\u5df1\u611f\u5230\u975e\u5e38\u6ee1\u610f ;-)  \u7a0b\u5e8f\u7684\u4e3b\u8981\u529f\u80fd\u662f\uff0c\u8bfb\u5165\u4e00\u4e2a\u89c6\u9891(\u5176\u4e2d\u5305\u542b\u97f3\u9891)\uff0c\u7ed9\u89c6\u9891\u56fe\u50cf\u5de6\u4e0a\u89d2\u6dfb\u52a0\u4e00\u4e2a\u9ec4\u8272\u65b9\u5757\u540e\uff0c\u8f93\u51fa\u6210\u76f8\u540c\u683c\u5f0f\u7684\u89c6\u9891\u6587\u4ef6\uff0c\u5e76\u4fdd\u7559\u539f\u6587\u4ef6\u4e2d\u7684\u97f3\u9891\u4fe1\u606f\u3002  \u4ee3\u7801\u6587\u4ef6:  ffmpeg-opencv-transcode.cpp", 
            "title": "Add Watermark on Video with OpenCV and FFmpeg"
        }, 
        {
            "location": "/tech/Add Watermark on Video with OpenCV and FFmpeg/#_1", 
            "text": "/**\n * Copyright (c) 2010 Nicolas George\n * Copyright (c) 2011 Stefano Sabatini\n * Copyright (c) 2014 Andrey Utkin\n\n * Copyright (c) 2016 Wang Zhizhou  email: 824219521@qq.com\n *      modified from ffmpeg offical example named: transcoding.c\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the  Software ), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED  AS IS , WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nextern  C \n{\n#include  libavcodec/avcodec.h \n#include  libavformat/avformat.h \n#include  libavfilter/avfiltergraph.h \n#include  libavfilter/buffersink.h \n#include  libavfilter/buffersrc.h \n#include  libavutil/opt.h \n#include  libavutil/pixdesc.h \n#include  libswscale/swscale.h \n}\n\nstatic AVFormatContext *ifmt_ctx;\nstatic AVFormatContext *ofmt_ctx;\n\nstatic int open_input_file(const char *filename){\n    int ret;\n    unsigned int i;\n    ifmt_ctx = NULL;\n    if ((ret = avformat_open_input( ifmt_ctx, filename, NULL, NULL))   0) {\n        av_log(NULL, AV_LOG_ERROR,  Cannot open input file\\n );\n        return ret;\n    }\n    if ((ret = avformat_find_stream_info(ifmt_ctx, NULL))   0) {\n        av_log(NULL, AV_LOG_ERROR,  Cannot find stream information\\n );\n        return ret;\n    }\n    for (i = 0; i   ifmt_ctx- nb_streams; i++) {\n        AVStream *stream;\n        AVCodecContext *codec_ctx;\n        stream = ifmt_ctx- streams[i];\n        codec_ctx = stream- codec;\n        /* Reencode video   audio and remux subtitles etc. */\n        if (codec_ctx- codec_type == AVMEDIA_TYPE_VIDEO) {\n            /* Open decoder */\n            ret = avcodec_open2(codec_ctx,\n                                avcodec_find_decoder(codec_ctx- codec_id), NULL);\n            if (ret   0) {\n                av_log(NULL, AV_LOG_ERROR,  Failed to open decoder for stream #%u\\n , i);\n                return ret;\n            }\n        }\n    }\n    av_dump_format(ifmt_ctx, 0, filename, 0);\n    return 0;\n}\nstatic int open_output_file(const char *filename){\n    AVStream *out_stream;\n    AVStream *in_stream;\n    AVCodecContext *dec_ctx, *enc_ctx;\n    AVCodec *encoder;\n    int ret;\n    unsigned int i;\n    ofmt_ctx = NULL;\n    avformat_alloc_output_context2( ofmt_ctx, NULL, NULL, filename);\n    if (!ofmt_ctx) {\n        av_log(NULL, AV_LOG_ERROR,  Could not create output context\\n );\n        return AVERROR_UNKNOWN;\n    }\n    for (i = 0; i   ifmt_ctx- nb_streams; i++) {\n        out_stream = avformat_new_stream(ofmt_ctx, NULL);\n        if (!out_stream) {\n            av_log(NULL, AV_LOG_ERROR,  Failed allocating output stream\\n );\n            return AVERROR_UNKNOWN;\n        }\n        in_stream = ifmt_ctx- streams[i];\n        dec_ctx = in_stream- codec;\n        enc_ctx = out_stream- codec;\n        if (dec_ctx- codec_type == AVMEDIA_TYPE_VIDEO) {\n            /* in this example, we choose transcoding to same codec */\n            encoder = avcodec_find_encoder(dec_ctx- codec_id);\n            if (!encoder) {\n                av_log(NULL, AV_LOG_FATAL,  Necessary encoder not found\\n );\n                return AVERROR_INVALIDDATA;\n            }\n            /* In this example, we transcode to same properties (picture size,\n             * sample rate etc.). These properties can be changed for output\n             * streams easily using filters */\n\n            if (ofmt_ctx- oformat- flags   AVFMT_GLOBALHEADER)\n                enc_ctx- flags |= AV_CODEC_FLAG_GLOBAL_HEADER;\n\n\n            enc_ctx- height = dec_ctx- height;\n            enc_ctx- width = dec_ctx- width;\n            enc_ctx- sample_aspect_ratio = dec_ctx- sample_aspect_ratio;\n            /* take first format from list of supported formats */\n            if (encoder- pix_fmts)\n                enc_ctx- pix_fmt = encoder- pix_fmts[0];\n            else\n                enc_ctx- pix_fmt = dec_ctx- pix_fmt;\n            /* video time_base can be set to whatever is handy and supported by encoder */\n            enc_ctx- time_base = dec_ctx- time_base;\n            out_stream- time_base = enc_ctx- time_base;\n\n            if(dec_ctx- codec_id == AV_CODEC_ID_H264)\n            {\n                enc_ctx- me_range = 16;\n                enc_ctx- max_qdiff = 4;\n                enc_ctx- qmin = 11;\n                enc_ctx- qmax =30;\n                enc_ctx- qcompress = 0.7;\n            }\n\n            /* Third parameter can be used to pass settings to encoder */\n            ret = avcodec_open2(enc_ctx, encoder, NULL);\n            if (ret   0) {\n                av_log(NULL, AV_LOG_ERROR,  Cannot open video encoder for stream #%u\\n , i);\n                return ret;\n            }\n        } else if (dec_ctx- codec_type == AVMEDIA_TYPE_UNKNOWN) {\n            av_log(NULL, AV_LOG_FATAL,  Elementary stream #%d is of unknown type, cannot proceed\\n , i);\n            return AVERROR_INVALIDDATA;\n        } else {\n            /* if this stream must be remuxed */\n            ret = avcodec_copy_context(ofmt_ctx- streams[i]- codec,\n                                       ifmt_ctx- streams[i]- codec);\n\n            if(AVMEDIA_TYPE_AUDIO == ofmt_ctx- streams[i]- codec- codec_type)\n            {\n                ofmt_ctx- streams[i]- codec- codec_tag = 0;\n            }\n\n            if (ret   0) {\n                av_log(NULL, AV_LOG_ERROR,  Copying stream context failed\\n );\n                return ret;\n            }\n        }\n    }\n    av_dump_format(ofmt_ctx, 0, filename, 1);\n    if (!(ofmt_ctx- oformat- flags   AVFMT_NOFILE)) {\n        ret = avio_open( ofmt_ctx- pb, filename, AVIO_FLAG_WRITE);\n        if (ret   0) {\n            av_log(NULL, AV_LOG_ERROR,  Could not open output file '%s' , filename);\n            return ret;\n        }\n    }\n    /* init muxer, write output file header */\n    ret = avformat_write_header(ofmt_ctx, NULL);\n    if (ret   0) {\n        av_log(NULL, AV_LOG_ERROR,  Error occurred when opening output file\\n );\n        return ret;\n    }\n    return 0;\n}\nstatic int encode_write_frame(AVFrame *filt_frame, unsigned int stream_index, int *got_frame) {\n    int ret;\n    int got_frame_local;\n    AVPacket enc_pkt;\n    if (!got_frame)\n        got_frame =  got_frame_local;\n    av_log(NULL, AV_LOG_INFO,  Encoding frame\\n );\n    /* encode filtered frame */\n    enc_pkt.data = NULL;\n    enc_pkt.size = 0;\n    av_init_packet( enc_pkt);\n    ret = avcodec_encode_video2(ofmt_ctx- streams[stream_index]- codec,  enc_pkt,\n                   filt_frame, got_frame);\n    av_frame_free( filt_frame);\n    if (ret   0)\n        return ret;\n    if (!(*got_frame))\n        return 0;\n    /* prepare packet for muxing */\n    enc_pkt.stream_index = stream_index;\n    av_packet_rescale_ts( enc_pkt,\n                         ofmt_ctx- streams[stream_index]- codec- time_base,\n                         ofmt_ctx- streams[stream_index]- time_base);\n    av_log(NULL, AV_LOG_DEBUG,  Muxing frame\\n );\n    /* mux encoded frame */\n    ret = av_interleaved_write_frame(ofmt_ctx,  enc_pkt);\n    return ret;\n}\nstatic int flush_encoder(unsigned int stream_index){\n    int ret;\n    int got_frame;\n    if (!(ofmt_ctx- streams[stream_index]- codec- codec- capabilities  \n          AV_CODEC_CAP_DELAY))\n        return 0;\n    while (1) {\n        av_log(NULL, AV_LOG_INFO,  Flushing stream #%u encoder\\n , stream_index);\n        ret = encode_write_frame(NULL, stream_index,  got_frame);\n        if (ret   0)\n            break;\n        if (!got_frame)\n            return 0;\n    }\n    return ret;\n}\n\n//#define USE_OPENCV //\u6ce8\u91ca\u8fd9\u4e00\u53e5\u540e\u8fd0\u884c\uff0c\u5bf9\u5e94\u4e0d\u52a0\u6c34\u5370\u7684\u8f93\u51fa\u89c6\u9891\n\n#ifdef USE_OPENCV\n#include  opencv2/opencv.hpp \nusing namespace std;\nusing namespace cv;\n\n\n\n/** \u8fd9\u4e2a\u51fd\u6570\u91cc\u4f7f\u7528OpenCV\u5904\u7406\u56fe\u50cf **/\nvoid addWaterMarkOnTheImage(Mat  imageFrame)\n{\n    Mat waterMark = Mat(100,100,CV_8UC3,Scalar(0,255,255)); //\u6a21\u62df\u6c34\u5370\u56fe\u50cf\n\n    Mat imageROI = imageFrame(Rect(10,10,waterMark.cols,waterMark.rows));\n\n    cv::addWeighted(imageROI, 0, waterMark, 1, 0, imageROI); //\u6dfb\u52a0\u6c34\u5370\u5230\u89c6\u9891\u56fe\u50cf\u5e27\u4e0a\n}\n/** ------ **/\n\n\n\n\nAVFrame* useOpenCVProcessFrame(AVFrame *frame, int stream_index)\n{\n    AVStream *in_stream = ifmt_ctx- streams[stream_index];\n    AVCodecContext *pCodecCtx = in_stream- codec;\n\n    AVFrame  *pFrameRGB = NULL;\n\n    /* \u6e90\u56fe\u50cf\u683c\u5f0f\u5411BGR24\u8f6c\u6362 */\n    struct SwsContext * img_convert_ctx = NULL;\n    if(img_convert_ctx == NULL){\n        img_convert_ctx = sws_getContext(pCodecCtx- width, pCodecCtx- height,\n                                         pCodecCtx- pix_fmt, pCodecCtx- width, pCodecCtx- height,\n                                         AV_PIX_FMT_BGR24, SWS_BICUBIC, NULL, NULL, NULL);\n    }\n    pFrameRGB = av_frame_alloc();\n    int size = avpicture_get_size(AV_PIX_FMT_BGR24, pCodecCtx- width, pCodecCtx- height);\n    uint8_t  *out_bufferRGB = new uint8_t[size];\n\n    avpicture_fill((AVPicture *)pFrameRGB, out_bufferRGB, AV_PIX_FMT_BGR24, pCodecCtx- width, pCodecCtx- height);\n\n    sws_scale(img_convert_ctx, frame- data, frame- linesize, 0, pCodecCtx- height, pFrameRGB- data, pFrameRGB- linesize);\n\n    Mat imageFrame = Mat(pCodecCtx- height, pCodecCtx- width, CV_8UC3);\n\n    memcpy(imageFrame.data, out_bufferRGB, size);\n    delete[] out_bufferRGB;\n    /*** \u6e90\u56fe\u50cf\u683c\u5f0f\u5411BGR24\u8f6c\u6362\u7ed3\u675f ***/\n\n\n    addWaterMarkOnTheImage(imageFrame);//\u4f7f\u7528OpenCV\u5411\u56fe\u50cf\u6dfb\u52a0\u6c34\u5370\n\n\n    imshow( image ,imageFrame);\n    waitKey(1);\n\n\n    //OpenCV Mat\u56fe\u50cf\u6570\u636e\u8f6c\u4e3aFFmpeg AVFrame\u56fe\u50cf\u5e27\u6570\u636e\n    avpicture_fill((AVPicture *)pFrameRGB, imageFrame.data,AV_PIX_FMT_BGR24, pCodecCtx- width, pCodecCtx- height);\n\n    /* BGR24\u5411\u6e90\u56fe\u50cf\u683c\u5f0f\u8f6c\u6362 */\n    struct SwsContext * convert_ctx = NULL;\n    if(convert_ctx == NULL){\n        convert_ctx = sws_getContext(pCodecCtx- width, pCodecCtx- height,\n                                         AV_PIX_FMT_BGR24, pCodecCtx- width, pCodecCtx- height,\n                                         pCodecCtx- pix_fmt, SWS_BICUBIC, NULL, NULL, NULL);\n    }\n\n    AVFrame *srcFrame = av_frame_alloc();\n    size = avpicture_get_size(pCodecCtx- pix_fmt, pCodecCtx- width, pCodecCtx- height);\n    uint8_t  *out_buffer = new uint8_t[size];\n\n    avpicture_fill((AVPicture *)srcFrame, out_buffer, pCodecCtx- pix_fmt, pCodecCtx- width, pCodecCtx- height);\n\n    sws_scale(convert_ctx, pFrameRGB- data, pFrameRGB- linesize, 0, pCodecCtx- height, srcFrame- data, srcFrame- linesize);\n\n    delete[] out_buffer;\n    /*** BGR24\u5411\u6e90\u56fe\u50cf\u683c\u5f0f\u8f6c\u6362\u7ed3\u675f ***/\n    av_free(pFrameRGB);\n\n    srcFrame- width = frame- width;\n    srcFrame- height = frame- height;\n    srcFrame- format = frame- format;\n\n    av_frame_copy_props(srcFrame, frame);\n\n    return srcFrame;\n}\n\n#endif\n\n\nint main(int argc, char **argv){\n    int ret;\n    AVPacket packet = { .data = NULL, .size = 0 };\n    AVFrame *frame = NULL;\n    enum AVMediaType type;\n    unsigned int stream_index;\n    unsigned int i;\n    int got_frame;\n    if (argc != 3) {\n        av_log(NULL, AV_LOG_ERROR,  Usage: %s  input file   output file \\n , argv[0]);\n        return 1;\n    }\n    av_register_all();\n    avfilter_register_all();\n    if ((ret = open_input_file(argv[1]))   0)\n        goto end;\n    if ((ret = open_output_file(argv[2]))   0)\n        goto end;\n    /* read all packets */\n    while (1) {\n        if ((ret = av_read_frame(ifmt_ctx,  packet))   0)\n            break;\n        stream_index = packet.stream_index;\n        type = ifmt_ctx- streams[packet.stream_index]- codec- codec_type;\n        av_log(NULL, AV_LOG_DEBUG,  Demuxer gave frame of stream_index %u\\n ,\n               stream_index);\n        if (type == AVMEDIA_TYPE_VIDEO) {\n            av_log(NULL, AV_LOG_DEBUG,  Going to reencode filter the frame\\n );\n            frame = av_frame_alloc();\n            if (!frame) {\n                ret = AVERROR(ENOMEM);\n                break;\n            }\n            av_packet_rescale_ts( packet,\n                                 ifmt_ctx- streams[stream_index]- time_base,\n                                 ifmt_ctx- streams[stream_index]- codec- time_base);\n\n            ret = avcodec_decode_video2(ifmt_ctx- streams[stream_index]- codec, frame,\n                            got_frame,  packet);\n            if (ret   0) {\n                av_frame_free( frame);\n                av_log(NULL, AV_LOG_ERROR,  Decoding failed\\n );\n                break;\n            }\n            if (got_frame) {\n\n#ifdef USE_OPENCV\n                AVFrame *convertFrame = useOpenCVProcessFrame(frame,stream_index);\n                convertFrame- pts = av_frame_get_best_effort_timestamp(frame);\n                convertFrame- pict_type =  AV_PICTURE_TYPE_NONE;\n                ret = encode_write_frame(convertFrame, stream_index, NULL);\n#else\n                frame- pts = av_frame_get_best_effort_timestamp(frame);\n                frame- pict_type =  AV_PICTURE_TYPE_NONE;\n                ret = encode_write_frame(frame, stream_index, NULL);\n#endif\n\n                if (ret   0)\n                    goto end;\n            } else {\n                av_frame_free( frame);\n            }\n        } else {\n            /* remux this frame without reencoding */\n            av_packet_rescale_ts( packet,\n                                 ifmt_ctx- streams[stream_index]- time_base,\n                                 ofmt_ctx- streams[stream_index]- time_base);\n            ret = av_interleaved_write_frame(ofmt_ctx,  packet);\n            if (ret   0)\n                goto end;\n        }\n        av_packet_unref( packet);\n    }\n    /* flush filters and encoders */\n    for (i = 0; i   ifmt_ctx- nb_streams; i++) {\n        /* flush encoder */\n        if(ifmt_ctx- streams[i]- codec- codec_type == AVMEDIA_TYPE_VIDEO)\n        {\n            ret = flush_encoder(i);\n            if (ret   0) {\n                av_log(NULL, AV_LOG_ERROR,  Flushing encoder failed\\n );\n                goto end;\n            }\n        }\n    }\n    av_write_trailer(ofmt_ctx);\nend:\n    av_packet_unref( packet);\n    for (i = 0; i   ifmt_ctx- nb_streams; i++) {\n        avcodec_close(ifmt_ctx- streams[i]- codec);\n        if (ofmt_ctx   ofmt_ctx- nb_streams   i   ofmt_ctx- streams[i]   ofmt_ctx- streams[i]- codec)\n            avcodec_close(ofmt_ctx- streams[i]- codec);\n    }\n    avformat_close_input( ifmt_ctx);\n    if (ofmt_ctx   !(ofmt_ctx- oformat- flags   AVFMT_NOFILE))\n        avio_closep( ofmt_ctx- pb);\n    avformat_free_context(ofmt_ctx);\n    if (ret   0)\n        av_log(NULL, AV_LOG_ERROR,  Error occurred: %s\\n , av_err2str(ret));\n    return ret ? 1 : 0;\n}  \u672c\u7a0b\u5e8f\u8fd0\u884c\u8c03\u7528\u4e86 ffmpeg-2.8.6 \u548c opencv-3.0.1 \u7248\u7684\u5e93(\u5e93\u7684\u5b89\u88c5\u8bfb\u8005\u8fd8\u662f\u81ea\u5df1\u641e\u5b9a\u5427\uff0c\u6709\u4e8b\u8054\u7cfb: 824219521@qq.com)", 
            "title": "\u6e90\u4ee3\u7801"
        }, 
        {
            "location": "/tech/Add Watermark on Video with OpenCV and FFmpeg/#_2", 
            "text": "\u4f7f\u7528g++\u7f16\u8bd1\uff0c\u7f16\u8bd1\u547d\u4ee4\u5982\u4e0b\uff1a  g++ ffmpeg-opencv-transcode.cpp -I/usr/local/include -L/usr/local/lib -lavcodec -lavformat -lswscale -lavfilter -lavutil -lx264 -lz -lm -lopencv_imgproc -lopencv_highgui -lopencv_core", 
            "title": "\u7f16\u8bd1"
        }, 
        {
            "location": "/tech/Add Watermark on Video with OpenCV and FFmpeg/#_3", 
            "text": "\u4f7f\u7528\u65b9\u6cd5\uff1a  ./a.out input.mp4 output.mp4", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/tech/Add Watermark on Video with OpenCV and FFmpeg/#_4", 
            "text": "\u8fd9\u91cc\u6709\u51e0\u4e2a\u6d4b\u8bd5\u89c6\u9891\u53ef\u4f9b\u4f7f\u7528\uff1a    1.mp4    2.mp4", 
            "title": "\u6d4b\u8bd5\u89c6\u9891"
        }, 
        {
            "location": "/tech/Develop DLNA Using Platinum Library/", 
            "text": "Develop DLNA Using Platinum Library\n\n\n\u8fd9\u51e0\u5929\u516c\u53f8\u7684\u5e94\u7528(iOS\u7aef)\u4e0a\u8981\u52a0\u4e00\u4e2a\ndlna\n\u7684\u529f\u80fd\uff0c\u5c31\u662f\u5c40\u57df\u7f51\u5185\u8bbe\u5907\u6295\u5c4f\u63a7\u5236\u7684\u4e00\u4e2a\u529f\u80fd\uff0c\u5e76\u63d0\u4f9b\u79fb\u52a8\u7aef\u63a7\u5236\u3002\u56e0\u4e3a\u4e09\u65b9\u5e93Platinum\u662f\u4f7f\u7528C++\u5199\u7684\uff0c\u6240\u4ee5\u6211\u88ab\u5206\u914d\u53bb\u505a\u5e93\u7684Objective-C\u5c01\u88c5\u7684\u5de5\u4f5c\u3002\u7b2c\u4e00\u6b21\u63a5\u624b\u8fd9\u79cd\u4e8b\uff0c\u5bf9\u4e00\u4e2a\u975e\u8ba1\u7b97\u673a\u4e13\u4e1a\u7684\u5b66\u751f\u6765\u8bf4\u8fd8\u662f\u86ee\u6709\u6311\u6218\u6027\u7684\u3002\u7ec4\u957f\u8bf4\u8981\u5148\u5199\u4e00\u4e2a\u63a5\u53e3\u8bbe\u8ba1\u6587\u6863\u6765\u63cf\u8ff0\u5c06\u8981\u5c01\u88c5\u7684\u63a5\u53e3\u548c\u8c03\u7528\u65b9\u5f0f\u3002\u53ea\u80fd\u7f51\u4e0a\u67e5\u770b\u5404\u79cd\u8d44\u6599\u55bd\uff01\n\n\n\u8fd9\u91cc\u662f\u6211\u4e00\u987f\u72c2\u641c\u3001\u770b\u5404\u79cd\u535a\u5ba2\u540e\u641c\u96c6\u5230\u7684\u6709\u7528\u8d44\u6599\uff0c\u5217\u8868\u5982\u4e0b\uff1a\n\n\n\n\n\n\n\n\n\u94fe\u63a5\n\n\n\u63cf\u8ff0\n\n\n\n\n\n\n\n\n\n\nOpen Connectivity Foundation (OCF)\u5b98\u7f51\n\n\n\u8fd9\u91cc\u6709UPnP\u76f8\u5173\u7684\u6587\u6863\u548c\u5404\u5bb6\u516c\u53f8\u5f00\u53d1\u7684SDK\uff0c\u4f8b\u5982\uff1a\nPlutinosoft\n\u5f00\u53d1\u7684\nPlatinum\u5e93\n\u4e5f\u53ef\u4ee5\u4ece\u8fd9\u91cc\u4e86\u987a\u85e4\u6478\u74dc\u627e\u5230\n\n\n\n\n\n\ndlna\u5b98\u7f51\n\n\n\u8fd9\u91cc\u6709\u5bf9dlna\u534f\u8bae\u63cf\u8ff0\u7684\u6587\u6863\u4e0b\u8f7d\uff0c\u53ef\u4ee5\u8bf4\u8981\u5168\u9762\u7684\u5b66\u4e60dlna\uff0c\u8fd9\u91cc\u7684\u6587\u6863\u662f\u4e0d\u53ef\u6216\u7f3a\u7684\uff0c\u5f53\u7136\uff0c\u5b9e\u9645\u4e2d\u6211\u4eec\u4e5f\u6ca1\u6709\u5fc5\u8981\u5b66\u592a\u6df1\uff0c\u4e0d\u8fc7\u77e5\u9053\u8fd9\u4e2a\u8d44\u6e90\uff0c\u5b66\u4e60\u65f6\u5c31\u6709\u5e95\u4e86;-)\n\n\n\n\n\n\n\u4e00\u4e2a\u5173\u4e8edlan\u4ecb\u7ecd\u7684\u535a\u5ba2\n\n\n\u4e0a\u9762\u4e24\u4e2a\u7f51\u7ad9\u5c31\u662f\u901a\u8fc7\u9605\u8bfb\u8fd9\u4e2a\u535a\u5ba2\u300aDLNA\nUPnP\u5f00\u53d1\u7b14\u8bb0\u300b\u7cfb\u5217\u5171\u56db\u7bc7\u6587\u7ae0\u540e\u627e\u5230\u7684\uff0c\u503c\u7684\u9605\u8bfb\n\n\n\n\n\n\n\n\n\n\u597d\u4e86\uff0c\u6709\u4e86\u4ee5\u4e0a\u7684\u51e0\u4e2a\u8d44\u6e90\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u52a8\u4e86\u3002\u6211\u5de5\u4f5c\u4e2d\u4f7f\u7528\u4e86Platinum\u5e93\u8fdb\u884cdlna\u7684\u5a92\u4f53\u63a7\u5236\u5668(\nDMC\n)\u5f00\u53d1,\u6240\u4ee5\u4e5f\u6ca1\u6709\u5bf9dlna\u6709\u592a\u5168\u9762\u7684\u4e86\u89e3\uff0c\u4e00\u5207\u662f\u4ece\u5bf9Platinum\u5e93\u6240\u63d0\u4f9b\u7684\u793a\u4f8b\u7a0b\u5e8f\u548c\u9879\u76eeREADME\u6587\u4ef6\u8fdb\u884c\u7f16\u8bd1\u5e93\u548c\u76f8\u5173\u5f00\u53d1\u5b66\u4e60\u7684\u3002\n\n\n\u90a3\u4e48\uff0c\u7b2c\u4e00\u6b65\u5c31\u662f\uff0c\u62c9\u4e0b\u9879\u76ee\u8fdb\u884c\u7f16\u8bd1\u548c\u8fd0\u884c\u793a\u4f8b\u4e86\u3002\n\n\n\u7f16\u8bd1Platinum\u5e93\n\n\n\u9996\u5148\uff0c\u4f7f\u7528git\u62c9\u4e0b\u9879\u76ee\u6700\u8fd1\u4e00\u6b21\u7684\u63d0\u4ea4\n\n\ngit clone --depth=1 https://github.com/plutinosoft/Platinum.git\n\n\n\n\n\u56e0\u4e3aPlatinum\u7684\u7f16\u8bd1\u9700\u8981\u4f9d\u8d56\u4e00\u4e2a\u540d\u4e3a\nNeptune\n\u7684C++\u8de8\u5e73\u53f0\u8fd0\u884c\u73af\u5883\uff0c\u5f53\u7136\u8fd9\u4e2a\u9879\u76ee\u91cc\u5df2\u7ecf\u6709\u89e3\u51b3\u65b9\u6cd5\uff0c\u4e0d\u9700\u8981\u6211\u4eec\u53e6\u5916\u4e0b\u8f7d\u6216\u7f16\u8bd1\nNeptune\n\u5e93\uff0c\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7\nCarthage\n\u5de5\u5177\uff0c\u5c06\nNeptune\n\u7684framework\u4e0b\u8f7d\u5230Platinum\u7684\u9879\u76ee\u76ee\u5f55\u4e0b\u3002\u5177\u4f53\u8fc7\u7a0b\u5982\u4e0b\uff1a\n\n\n\u4f60\u8981\u5148\u8fdb\u884cPlatinum\u9879\u76ee\u76ee\u5f55\u4e0b\uff0c\u53d1\u73b0\u5176\u4e2d\u6709\u7740\u540d\u4e3a\nCartfile\n\u6216\nCartfile.resolved\n\u8fd9\u6837\u7684\u6587\u4ef6\uff0c\u6587\u4ef6\u4e2d\u6307\u660e\u4e86\nCarthage\n\u8fd9\u4e2a\u5de5\u5177\u8f6f\u4ef6\u6240\u8981\u4e0b\u8f7d\u7684framework\u540d\u79f0\u548c\u7248\u672c\uff0c\u5176\u5b9e\ncarthage\n\u8fd9\u4e2a\u5de5\u5177\u7c7b\u4f3c\u4e8e\nCocoaPods\n\u8fd9\u4e2a\u5de5\u5177\u3002\u4e0d\u8fc7\u4f60\u7684Mac\u4e0a\u5f88\u53ef\u80fd\u5e76\u6ca1\u6709\u5b89\u88c5\ncarthage\n\uff0c\u6240\u4ee5\u4f60\u5176\u5b9e\u53ef\u4ee5\u901a\u8fc7\u5148\u5728Mac\u4e0a\u5b89\u88c5\nhomebrew\n\u8fd9\u4e2a\u5de5\u5177\uff0c\u7136\u540e\u4f7f\u7528\nhomebrew\n\u6765\u5b89\u88c5\ncarghage\n\u3002\u5982\u4e0b:\n\n\n/usr/bin/ruby -e \n$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\n  # \u5b89\u88c5homebrew\n\nbrew install carthage  # homebrew \u5b89\u88c5\u6210\u529f\u540e\uff0c\u5b89\u88c5carthage\n\ncd Platinum/  # \u8fdb\u5165Platinum\u9879\u76ee\u76ee\u5f55\u4e0b\n\ncarthage update  # \u8fd0\u884ccarthage \u8ba9\u5176\u4e0b\u8f7d Carthfile\u6587\u4ef6\u4e2d\u6307\u5b9a\u7684framework\n\n\n\n\n\n\u5f53\u4ee5\u4e0a\u8fc7\u7a0b\u5b8c\u6210\u540e\uff0c\u4f60\u4f1a\u53d1\u73b0\u5728\nPlatinum/Carthage\n\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u9762\uff0c\u5df2\u7ecf\u5b58\u5728\nNeptune\n\u8fd9\u4e2aC++\u8de8\u5e73\u53f0\u8fd0\u884c\u73af\u5883\u7684\u5206\u522b\u9488\u5bf9Mac\u548ciOS\u7684frame\u001cwork\u4e86\uff0c\u4f60\u53ea\u8981\u786e\u4fdd\u4ee5\u4e0a\u7684\u547d\u4ee4\u8fd0\u884c\u6210\u529f\uff0c\u5e76\u6700\u7ec8\u5f97\u5230Neptune\u7684FrameWork\u5c31\u53ef\u4ee5\u7f16\u8bd1Platinum\u7684\u9488\u5bf9iOS\u7684\u9879\u76ee\u548c\u793a\u4f8b\u7a0b\u5e8f\u4e86\u3002\n\n\n\u4f7f\u7528XCode\u6253\u5f00\n/Platinum/Build/Targets/universal-apple-macosx/Platinum.xcodeproj\n\u9879\u76ee\u6587\u4ef6\uff0c\u7136\u540e\u5206\u522b\u8fd0\u884c\u5404\nTarget\n\uff0c\u5c31\u53ef\u4ee5\u751f\u6210\u76f8\u5173\u7684framework\u548c\u793a\u4f8b\u8fd0\u884c\u7a0b\u5e8f\u4e86\u3002\n\n\n\u751f\u6210\u540c\u65f6\u652f\u6301\u771f\u673a\u548c\u6a21\u62df\u673a\u7684framework\u52a8\u6001\u94fe\u63a5\u5e93\n\n\n\u9009\u62e9\nPlatinum-iOS\n\u7f16\u8bd1\u65b9\u6848(Scheme),\u5728\u7f16\u8f91\u65b9\u6848(Edit Scheme...)\u5bf9\u8bdd\u6846,\u8fd0\u884c(Run)\u5206\u7c7b\u4e2d\u7684\u4fe1\u606f(Info)\u9009\u9879\u5361\u4e0b\uff0c\u9009\u62e9\u7f16\u8bd1\u914d\u7f6e(Build Configuration)\u4e3a\nRelease\n\u3002\u8bbe\u7f6e\u597d\u7f16\u8bd1\u65b9\u6848\u540e\uff0c\u9009\u62e9\u4efb\u4e00\u6a21\u62df\u5668(e.g: iphone SE)\u7f16\u8bd1\u4e00\u6b21\uff0c\u518d\u9009\u62e9\u901a\u7528iOS\u8bbe\u5907(Generic iOS Device)\u7f16\u8bd1\u4e00\u6b21\uff0c\u8fd9\u4e24\u6b21\u7f16\u8bd1\uff0c\u5206\u522b\u5f97\u5230\u5bf9\u5e94\u4e8e\ni386 x86_64\n\u67b6\u6784\u7684\u6a21\u62df\u5668framework\u548c\u5bf9\u5e94\u4e8e\u771f\u673a\narmv7 arm64\n\u67b6\u6784\u7684framework\uff0c\u6211\u4eec\u628a\u8fd9\u4e24\u4e2a\u5bf9\u5e94\u4e8e\u4e0d\u540c\u67b6\u6784\u7684framework\u5408\u5e76\u6210\u4e00\u4e2aframework\u5c31\u5b8c\u6210\u4e86\u540c\u65f6\u6ee1\u8db3\u771f\u673a\u8c03\u8bd5\u548c\u6a21\u62df\u5668\u8c03\u8bd5\u7684framework\u4e86\u3002\n\n\n\u751f\u6210\u7684\u4e24\u4e2a\u9488\u5bf9\u4e0d\u540c\u67b6\u6784\u7684framework\u6240\u5728\u7684\u76ee\u5f55\u5982\u4e0b\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u53f3\u952e\nShow in Finder\n\u7684\u65b9\u5f0f\u627e\u5230\u5b83\u4eec\u7684\u4f4d\u7f6e, \u8fd9\u4e24\u4e2a\u76ee\u5f55\u8def\u5f84\u52a8\u6001\u53d8\u5316\uff0c\u4e0d\u5b8c\u5168\u4e0e\u6211\u7684\u4e00\u81f4\u3002\n\n\n#\u8fd9\u4e2a\u76ee\u5f55\u5bf9\u5e94\u4e8e\u771f\u673a\u7684 armv7 arm64 \u67b6\u6784\n/Users/JokerAtBaoFeng/Library/Developer/Xcode/DerivedData/Platinum-bawuiqxkhqixgybjjufqgvmduavh/Build/Products/Release-iphoneos \n\n#\u8fd9\u4e2a\u76ee\u5f55\u5bf9\u5e94\u4e8e\u6a21\u62df\u5668\u7684 i386 x86_64 \u67b6\u6784\n/Users/JokerAtBaoFeng/Library/Developer/Xcode/DerivedData/Platinum-bawuiqxkhqixgybjjufqgvmduavh/Build/Products/Release-iphonesimulator\n\n\n\n\n\u4f60\u53ef\u4ee5\u5206\u522b\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u67e5\u770bframework\u4e2d\u7684\u6587\u4ef6\u652f\u6301\u7684\u67b6\u6784\uff0c\u5982\u4e0b\uff1a\n\n\nlipo -info Release-iphoneos/Platinum.framework/Platinum \n\n\n\n\n\u8f93\u51fa\uff1a\n\n\nArchitectures in the fat file: Release-iphoneos/Platinum.framework/Platinum are: armv7 arm64\n\n\nlipo -info Release-iphonesimulator/Platinum.framework/Platinum \n\n\n\n\n\u8f93\u51fa\uff1a\n\n\nArchitectures in the fat file: Release-iphonesimulator/Platinum.framework/Platinum are: i386 x86_64\n\n\n\u5229\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5c06\u4e24\u4e2aframework\u5408\u5e76, \u5e76\u66ff\u6362\nRelease-iphoneos/Platinum.framework/Platinum\n\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5c31\u662f\u5408\u5e76\u4e4b\u540e\u7684\u6587\u4ef6\uff1a\n\n\nlipo -create Release-iphoneos/Platinum.framework/Platinum Release-iphonesimulator/Platinum.framework/Platinum -output Release-iphoneos/Platinum.framework/Platinum\n\n\n\n\n\u8fd9\u65f6\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528\nRelease-iphoneos/Platinum.framework\n\u5bfc\u5165\u4f60\u8981\u7528\u5230\u7684\u9879\u76ee\u4e2d\u53bb\u4e86\u3002\u54e6\uff0c\u5bf9\u4e86\uff0c\u7531\u4e8ePlatinum.framework\u8fd0\u884c\u9700\u8981\u4f9d\u8d56\nNeptune.framework\n\uff0c\u6240\u4ee5\u5bfc\u5165\u81ea\u5df1\u7684\u9879\u76ee\u65f6\uff0c\u8bb0\u5f97\u628acarthage\u4e0b\u8f7d\u7684\nNeptune.framework\n\u4e00\u5e76\u5bfc\u5165\u3002\n\n\n\u518d\u6b21\u67e5\u770b\u5408\u5e76\u540e\u7684framework\u6240\u652f\u6301\u7684\u67b6\u6784\uff1a\n\n\nlipo -info Release-iphoneos/Platinum.framework/Platinum\n\n\n\n\n\u8f93\u51fa\uff1a\n\nArchitectures in the fat file: Release-iphoneos/Platinum.framework/Platinum are: i386 x86_64 armv7 arm64\n\n\n\u53ef\u4ee5\u770b\u5230\uff0c\u5b83\u5df2\u7ecf\u540c\u65f6\u652f\u6301\ni386 x86_64 armv7 arm64\n\u4e86\u3002\n\n\nPlatinum.framework\u548cNeptune.framework\u7684\u4f7f\u7528\n\n\n\u4f60\u53ef\u4ee5\u76f4\u63a5\u628a\u8fd9\u4e24\u4e2aframework\u6587\u4ef6\u76f4\u63a5\u62d6\u5165\u9879\u76ee\u4e2d\uff0c\u5e76\u5728\u63d0\u793a\u65f6\u9009\u62e9\nCopy Items if needed\n\uff0c\u7136\u540e\u70b9\u51fbfinished\u5b8c\u6210\u5bfc\u5165\u3002\n\n\n\u7136\u540e\u5230\u9879\u76ee\u5bf9\u5e94Target\u4e0b\u7684\u001d\nBuild Phases\n|\nLink Binary With Libraries\n\u4e0b\u786e\u4fdd\nPlatinum\n\u548c\nNeptune\n\u4e24\u4e2aframework\u90fd\u5728\u5217\u8868\u4e2d\u3002\n\n\n\u7531\u4e8eiOS\u65b0\u7248\u672c\u652f\u6301\u4e86\u52a8\u6001\u94fe\u63a5\u5e93\uff0c\u800c\u6211\u4eec\u4e0a\u8ff0\u8fc7\u7a0b\u9ed8\u8ba4\u751f\u6210\u7684\u4e5f\u662f\u52a8\u6001\u7684framework, \u6240\u4ee5\u8fd8\u9700\u8981\u5728Target\u7684\nGeneral\n | \nEmbedded Binaries\n \u4e2d\u540c\u6837\u7684\u6dfb\u52a0\u4e0a\u8ff0\u7684\u4e24\u4e2aframework,\u4ee5\u4f7f\u6211\u4eec\u5728\u5b89\u88c5\u5e94\u7528\u7684\u540c\u65f6\uff0c\u4e5f\u5c06\u5bf9\u5e94\u7684\u52a8\u6001\u5e93\u62f7\u8d1d\u5230\u673a\u5668\u4e2d\u53bb\uff0c\u5426\u5219\u4f1a\u7531\u4e8e\u673a\u5668\u4e0a\u7f3a\u5c11\u5bf9\u5e94framework\u800c\u62a5\u9519\u3002\n\n\n\u5728\u9879\u76ee\u4e2d\u4f7f\u7528framework\u7684\u5934\u6587\u4ef6\uff0c\u9700\u8981\u4f7f\u7528\u5c16\u62ec\u53f7\nheader.h\n\u800c\u975e\u53cc\u5f15\u53f7\n\"header.h\"\n\u3002\n\n\n\u8fd9\u6837\uff0c\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7f16\u8bd1\u597d\u7684framework\u4e86\u3002\n\n\n\u5bf9\u5e93\u7684\u719f\u6089\u8fc7\u7a0b\n\n\n\u9996\u5148\u662f\u5bf9\u4e09\u65b9\u5e93\u7684\u4f7f\u7528\uff0c\u6765\u7406\u89e3\u63a5\u53e3\u8c03\u7528\u65b9\u5f0f\u3002\u8fd8\u597d\u5e93\u91cc\u63d0\u4f9b\u4e86\u51e0\u4e2a\u4f8b\u5b50\u7a0b\u5e8f\uff0c\u5148\u6162\u6162\u770b\u4e86\u4e09\u5929\u3002\u79fb\u690d\u4e86\u5176\u4e2d\u4e00\u4e2a\u5173\u4e8e\u5a92\u4f53\u63a7\u5236\u5668\u7684\u793a\u4f8b\u5230\u9879\u76ee\u4e2d\uff0c\u4ec5\u4ec5\u5b9e\u73b0\u4e86\u67e5\u627e\u9644\u8fd1\u8bbe\u5907\u7684\u529f\u80fd\u3002\u4f46\u8fd9\u662f\u4e2a\u597d\u7684\u5f00\u5934\uff0c\u5bf9\u6211\u6765\u8bf4\u6709\u76f8\u5f53\u7684\u9f13\u52b1\u4f5c\u7528\u3002\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4e3b\u8981\u662f\u53c2\u7167\nMicroMediaController\n\u7684\u4ee3\u7801\u8fdb\u884c\u7684\u3002\n\n\n\u6211\u53d1\u73b0\u5bf9\u4e8e\u4f18\u8d28C++\u5e93\u7684\u5b66\u4e60\uff0c\u771f\u662f\u4e00\u79cd\u8d4f\u5fc3\u60a6\u76ee\u7684\u4f53\u9a8c\uff0c\u5f53\u7136\u770b\u61c2C++\u7684\u7ec6\u8282\u8fd8\u662f\u76f8\u5f53\u75db\u82e6\u7684\u3002\n\n\n\u8fd9\u4e2aPlatinum\u5e93\u5e94\u8be5\u662f\u9075\u5faadlna\u534f\u8bae\u7f16\u5199\u7684\uff0c\u76f8\u5173\u7684\u6587\u6863\u5f88\u5c11\uff0c\u9879\u76ee\u5c5e\u4e8e\u81ea\u6ce8\u91ca\u578b\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca\u5c31\u662f\u6587\u6863\u7684\u5927\u90e8\u5206\uff0c\u4e0d\u8fc7\u8981\u5b66\u4e60\u8fd9\u4e2a\u5e93\uff0cdlan\u534f\u8bae\u8fd8\u662f\u6709\u5fc5\u8981\u8be6\u7ec6\u770b\u770b\u7684\uff0c\u5426\u5219\u5373\u4f7f\u901a\u8fc7\u4fee\u6539\u7a0b\u5e8f\uff0c\u8fbe\u5230\u4e86\u6700\u521d\u8bbe\u5b9a\u7684\u529f\u80fd\u76ee\u6807\uff0c\u60f3\u8981\u6269\u5c55\u4e00\u4e9b\u529f\u80fd\uff0c\u5374\u662f\u4f1a\u8fb9\u53c2\u6570\u90fd\u4e0d\u4f1a\u4f20\u9012\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u53c2\u6570\u662f\u5728\u534f\u8bae\u662f\u89c4\u5b9a\u7684\u3002\n\n\n\u5728\u63a5\u53e3\u5c01\u95ed\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53d1\u73b0\u53c2\u8003\u522b\u4eba\u7684\u5c01\u95ed\u65b9\u6cd5\u5b9e\u5728\u80fd\u591f\u5b66\u4e60\u5f88\u591a\uff0c\u6bd4\u4f8b\u6211\u5728\u7528Objective-C\u5c01C++\u63a5\u53e3\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5c31\u53c2\u8003\u4e86Platinum\u9879\u76ee\u76ee\u5f55\u4e0b\nPlatinum/Source/Extras/ObjectiveC/\n\u5bf9\nMediaServer\n\u7684\u5c01\u88c5\u65b9\u6cd5\u3002\n\n\n\u672a\u5b8c\uff0c\u5f85\u7eed...\n\n\n#issue1\n\n\n\u5728\u8bc6\u522b\u5c0f\u7c73\u76d2\u5b50\u7684\u65f6\u5019\uff0c\u603b\u662f\u8bc6\u522b\u4e0d\u5230\uff0c\u4fee\u6539\u4e86Platinum\u4e2d\u7684\u90e8\u5206\u4ee3\u7801,\u5e76\u91cd\u65b0\u7f16\u8bd1\u540e\u5bfc\u5165\u9879\u76ee\uff0c\u5f97\u4ee5\u6b63\u5e38\u8bc6\u522b\uff1a\n\n\n\u4fee\u6539\u524d\n\n\nPltCtrlPoint.cpp\n \n\n\nclass PLT_DeviceReadyIterator\n{\npublic:\n    PLT_DeviceReadyIterator() {}\n    NPT_Result operator()(PLT_DeviceDataReference\n device) const {\n        NPT_Result res = device-\nm_Services.ApplyUntil(\n            PLT_ServiceReadyIterator(), \n            NPT_UntilResultNotEquals(NPT_SUCCESS));\n        if (NPT_FAILED(res)) return res;\n\n        res = device-\nm_EmbeddedDevices.ApplyUntil(\n            PLT_DeviceReadyIterator(),\n            NPT_UntilResultNotEquals(NPT_SUCCESS));\n        if (NPT_FAILED(res)) return res;\n\n        // a device must have at least one service or embedded device \n        // otherwise it's not ready\n        if (device-\nm_Services.GetItemCount() == 0 \n\n            device-\nm_EmbeddedDevices.GetItemCount() == 0) {\n            return NPT_FAILURE;\n        }\n\n        return NPT_SUCCESS;\n    }\n};\n\n\n\n\n\u4fee\u6539\u540e\n\n\nPltCtrlPoint.cpp\n \n\n\nclass PLT_DeviceReadyIterator\n{\npublic:\n    PLT_DeviceReadyIterator() {}\n    NPT_Result operator()(PLT_DeviceDataReference\n device) const {\n        NPT_Result res = device-\nm_Services.ApplyUntil(\n            PLT_ServiceReadyIterator(), \n            NPT_UntilResultNotEquals(NPT_SUCCESS));\n//        if (NPT_FAILED(res)) return res;\n\n        res = device-\nm_EmbeddedDevices.ApplyUntil(\n            PLT_DeviceReadyIterator(),\n            NPT_UntilResultNotEquals(NPT_SUCCESS));\n//        if (NPT_FAILED(res)) return res;\n\n\n        if(NPT_FAILED(res) \n NPT_FAILED(res))  return res;\n\n        // a device must have at least one service or embedded device \n        // otherwise it's not ready\n        if (device-\nm_Services.GetItemCount() == 0 \n\n            device-\nm_EmbeddedDevices.GetItemCount() == 0) {\n            return NPT_FAILURE;\n        }\n\n        return NPT_SUCCESS;\n    }\n};\n\n\n\n\n\u4fee\u6539\u539f\u56e0\n\n\n\u6211\u53d1\u73b0\u5bf9\u4e8e\u641c\u7d22\u5230\u7684\u5c0f\u7c73\u76d2\u5b50\uff0c\u4ee3\u7801\u8fc7\u4e0d\u4e86\u4e0b\u9762\u8fd9\u4e2a\u51fd\u6570\u7684\u7b2c\n53\n\u884c\uff1a\n\n\nPltCtrlPoint.cpp\n\n\nNPT_Result\nPLT_CtrlPoint::ProcessGetSCPDResponse(NPT_Result                    res, \n                                      const NPT_HttpRequest\n        request,\n                                      const NPT_HttpRequestContext\n context,\n                                      NPT_HttpResponse*             response,\n                                      PLT_DeviceDataReference\n      device)\n{\n    NPT_COMPILER_UNUSED(context);\n\n    NPT_AutoLock lock(m_Lock);\n\n    PLT_DeviceReadyIterator device_tester;\n    NPT_String              scpd;\n    PLT_DeviceDataReference root_device;\n    PLT_Service*            service;\n\n    NPT_String prefix = NPT_String::Format(\nPLT_CtrlPoint::ProcessGetSCPDResponse for a service of device \\\n%s\\\n \n    @ %s (result = %d, status = %d)\n, \n    (const char*)device-\nGetFriendlyName(), \n    (const char*)request.GetUrl().ToString(),\n    res,\n    response?response-\nGetStatusCode():0);\n\n    // verify response was ok\n    NPT_CHECK_LABEL_FATAL(res, bad_response);\n    NPT_CHECK_POINTER_LABEL_FATAL(response, bad_response);\n\n    PLT_LOG_HTTP_RESPONSE(NPT_LOG_LEVEL_FINER, prefix, response);\n\n    // make sure root device hasn't disappeared\n    NPT_CHECK_LABEL_WARNING(FindDevice(device-\nGetUUID(), root_device, true),\n                            bad_response);\n\n    res = device-\nFindServiceBySCPDURL(request.GetUrl().ToRequestString(), service);\n    NPT_CHECK_LABEL_SEVERE(res, bad_response);\n\n    // get response body\n    res = PLT_HttpHelper::GetBody(*response, scpd);\n    NPT_CHECK_LABEL_FATAL(res, bad_response);\n\n    // DIAL support\n    if (root_device-\nGetType().Compare(\nurn:dial-multiscreen-org:device:dial:1\n) == 0) {\n        AddDevice(root_device);\n        return NPT_SUCCESS;\n    }\n\n    // set the service scpd\n    res = service-\nSetSCPDXML(scpd);\n    NPT_CHECK_LABEL_SEVERE(res, bad_response);\n\n    // if root device is ready, notify listeners about it and embedded devices\n    if (NPT_SUCCEEDED(device_tester(root_device))) {\n        AddDevice(root_device);  //\u7b2c53\u884c\n    }\n\n    return NPT_SUCCESS;\n\nbad_response:\n    NPT_LOG_SEVERE_2(\nBad SCPD response for device \\\n%s\\\n:%s\n, \n        (const char*)device-\nGetFriendlyName(),\n        (const char*)scpd);\n\n    if (!root_device.IsNull()) RemoveDevice(root_device);\n    return res;\n}\n\n\n\n\n#issue2\n\n\n\u4e2a\u4eba\u53d1\u73b0\u5c0f\u7c73\u76d2\u5b50\u5bf9\u4e8edlan\u534f\u8bae\u5b9e\u73b0\u90e8\u5206\u7684\u9759\u97f3\u63a7\u5236\u547d\u4ee4\u4f3c\u4e4e\u6709\u4e9b\u51fa\u5165\uff0c\u6211\u4f7f\u7528\u793a\u4f8b\u7a0b\u5e8f\u53d1\u9001\u9759\u97f3\u547d\u4ee4\u5230\u5c0f\u7c73\u76d2\u5b50\uff0c\u53d1\u73b0\u53ea\u80fd\u4f7f\u8bbe\u5907\u9759\u97f3\uff0c\u5374\u4e0d\u80fd\u4f7f\u8bbe\u5907\u6062\u590d\u58f0\u97f3\uff0c\u8fd9\u4e2a\u95ee\u9898\u6709\u5f85\u8fdb\u4e00\u6b65\u786e\u8ba4\u3002", 
            "title": "Develop DLNA Using Platinum Library"
        }, 
        {
            "location": "/tech/Develop DLNA Using Platinum Library/#develop-dlna-using-platinum-library", 
            "text": "\u8fd9\u51e0\u5929\u516c\u53f8\u7684\u5e94\u7528(iOS\u7aef)\u4e0a\u8981\u52a0\u4e00\u4e2a dlna \u7684\u529f\u80fd\uff0c\u5c31\u662f\u5c40\u57df\u7f51\u5185\u8bbe\u5907\u6295\u5c4f\u63a7\u5236\u7684\u4e00\u4e2a\u529f\u80fd\uff0c\u5e76\u63d0\u4f9b\u79fb\u52a8\u7aef\u63a7\u5236\u3002\u56e0\u4e3a\u4e09\u65b9\u5e93Platinum\u662f\u4f7f\u7528C++\u5199\u7684\uff0c\u6240\u4ee5\u6211\u88ab\u5206\u914d\u53bb\u505a\u5e93\u7684Objective-C\u5c01\u88c5\u7684\u5de5\u4f5c\u3002\u7b2c\u4e00\u6b21\u63a5\u624b\u8fd9\u79cd\u4e8b\uff0c\u5bf9\u4e00\u4e2a\u975e\u8ba1\u7b97\u673a\u4e13\u4e1a\u7684\u5b66\u751f\u6765\u8bf4\u8fd8\u662f\u86ee\u6709\u6311\u6218\u6027\u7684\u3002\u7ec4\u957f\u8bf4\u8981\u5148\u5199\u4e00\u4e2a\u63a5\u53e3\u8bbe\u8ba1\u6587\u6863\u6765\u63cf\u8ff0\u5c06\u8981\u5c01\u88c5\u7684\u63a5\u53e3\u548c\u8c03\u7528\u65b9\u5f0f\u3002\u53ea\u80fd\u7f51\u4e0a\u67e5\u770b\u5404\u79cd\u8d44\u6599\u55bd\uff01  \u8fd9\u91cc\u662f\u6211\u4e00\u987f\u72c2\u641c\u3001\u770b\u5404\u79cd\u535a\u5ba2\u540e\u641c\u96c6\u5230\u7684\u6709\u7528\u8d44\u6599\uff0c\u5217\u8868\u5982\u4e0b\uff1a     \u94fe\u63a5  \u63cf\u8ff0      Open Connectivity Foundation (OCF)\u5b98\u7f51  \u8fd9\u91cc\u6709UPnP\u76f8\u5173\u7684\u6587\u6863\u548c\u5404\u5bb6\u516c\u53f8\u5f00\u53d1\u7684SDK\uff0c\u4f8b\u5982\uff1a Plutinosoft \u5f00\u53d1\u7684 Platinum\u5e93 \u4e5f\u53ef\u4ee5\u4ece\u8fd9\u91cc\u4e86\u987a\u85e4\u6478\u74dc\u627e\u5230    dlna\u5b98\u7f51  \u8fd9\u91cc\u6709\u5bf9dlna\u534f\u8bae\u63cf\u8ff0\u7684\u6587\u6863\u4e0b\u8f7d\uff0c\u53ef\u4ee5\u8bf4\u8981\u5168\u9762\u7684\u5b66\u4e60dlna\uff0c\u8fd9\u91cc\u7684\u6587\u6863\u662f\u4e0d\u53ef\u6216\u7f3a\u7684\uff0c\u5f53\u7136\uff0c\u5b9e\u9645\u4e2d\u6211\u4eec\u4e5f\u6ca1\u6709\u5fc5\u8981\u5b66\u592a\u6df1\uff0c\u4e0d\u8fc7\u77e5\u9053\u8fd9\u4e2a\u8d44\u6e90\uff0c\u5b66\u4e60\u65f6\u5c31\u6709\u5e95\u4e86;-)    \u4e00\u4e2a\u5173\u4e8edlan\u4ecb\u7ecd\u7684\u535a\u5ba2  \u4e0a\u9762\u4e24\u4e2a\u7f51\u7ad9\u5c31\u662f\u901a\u8fc7\u9605\u8bfb\u8fd9\u4e2a\u535a\u5ba2\u300aDLNA UPnP\u5f00\u53d1\u7b14\u8bb0\u300b\u7cfb\u5217\u5171\u56db\u7bc7\u6587\u7ae0\u540e\u627e\u5230\u7684\uff0c\u503c\u7684\u9605\u8bfb     \n\u597d\u4e86\uff0c\u6709\u4e86\u4ee5\u4e0a\u7684\u51e0\u4e2a\u8d44\u6e90\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u52a8\u4e86\u3002\u6211\u5de5\u4f5c\u4e2d\u4f7f\u7528\u4e86Platinum\u5e93\u8fdb\u884cdlna\u7684\u5a92\u4f53\u63a7\u5236\u5668( DMC )\u5f00\u53d1,\u6240\u4ee5\u4e5f\u6ca1\u6709\u5bf9dlna\u6709\u592a\u5168\u9762\u7684\u4e86\u89e3\uff0c\u4e00\u5207\u662f\u4ece\u5bf9Platinum\u5e93\u6240\u63d0\u4f9b\u7684\u793a\u4f8b\u7a0b\u5e8f\u548c\u9879\u76eeREADME\u6587\u4ef6\u8fdb\u884c\u7f16\u8bd1\u5e93\u548c\u76f8\u5173\u5f00\u53d1\u5b66\u4e60\u7684\u3002  \u90a3\u4e48\uff0c\u7b2c\u4e00\u6b65\u5c31\u662f\uff0c\u62c9\u4e0b\u9879\u76ee\u8fdb\u884c\u7f16\u8bd1\u548c\u8fd0\u884c\u793a\u4f8b\u4e86\u3002", 
            "title": "Develop DLNA Using Platinum Library"
        }, 
        {
            "location": "/tech/Develop DLNA Using Platinum Library/#platinum", 
            "text": "\u9996\u5148\uff0c\u4f7f\u7528git\u62c9\u4e0b\u9879\u76ee\u6700\u8fd1\u4e00\u6b21\u7684\u63d0\u4ea4  git clone --depth=1 https://github.com/plutinosoft/Platinum.git  \u56e0\u4e3aPlatinum\u7684\u7f16\u8bd1\u9700\u8981\u4f9d\u8d56\u4e00\u4e2a\u540d\u4e3a Neptune \u7684C++\u8de8\u5e73\u53f0\u8fd0\u884c\u73af\u5883\uff0c\u5f53\u7136\u8fd9\u4e2a\u9879\u76ee\u91cc\u5df2\u7ecf\u6709\u89e3\u51b3\u65b9\u6cd5\uff0c\u4e0d\u9700\u8981\u6211\u4eec\u53e6\u5916\u4e0b\u8f7d\u6216\u7f16\u8bd1 Neptune \u5e93\uff0c\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7 Carthage \u5de5\u5177\uff0c\u5c06 Neptune \u7684framework\u4e0b\u8f7d\u5230Platinum\u7684\u9879\u76ee\u76ee\u5f55\u4e0b\u3002\u5177\u4f53\u8fc7\u7a0b\u5982\u4e0b\uff1a  \u4f60\u8981\u5148\u8fdb\u884cPlatinum\u9879\u76ee\u76ee\u5f55\u4e0b\uff0c\u53d1\u73b0\u5176\u4e2d\u6709\u7740\u540d\u4e3a Cartfile \u6216 Cartfile.resolved \u8fd9\u6837\u7684\u6587\u4ef6\uff0c\u6587\u4ef6\u4e2d\u6307\u660e\u4e86 Carthage \u8fd9\u4e2a\u5de5\u5177\u8f6f\u4ef6\u6240\u8981\u4e0b\u8f7d\u7684framework\u540d\u79f0\u548c\u7248\u672c\uff0c\u5176\u5b9e carthage \u8fd9\u4e2a\u5de5\u5177\u7c7b\u4f3c\u4e8e CocoaPods \u8fd9\u4e2a\u5de5\u5177\u3002\u4e0d\u8fc7\u4f60\u7684Mac\u4e0a\u5f88\u53ef\u80fd\u5e76\u6ca1\u6709\u5b89\u88c5 carthage \uff0c\u6240\u4ee5\u4f60\u5176\u5b9e\u53ef\u4ee5\u901a\u8fc7\u5148\u5728Mac\u4e0a\u5b89\u88c5 homebrew \u8fd9\u4e2a\u5de5\u5177\uff0c\u7136\u540e\u4f7f\u7528 homebrew \u6765\u5b89\u88c5 carghage \u3002\u5982\u4e0b:  /usr/bin/ruby -e  $(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)   # \u5b89\u88c5homebrew\n\nbrew install carthage  # homebrew \u5b89\u88c5\u6210\u529f\u540e\uff0c\u5b89\u88c5carthage\n\ncd Platinum/  # \u8fdb\u5165Platinum\u9879\u76ee\u76ee\u5f55\u4e0b\n\ncarthage update  # \u8fd0\u884ccarthage \u8ba9\u5176\u4e0b\u8f7d Carthfile\u6587\u4ef6\u4e2d\u6307\u5b9a\u7684framework  \u5f53\u4ee5\u4e0a\u8fc7\u7a0b\u5b8c\u6210\u540e\uff0c\u4f60\u4f1a\u53d1\u73b0\u5728 Platinum/Carthage \u8fd9\u4e2a\u76ee\u5f55\u4e0b\u9762\uff0c\u5df2\u7ecf\u5b58\u5728 Neptune \u8fd9\u4e2aC++\u8de8\u5e73\u53f0\u8fd0\u884c\u73af\u5883\u7684\u5206\u522b\u9488\u5bf9Mac\u548ciOS\u7684frame\u001cwork\u4e86\uff0c\u4f60\u53ea\u8981\u786e\u4fdd\u4ee5\u4e0a\u7684\u547d\u4ee4\u8fd0\u884c\u6210\u529f\uff0c\u5e76\u6700\u7ec8\u5f97\u5230Neptune\u7684FrameWork\u5c31\u53ef\u4ee5\u7f16\u8bd1Platinum\u7684\u9488\u5bf9iOS\u7684\u9879\u76ee\u548c\u793a\u4f8b\u7a0b\u5e8f\u4e86\u3002  \u4f7f\u7528XCode\u6253\u5f00 /Platinum/Build/Targets/universal-apple-macosx/Platinum.xcodeproj \u9879\u76ee\u6587\u4ef6\uff0c\u7136\u540e\u5206\u522b\u8fd0\u884c\u5404 Target \uff0c\u5c31\u53ef\u4ee5\u751f\u6210\u76f8\u5173\u7684framework\u548c\u793a\u4f8b\u8fd0\u884c\u7a0b\u5e8f\u4e86\u3002", 
            "title": "\u7f16\u8bd1Platinum\u5e93"
        }, 
        {
            "location": "/tech/Develop DLNA Using Platinum Library/#framework", 
            "text": "\u9009\u62e9 Platinum-iOS \u7f16\u8bd1\u65b9\u6848(Scheme),\u5728\u7f16\u8f91\u65b9\u6848(Edit Scheme...)\u5bf9\u8bdd\u6846,\u8fd0\u884c(Run)\u5206\u7c7b\u4e2d\u7684\u4fe1\u606f(Info)\u9009\u9879\u5361\u4e0b\uff0c\u9009\u62e9\u7f16\u8bd1\u914d\u7f6e(Build Configuration)\u4e3a Release \u3002\u8bbe\u7f6e\u597d\u7f16\u8bd1\u65b9\u6848\u540e\uff0c\u9009\u62e9\u4efb\u4e00\u6a21\u62df\u5668(e.g: iphone SE)\u7f16\u8bd1\u4e00\u6b21\uff0c\u518d\u9009\u62e9\u901a\u7528iOS\u8bbe\u5907(Generic iOS Device)\u7f16\u8bd1\u4e00\u6b21\uff0c\u8fd9\u4e24\u6b21\u7f16\u8bd1\uff0c\u5206\u522b\u5f97\u5230\u5bf9\u5e94\u4e8e i386 x86_64 \u67b6\u6784\u7684\u6a21\u62df\u5668framework\u548c\u5bf9\u5e94\u4e8e\u771f\u673a armv7 arm64 \u67b6\u6784\u7684framework\uff0c\u6211\u4eec\u628a\u8fd9\u4e24\u4e2a\u5bf9\u5e94\u4e8e\u4e0d\u540c\u67b6\u6784\u7684framework\u5408\u5e76\u6210\u4e00\u4e2aframework\u5c31\u5b8c\u6210\u4e86\u540c\u65f6\u6ee1\u8db3\u771f\u673a\u8c03\u8bd5\u548c\u6a21\u62df\u5668\u8c03\u8bd5\u7684framework\u4e86\u3002  \u751f\u6210\u7684\u4e24\u4e2a\u9488\u5bf9\u4e0d\u540c\u67b6\u6784\u7684framework\u6240\u5728\u7684\u76ee\u5f55\u5982\u4e0b\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u53f3\u952e Show in Finder \u7684\u65b9\u5f0f\u627e\u5230\u5b83\u4eec\u7684\u4f4d\u7f6e, \u8fd9\u4e24\u4e2a\u76ee\u5f55\u8def\u5f84\u52a8\u6001\u53d8\u5316\uff0c\u4e0d\u5b8c\u5168\u4e0e\u6211\u7684\u4e00\u81f4\u3002  #\u8fd9\u4e2a\u76ee\u5f55\u5bf9\u5e94\u4e8e\u771f\u673a\u7684 armv7 arm64 \u67b6\u6784\n/Users/JokerAtBaoFeng/Library/Developer/Xcode/DerivedData/Platinum-bawuiqxkhqixgybjjufqgvmduavh/Build/Products/Release-iphoneos \n\n#\u8fd9\u4e2a\u76ee\u5f55\u5bf9\u5e94\u4e8e\u6a21\u62df\u5668\u7684 i386 x86_64 \u67b6\u6784\n/Users/JokerAtBaoFeng/Library/Developer/Xcode/DerivedData/Platinum-bawuiqxkhqixgybjjufqgvmduavh/Build/Products/Release-iphonesimulator  \u4f60\u53ef\u4ee5\u5206\u522b\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u67e5\u770bframework\u4e2d\u7684\u6587\u4ef6\u652f\u6301\u7684\u67b6\u6784\uff0c\u5982\u4e0b\uff1a  lipo -info Release-iphoneos/Platinum.framework/Platinum   \u8f93\u51fa\uff1a  Architectures in the fat file: Release-iphoneos/Platinum.framework/Platinum are: armv7 arm64  lipo -info Release-iphonesimulator/Platinum.framework/Platinum   \u8f93\u51fa\uff1a  Architectures in the fat file: Release-iphonesimulator/Platinum.framework/Platinum are: i386 x86_64  \u5229\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5c06\u4e24\u4e2aframework\u5408\u5e76, \u5e76\u66ff\u6362 Release-iphoneos/Platinum.framework/Platinum \u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5c31\u662f\u5408\u5e76\u4e4b\u540e\u7684\u6587\u4ef6\uff1a  lipo -create Release-iphoneos/Platinum.framework/Platinum Release-iphonesimulator/Platinum.framework/Platinum -output Release-iphoneos/Platinum.framework/Platinum  \u8fd9\u65f6\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 Release-iphoneos/Platinum.framework \u5bfc\u5165\u4f60\u8981\u7528\u5230\u7684\u9879\u76ee\u4e2d\u53bb\u4e86\u3002\u54e6\uff0c\u5bf9\u4e86\uff0c\u7531\u4e8ePlatinum.framework\u8fd0\u884c\u9700\u8981\u4f9d\u8d56 Neptune.framework \uff0c\u6240\u4ee5\u5bfc\u5165\u81ea\u5df1\u7684\u9879\u76ee\u65f6\uff0c\u8bb0\u5f97\u628acarthage\u4e0b\u8f7d\u7684 Neptune.framework \u4e00\u5e76\u5bfc\u5165\u3002  \u518d\u6b21\u67e5\u770b\u5408\u5e76\u540e\u7684framework\u6240\u652f\u6301\u7684\u67b6\u6784\uff1a  lipo -info Release-iphoneos/Platinum.framework/Platinum  \u8f93\u51fa\uff1a Architectures in the fat file: Release-iphoneos/Platinum.framework/Platinum are: i386 x86_64 armv7 arm64  \u53ef\u4ee5\u770b\u5230\uff0c\u5b83\u5df2\u7ecf\u540c\u65f6\u652f\u6301 i386 x86_64 armv7 arm64 \u4e86\u3002", 
            "title": "\u751f\u6210\u540c\u65f6\u652f\u6301\u771f\u673a\u548c\u6a21\u62df\u673a\u7684framework\u52a8\u6001\u94fe\u63a5\u5e93"
        }, 
        {
            "location": "/tech/Develop DLNA Using Platinum Library/#platinumframeworkneptuneframework", 
            "text": "\u4f60\u53ef\u4ee5\u76f4\u63a5\u628a\u8fd9\u4e24\u4e2aframework\u6587\u4ef6\u76f4\u63a5\u62d6\u5165\u9879\u76ee\u4e2d\uff0c\u5e76\u5728\u63d0\u793a\u65f6\u9009\u62e9 Copy Items if needed \uff0c\u7136\u540e\u70b9\u51fbfinished\u5b8c\u6210\u5bfc\u5165\u3002  \u7136\u540e\u5230\u9879\u76ee\u5bf9\u5e94Target\u4e0b\u7684\u001d Build Phases | Link Binary With Libraries \u4e0b\u786e\u4fdd Platinum \u548c Neptune \u4e24\u4e2aframework\u90fd\u5728\u5217\u8868\u4e2d\u3002  \u7531\u4e8eiOS\u65b0\u7248\u672c\u652f\u6301\u4e86\u52a8\u6001\u94fe\u63a5\u5e93\uff0c\u800c\u6211\u4eec\u4e0a\u8ff0\u8fc7\u7a0b\u9ed8\u8ba4\u751f\u6210\u7684\u4e5f\u662f\u52a8\u6001\u7684framework, \u6240\u4ee5\u8fd8\u9700\u8981\u5728Target\u7684 General  |  Embedded Binaries  \u4e2d\u540c\u6837\u7684\u6dfb\u52a0\u4e0a\u8ff0\u7684\u4e24\u4e2aframework,\u4ee5\u4f7f\u6211\u4eec\u5728\u5b89\u88c5\u5e94\u7528\u7684\u540c\u65f6\uff0c\u4e5f\u5c06\u5bf9\u5e94\u7684\u52a8\u6001\u5e93\u62f7\u8d1d\u5230\u673a\u5668\u4e2d\u53bb\uff0c\u5426\u5219\u4f1a\u7531\u4e8e\u673a\u5668\u4e0a\u7f3a\u5c11\u5bf9\u5e94framework\u800c\u62a5\u9519\u3002  \u5728\u9879\u76ee\u4e2d\u4f7f\u7528framework\u7684\u5934\u6587\u4ef6\uff0c\u9700\u8981\u4f7f\u7528\u5c16\u62ec\u53f7 header.h \u800c\u975e\u53cc\u5f15\u53f7 \"header.h\" \u3002  \u8fd9\u6837\uff0c\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7f16\u8bd1\u597d\u7684framework\u4e86\u3002", 
            "title": "Platinum.framework\u548cNeptune.framework\u7684\u4f7f\u7528"
        }, 
        {
            "location": "/tech/Develop DLNA Using Platinum Library/#_1", 
            "text": "\u9996\u5148\u662f\u5bf9\u4e09\u65b9\u5e93\u7684\u4f7f\u7528\uff0c\u6765\u7406\u89e3\u63a5\u53e3\u8c03\u7528\u65b9\u5f0f\u3002\u8fd8\u597d\u5e93\u91cc\u63d0\u4f9b\u4e86\u51e0\u4e2a\u4f8b\u5b50\u7a0b\u5e8f\uff0c\u5148\u6162\u6162\u770b\u4e86\u4e09\u5929\u3002\u79fb\u690d\u4e86\u5176\u4e2d\u4e00\u4e2a\u5173\u4e8e\u5a92\u4f53\u63a7\u5236\u5668\u7684\u793a\u4f8b\u5230\u9879\u76ee\u4e2d\uff0c\u4ec5\u4ec5\u5b9e\u73b0\u4e86\u67e5\u627e\u9644\u8fd1\u8bbe\u5907\u7684\u529f\u80fd\u3002\u4f46\u8fd9\u662f\u4e2a\u597d\u7684\u5f00\u5934\uff0c\u5bf9\u6211\u6765\u8bf4\u6709\u76f8\u5f53\u7684\u9f13\u52b1\u4f5c\u7528\u3002\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4e3b\u8981\u662f\u53c2\u7167 MicroMediaController \u7684\u4ee3\u7801\u8fdb\u884c\u7684\u3002  \u6211\u53d1\u73b0\u5bf9\u4e8e\u4f18\u8d28C++\u5e93\u7684\u5b66\u4e60\uff0c\u771f\u662f\u4e00\u79cd\u8d4f\u5fc3\u60a6\u76ee\u7684\u4f53\u9a8c\uff0c\u5f53\u7136\u770b\u61c2C++\u7684\u7ec6\u8282\u8fd8\u662f\u76f8\u5f53\u75db\u82e6\u7684\u3002  \u8fd9\u4e2aPlatinum\u5e93\u5e94\u8be5\u662f\u9075\u5faadlna\u534f\u8bae\u7f16\u5199\u7684\uff0c\u76f8\u5173\u7684\u6587\u6863\u5f88\u5c11\uff0c\u9879\u76ee\u5c5e\u4e8e\u81ea\u6ce8\u91ca\u578b\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca\u5c31\u662f\u6587\u6863\u7684\u5927\u90e8\u5206\uff0c\u4e0d\u8fc7\u8981\u5b66\u4e60\u8fd9\u4e2a\u5e93\uff0cdlan\u534f\u8bae\u8fd8\u662f\u6709\u5fc5\u8981\u8be6\u7ec6\u770b\u770b\u7684\uff0c\u5426\u5219\u5373\u4f7f\u901a\u8fc7\u4fee\u6539\u7a0b\u5e8f\uff0c\u8fbe\u5230\u4e86\u6700\u521d\u8bbe\u5b9a\u7684\u529f\u80fd\u76ee\u6807\uff0c\u60f3\u8981\u6269\u5c55\u4e00\u4e9b\u529f\u80fd\uff0c\u5374\u662f\u4f1a\u8fb9\u53c2\u6570\u90fd\u4e0d\u4f1a\u4f20\u9012\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u53c2\u6570\u662f\u5728\u534f\u8bae\u662f\u89c4\u5b9a\u7684\u3002  \u5728\u63a5\u53e3\u5c01\u95ed\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53d1\u73b0\u53c2\u8003\u522b\u4eba\u7684\u5c01\u95ed\u65b9\u6cd5\u5b9e\u5728\u80fd\u591f\u5b66\u4e60\u5f88\u591a\uff0c\u6bd4\u4f8b\u6211\u5728\u7528Objective-C\u5c01C++\u63a5\u53e3\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5c31\u53c2\u8003\u4e86Platinum\u9879\u76ee\u76ee\u5f55\u4e0b Platinum/Source/Extras/ObjectiveC/ \u5bf9 MediaServer \u7684\u5c01\u88c5\u65b9\u6cd5\u3002  \u672a\u5b8c\uff0c\u5f85\u7eed...", 
            "title": "\u5bf9\u5e93\u7684\u719f\u6089\u8fc7\u7a0b"
        }, 
        {
            "location": "/tech/Develop DLNA Using Platinum Library/#35issue1", 
            "text": "\u5728\u8bc6\u522b\u5c0f\u7c73\u76d2\u5b50\u7684\u65f6\u5019\uff0c\u603b\u662f\u8bc6\u522b\u4e0d\u5230\uff0c\u4fee\u6539\u4e86Platinum\u4e2d\u7684\u90e8\u5206\u4ee3\u7801,\u5e76\u91cd\u65b0\u7f16\u8bd1\u540e\u5bfc\u5165\u9879\u76ee\uff0c\u5f97\u4ee5\u6b63\u5e38\u8bc6\u522b\uff1a", 
            "title": "#issue1"
        }, 
        {
            "location": "/tech/Develop DLNA Using Platinum Library/#_2", 
            "text": "PltCtrlPoint.cpp    class PLT_DeviceReadyIterator\n{\npublic:\n    PLT_DeviceReadyIterator() {}\n    NPT_Result operator()(PLT_DeviceDataReference  device) const {\n        NPT_Result res = device- m_Services.ApplyUntil(\n            PLT_ServiceReadyIterator(), \n            NPT_UntilResultNotEquals(NPT_SUCCESS));\n        if (NPT_FAILED(res)) return res;\n\n        res = device- m_EmbeddedDevices.ApplyUntil(\n            PLT_DeviceReadyIterator(),\n            NPT_UntilResultNotEquals(NPT_SUCCESS));\n        if (NPT_FAILED(res)) return res;\n\n        // a device must have at least one service or embedded device \n        // otherwise it's not ready\n        if (device- m_Services.GetItemCount() == 0  \n            device- m_EmbeddedDevices.GetItemCount() == 0) {\n            return NPT_FAILURE;\n        }\n\n        return NPT_SUCCESS;\n    }\n};", 
            "title": "\u4fee\u6539\u524d"
        }, 
        {
            "location": "/tech/Develop DLNA Using Platinum Library/#_3", 
            "text": "PltCtrlPoint.cpp    class PLT_DeviceReadyIterator\n{\npublic:\n    PLT_DeviceReadyIterator() {}\n    NPT_Result operator()(PLT_DeviceDataReference  device) const {\n        NPT_Result res = device- m_Services.ApplyUntil(\n            PLT_ServiceReadyIterator(), \n            NPT_UntilResultNotEquals(NPT_SUCCESS));\n//        if (NPT_FAILED(res)) return res;\n\n        res = device- m_EmbeddedDevices.ApplyUntil(\n            PLT_DeviceReadyIterator(),\n            NPT_UntilResultNotEquals(NPT_SUCCESS));\n//        if (NPT_FAILED(res)) return res;\n\n\n        if(NPT_FAILED(res)   NPT_FAILED(res))  return res;\n\n        // a device must have at least one service or embedded device \n        // otherwise it's not ready\n        if (device- m_Services.GetItemCount() == 0  \n            device- m_EmbeddedDevices.GetItemCount() == 0) {\n            return NPT_FAILURE;\n        }\n\n        return NPT_SUCCESS;\n    }\n};", 
            "title": "\u4fee\u6539\u540e"
        }, 
        {
            "location": "/tech/Develop DLNA Using Platinum Library/#_4", 
            "text": "\u6211\u53d1\u73b0\u5bf9\u4e8e\u641c\u7d22\u5230\u7684\u5c0f\u7c73\u76d2\u5b50\uff0c\u4ee3\u7801\u8fc7\u4e0d\u4e86\u4e0b\u9762\u8fd9\u4e2a\u51fd\u6570\u7684\u7b2c 53 \u884c\uff1a  PltCtrlPoint.cpp  NPT_Result\nPLT_CtrlPoint::ProcessGetSCPDResponse(NPT_Result                    res, \n                                      const NPT_HttpRequest         request,\n                                      const NPT_HttpRequestContext  context,\n                                      NPT_HttpResponse*             response,\n                                      PLT_DeviceDataReference       device)\n{\n    NPT_COMPILER_UNUSED(context);\n\n    NPT_AutoLock lock(m_Lock);\n\n    PLT_DeviceReadyIterator device_tester;\n    NPT_String              scpd;\n    PLT_DeviceDataReference root_device;\n    PLT_Service*            service;\n\n    NPT_String prefix = NPT_String::Format( PLT_CtrlPoint::ProcessGetSCPDResponse for a service of device \\ %s\\  \n    @ %s (result = %d, status = %d) , \n    (const char*)device- GetFriendlyName(), \n    (const char*)request.GetUrl().ToString(),\n    res,\n    response?response- GetStatusCode():0);\n\n    // verify response was ok\n    NPT_CHECK_LABEL_FATAL(res, bad_response);\n    NPT_CHECK_POINTER_LABEL_FATAL(response, bad_response);\n\n    PLT_LOG_HTTP_RESPONSE(NPT_LOG_LEVEL_FINER, prefix, response);\n\n    // make sure root device hasn't disappeared\n    NPT_CHECK_LABEL_WARNING(FindDevice(device- GetUUID(), root_device, true),\n                            bad_response);\n\n    res = device- FindServiceBySCPDURL(request.GetUrl().ToRequestString(), service);\n    NPT_CHECK_LABEL_SEVERE(res, bad_response);\n\n    // get response body\n    res = PLT_HttpHelper::GetBody(*response, scpd);\n    NPT_CHECK_LABEL_FATAL(res, bad_response);\n\n    // DIAL support\n    if (root_device- GetType().Compare( urn:dial-multiscreen-org:device:dial:1 ) == 0) {\n        AddDevice(root_device);\n        return NPT_SUCCESS;\n    }\n\n    // set the service scpd\n    res = service- SetSCPDXML(scpd);\n    NPT_CHECK_LABEL_SEVERE(res, bad_response);\n\n    // if root device is ready, notify listeners about it and embedded devices\n    if (NPT_SUCCEEDED(device_tester(root_device))) {\n        AddDevice(root_device);  //\u7b2c53\u884c\n    }\n\n    return NPT_SUCCESS;\n\nbad_response:\n    NPT_LOG_SEVERE_2( Bad SCPD response for device \\ %s\\ :%s , \n        (const char*)device- GetFriendlyName(),\n        (const char*)scpd);\n\n    if (!root_device.IsNull()) RemoveDevice(root_device);\n    return res;\n}", 
            "title": "\u4fee\u6539\u539f\u56e0"
        }, 
        {
            "location": "/tech/Develop DLNA Using Platinum Library/#35issue2", 
            "text": "\u4e2a\u4eba\u53d1\u73b0\u5c0f\u7c73\u76d2\u5b50\u5bf9\u4e8edlan\u534f\u8bae\u5b9e\u73b0\u90e8\u5206\u7684\u9759\u97f3\u63a7\u5236\u547d\u4ee4\u4f3c\u4e4e\u6709\u4e9b\u51fa\u5165\uff0c\u6211\u4f7f\u7528\u793a\u4f8b\u7a0b\u5e8f\u53d1\u9001\u9759\u97f3\u547d\u4ee4\u5230\u5c0f\u7c73\u76d2\u5b50\uff0c\u53d1\u73b0\u53ea\u80fd\u4f7f\u8bbe\u5907\u9759\u97f3\uff0c\u5374\u4e0d\u80fd\u4f7f\u8bbe\u5907\u6062\u590d\u58f0\u97f3\uff0c\u8fd9\u4e2a\u95ee\u9898\u6709\u5f85\u8fdb\u4e00\u6b65\u786e\u8ba4\u3002", 
            "title": "#issue2"
        }, 
        {
            "location": "/tech/FFmpeg and SDL tutorial 1/", 
            "text": "FFmpeg and SDL tutorial 1\n\n\n\u600e\u6837\u7528\u4e0d\u52301000\u884c\u4ee3\u7801\u5199\u4e00\u4e2a\u89c6\u9891\u64ad\u653e\u5668\n\n\nFFmpeg\u662f\u521b\u5efa\u89c6\u9891\u5e94\u7528\u548c\u901a\u7528\u7ec4\u4ef6\u7684\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u5e93\u3002FFmpeg\u5e93\u5c06\u89c6\u9891\u5904\u7406\u76f8\u5173\u7684\u89e3\u7801\u3001\u7f16\u7801\u3001\u88c5\u5305\u3001\u62c6\u5305\u7b49\u590d\u6742\u64cd\u4f5c\u90fd\u56ca\u62ec\u5728\u5176\u4e2d\uff0c\u8fd9\u6837\u6781\u5927\u7684\u7b80\u5316\u4e86\u5a92\u4f53\u5e94\u7528\u7684\u7f16\u5199\u3002\u5b83\u4f7f\u7528C\u8bed\u8a00\u5b9e\u73b0\uff0c\u5177\u6709\u7b80\u5355\u3001\u5feb\u901f\u3001\u53ef\u4ee5\u7f16\u89e3\u7801\u51e0\u4e4e\u6240\u6709\u5f53\u524d\u6d41\u884c\u7684\u89c6\u9891\u683c\u5f0f\u3002\n\n\n\u552f\u4e00\u7684\u4e0d\u8db3\u5c31\u662f\u76f8\u5173\u7684\u6587\u6863\u4e0d\u662f\u5f88\u5b8c\u5584\uff0c\u5b66\u4e60\u8d77\u6765\u6bd4\u8f83\u8d39\u52b2\u3002\u8fd9\u4e2a\u7b80\u5355\u7684\u6559\u7a0b\u5c31\u662f\u6211\u5728\u5b66\u4e60FFmpeg\u7684\u65f6\u5019\uff0c\u53c2\u8003\n\u5b98\u7f51\u63d0\u4f9b\u7684\u4e00\u5957\u6559\u7a0b\n\uff0c\u8bb0\u5f55\u4e00\u4e0b\u6211\u7684\u6574\u4e2a\u5b9e\u8df5\u8fc7\u7a0b\uff0c\u56e0\u4e3aFFmpeg\u4e5f\u5728\u4e0d\u65ad\u7684\u53d1\u5c55\uff0c\u8fd9\u671f\u95f4\uff0c\u4f1a\u6709\u4e00\u4e9bAPI\u540d\u79f0\u548c\u8c03\u7528\u65b9\u5f0f\u7684\u4fee\u6539\uff0c\u53ef\u80fd\u4e0e\u539f\u6765\u7684\u6559\u7a0b\u6240\u5217\u51fa\u7684\u4ee3\u7801\u4e0d\u4e00\u81f4\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u8f83\u65b0\u7248\u672c\u7684FFmpeg\uff0c\u53ef\u80fd\u4f1a\u6709\u7f16\u8bd1\u4e0d\u901a\u8fc7\u7684\u65f6\u5019\uff0c\u6240\u4ee5\uff0c\u5728\u6211\u5b9e\u8df5\u7684\u65f6\u5019\uff0c\u4e5f\u4f1a\u9488\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ea\u628a\u6211\u6539\u5199\u540e\u5e76\u4ee5\u5bf9\u5e94\u7248\u672c\u7f16\u8bd1\u901a\u8fc7\u7684\u4ee3\u7801\u8d34\u51fa\u6765\uff0c\u4ee5\u4f9b\u5927\u5bb6\u53c2\u8003\uff0c\u4e0d\u8fc7\u66f4\u4e3b\u8981\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u52a0\u6df1\u6211\u5bf9FFmpeg\u7684\u7406\u89e3\u3002\n\n\n\u5f53\u8fd9\u4e2a\u6559\u7a0b\u5b66\u5b8c\u4e4b\u540e\uff0c\u4f60\u5c31\u4f1a\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u89c6\u9891\u64ad\u653e\u5668\u53ef\u4ee5\u4f7f\u7528\u4e86 ;-)\n\n\n\u8fd9\u4e2a\u89c6\u9891\u64ad\u653e\u5668\u4f7f\u7528SDL\u8f93\u51fa\u5a92\u4f53\u6587\u4ef6\u7684\u97f3\u9891\u548c\u89c6\u9891\u3002SDL\u662f\u9488\u5bf9MPEG\u64ad\u653e\u8f6f\u4ef6\u3001\u6a21\u62df\u5668\u6216\u89c6\u9891\u6e38\u620f\u7684\u4f18\u79c0\u8de8\u5e73\u53f0\u591a\u5a92\u4f53\u5e93\u3002\u4f60\u9700\u8981\u5b89\u88c5SDL\u5f00\u53d1\u5e93\u6765\u5b66\u4e60\u672c\u6559\u7a0b\u3002\n\n\n\u8fd9\u4e2a\u6559\u7a0b\u9700\u8981\u8bfb\u8005\u6709C\u8bed\u8a00\u5f00\u53d1\u7ecf\u9a8c\uff0c\u4f60\u9700\u8981\u77e5\u9053\u8bf8\u5982\u961f\u5217\u3001\u62c6\u5305\u3001\u6ce2\u5f62\u4ee5\u53ca\u4e00\u4e9b\u591a\u5a92\u4f53\u76f8\u5173\u7684\u57fa\u672c\u672f\u8bed\uff0c\u672c\u6559\u7a0b\u8fdb\u884c\u4e2d\u4e5f\u4f1a\u5bf9\u76f8\u5173\u7684\u6982\u5ff5\u4f5c\u4e00\u4e9b\u89e3\u91ca\u3002", 
            "title": "FFmpeg and SDL tutorial 1"
        }, 
        {
            "location": "/tech/FFmpeg and SDL tutorial 1/#ffmpeg-and-sdl-tutorial-1", 
            "text": "", 
            "title": "FFmpeg and SDL tutorial 1"
        }, 
        {
            "location": "/tech/FFmpeg and SDL tutorial 1/#1000", 
            "text": "FFmpeg\u662f\u521b\u5efa\u89c6\u9891\u5e94\u7528\u548c\u901a\u7528\u7ec4\u4ef6\u7684\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u5e93\u3002FFmpeg\u5e93\u5c06\u89c6\u9891\u5904\u7406\u76f8\u5173\u7684\u89e3\u7801\u3001\u7f16\u7801\u3001\u88c5\u5305\u3001\u62c6\u5305\u7b49\u590d\u6742\u64cd\u4f5c\u90fd\u56ca\u62ec\u5728\u5176\u4e2d\uff0c\u8fd9\u6837\u6781\u5927\u7684\u7b80\u5316\u4e86\u5a92\u4f53\u5e94\u7528\u7684\u7f16\u5199\u3002\u5b83\u4f7f\u7528C\u8bed\u8a00\u5b9e\u73b0\uff0c\u5177\u6709\u7b80\u5355\u3001\u5feb\u901f\u3001\u53ef\u4ee5\u7f16\u89e3\u7801\u51e0\u4e4e\u6240\u6709\u5f53\u524d\u6d41\u884c\u7684\u89c6\u9891\u683c\u5f0f\u3002  \u552f\u4e00\u7684\u4e0d\u8db3\u5c31\u662f\u76f8\u5173\u7684\u6587\u6863\u4e0d\u662f\u5f88\u5b8c\u5584\uff0c\u5b66\u4e60\u8d77\u6765\u6bd4\u8f83\u8d39\u52b2\u3002\u8fd9\u4e2a\u7b80\u5355\u7684\u6559\u7a0b\u5c31\u662f\u6211\u5728\u5b66\u4e60FFmpeg\u7684\u65f6\u5019\uff0c\u53c2\u8003 \u5b98\u7f51\u63d0\u4f9b\u7684\u4e00\u5957\u6559\u7a0b \uff0c\u8bb0\u5f55\u4e00\u4e0b\u6211\u7684\u6574\u4e2a\u5b9e\u8df5\u8fc7\u7a0b\uff0c\u56e0\u4e3aFFmpeg\u4e5f\u5728\u4e0d\u65ad\u7684\u53d1\u5c55\uff0c\u8fd9\u671f\u95f4\uff0c\u4f1a\u6709\u4e00\u4e9bAPI\u540d\u79f0\u548c\u8c03\u7528\u65b9\u5f0f\u7684\u4fee\u6539\uff0c\u53ef\u80fd\u4e0e\u539f\u6765\u7684\u6559\u7a0b\u6240\u5217\u51fa\u7684\u4ee3\u7801\u4e0d\u4e00\u81f4\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u8f83\u65b0\u7248\u672c\u7684FFmpeg\uff0c\u53ef\u80fd\u4f1a\u6709\u7f16\u8bd1\u4e0d\u901a\u8fc7\u7684\u65f6\u5019\uff0c\u6240\u4ee5\uff0c\u5728\u6211\u5b9e\u8df5\u7684\u65f6\u5019\uff0c\u4e5f\u4f1a\u9488\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ea\u628a\u6211\u6539\u5199\u540e\u5e76\u4ee5\u5bf9\u5e94\u7248\u672c\u7f16\u8bd1\u901a\u8fc7\u7684\u4ee3\u7801\u8d34\u51fa\u6765\uff0c\u4ee5\u4f9b\u5927\u5bb6\u53c2\u8003\uff0c\u4e0d\u8fc7\u66f4\u4e3b\u8981\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u52a0\u6df1\u6211\u5bf9FFmpeg\u7684\u7406\u89e3\u3002  \u5f53\u8fd9\u4e2a\u6559\u7a0b\u5b66\u5b8c\u4e4b\u540e\uff0c\u4f60\u5c31\u4f1a\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u89c6\u9891\u64ad\u653e\u5668\u53ef\u4ee5\u4f7f\u7528\u4e86 ;-)  \u8fd9\u4e2a\u89c6\u9891\u64ad\u653e\u5668\u4f7f\u7528SDL\u8f93\u51fa\u5a92\u4f53\u6587\u4ef6\u7684\u97f3\u9891\u548c\u89c6\u9891\u3002SDL\u662f\u9488\u5bf9MPEG\u64ad\u653e\u8f6f\u4ef6\u3001\u6a21\u62df\u5668\u6216\u89c6\u9891\u6e38\u620f\u7684\u4f18\u79c0\u8de8\u5e73\u53f0\u591a\u5a92\u4f53\u5e93\u3002\u4f60\u9700\u8981\u5b89\u88c5SDL\u5f00\u53d1\u5e93\u6765\u5b66\u4e60\u672c\u6559\u7a0b\u3002  \u8fd9\u4e2a\u6559\u7a0b\u9700\u8981\u8bfb\u8005\u6709C\u8bed\u8a00\u5f00\u53d1\u7ecf\u9a8c\uff0c\u4f60\u9700\u8981\u77e5\u9053\u8bf8\u5982\u961f\u5217\u3001\u62c6\u5305\u3001\u6ce2\u5f62\u4ee5\u53ca\u4e00\u4e9b\u591a\u5a92\u4f53\u76f8\u5173\u7684\u57fa\u672c\u672f\u8bed\uff0c\u672c\u6559\u7a0b\u8fdb\u884c\u4e2d\u4e5f\u4f1a\u5bf9\u76f8\u5173\u7684\u6982\u5ff5\u4f5c\u4e00\u4e9b\u89e3\u91ca\u3002", 
            "title": "\u600e\u6837\u7528\u4e0d\u52301000\u884c\u4ee3\u7801\u5199\u4e00\u4e2a\u89c6\u9891\u64ad\u653e\u5668"
        }, 
        {
            "location": "/tech/FFmpeg compiled on MacOS/", 
            "text": "FFmpeg compiled on MacOS\n\n\n\u6700\u8fd1\u597d\u50cf\u5bf9\u97f3\u89c6\u9891\u7f16\u89e3\u7801\u6765\u4e86\u5174\u8da3\uff0c\u5c31\u6765\u5b66\u4e60\u4e00\u6ce2\u5427\u3002\u5728\nFFmpeg\u5b98\u7f51\n\u4e0a\u627e\u5230\u4e00\u7bc7\u5165\u95e8\u6559\u7a0b\nAn FFmpeg and SDL Tutorial\n\uff0c\u6253\u7b97\u5148\u7167\u7740\u8fd9\u4e2a\u5b66\u4e60\uff0c\u5b8c\u6210\u4e00\u4e2a\u7b80\u5355\u7684\u89c6\u9891\u64ad\u653e\u5668\uff0c\u5e76\u5728\u5b66\u4e60\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5c06\u5b9e\u8df5\u7684\u4e00\u4e9b\u7ec6\u8282\u6574\u7406\u6210\u535a\u5ba2\uff0c\u987a\u4fbf\u57f9\u517b\u4e00\u4e0b\u6280\u672f\u60c5\u6000;-)\n\n\n\u90a3\u4e48\u9996\u5148\u5c31\u8981\u642d\u5efa\u5f00\u53d1\u73af\u5883\u4e86\uff0c\u9700\u8981\u7f16\u8bd1FFmpeg\u6e90\u7801\u3002\u672c\u6587\u53c2\u7167FFmpeg\n\u5b98\u65b9Wiki\n\u63d0\u4f9b\u7684\u7f16\u8bd1\u6587\u6863\u8fdb\u884c\u3002\u56e0\u4e3a\u662f\u5728Mac\u4e0a\u8fdb\u884c\uff0c\u6240\u4ee5\u53c2\u7167\n\u9488\u5bf9MacOS\u7684\u6559\u7a0b\n\u7684\u8bf4\u660e\u4f7f\u7528\nHomebrew\n\u8fdb\u884c\u81ea\u52a8\u7f16\u8bd1\u5b89\u88c5.\n\n\n\u53ef\u4ee5\u4f7f\u7528\nbrew info ffmpeg\n\u6765\u67e5\u770b\u7528\u54ea\u4e9b\u76f8\u5173\u7684\u9009\u9879\u3002\n\n\n\u53ef\u4ee5\u4f7f\u7528 \nsudo chown -R whoami \ndir\n\u6765\u83b7\u5f97\u4e00\u4e9b\u76ee\u5f55\u7684\u8bbf\u95ee\u6743\u9650\n\n\n\u6211\u4eec\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u5feb\u901f\u5b89\u88c5:\n\n\nbrew install ffmpeg --with-fdk-aac --with-sdl --with-freetype --with-libass --with-libquvi --with-libvorbis --with-libvpx --with-opus --with-x265\n\n\n\n\n\u5b89\u88c5\u540e\u53ef\u80fd\u63d0\u793a\u4fe1\u606f\uff1a\nWarning: ffmpeg-3.1.4 already installed, it's just not linked\n\uff0c\u8fd9\u8bf4\u660e\u8f6f\u4ef6\u5b89\u88c5\u4e86\uff0c\u4f46\u8fd8\u6ca1\u6709\u4e3a\u5176\u521b\u5efa\u76ee\u5f55\u94fe\u63a5\uff0c\u6240\u4ee5\u8f93\u5165\u547d\u4ee4\uff0c\u7cfb\u7edf\u53ef\u80fd\u4f1a\u641c\u7d22\u4e0d\u5230\u3002\n\n\n\u901a\u8fc7\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u91cd\u5efabrew\u5bf9\u6240\u5b89\u88c5\u8f6f\u4ef6\u7684\u94fe\u63a5\uff1a\nbrew link --overwrite ffmpeg\n\n\n\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u6d4b\u8bd5\u662f\u5426\u6210\u529f\uff1a\n\n\n ffplay -f lavfi -i testsrc", 
            "title": "FFmpeg compiled on MacOS"
        }, 
        {
            "location": "/tech/FFmpeg compiled on MacOS/#ffmpeg-compiled-on-macos", 
            "text": "\u6700\u8fd1\u597d\u50cf\u5bf9\u97f3\u89c6\u9891\u7f16\u89e3\u7801\u6765\u4e86\u5174\u8da3\uff0c\u5c31\u6765\u5b66\u4e60\u4e00\u6ce2\u5427\u3002\u5728 FFmpeg\u5b98\u7f51 \u4e0a\u627e\u5230\u4e00\u7bc7\u5165\u95e8\u6559\u7a0b An FFmpeg and SDL Tutorial \uff0c\u6253\u7b97\u5148\u7167\u7740\u8fd9\u4e2a\u5b66\u4e60\uff0c\u5b8c\u6210\u4e00\u4e2a\u7b80\u5355\u7684\u89c6\u9891\u64ad\u653e\u5668\uff0c\u5e76\u5728\u5b66\u4e60\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5c06\u5b9e\u8df5\u7684\u4e00\u4e9b\u7ec6\u8282\u6574\u7406\u6210\u535a\u5ba2\uff0c\u987a\u4fbf\u57f9\u517b\u4e00\u4e0b\u6280\u672f\u60c5\u6000;-)  \u90a3\u4e48\u9996\u5148\u5c31\u8981\u642d\u5efa\u5f00\u53d1\u73af\u5883\u4e86\uff0c\u9700\u8981\u7f16\u8bd1FFmpeg\u6e90\u7801\u3002\u672c\u6587\u53c2\u7167FFmpeg \u5b98\u65b9Wiki \u63d0\u4f9b\u7684\u7f16\u8bd1\u6587\u6863\u8fdb\u884c\u3002\u56e0\u4e3a\u662f\u5728Mac\u4e0a\u8fdb\u884c\uff0c\u6240\u4ee5\u53c2\u7167 \u9488\u5bf9MacOS\u7684\u6559\u7a0b \u7684\u8bf4\u660e\u4f7f\u7528 Homebrew \u8fdb\u884c\u81ea\u52a8\u7f16\u8bd1\u5b89\u88c5.  \u53ef\u4ee5\u4f7f\u7528 brew info ffmpeg \u6765\u67e5\u770b\u7528\u54ea\u4e9b\u76f8\u5173\u7684\u9009\u9879\u3002  \u53ef\u4ee5\u4f7f\u7528  sudo chown -R whoami  dir \u6765\u83b7\u5f97\u4e00\u4e9b\u76ee\u5f55\u7684\u8bbf\u95ee\u6743\u9650  \u6211\u4eec\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u5feb\u901f\u5b89\u88c5:  brew install ffmpeg --with-fdk-aac --with-sdl --with-freetype --with-libass --with-libquvi --with-libvorbis --with-libvpx --with-opus --with-x265  \u5b89\u88c5\u540e\u53ef\u80fd\u63d0\u793a\u4fe1\u606f\uff1a Warning: ffmpeg-3.1.4 already installed, it's just not linked \uff0c\u8fd9\u8bf4\u660e\u8f6f\u4ef6\u5b89\u88c5\u4e86\uff0c\u4f46\u8fd8\u6ca1\u6709\u4e3a\u5176\u521b\u5efa\u76ee\u5f55\u94fe\u63a5\uff0c\u6240\u4ee5\u8f93\u5165\u547d\u4ee4\uff0c\u7cfb\u7edf\u53ef\u80fd\u4f1a\u641c\u7d22\u4e0d\u5230\u3002  \u901a\u8fc7\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u91cd\u5efabrew\u5bf9\u6240\u5b89\u88c5\u8f6f\u4ef6\u7684\u94fe\u63a5\uff1a brew link --overwrite ffmpeg  \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u6d4b\u8bd5\u662f\u5426\u6210\u529f\uff1a   ffplay -f lavfi -i testsrc", 
            "title": "FFmpeg compiled on MacOS"
        }, 
        {
            "location": "/tech/FFmpeg version 3.1.4 example code/", 
            "text": "FFmpeg version 3.1.4 example code\n\n\n\u8fd9\u6bb5\u65f6\u95f4\u5b66\u4e60FFmpeg\u7f16\u89e3\u7801\uff0c\u7531\u4e8e\u5b89\u88c5\u7684\u662f\u5f53\u524d\u6700\u65b0\u7248\u7684\u5e93(\n3.1.4\n)\uff0c\u6309\u7740\u5b98\u7f51\u7ed9\u7684\u793a\u4f8b\u7a0b\u5e8f\u5b66\u4e60\uff0c\u5374\u603b\u662f\u53d1\u73b0\u7f16\u8bd1\u65f6\u63d0\u793aAPI\u88ab\u5f03\u7528\u7684\u95ee\u9898\uff0c\u5bfc\u81f4\u5b66\u4e60\u7684\u70ed\u60c5\u53d7\u5230\u6253\u51fb\u3002\u6240\u4ee5\u5c31\u60f3\u7740\u5728\u81ea\u5df1\u6539\u5199\u5e76\u4f7f\u7528\u6700\u65b0API\u8c03\u7528\u65f6\uff0c\u5c3d\u91cf\u4e5f\u7ed9\u5b98\u7f51\u7684\u793a\u4f8b\u4ee3\u7801\u66f4\u65b0\u4e00\u4e0b\uff0c\u653e\u5728\u81ea\u5df1\u7684\u535a\u5ba2\u4e0a\uff0c\u6216\u8005\u4e4b\u540e\u6709\u673a\u4f1a\u7684\u8bdd\uff0c\u63a8\u5230\u5b98\u7f51\u4e0a\u3002\n\n\n\u4e0b\u9762\u6240\u5217\u4e2a\u8868\u683c\uff1a\n\n\n\n\n\n\n\n\nFFmpeg 3.1.4 \u9002\u914d\n\n\n\u5b98\u7f51\u63d0\u4f9b\u7684\u793a\u4f8b\u4ee3\u7801\n\n\n\n\n\n\n\n\n\n\navio_reading.c\n\n\navio_reading.c\n\n\n\n\n\n\n\n\n\u7f16\u8bd1\u811a\u672c\nbuild.sh\n\u5185\u5bb9\u5982\u4e0b\uff1a\n\n\n# !/usr/bin/env bash\n# -*- coding: utf-8 -*-\n\ngcc $1 -I/usr/local/inclue -L/usr/local/lib -lavformat -lavutil -lavcodec -lavfilter -lswscale\n\n\n\n\n\u7f16\u8bd1\u793a\u4f8b\uff1a\n\n\n./build avio_reading.c\n\n\n\n\n\u751f\u6210\u9ed8\u8ba4\u6587\u4ef6\u540d\u4e3a\uff1a\na.out\n\n\n\u7f16\u8bd1\u524d\u8981\u786e\u4fdd\u5b89\u88c5\u4e86FFmpeg\u5f00\u53d1\u5e93\uff0c\u672c\u6587\u64b0\u5199\u65f6\uff0c\u5934\u6587\u4ef6\u5b89\u88c5\u5728\n/usr/local/include\n\u4e0b\uff0c\u5e93\u6587\u4ef6\u5b89\u88c5\u5728\n/usr/local/lib\n\u4e0b\u3002", 
            "title": "FFmpeg version 3.1.4 example code"
        }, 
        {
            "location": "/tech/FFmpeg version 3.1.4 example code/#ffmpeg-version-314-example-code", 
            "text": "\u8fd9\u6bb5\u65f6\u95f4\u5b66\u4e60FFmpeg\u7f16\u89e3\u7801\uff0c\u7531\u4e8e\u5b89\u88c5\u7684\u662f\u5f53\u524d\u6700\u65b0\u7248\u7684\u5e93( 3.1.4 )\uff0c\u6309\u7740\u5b98\u7f51\u7ed9\u7684\u793a\u4f8b\u7a0b\u5e8f\u5b66\u4e60\uff0c\u5374\u603b\u662f\u53d1\u73b0\u7f16\u8bd1\u65f6\u63d0\u793aAPI\u88ab\u5f03\u7528\u7684\u95ee\u9898\uff0c\u5bfc\u81f4\u5b66\u4e60\u7684\u70ed\u60c5\u53d7\u5230\u6253\u51fb\u3002\u6240\u4ee5\u5c31\u60f3\u7740\u5728\u81ea\u5df1\u6539\u5199\u5e76\u4f7f\u7528\u6700\u65b0API\u8c03\u7528\u65f6\uff0c\u5c3d\u91cf\u4e5f\u7ed9\u5b98\u7f51\u7684\u793a\u4f8b\u4ee3\u7801\u66f4\u65b0\u4e00\u4e0b\uff0c\u653e\u5728\u81ea\u5df1\u7684\u535a\u5ba2\u4e0a\uff0c\u6216\u8005\u4e4b\u540e\u6709\u673a\u4f1a\u7684\u8bdd\uff0c\u63a8\u5230\u5b98\u7f51\u4e0a\u3002  \u4e0b\u9762\u6240\u5217\u4e2a\u8868\u683c\uff1a     FFmpeg 3.1.4 \u9002\u914d  \u5b98\u7f51\u63d0\u4f9b\u7684\u793a\u4f8b\u4ee3\u7801      avio_reading.c  avio_reading.c     \u7f16\u8bd1\u811a\u672c build.sh \u5185\u5bb9\u5982\u4e0b\uff1a  # !/usr/bin/env bash\n# -*- coding: utf-8 -*-\n\ngcc $1 -I/usr/local/inclue -L/usr/local/lib -lavformat -lavutil -lavcodec -lavfilter -lswscale  \u7f16\u8bd1\u793a\u4f8b\uff1a  ./build avio_reading.c  \u751f\u6210\u9ed8\u8ba4\u6587\u4ef6\u540d\u4e3a\uff1a a.out  \u7f16\u8bd1\u524d\u8981\u786e\u4fdd\u5b89\u88c5\u4e86FFmpeg\u5f00\u53d1\u5e93\uff0c\u672c\u6587\u64b0\u5199\u65f6\uff0c\u5934\u6587\u4ef6\u5b89\u88c5\u5728 /usr/local/include \u4e0b\uff0c\u5e93\u6587\u4ef6\u5b89\u88c5\u5728 /usr/local/lib \u4e0b\u3002", 
            "title": "FFmpeg version 3.1.4 example code"
        }, 
        {
            "location": "/tech/Fmpeg 2.8.6 example code - transcoding/", 
            "text": "FFmpeg 2.8.6 example code - transcoding\n\n\n\u6700\u8fd1\u5b66\u4e60ffmpeg\uff0c\u5b98\u7f51\u63d0\u4f9b\u7684\u793a\u4f8b\u4ee3\u7801\ntranscoding.c\n\u6f14\u793a\u4e86\u7f16\u89e3\u7801\u548c\u6ee4\u6ce2\u5668\u7684\u4f7f\u7528\uff0c\u4e0d\u8fc7\u7b2c\u4e00\u6b65\u7684\u7f16\u8bd1\u8fd0\u884c\u6d4b\u8bd5\u5c31\u5361\u4e86\u597d\u4e45\uff0c\u4eca\u5929\u7ec8\u4e8e\u627e\u5230\u4e86\u539f\u56e0\u4e86\uff0c\u8d76\u7d27\u8bb0\u5f55\u4e00\u4e0b\uff0c\u6211\u76f8\u4fe1\u548c\u6211\u9047\u5230\u540c\u6837\u95ee\u9898\u7684\u4eba\u4e0d\u5728\u5c11\u6570\uff0c\u6240\u4ee5\u5e0c\u671b\u80fd\u4e3a\u5927\u5bb6\u63d0\u4f9b\u4e00\u7bc7\u6709\u6548\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u51cf\u8f7b\u5165\u95e8\u65f6\u7684\u75db\u82e6\u3002\n\n\n\u628a\u5b98\u7f51\u793a\u4f8b\u62f7\u4e00\u4efd\u5728\u672c\u5730\uff0c\u4ee5\u76f8\u540c\u7684\u540d\u5b57\u547d\u540d\u4e3a\ntranscoding.c\n, \u56e0\u4e3a\u5b98\u7f51\u7684\u8fd9\u4e2a\u793a\u4f8b\uff0c\u7528\u7684\u662fffmpeg2.x\u7684API\uff0c\u56e0\u4e3a\u6211\u4e5f\u4e0d\u592a\u719f\u6089ffmpeg\uff0c\u7528ffmpeg3.x\u7f16\u8bd1\u65f6\uff0c\u63d0\u793a\u4e86\u6211\u51e0\u4e2aAPI\u8fc7\u65f6\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u88c5\u56de\u4e86ffmpeg2.8.6\u6765\u7f16\u8bd1\u8fd9\u4e2a\u793a\u4f8b\u3002\u4e0b\u9762\u662f\u6211\u7684\u7f16\u8bd1\u547d\u4ee4\uff1a\n\n\ngcc -I /usr/local/include/ -L /usr/local/lib -lavformat -lavfilter -lavutil -lswscale -lavcodec transcoding.c -o transcoding    \n\n\n\n\n\u751f\u6210\u4e86\u540d\u4e3a\ntranscoding\n\u7684\u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u6211\u4f7f\u7528\u81ea\u5df1\u7684\u4e00\u4e2a\u6d4b\u8bd5\u89c6\u9891\u8fd0\u884c\u5b83\uff1a\n\n\n./transcoding test.mp4 output.mp4\n\n\n\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a\n\n\nInput #0, mov,mp4,m4a,3gp,3g2,mj2, from 'test.mp4':\n  Metadata:\n    major_brand     : isom\n    minor_version   : 1\n    compatible_brands: isomavc1\n    creation_time   : 2016-01-10 07:17:18\n    encoder         : FormatFactory : www.pcfreetime.com\n  Duration: 00:01:41.49, start: 0.000000, bitrate: 863 kb/s\n    Stream #0:0(und): Video: h264 (High) (avc1 / 0x31637661), yuv420p, 856x480 [SAR 480:481 DAR 856:481], 744 kb/s, SAR 427:428 DAR 427:240, 24 fps, 24 tbr, 24k tbn, 48 tbc (default)\n    Metadata:\n      creation_time   : 2016-01-10 07:17:18\n      handler_name    : video\n    Stream #0:1(und): Audio: aac (LC) (mp4a / 0x6134706D), 44100 Hz, stereo, fltp, 116 kb/s (default)\n    Metadata:\n      creation_time   : 2016-01-10 07:17:18\n      handler_name    : sound\n[libx264 @ 0x7fe4ac851600] broken ffmpeg default settings detected\n[libx264 @ 0x7fe4ac851600] use an encoding preset (e.g. -vpre medium)\n[libx264 @ 0x7fe4ac851600] preset usage: -vpre \nspeed\n -vpre \nprofile\n\n[libx264 @ 0x7fe4ac851600] speed presets are listed in x264 --help\n[libx264 @ 0x7fe4ac851600] profile is optional; x264 defaults to high\nCannot open video encoder for stream #0\nError occurred: Generic error in an external library\n\n\n\n\n#issue 1 - [libx264 @ 0x7fe4ac851600] broken ffmpeg default settings detected\n\n\n\u8fd9\u4e2a\u9519\u8bef\u53ca\u5176\u4e0b\u9762\u7684\u4fe1\u606f\u544a\u8bc9\u6211\u4eec\uff0c\u5728\u6253\u5f00\u8f93\u51fa\u6587\u4ef6\u7684\u89c6\u9891\u7f16\u7801\u5668\u65f6\u51fa\u73b0\u4e86\u9519\u8bef\uff0c\u8fd9\u901a\u5e38\u662f\u7531\u4e8e\u7f16\u7801\u5668\u53c2\u6570\u8bbe\u7f6e\u4e0d\u5f53\u9020\u6210\u7684\u3002\u901a\u8fc7\u641c\u7d22\uff0c\u53d1\u73b0\u4e86\u8fd9\u7bc7\u6587\u7ae0\u5bf9\u8fd9\u4e2a\u95ee\u9898\u89e3\u91ca\u7684\u6bd4\u8f83\u6e05\u695a:\n\nhttp://blog.csdn.net/cffishappy/article/details/7680097\n\n\n\u89e3\u51b3\u65b9\u6cd5:\n\n\n\u5728\ntranscoding.c\n\u4e2d\u7684\nopen_output_file\n\u51fd\u6570\u4e2d\uff0c\u4fee\u6539\u7684\u90e8\u5206\u5982\u4e0b(\u53ea\u589e\u52a0\u4e86\n13-17\u884c\n)\uff1a\n\n\nif (dec_ctx-\ncodec_type == AVMEDIA_TYPE_VIDEO) {\n                enc_ctx-\nheight = dec_ctx-\nheight;\n                enc_ctx-\nwidth = dec_ctx-\nwidth;\n                enc_ctx-\nsample_aspect_ratio = dec_ctx-\nsample_aspect_ratio;\n                /* take first format from list of supported formats */\n                if (encoder-\npix_fmts)\n                    enc_ctx-\npix_fmt = encoder-\npix_fmts[0];\n                else\n                    enc_ctx-\npix_fmt = dec_ctx-\npix_fmt;\n                /* video time_base can be set to whatever is handy and supported by encoder */\n                enc_ctx-\ntime_base = dec_ctx-\ntime_base;\n\n                enc_ctx-\nme_range = 16; \n                enc_ctx-\nmax_qdiff = 4;\n                enc_ctx-\nqmin = 10; \n                enc_ctx-\nqmax = 51; \n                enc_ctx-\nqcompress = 0.6;\n\n            } else {\n                enc_ctx-\nsample_rate = dec_ctx-\nsample_rate;\n                enc_ctx-\nchannel_layout = dec_ctx-\nchannel_layout;\n                enc_ctx-\nchannels = av_get_channel_layout_nb_channels(enc_ctx-\nchannel_layout);\n                /* take first format from list of supported formats */\n                enc_ctx-\nsample_fmt = encoder-\nsample_fmts[0];\n                enc_ctx-\ntime_base = (AVRational){1, enc_ctx-\nsample_rate};\n            }   \n\n\n\n\n\n\u4e4b\u540e\uff0c\u6211\u4eec\u4fdd\u5b58\u7f16\u8bd1\u518d\u6b21\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a\n\n\n...\nEncoding frame\nPulling filtered frame from filters\nPushing decoded frame to filters\nPulling filtered frame from filters\nEncoding frame\n[mp4 @ 0x7fbe86803e00] Malformed AAC bitstream detected: use the audio bitstream filter 'aac_adtstoasc' to fix it ('-bsf:a aac_adtstoasc' option with ffmpeg)\n[libx264 @ 0x7fbe86804400] frame I:1     Avg QP:45.67  size:  5439\n[libx264 @ 0x7fbe86804400] frame P:1     Avg QP:46.05  size:   174\n[libx264 @ 0x7fbe86804400] mb I  I16..4: 71.7% 26.7%  1.5%\n[libx264 @ 0x7fbe86804400] mb P  I16..4:  0.2%  0.0%  0.0%  P16..4:  5.2%  0.2%  0.0%  0.0%  0.0%    skip:94.4%\n[libx264 @ 0x7fbe86804400] final ratefactor: 56.92\n[libx264 @ 0x7fbe86804400] 8x8 transform intra:26.7%\n[libx264 @ 0x7fbe86804400] coded y,uvDC,uvAC intra: 8.4% 33.3% 10.1% inter: 0.0% 0.1% 0.0%\n[libx264 @ 0x7fbe86804400] i16 v,h,dc,p: 39% 34%  7% 19%\n[libx264 @ 0x7fbe86804400] i8 v,h,dc,ddl,ddr,vr,hd,vl,hu:  6% 15% 22% 10% 10%  7% 16%  5%  9%\n[libx264 @ 0x7fbe86804400] i4 v,h,dc,ddl,ddr,vr,hd,vl,hu:  8% 33% 12% 10%  8%  8% 15%  2%  4%\n[libx264 @ 0x7fbe86804400] i8c dc,h,v,p: 70% 16% 11%  3%\n[libx264 @ 0x7fbe86804400] Weighted P-Frames: Y:0.0% UV:0.0%\n[libx264 @ 0x7fbe86804400] kb/s:538.85\n[libfaac @ 0x7fbe862d2600] 4 frames left in the queue on closing\nError occurred: Operation not permitted\n\n\n\n\n\u8fd9\u6b21\u7684\u89c6\u9891\u7f16\u7801\u53ef\u4ee5\u6253\u5f00\u5e76\u6b63\u5e38\u7f16\u7801\u4e86\uff0c\u53ef\u662f\u97f3\u9891\u90e8\u5206\u53c8\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\u7684\u89e3\u7b54\u53ef\u4ee5\u770b\u8fd9\u4e2a\u6587\u7ae0\uff1a\n\nhttp://www.tuicool.com/articles/NNNVv2z\n\n\n\u535a\u4e3b\u8ddf\u8e2a\u53d1\u73b0\u4e86\u56f0\u6270\u6211\u8bb8\u4e45\u7684\u95ee\u9898\uff0c\u5728\u8fd9\u91cc\u987a\u4fbf\u611f\u8c22\u4e00\u4e0b\u3002\n\n\n#issue2 - [mp4 @ 0x7fbe86803e00] Malformed AAC bitstream detected: use the audio bitstream filter 'aac_adtstoasc' to fix it ('-bsf:a aac_adtstoasc' option with ffmpeg)\n\n\n\u8fd9\u4e2a\u95ee\u9898\u5728\u7f51\u4e0a\u641c\u4e86\u597d\u4e45\uff0c\nstackoverflow\n\u4e2d\u63d0\u4f9b\u4e86\n\u4e00\u79cd\u65b9\u6cd5\n\uff0c\u53ef\u4ee5\u4f7f\u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\uff0c\u4f46\u5904\u7406\u7ed3\u679c\u4e2d\u53ea\u6709\u97f3\u9891\u88ab\u4fdd\u7559, \u8fd9\u663e\u7136\u4e0d\u662f\u6211\u60f3\u8981\u7684\u3002\n\n\n\u5176\u5b9e\uff0c\u53ea\u9700\u8981\u8c03\u6574\u4e00\u4e0b\u4ee3\u7801\u987a\u5e8f\u5c31\u53ef\u4ee5\u4e86\u3002\u77e5\u9053\u771f\u76f8\u7684\u6211\u773c\u6cea\u6389\u4e0b\u6765\u3002\n\n\n\u89e3\u51b3\u65b9\u6cd5\n\n\n\u8fd8\u662f\u5728\ntranscoding.c\n\u4e2d\u7684\nopen_output_file\n\u51fd\u6570\u4e2d\uff0c\u53ea\u662f\u628a\nfor\u5faa\u73af\n\u5c3e\u90e8\u7684\u90a3\u53e5\u4ee3\u7801\uff1a\n\n\nif (ofmt_ctx-\noformat-\nflags \n AVFMT_GLOBALHEADER)\n                enc_ctx-\nflags |= AV_CODEC_FLAG_GLOBAL_HEADER; \n\n\n\n\n\u63d0\u524d\u5230\nfor\u5faa\u73af\n\u4e2d\u6574\u4e2a\nif\u5224\u65ad\u7ed3\u6784\n\u7684\u524d\u9762\u5c31\u884c\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u6253\u5f00\u7f16\u7801\u5668\u524d\uff0c\u6ca1\u6709\u8bbe\u7f6e\u7f16\u7801\u5668\u4e0a\u4e0b\u6587\u4e2denc_ctx-\nflags\u8fd9\u4e2a\u53c2\u6570\uff0c\u6240\u4ee5\u628a\u8fd9\u53e5\u63d0\u524d\u4e86\u5c31\u89e3\u51b3\u95ee\u9898\u4e86\u3002\u5982\u4e0b\uff1a\n\n\n            if (ofmt_ctx-\noformat-\nflags \n AVFMT_GLOBALHEADER)\n                enc_ctx-\nflags |= AV_CODEC_FLAG_GLOBAL_HEADER;\n\n            if (dec_ctx-\ncodec_type == AVMEDIA_TYPE_VIDEO) {\n                enc_ctx-\nheight = dec_ctx-\nheight;\n                enc_ctx-\nwidth = dec_ctx-\nwidth;\n                enc_ctx-\nsample_aspect_ratio = dec_ctx-\nsample_aspect_ratio;\n                /* take first format from list of supported formats */\n                if (encoder-\npix_fmts)\n                    enc_ctx-\npix_fmt = encoder-\npix_fmts[0];\n                else\n                    enc_ctx-\npix_fmt = dec_ctx-\npix_fmt;\n                /* video time_base can be set to whatever is handy and supported by encoder */\n                enc_ctx-\ntime_base = dec_ctx-\ntime_base;\n\n                enc_ctx-\nme_range = 16;\n                enc_ctx-\nmax_qdiff = 4;\n                enc_ctx-\nqmin = 10;\n                enc_ctx-\nqmax = 51;\n                enc_ctx-\nqcompress = 0.6;\n\n            } else {\n                enc_ctx-\nsample_rate = dec_ctx-\nsample_rate;\n                enc_ctx-\nchannel_layout = dec_ctx-\nchannel_layout;\n                enc_ctx-\nchannels = av_get_channel_layout_nb_channels(enc_ctx-\nchannel_layout);\n                /* take first format from list of supported formats */\n                enc_ctx-\nsample_fmt = encoder-\nsample_fmts[0];\n                enc_ctx-\ntime_base = (AVRational){1, enc_ctx-\nsample_rate};\n            }\n\n\n\n\n#issue3 - \u5904\u7406\u540e\u7684\u7ed3\u679c\u6bd4\u539f\u89c6\u9891\u6a21\u7cca\n\n\n\u5728\u7ecf\u8fc7\u4ee5\u4e0a\u4e24\u4e2a\u95ee\u9898\u7684\u89e3\u51b3\u540e\uff0c\u7f16\u8bd1\u901a\u8fc7\u662f\u6ca1\u6709\u95ee\u9898\u4e86\uff0c\u4e0d\u8fc7\u4f60\u53ef\u80fd\u4f1a\u4e0d\u6ee1\u610f\u8f93\u51fa\u89c6\u9891\u7684\u8d28\u91cf\uff0c\u89c9\u5f97\u5b83\u6bd4\u539f\u89c6\u9891\u6a21\u7cca\u4e86\u8bb8\u591a\uff0c\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u8c03\u8282\u001d\n\\#issue1\n\u4e2d\u7684\u4ee3\u7801\uff1a\n\n\n enc_ctx-\nqmax = 51; \n\n\n\n\n\u628a\u8fd9\u4e2a\u53c2\u6570\u6539\u5c0f\u70b9\uff0c\u53ef\u4ee5\u51cf\u5c0f\u7f16\u7801\u65f6\u7684\u91cf\u5316\u95f4\u9694\uff0c\u63d0\u9ad8\u7f16\u7801\u89c6\u9891\u7684\u8d28\u91cf\uff0c\u4e0d\u8fc7\u4f60\u53ef\u80fd\u56e0\u6b64\u52a0\u957f\u6574\u4e2a\u7f16\u7801\u7684\u65f6\u95f4\u3002\n\n\n\u4f8b\u5982\u6211\u5c06\u5176\u6539\u4e3a\uff1a\n\n\n enc_ctx-\nqmax = 30;\n\n\n\n\n\u6700\u540e\u9644\u4e0a\u4fee\u6539\u540e\u7684\u5b8c\u6574\u4ee3\u7801\uff1a\n\n\nfilename: transcoding.c\n\n\n/*\n * Copyright (c) 2010 Nicolas George\n * Copyright (c) 2011 Stefano Sabatini\n * Copyright (c) 2014 Andrey Utkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \nSoftware\n), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \nAS IS\n, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * @file\n * API example for demuxing, decoding, filtering, encoding and muxing\n * @example transcoding.c\n */\n#include \nlibavcodec/avcodec.h\n\n#include \nlibavformat/avformat.h\n\n#include \nlibavfilter/avfiltergraph.h\n\n#include \nlibavfilter/buffersink.h\n\n#include \nlibavfilter/buffersrc.h\n\n#include \nlibavutil/opt.h\n\n#include \nlibavutil/pixdesc.h\n\nstatic AVFormatContext *ifmt_ctx;\nstatic AVFormatContext *ofmt_ctx;\ntypedef struct FilteringContext {\n    AVFilterContext *buffersink_ctx;\n    AVFilterContext *buffersrc_ctx;\n    AVFilterGraph *filter_graph;\n} FilteringContext;\nstatic FilteringContext *filter_ctx;\nstatic int open_input_file(const char *filename)\n{\n    int ret;\n    unsigned int i;\n    ifmt_ctx = NULL;\n    if ((ret = avformat_open_input(\nifmt_ctx, filename, NULL, NULL)) \n 0) {\n        av_log(NULL, AV_LOG_ERROR, \nCannot open input file\\n\n);\n        return ret;\n    }\n    if ((ret = avformat_find_stream_info(ifmt_ctx, NULL)) \n 0) {\n        av_log(NULL, AV_LOG_ERROR, \nCannot find stream information\\n\n);\n        return ret;\n    }\n    for (i = 0; i \n ifmt_ctx-\nnb_streams; i++) {\n        AVStream *stream;\n        AVCodecContext *codec_ctx;\n        stream = ifmt_ctx-\nstreams[i];\n        codec_ctx = stream-\ncodec;\n        /* Reencode video \n audio and remux subtitles etc. */\n        if (codec_ctx-\ncodec_type == AVMEDIA_TYPE_VIDEO\n                || codec_ctx-\ncodec_type == AVMEDIA_TYPE_AUDIO) {\n            /* Open decoder */\n            ret = avcodec_open2(codec_ctx,\n                    avcodec_find_decoder(codec_ctx-\ncodec_id), NULL);\n            if (ret \n 0) {\n                av_log(NULL, AV_LOG_ERROR, \nFailed to open decoder for stream #%u\\n\n, i);\n                return ret;\n            }\n        }\n    }\n    av_dump_format(ifmt_ctx, 0, filename, 0);\n    return 0;\n}\nstatic int open_output_file(const char *filename)\n{\n    AVStream *out_stream;\n    AVStream *in_stream;\n    AVCodecContext *dec_ctx, *enc_ctx;\n    AVCodec *encoder;\n    int ret;\n    unsigned int i;\n    ofmt_ctx = NULL;\n    avformat_alloc_output_context2(\nofmt_ctx, NULL, NULL, filename);\n    if (!ofmt_ctx) {\n        av_log(NULL, AV_LOG_ERROR, \nCould not create output context\\n\n);\n        return AVERROR_UNKNOWN;\n    }\n    for (i = 0; i \n ifmt_ctx-\nnb_streams; i++) {\n        out_stream = avformat_new_stream(ofmt_ctx, NULL);\n        if (!out_stream) {\n            av_log(NULL, AV_LOG_ERROR, \nFailed allocating output stream\\n\n);\n            return AVERROR_UNKNOWN;\n        }\n        in_stream = ifmt_ctx-\nstreams[i];\n        dec_ctx = in_stream-\ncodec;\n        enc_ctx = out_stream-\ncodec;\n        if (dec_ctx-\ncodec_type == AVMEDIA_TYPE_VIDEO\n                || dec_ctx-\ncodec_type == AVMEDIA_TYPE_AUDIO) {\n            /* in this example, we choose transcoding to same codec */\n            encoder = avcodec_find_encoder(dec_ctx-\ncodec_id);\n            if (!encoder) {\n                av_log(NULL, AV_LOG_FATAL, \nNecessary encoder not found\\n\n);\n                return AVERROR_INVALIDDATA;\n            }\n            /* In this example, we transcode to same properties (picture size,\n             * sample rate etc.). These properties can be changed for output\n             * streams easily using filters */\n\n        if (ofmt_ctx-\noformat-\nflags \n AVFMT_GLOBALHEADER)\n            enc_ctx-\nflags |= AV_CODEC_FLAG_GLOBAL_HEADER;\n\n            if (dec_ctx-\ncodec_type == AVMEDIA_TYPE_VIDEO) {\n                enc_ctx-\nheight = dec_ctx-\nheight;\n                enc_ctx-\nwidth = dec_ctx-\nwidth;\n                enc_ctx-\nsample_aspect_ratio = dec_ctx-\nsample_aspect_ratio;\n                /* take first format from list of supported formats */\n                if (encoder-\npix_fmts)\n                    enc_ctx-\npix_fmt = encoder-\npix_fmts[0];\n                else\n                    enc_ctx-\npix_fmt = dec_ctx-\npix_fmt;\n                /* video time_base can be set to whatever is handy and supported by encoder */\n                enc_ctx-\ntime_base = dec_ctx-\ntime_base;\n\n                enc_ctx-\nme_range = 16;\n                enc_ctx-\nmax_qdiff = 4;\n                enc_ctx-\nqmin = 10;\n                enc_ctx-\nqmax = 51;\n                enc_ctx-\nqcompress = 0.6;\n\n            } else {\n                enc_ctx-\nsample_rate = dec_ctx-\nsample_rate;\n                enc_ctx-\nchannel_layout = dec_ctx-\nchannel_layout;\n                enc_ctx-\nchannels = av_get_channel_layout_nb_channels(enc_ctx-\nchannel_layout);\n                /* take first format from list of supported formats */\n                enc_ctx-\nsample_fmt = encoder-\nsample_fmts[0];\n                enc_ctx-\ntime_base = (AVRational){1, enc_ctx-\nsample_rate};\n            }\n            /* Third parameter can be used to pass settings to encoder */\n            ret = avcodec_open2(enc_ctx, encoder, NULL);\n            if (ret \n 0) {\n                av_log(NULL, AV_LOG_ERROR, \nCannot open video encoder for stream #%u\\n\n, i);\n                return ret;\n            }\n        } else if (dec_ctx-\ncodec_type == AVMEDIA_TYPE_UNKNOWN) {\n            av_log(NULL, AV_LOG_FATAL, \nElementary stream #%d is of unknown type, cannot proceed\\n\n, i);\n            return AVERROR_INVALIDDATA;\n        } else {\n            /* if this stream must be remuxed */\n            ret = avcodec_copy_context(ofmt_ctx-\nstreams[i]-\ncodec,\n                    ifmt_ctx-\nstreams[i]-\ncodec);\n            if (ret \n 0) {\n                av_log(NULL, AV_LOG_ERROR, \nCopying stream context failed\\n\n);\n                return ret;\n            }\n        }\n    }\n    av_dump_format(ofmt_ctx, 0, filename, 1);\n    if (!(ofmt_ctx-\noformat-\nflags \n AVFMT_NOFILE)) {\n        ret = avio_open(\nofmt_ctx-\npb, filename, AVIO_FLAG_WRITE);\n        if (ret \n 0) {\n            av_log(NULL, AV_LOG_ERROR, \nCould not open output file '%s'\n, filename);\n            return ret;\n        }\n    }\n    /* init muxer, write output file header */\n    ret = avformat_write_header(ofmt_ctx, NULL);\n    if (ret \n 0) {\n        av_log(NULL, AV_LOG_ERROR, \nError occurred when opening output file\\n\n);\n        return ret;\n    }\n    return 0;\n}\nstatic int init_filter(FilteringContext* fctx, AVCodecContext *dec_ctx,\n        AVCodecContext *enc_ctx, const char *filter_spec)\n{\n    char args[512];\n    int ret = 0;\n    AVFilter *buffersrc = NULL;\n    AVFilter *buffersink = NULL;\n    AVFilterContext *buffersrc_ctx = NULL;\n    AVFilterContext *buffersink_ctx = NULL;\n    AVFilterInOut *outputs = avfilter_inout_alloc();\n    AVFilterInOut *inputs  = avfilter_inout_alloc();\n    AVFilterGraph *filter_graph = avfilter_graph_alloc();\n    if (!outputs || !inputs || !filter_graph) {\n        ret = AVERROR(ENOMEM);\n        goto end;\n    }\n    if (dec_ctx-\ncodec_type == AVMEDIA_TYPE_VIDEO) {\n        buffersrc = avfilter_get_by_name(\nbuffer\n);\n        buffersink = avfilter_get_by_name(\nbuffersink\n);\n        if (!buffersrc || !buffersink) {\n            av_log(NULL, AV_LOG_ERROR, \nfiltering source or sink element not found\\n\n);\n            ret = AVERROR_UNKNOWN;\n            goto end;\n        }\n        snprintf(args, sizeof(args),\n                \nvideo_size=%dx%d:pix_fmt=%d:time_base=%d/%d:pixel_aspect=%d/%d\n,\n                dec_ctx-\nwidth, dec_ctx-\nheight, dec_ctx-\npix_fmt,\n                dec_ctx-\ntime_base.num, dec_ctx-\ntime_base.den,\n                dec_ctx-\nsample_aspect_ratio.num,\n                dec_ctx-\nsample_aspect_ratio.den);\n        ret = avfilter_graph_create_filter(\nbuffersrc_ctx, buffersrc, \nin\n,\n                args, NULL, filter_graph);\n        if (ret \n 0) {\n            av_log(NULL, AV_LOG_ERROR, \nCannot create buffer source\\n\n);\n            goto end;\n        }\n        ret = avfilter_graph_create_filter(\nbuffersink_ctx, buffersink, \nout\n,\n                NULL, NULL, filter_graph);\n        if (ret \n 0) {\n            av_log(NULL, AV_LOG_ERROR, \nCannot create buffer sink\\n\n);\n            goto end;\n        }\n        ret = av_opt_set_bin(buffersink_ctx, \npix_fmts\n,\n                (uint8_t*)\nenc_ctx-\npix_fmt, sizeof(enc_ctx-\npix_fmt),\n                AV_OPT_SEARCH_CHILDREN);\n        if (ret \n 0) {\n            av_log(NULL, AV_LOG_ERROR, \nCannot set output pixel format\\n\n);\n            goto end;\n        }\n    } else if (dec_ctx-\ncodec_type == AVMEDIA_TYPE_AUDIO) {\n        buffersrc = avfilter_get_by_name(\nabuffer\n);\n        buffersink = avfilter_get_by_name(\nabuffersink\n);\n        if (!buffersrc || !buffersink) {\n            av_log(NULL, AV_LOG_ERROR, \nfiltering source or sink element not found\\n\n);\n            ret = AVERROR_UNKNOWN;\n            goto end;\n        }\n        if (!dec_ctx-\nchannel_layout)\n            dec_ctx-\nchannel_layout =\n                av_get_default_channel_layout(dec_ctx-\nchannels);\n        snprintf(args, sizeof(args),\n                \ntime_base=%d/%d:sample_rate=%d:sample_fmt=%s:channel_layout=0x%\nPRIx64,\n                dec_ctx-\ntime_base.num, dec_ctx-\ntime_base.den, dec_ctx-\nsample_rate,\n                av_get_sample_fmt_name(dec_ctx-\nsample_fmt),\n                dec_ctx-\nchannel_layout);\n        ret = avfilter_graph_create_filter(\nbuffersrc_ctx, buffersrc, \nin\n,\n                args, NULL, filter_graph);\n        if (ret \n 0) {\n            av_log(NULL, AV_LOG_ERROR, \nCannot create audio buffer source\\n\n);\n            goto end;\n        }\n        ret = avfilter_graph_create_filter(\nbuffersink_ctx, buffersink, \nout\n,\n                NULL, NULL, filter_graph);\n        if (ret \n 0) {\n            av_log(NULL, AV_LOG_ERROR, \nCannot create audio buffer sink\\n\n);\n            goto end;\n        }\n        ret = av_opt_set_bin(buffersink_ctx, \nsample_fmts\n,\n                (uint8_t*)\nenc_ctx-\nsample_fmt, sizeof(enc_ctx-\nsample_fmt),\n                AV_OPT_SEARCH_CHILDREN);\n        if (ret \n 0) {\n            av_log(NULL, AV_LOG_ERROR, \nCannot set output sample format\\n\n);\n            goto end;\n        }\n        ret = av_opt_set_bin(buffersink_ctx, \nchannel_layouts\n,\n                (uint8_t*)\nenc_ctx-\nchannel_layout,\n                sizeof(enc_ctx-\nchannel_layout), AV_OPT_SEARCH_CHILDREN);\n        if (ret \n 0) {\n            av_log(NULL, AV_LOG_ERROR, \nCannot set output channel layout\\n\n);\n            goto end;\n        }\n        ret = av_opt_set_bin(buffersink_ctx, \nsample_rates\n,\n                (uint8_t*)\nenc_ctx-\nsample_rate, sizeof(enc_ctx-\nsample_rate),\n                AV_OPT_SEARCH_CHILDREN);\n        if (ret \n 0) {\n            av_log(NULL, AV_LOG_ERROR, \nCannot set output sample rate\\n\n);\n            goto end;\n        }\n    } else {\n        ret = AVERROR_UNKNOWN;\n        goto end;\n    }\n    /* Endpoints for the filter graph. */\n    outputs-\nname       = av_strdup(\nin\n);\n    outputs-\nfilter_ctx = buffersrc_ctx;\n    outputs-\npad_idx    = 0;\n    outputs-\nnext       = NULL;\n    inputs-\nname       = av_strdup(\nout\n);\n    inputs-\nfilter_ctx = buffersink_ctx;\n    inputs-\npad_idx    = 0;\n    inputs-\nnext       = NULL;\n    if (!outputs-\nname || !inputs-\nname) {\n        ret = AVERROR(ENOMEM);\n        goto end;\n    }\n    if ((ret = avfilter_graph_parse_ptr(filter_graph, filter_spec,\n                    \ninputs, \noutputs, NULL)) \n 0)\n        goto end;\n    if ((ret = avfilter_graph_config(filter_graph, NULL)) \n 0)\n        goto end;\n    /* Fill FilteringContext */\n    fctx-\nbuffersrc_ctx = buffersrc_ctx;\n    fctx-\nbuffersink_ctx = buffersink_ctx;\n    fctx-\nfilter_graph = filter_graph;\nend:\n    avfilter_inout_free(\ninputs);\n    avfilter_inout_free(\noutputs);\n    return ret;\n}\nstatic int init_filters(void)\n{\n    const char *filter_spec;\n    unsigned int i;\n    int ret;\n    filter_ctx = av_malloc_array(ifmt_ctx-\nnb_streams, sizeof(*filter_ctx));\n    if (!filter_ctx)\n        return AVERROR(ENOMEM);\n    for (i = 0; i \n ifmt_ctx-\nnb_streams; i++) {\n        filter_ctx[i].buffersrc_ctx  = NULL;\n        filter_ctx[i].buffersink_ctx = NULL;\n        filter_ctx[i].filter_graph   = NULL;\n        if (!(ifmt_ctx-\nstreams[i]-\ncodec-\ncodec_type == AVMEDIA_TYPE_AUDIO\n                || ifmt_ctx-\nstreams[i]-\ncodec-\ncodec_type == AVMEDIA_TYPE_VIDEO))\n            continue;\n        if (ifmt_ctx-\nstreams[i]-\ncodec-\ncodec_type == AVMEDIA_TYPE_VIDEO)\n            filter_spec = \nnull\n; /* passthrough (dummy) filter for video */\n        else\n            filter_spec = \nanull\n; /* passthrough (dummy) filter for audio */\n        ret = init_filter(\nfilter_ctx[i], ifmt_ctx-\nstreams[i]-\ncodec,\n                ofmt_ctx-\nstreams[i]-\ncodec, filter_spec);\n        if (ret)\n            return ret;\n    }\n    return 0;\n}\nstatic int encode_write_frame(AVFrame *filt_frame, unsigned int stream_index, int *got_frame) {\n    int ret;\n    int got_frame_local;\n    AVPacket enc_pkt;\n    int (*enc_func)(AVCodecContext *, AVPacket *, const AVFrame *, int *) =\n        (ifmt_ctx-\nstreams[stream_index]-\ncodec-\ncodec_type ==\n         AVMEDIA_TYPE_VIDEO) ? avcodec_encode_video2 : avcodec_encode_audio2;\n    if (!got_frame)\n        got_frame = \ngot_frame_local;\n    av_log(NULL, AV_LOG_INFO, \nEncoding frame\\n\n);\n    /* encode filtered frame */\n    enc_pkt.data = NULL;\n    enc_pkt.size = 0;\n    av_init_packet(\nenc_pkt);\n    ret = enc_func(ofmt_ctx-\nstreams[stream_index]-\ncodec, \nenc_pkt,\n            filt_frame, got_frame);\n    av_frame_free(\nfilt_frame);\n    if (ret \n 0)\n        return ret;\n    if (!(*got_frame))\n        return 0;\n    /* prepare packet for muxing */\n    enc_pkt.stream_index = stream_index;\n    av_packet_rescale_ts(\nenc_pkt,\n                         ofmt_ctx-\nstreams[stream_index]-\ncodec-\ntime_base,\n                         ofmt_ctx-\nstreams[stream_index]-\ntime_base);\n    av_log(NULL, AV_LOG_DEBUG, \nMuxing frame\\n\n);\n    /* mux encoded frame */\n    ret = av_interleaved_write_frame(ofmt_ctx, \nenc_pkt);\n    return ret;\n}\nstatic int filter_encode_write_frame(AVFrame *frame, unsigned int stream_index)\n{\n    int ret;\n    AVFrame *filt_frame;\n    av_log(NULL, AV_LOG_INFO, \nPushing decoded frame to filters\\n\n);\n    /* push the decoded frame into the filtergraph */\n    ret = av_buffersrc_add_frame_flags(filter_ctx[stream_index].buffersrc_ctx,\n            frame, 0);\n    if (ret \n 0) {\n        av_log(NULL, AV_LOG_ERROR, \nError while feeding the filtergraph\\n\n);\n        return ret;\n    }\n    /* pull filtered frames from the filtergraph */\n    while (1) {\n        filt_frame = av_frame_alloc();\n        if (!filt_frame) {\n            ret = AVERROR(ENOMEM);\n            break;\n        }\n        av_log(NULL, AV_LOG_INFO, \nPulling filtered frame from filters\\n\n);\n        ret = av_buffersink_get_frame(filter_ctx[stream_index].buffersink_ctx,\n                filt_frame);\n        if (ret \n 0) {\n            /* if no more frames for output - returns AVERROR(EAGAIN)\n             * if flushed and no more frames for output - returns AVERROR_EOF\n             * rewrite retcode to 0 to show it as normal procedure completion\n             */\n            if (ret == AVERROR(EAGAIN) || ret == AVERROR_EOF)\n                ret = 0;\n            av_frame_free(\nfilt_frame);\n            break;\n        }\n        filt_frame-\npict_type = AV_PICTURE_TYPE_NONE;\n        ret = encode_write_frame(filt_frame, stream_index, NULL);\n        if (ret \n 0)\n            break;\n    }\n    return ret;\n}\nstatic int flush_encoder(unsigned int stream_index)\n{\n    int ret;\n    int got_frame;\n    if (!(ofmt_ctx-\nstreams[stream_index]-\ncodec-\ncodec-\ncapabilities \n\n                AV_CODEC_CAP_DELAY))\n        return 0;\n    while (1) {\n        av_log(NULL, AV_LOG_INFO, \nFlushing stream #%u encoder\\n\n, stream_index);\n        ret = encode_write_frame(NULL, stream_index, \ngot_frame);\n        if (ret \n 0)\n            break;\n        if (!got_frame)\n            return 0;\n    }\n    return ret;\n}\nint main(int argc, char **argv)\n{\n    int ret;\n    AVPacket packet = { .data = NULL, .size = 0 };\n    AVFrame *frame = NULL;\n    enum AVMediaType type;\n    unsigned int stream_index;\n    unsigned int i;\n    int got_frame;\n    int (*dec_func)(AVCodecContext *, AVFrame *, int *, const AVPacket *);\n    if (argc != 3) {\n        av_log(NULL, AV_LOG_ERROR, \nUsage: %s \ninput file\n \noutput file\n\\n\n, argv[0]);\n        return 1;\n    }\n    av_register_all();\n    avfilter_register_all();\n    if ((ret = open_input_file(argv[1])) \n 0)\n        goto end;\n    if ((ret = open_output_file(argv[2])) \n 0)\n        goto end;\n    if ((ret = init_filters()) \n 0)\n        goto end;\n    /* read all packets */\n    while (1) {\n        if ((ret = av_read_frame(ifmt_ctx, \npacket)) \n 0)\n            break;\n        stream_index = packet.stream_index;\n        type = ifmt_ctx-\nstreams[packet.stream_index]-\ncodec-\ncodec_type;\n        av_log(NULL, AV_LOG_DEBUG, \nDemuxer gave frame of stream_index %u\\n\n,\n                stream_index);\n        if (filter_ctx[stream_index].filter_graph) {\n            av_log(NULL, AV_LOG_DEBUG, \nGoing to reencode\nfilter the frame\\n\n);\n            frame = av_frame_alloc();\n            if (!frame) {\n                ret = AVERROR(ENOMEM);\n                break;\n            }\n            av_packet_rescale_ts(\npacket,\n                                 ifmt_ctx-\nstreams[stream_index]-\ntime_base,\n                                 ifmt_ctx-\nstreams[stream_index]-\ncodec-\ntime_base);\n            dec_func = (type == AVMEDIA_TYPE_VIDEO) ? avcodec_decode_video2 :\n                avcodec_decode_audio4;\n            ret = dec_func(ifmt_ctx-\nstreams[stream_index]-\ncodec, frame,\n                    \ngot_frame, \npacket);\n            if (ret \n 0) {\n                av_frame_free(\nframe);\n                av_log(NULL, AV_LOG_ERROR, \nDecoding failed\\n\n);\n                break;\n            }\n            if (got_frame) {\n                frame-\npts = av_frame_get_best_effort_timestamp(frame);\n                ret = filter_encode_write_frame(frame, stream_index);\n                av_frame_free(\nframe);\n                if (ret \n 0)\n                    goto end;\n            } else {\n                av_frame_free(\nframe);\n            }\n        } else {\n            /* remux this frame without reencoding */\n            av_packet_rescale_ts(\npacket,\n                                 ifmt_ctx-\nstreams[stream_index]-\ntime_base,\n                                 ofmt_ctx-\nstreams[stream_index]-\ntime_base);\n            ret = av_interleaved_write_frame(ofmt_ctx, \npacket);\n            if (ret \n 0)\n                goto end;\n        }\n        av_packet_unref(\npacket);\n    }\n    /* flush filters and encoders */\n    for (i = 0; i \n ifmt_ctx-\nnb_streams; i++) {\n        /* flush filter */\n        if (!filter_ctx[i].filter_graph)\n            continue;\n        ret = filter_encode_write_frame(NULL, i);\n        if (ret \n 0) {\n            av_log(NULL, AV_LOG_ERROR, \nFlushing filter failed\\n\n);\n            goto end;\n        }\n        /* flush encoder */\n        ret = flush_encoder(i);\n        if (ret \n 0) {\n            av_log(NULL, AV_LOG_ERROR, \nFlushing encoder failed\\n\n);\n            goto end;\n        }\n    }\n    av_write_trailer(ofmt_ctx);\nend:\n    av_packet_unref(\npacket);\n    av_frame_free(\nframe);\n    for (i = 0; i \n ifmt_ctx-\nnb_streams; i++) {\n        avcodec_close(ifmt_ctx-\nstreams[i]-\ncodec);\n        if (ofmt_ctx \n ofmt_ctx-\nnb_streams \n i \n ofmt_ctx-\nstreams[i] \n ofmt_ctx-\nstreams[i]-\ncodec)\n            avcodec_close(ofmt_ctx-\nstreams[i]-\ncodec);\n        if (filter_ctx \n filter_ctx[i].filter_graph)\n            avfilter_graph_free(\nfilter_ctx[i].filter_graph);\n    }\n    av_free(filter_ctx);\n    avformat_close_input(\nifmt_ctx);\n    if (ofmt_ctx \n !(ofmt_ctx-\noformat-\nflags \n AVFMT_NOFILE))\n        avio_closep(\nofmt_ctx-\npb);\n    avformat_free_context(ofmt_ctx);\n    if (ret \n 0)\n        av_log(NULL, AV_LOG_ERROR, \nError occurred: %s\\n\n, av_err2str(ret));\n    return ret ? 1 : 0;\n}", 
            "title": "Fmpeg 2.8.6 example code   transcoding"
        }, 
        {
            "location": "/tech/Fmpeg 2.8.6 example code - transcoding/#ffmpeg-286-example-code-transcoding", 
            "text": "\u6700\u8fd1\u5b66\u4e60ffmpeg\uff0c\u5b98\u7f51\u63d0\u4f9b\u7684\u793a\u4f8b\u4ee3\u7801 transcoding.c \u6f14\u793a\u4e86\u7f16\u89e3\u7801\u548c\u6ee4\u6ce2\u5668\u7684\u4f7f\u7528\uff0c\u4e0d\u8fc7\u7b2c\u4e00\u6b65\u7684\u7f16\u8bd1\u8fd0\u884c\u6d4b\u8bd5\u5c31\u5361\u4e86\u597d\u4e45\uff0c\u4eca\u5929\u7ec8\u4e8e\u627e\u5230\u4e86\u539f\u56e0\u4e86\uff0c\u8d76\u7d27\u8bb0\u5f55\u4e00\u4e0b\uff0c\u6211\u76f8\u4fe1\u548c\u6211\u9047\u5230\u540c\u6837\u95ee\u9898\u7684\u4eba\u4e0d\u5728\u5c11\u6570\uff0c\u6240\u4ee5\u5e0c\u671b\u80fd\u4e3a\u5927\u5bb6\u63d0\u4f9b\u4e00\u7bc7\u6709\u6548\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u51cf\u8f7b\u5165\u95e8\u65f6\u7684\u75db\u82e6\u3002  \u628a\u5b98\u7f51\u793a\u4f8b\u62f7\u4e00\u4efd\u5728\u672c\u5730\uff0c\u4ee5\u76f8\u540c\u7684\u540d\u5b57\u547d\u540d\u4e3a transcoding.c , \u56e0\u4e3a\u5b98\u7f51\u7684\u8fd9\u4e2a\u793a\u4f8b\uff0c\u7528\u7684\u662fffmpeg2.x\u7684API\uff0c\u56e0\u4e3a\u6211\u4e5f\u4e0d\u592a\u719f\u6089ffmpeg\uff0c\u7528ffmpeg3.x\u7f16\u8bd1\u65f6\uff0c\u63d0\u793a\u4e86\u6211\u51e0\u4e2aAPI\u8fc7\u65f6\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u88c5\u56de\u4e86ffmpeg2.8.6\u6765\u7f16\u8bd1\u8fd9\u4e2a\u793a\u4f8b\u3002\u4e0b\u9762\u662f\u6211\u7684\u7f16\u8bd1\u547d\u4ee4\uff1a  gcc -I /usr/local/include/ -L /usr/local/lib -lavformat -lavfilter -lavutil -lswscale -lavcodec transcoding.c -o transcoding      \u751f\u6210\u4e86\u540d\u4e3a transcoding \u7684\u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u6211\u4f7f\u7528\u81ea\u5df1\u7684\u4e00\u4e2a\u6d4b\u8bd5\u89c6\u9891\u8fd0\u884c\u5b83\uff1a  ./transcoding test.mp4 output.mp4  \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a  Input #0, mov,mp4,m4a,3gp,3g2,mj2, from 'test.mp4':\n  Metadata:\n    major_brand     : isom\n    minor_version   : 1\n    compatible_brands: isomavc1\n    creation_time   : 2016-01-10 07:17:18\n    encoder         : FormatFactory : www.pcfreetime.com\n  Duration: 00:01:41.49, start: 0.000000, bitrate: 863 kb/s\n    Stream #0:0(und): Video: h264 (High) (avc1 / 0x31637661), yuv420p, 856x480 [SAR 480:481 DAR 856:481], 744 kb/s, SAR 427:428 DAR 427:240, 24 fps, 24 tbr, 24k tbn, 48 tbc (default)\n    Metadata:\n      creation_time   : 2016-01-10 07:17:18\n      handler_name    : video\n    Stream #0:1(und): Audio: aac (LC) (mp4a / 0x6134706D), 44100 Hz, stereo, fltp, 116 kb/s (default)\n    Metadata:\n      creation_time   : 2016-01-10 07:17:18\n      handler_name    : sound\n[libx264 @ 0x7fe4ac851600] broken ffmpeg default settings detected\n[libx264 @ 0x7fe4ac851600] use an encoding preset (e.g. -vpre medium)\n[libx264 @ 0x7fe4ac851600] preset usage: -vpre  speed  -vpre  profile \n[libx264 @ 0x7fe4ac851600] speed presets are listed in x264 --help\n[libx264 @ 0x7fe4ac851600] profile is optional; x264 defaults to high\nCannot open video encoder for stream #0\nError occurred: Generic error in an external library", 
            "title": "FFmpeg 2.8.6 example code - transcoding"
        }, 
        {
            "location": "/tech/Fmpeg 2.8.6 example code - transcoding/#35issue-1-libx264-0x7fe4ac851600-broken-ffmpeg-default-settings-detected", 
            "text": "\u8fd9\u4e2a\u9519\u8bef\u53ca\u5176\u4e0b\u9762\u7684\u4fe1\u606f\u544a\u8bc9\u6211\u4eec\uff0c\u5728\u6253\u5f00\u8f93\u51fa\u6587\u4ef6\u7684\u89c6\u9891\u7f16\u7801\u5668\u65f6\u51fa\u73b0\u4e86\u9519\u8bef\uff0c\u8fd9\u901a\u5e38\u662f\u7531\u4e8e\u7f16\u7801\u5668\u53c2\u6570\u8bbe\u7f6e\u4e0d\u5f53\u9020\u6210\u7684\u3002\u901a\u8fc7\u641c\u7d22\uff0c\u53d1\u73b0\u4e86\u8fd9\u7bc7\u6587\u7ae0\u5bf9\u8fd9\u4e2a\u95ee\u9898\u89e3\u91ca\u7684\u6bd4\u8f83\u6e05\u695a: http://blog.csdn.net/cffishappy/article/details/7680097", 
            "title": "#issue 1 - [libx264 @ 0x7fe4ac851600] broken ffmpeg default settings detected"
        }, 
        {
            "location": "/tech/Fmpeg 2.8.6 example code - transcoding/#_1", 
            "text": "\u5728 transcoding.c \u4e2d\u7684 open_output_file \u51fd\u6570\u4e2d\uff0c\u4fee\u6539\u7684\u90e8\u5206\u5982\u4e0b(\u53ea\u589e\u52a0\u4e86 13-17\u884c )\uff1a  if (dec_ctx- codec_type == AVMEDIA_TYPE_VIDEO) {\n                enc_ctx- height = dec_ctx- height;\n                enc_ctx- width = dec_ctx- width;\n                enc_ctx- sample_aspect_ratio = dec_ctx- sample_aspect_ratio;\n                /* take first format from list of supported formats */\n                if (encoder- pix_fmts)\n                    enc_ctx- pix_fmt = encoder- pix_fmts[0];\n                else\n                    enc_ctx- pix_fmt = dec_ctx- pix_fmt;\n                /* video time_base can be set to whatever is handy and supported by encoder */\n                enc_ctx- time_base = dec_ctx- time_base;\n\n                enc_ctx- me_range = 16; \n                enc_ctx- max_qdiff = 4;\n                enc_ctx- qmin = 10; \n                enc_ctx- qmax = 51; \n                enc_ctx- qcompress = 0.6;\n\n            } else {\n                enc_ctx- sample_rate = dec_ctx- sample_rate;\n                enc_ctx- channel_layout = dec_ctx- channel_layout;\n                enc_ctx- channels = av_get_channel_layout_nb_channels(enc_ctx- channel_layout);\n                /* take first format from list of supported formats */\n                enc_ctx- sample_fmt = encoder- sample_fmts[0];\n                enc_ctx- time_base = (AVRational){1, enc_ctx- sample_rate};\n            }     \u4e4b\u540e\uff0c\u6211\u4eec\u4fdd\u5b58\u7f16\u8bd1\u518d\u6b21\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a  ...\nEncoding frame\nPulling filtered frame from filters\nPushing decoded frame to filters\nPulling filtered frame from filters\nEncoding frame\n[mp4 @ 0x7fbe86803e00] Malformed AAC bitstream detected: use the audio bitstream filter 'aac_adtstoasc' to fix it ('-bsf:a aac_adtstoasc' option with ffmpeg)\n[libx264 @ 0x7fbe86804400] frame I:1     Avg QP:45.67  size:  5439\n[libx264 @ 0x7fbe86804400] frame P:1     Avg QP:46.05  size:   174\n[libx264 @ 0x7fbe86804400] mb I  I16..4: 71.7% 26.7%  1.5%\n[libx264 @ 0x7fbe86804400] mb P  I16..4:  0.2%  0.0%  0.0%  P16..4:  5.2%  0.2%  0.0%  0.0%  0.0%    skip:94.4%\n[libx264 @ 0x7fbe86804400] final ratefactor: 56.92\n[libx264 @ 0x7fbe86804400] 8x8 transform intra:26.7%\n[libx264 @ 0x7fbe86804400] coded y,uvDC,uvAC intra: 8.4% 33.3% 10.1% inter: 0.0% 0.1% 0.0%\n[libx264 @ 0x7fbe86804400] i16 v,h,dc,p: 39% 34%  7% 19%\n[libx264 @ 0x7fbe86804400] i8 v,h,dc,ddl,ddr,vr,hd,vl,hu:  6% 15% 22% 10% 10%  7% 16%  5%  9%\n[libx264 @ 0x7fbe86804400] i4 v,h,dc,ddl,ddr,vr,hd,vl,hu:  8% 33% 12% 10%  8%  8% 15%  2%  4%\n[libx264 @ 0x7fbe86804400] i8c dc,h,v,p: 70% 16% 11%  3%\n[libx264 @ 0x7fbe86804400] Weighted P-Frames: Y:0.0% UV:0.0%\n[libx264 @ 0x7fbe86804400] kb/s:538.85\n[libfaac @ 0x7fbe862d2600] 4 frames left in the queue on closing\nError occurred: Operation not permitted  \u8fd9\u6b21\u7684\u89c6\u9891\u7f16\u7801\u53ef\u4ee5\u6253\u5f00\u5e76\u6b63\u5e38\u7f16\u7801\u4e86\uff0c\u53ef\u662f\u97f3\u9891\u90e8\u5206\u53c8\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\u7684\u89e3\u7b54\u53ef\u4ee5\u770b\u8fd9\u4e2a\u6587\u7ae0\uff1a http://www.tuicool.com/articles/NNNVv2z  \u535a\u4e3b\u8ddf\u8e2a\u53d1\u73b0\u4e86\u56f0\u6270\u6211\u8bb8\u4e45\u7684\u95ee\u9898\uff0c\u5728\u8fd9\u91cc\u987a\u4fbf\u611f\u8c22\u4e00\u4e0b\u3002", 
            "title": "\u89e3\u51b3\u65b9\u6cd5:"
        }, 
        {
            "location": "/tech/Fmpeg 2.8.6 example code - transcoding/#35issue2-mp4-0x7fbe86803e00-malformed-aac-bitstream-detected-use-the-audio-bitstream-filter-aac_adtstoasc-to-fix-it-bsfa-aac_adtstoasc-option-with-ffmpeg", 
            "text": "\u8fd9\u4e2a\u95ee\u9898\u5728\u7f51\u4e0a\u641c\u4e86\u597d\u4e45\uff0c stackoverflow \u4e2d\u63d0\u4f9b\u4e86 \u4e00\u79cd\u65b9\u6cd5 \uff0c\u53ef\u4ee5\u4f7f\u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\uff0c\u4f46\u5904\u7406\u7ed3\u679c\u4e2d\u53ea\u6709\u97f3\u9891\u88ab\u4fdd\u7559, \u8fd9\u663e\u7136\u4e0d\u662f\u6211\u60f3\u8981\u7684\u3002  \u5176\u5b9e\uff0c\u53ea\u9700\u8981\u8c03\u6574\u4e00\u4e0b\u4ee3\u7801\u987a\u5e8f\u5c31\u53ef\u4ee5\u4e86\u3002\u77e5\u9053\u771f\u76f8\u7684\u6211\u773c\u6cea\u6389\u4e0b\u6765\u3002", 
            "title": "#issue2 - [mp4 @ 0x7fbe86803e00] Malformed AAC bitstream detected: use the audio bitstream filter 'aac_adtstoasc' to fix it ('-bsf:a aac_adtstoasc' option with ffmpeg)"
        }, 
        {
            "location": "/tech/Fmpeg 2.8.6 example code - transcoding/#_2", 
            "text": "\u8fd8\u662f\u5728 transcoding.c \u4e2d\u7684 open_output_file \u51fd\u6570\u4e2d\uff0c\u53ea\u662f\u628a for\u5faa\u73af \u5c3e\u90e8\u7684\u90a3\u53e5\u4ee3\u7801\uff1a  if (ofmt_ctx- oformat- flags   AVFMT_GLOBALHEADER)\n                enc_ctx- flags |= AV_CODEC_FLAG_GLOBAL_HEADER;   \u63d0\u524d\u5230 for\u5faa\u73af \u4e2d\u6574\u4e2a if\u5224\u65ad\u7ed3\u6784 \u7684\u524d\u9762\u5c31\u884c\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u6253\u5f00\u7f16\u7801\u5668\u524d\uff0c\u6ca1\u6709\u8bbe\u7f6e\u7f16\u7801\u5668\u4e0a\u4e0b\u6587\u4e2denc_ctx- flags\u8fd9\u4e2a\u53c2\u6570\uff0c\u6240\u4ee5\u628a\u8fd9\u53e5\u63d0\u524d\u4e86\u5c31\u89e3\u51b3\u95ee\u9898\u4e86\u3002\u5982\u4e0b\uff1a              if (ofmt_ctx- oformat- flags   AVFMT_GLOBALHEADER)\n                enc_ctx- flags |= AV_CODEC_FLAG_GLOBAL_HEADER;\n\n            if (dec_ctx- codec_type == AVMEDIA_TYPE_VIDEO) {\n                enc_ctx- height = dec_ctx- height;\n                enc_ctx- width = dec_ctx- width;\n                enc_ctx- sample_aspect_ratio = dec_ctx- sample_aspect_ratio;\n                /* take first format from list of supported formats */\n                if (encoder- pix_fmts)\n                    enc_ctx- pix_fmt = encoder- pix_fmts[0];\n                else\n                    enc_ctx- pix_fmt = dec_ctx- pix_fmt;\n                /* video time_base can be set to whatever is handy and supported by encoder */\n                enc_ctx- time_base = dec_ctx- time_base;\n\n                enc_ctx- me_range = 16;\n                enc_ctx- max_qdiff = 4;\n                enc_ctx- qmin = 10;\n                enc_ctx- qmax = 51;\n                enc_ctx- qcompress = 0.6;\n\n            } else {\n                enc_ctx- sample_rate = dec_ctx- sample_rate;\n                enc_ctx- channel_layout = dec_ctx- channel_layout;\n                enc_ctx- channels = av_get_channel_layout_nb_channels(enc_ctx- channel_layout);\n                /* take first format from list of supported formats */\n                enc_ctx- sample_fmt = encoder- sample_fmts[0];\n                enc_ctx- time_base = (AVRational){1, enc_ctx- sample_rate};\n            }", 
            "title": "\u89e3\u51b3\u65b9\u6cd5"
        }, 
        {
            "location": "/tech/Fmpeg 2.8.6 example code - transcoding/#35issue3-", 
            "text": "\u5728\u7ecf\u8fc7\u4ee5\u4e0a\u4e24\u4e2a\u95ee\u9898\u7684\u89e3\u51b3\u540e\uff0c\u7f16\u8bd1\u901a\u8fc7\u662f\u6ca1\u6709\u95ee\u9898\u4e86\uff0c\u4e0d\u8fc7\u4f60\u53ef\u80fd\u4f1a\u4e0d\u6ee1\u610f\u8f93\u51fa\u89c6\u9891\u7684\u8d28\u91cf\uff0c\u89c9\u5f97\u5b83\u6bd4\u539f\u89c6\u9891\u6a21\u7cca\u4e86\u8bb8\u591a\uff0c\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u8c03\u8282\u001d \\#issue1 \u4e2d\u7684\u4ee3\u7801\uff1a   enc_ctx- qmax = 51;   \u628a\u8fd9\u4e2a\u53c2\u6570\u6539\u5c0f\u70b9\uff0c\u53ef\u4ee5\u51cf\u5c0f\u7f16\u7801\u65f6\u7684\u91cf\u5316\u95f4\u9694\uff0c\u63d0\u9ad8\u7f16\u7801\u89c6\u9891\u7684\u8d28\u91cf\uff0c\u4e0d\u8fc7\u4f60\u53ef\u80fd\u56e0\u6b64\u52a0\u957f\u6574\u4e2a\u7f16\u7801\u7684\u65f6\u95f4\u3002  \u4f8b\u5982\u6211\u5c06\u5176\u6539\u4e3a\uff1a   enc_ctx- qmax = 30;", 
            "title": "#issue3 - \u5904\u7406\u540e\u7684\u7ed3\u679c\u6bd4\u539f\u89c6\u9891\u6a21\u7cca"
        }, 
        {
            "location": "/tech/Fmpeg 2.8.6 example code - transcoding/#_3", 
            "text": "filename: transcoding.c  /*\n * Copyright (c) 2010 Nicolas George\n * Copyright (c) 2011 Stefano Sabatini\n * Copyright (c) 2014 Andrey Utkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the  Software ), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED  AS IS , WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * @file\n * API example for demuxing, decoding, filtering, encoding and muxing\n * @example transcoding.c\n */\n#include  libavcodec/avcodec.h \n#include  libavformat/avformat.h \n#include  libavfilter/avfiltergraph.h \n#include  libavfilter/buffersink.h \n#include  libavfilter/buffersrc.h \n#include  libavutil/opt.h \n#include  libavutil/pixdesc.h \nstatic AVFormatContext *ifmt_ctx;\nstatic AVFormatContext *ofmt_ctx;\ntypedef struct FilteringContext {\n    AVFilterContext *buffersink_ctx;\n    AVFilterContext *buffersrc_ctx;\n    AVFilterGraph *filter_graph;\n} FilteringContext;\nstatic FilteringContext *filter_ctx;\nstatic int open_input_file(const char *filename)\n{\n    int ret;\n    unsigned int i;\n    ifmt_ctx = NULL;\n    if ((ret = avformat_open_input( ifmt_ctx, filename, NULL, NULL))   0) {\n        av_log(NULL, AV_LOG_ERROR,  Cannot open input file\\n );\n        return ret;\n    }\n    if ((ret = avformat_find_stream_info(ifmt_ctx, NULL))   0) {\n        av_log(NULL, AV_LOG_ERROR,  Cannot find stream information\\n );\n        return ret;\n    }\n    for (i = 0; i   ifmt_ctx- nb_streams; i++) {\n        AVStream *stream;\n        AVCodecContext *codec_ctx;\n        stream = ifmt_ctx- streams[i];\n        codec_ctx = stream- codec;\n        /* Reencode video   audio and remux subtitles etc. */\n        if (codec_ctx- codec_type == AVMEDIA_TYPE_VIDEO\n                || codec_ctx- codec_type == AVMEDIA_TYPE_AUDIO) {\n            /* Open decoder */\n            ret = avcodec_open2(codec_ctx,\n                    avcodec_find_decoder(codec_ctx- codec_id), NULL);\n            if (ret   0) {\n                av_log(NULL, AV_LOG_ERROR,  Failed to open decoder for stream #%u\\n , i);\n                return ret;\n            }\n        }\n    }\n    av_dump_format(ifmt_ctx, 0, filename, 0);\n    return 0;\n}\nstatic int open_output_file(const char *filename)\n{\n    AVStream *out_stream;\n    AVStream *in_stream;\n    AVCodecContext *dec_ctx, *enc_ctx;\n    AVCodec *encoder;\n    int ret;\n    unsigned int i;\n    ofmt_ctx = NULL;\n    avformat_alloc_output_context2( ofmt_ctx, NULL, NULL, filename);\n    if (!ofmt_ctx) {\n        av_log(NULL, AV_LOG_ERROR,  Could not create output context\\n );\n        return AVERROR_UNKNOWN;\n    }\n    for (i = 0; i   ifmt_ctx- nb_streams; i++) {\n        out_stream = avformat_new_stream(ofmt_ctx, NULL);\n        if (!out_stream) {\n            av_log(NULL, AV_LOG_ERROR,  Failed allocating output stream\\n );\n            return AVERROR_UNKNOWN;\n        }\n        in_stream = ifmt_ctx- streams[i];\n        dec_ctx = in_stream- codec;\n        enc_ctx = out_stream- codec;\n        if (dec_ctx- codec_type == AVMEDIA_TYPE_VIDEO\n                || dec_ctx- codec_type == AVMEDIA_TYPE_AUDIO) {\n            /* in this example, we choose transcoding to same codec */\n            encoder = avcodec_find_encoder(dec_ctx- codec_id);\n            if (!encoder) {\n                av_log(NULL, AV_LOG_FATAL,  Necessary encoder not found\\n );\n                return AVERROR_INVALIDDATA;\n            }\n            /* In this example, we transcode to same properties (picture size,\n             * sample rate etc.). These properties can be changed for output\n             * streams easily using filters */\n\n        if (ofmt_ctx- oformat- flags   AVFMT_GLOBALHEADER)\n            enc_ctx- flags |= AV_CODEC_FLAG_GLOBAL_HEADER;\n\n            if (dec_ctx- codec_type == AVMEDIA_TYPE_VIDEO) {\n                enc_ctx- height = dec_ctx- height;\n                enc_ctx- width = dec_ctx- width;\n                enc_ctx- sample_aspect_ratio = dec_ctx- sample_aspect_ratio;\n                /* take first format from list of supported formats */\n                if (encoder- pix_fmts)\n                    enc_ctx- pix_fmt = encoder- pix_fmts[0];\n                else\n                    enc_ctx- pix_fmt = dec_ctx- pix_fmt;\n                /* video time_base can be set to whatever is handy and supported by encoder */\n                enc_ctx- time_base = dec_ctx- time_base;\n\n                enc_ctx- me_range = 16;\n                enc_ctx- max_qdiff = 4;\n                enc_ctx- qmin = 10;\n                enc_ctx- qmax = 51;\n                enc_ctx- qcompress = 0.6;\n\n            } else {\n                enc_ctx- sample_rate = dec_ctx- sample_rate;\n                enc_ctx- channel_layout = dec_ctx- channel_layout;\n                enc_ctx- channels = av_get_channel_layout_nb_channels(enc_ctx- channel_layout);\n                /* take first format from list of supported formats */\n                enc_ctx- sample_fmt = encoder- sample_fmts[0];\n                enc_ctx- time_base = (AVRational){1, enc_ctx- sample_rate};\n            }\n            /* Third parameter can be used to pass settings to encoder */\n            ret = avcodec_open2(enc_ctx, encoder, NULL);\n            if (ret   0) {\n                av_log(NULL, AV_LOG_ERROR,  Cannot open video encoder for stream #%u\\n , i);\n                return ret;\n            }\n        } else if (dec_ctx- codec_type == AVMEDIA_TYPE_UNKNOWN) {\n            av_log(NULL, AV_LOG_FATAL,  Elementary stream #%d is of unknown type, cannot proceed\\n , i);\n            return AVERROR_INVALIDDATA;\n        } else {\n            /* if this stream must be remuxed */\n            ret = avcodec_copy_context(ofmt_ctx- streams[i]- codec,\n                    ifmt_ctx- streams[i]- codec);\n            if (ret   0) {\n                av_log(NULL, AV_LOG_ERROR,  Copying stream context failed\\n );\n                return ret;\n            }\n        }\n    }\n    av_dump_format(ofmt_ctx, 0, filename, 1);\n    if (!(ofmt_ctx- oformat- flags   AVFMT_NOFILE)) {\n        ret = avio_open( ofmt_ctx- pb, filename, AVIO_FLAG_WRITE);\n        if (ret   0) {\n            av_log(NULL, AV_LOG_ERROR,  Could not open output file '%s' , filename);\n            return ret;\n        }\n    }\n    /* init muxer, write output file header */\n    ret = avformat_write_header(ofmt_ctx, NULL);\n    if (ret   0) {\n        av_log(NULL, AV_LOG_ERROR,  Error occurred when opening output file\\n );\n        return ret;\n    }\n    return 0;\n}\nstatic int init_filter(FilteringContext* fctx, AVCodecContext *dec_ctx,\n        AVCodecContext *enc_ctx, const char *filter_spec)\n{\n    char args[512];\n    int ret = 0;\n    AVFilter *buffersrc = NULL;\n    AVFilter *buffersink = NULL;\n    AVFilterContext *buffersrc_ctx = NULL;\n    AVFilterContext *buffersink_ctx = NULL;\n    AVFilterInOut *outputs = avfilter_inout_alloc();\n    AVFilterInOut *inputs  = avfilter_inout_alloc();\n    AVFilterGraph *filter_graph = avfilter_graph_alloc();\n    if (!outputs || !inputs || !filter_graph) {\n        ret = AVERROR(ENOMEM);\n        goto end;\n    }\n    if (dec_ctx- codec_type == AVMEDIA_TYPE_VIDEO) {\n        buffersrc = avfilter_get_by_name( buffer );\n        buffersink = avfilter_get_by_name( buffersink );\n        if (!buffersrc || !buffersink) {\n            av_log(NULL, AV_LOG_ERROR,  filtering source or sink element not found\\n );\n            ret = AVERROR_UNKNOWN;\n            goto end;\n        }\n        snprintf(args, sizeof(args),\n                 video_size=%dx%d:pix_fmt=%d:time_base=%d/%d:pixel_aspect=%d/%d ,\n                dec_ctx- width, dec_ctx- height, dec_ctx- pix_fmt,\n                dec_ctx- time_base.num, dec_ctx- time_base.den,\n                dec_ctx- sample_aspect_ratio.num,\n                dec_ctx- sample_aspect_ratio.den);\n        ret = avfilter_graph_create_filter( buffersrc_ctx, buffersrc,  in ,\n                args, NULL, filter_graph);\n        if (ret   0) {\n            av_log(NULL, AV_LOG_ERROR,  Cannot create buffer source\\n );\n            goto end;\n        }\n        ret = avfilter_graph_create_filter( buffersink_ctx, buffersink,  out ,\n                NULL, NULL, filter_graph);\n        if (ret   0) {\n            av_log(NULL, AV_LOG_ERROR,  Cannot create buffer sink\\n );\n            goto end;\n        }\n        ret = av_opt_set_bin(buffersink_ctx,  pix_fmts ,\n                (uint8_t*) enc_ctx- pix_fmt, sizeof(enc_ctx- pix_fmt),\n                AV_OPT_SEARCH_CHILDREN);\n        if (ret   0) {\n            av_log(NULL, AV_LOG_ERROR,  Cannot set output pixel format\\n );\n            goto end;\n        }\n    } else if (dec_ctx- codec_type == AVMEDIA_TYPE_AUDIO) {\n        buffersrc = avfilter_get_by_name( abuffer );\n        buffersink = avfilter_get_by_name( abuffersink );\n        if (!buffersrc || !buffersink) {\n            av_log(NULL, AV_LOG_ERROR,  filtering source or sink element not found\\n );\n            ret = AVERROR_UNKNOWN;\n            goto end;\n        }\n        if (!dec_ctx- channel_layout)\n            dec_ctx- channel_layout =\n                av_get_default_channel_layout(dec_ctx- channels);\n        snprintf(args, sizeof(args),\n                 time_base=%d/%d:sample_rate=%d:sample_fmt=%s:channel_layout=0x% PRIx64,\n                dec_ctx- time_base.num, dec_ctx- time_base.den, dec_ctx- sample_rate,\n                av_get_sample_fmt_name(dec_ctx- sample_fmt),\n                dec_ctx- channel_layout);\n        ret = avfilter_graph_create_filter( buffersrc_ctx, buffersrc,  in ,\n                args, NULL, filter_graph);\n        if (ret   0) {\n            av_log(NULL, AV_LOG_ERROR,  Cannot create audio buffer source\\n );\n            goto end;\n        }\n        ret = avfilter_graph_create_filter( buffersink_ctx, buffersink,  out ,\n                NULL, NULL, filter_graph);\n        if (ret   0) {\n            av_log(NULL, AV_LOG_ERROR,  Cannot create audio buffer sink\\n );\n            goto end;\n        }\n        ret = av_opt_set_bin(buffersink_ctx,  sample_fmts ,\n                (uint8_t*) enc_ctx- sample_fmt, sizeof(enc_ctx- sample_fmt),\n                AV_OPT_SEARCH_CHILDREN);\n        if (ret   0) {\n            av_log(NULL, AV_LOG_ERROR,  Cannot set output sample format\\n );\n            goto end;\n        }\n        ret = av_opt_set_bin(buffersink_ctx,  channel_layouts ,\n                (uint8_t*) enc_ctx- channel_layout,\n                sizeof(enc_ctx- channel_layout), AV_OPT_SEARCH_CHILDREN);\n        if (ret   0) {\n            av_log(NULL, AV_LOG_ERROR,  Cannot set output channel layout\\n );\n            goto end;\n        }\n        ret = av_opt_set_bin(buffersink_ctx,  sample_rates ,\n                (uint8_t*) enc_ctx- sample_rate, sizeof(enc_ctx- sample_rate),\n                AV_OPT_SEARCH_CHILDREN);\n        if (ret   0) {\n            av_log(NULL, AV_LOG_ERROR,  Cannot set output sample rate\\n );\n            goto end;\n        }\n    } else {\n        ret = AVERROR_UNKNOWN;\n        goto end;\n    }\n    /* Endpoints for the filter graph. */\n    outputs- name       = av_strdup( in );\n    outputs- filter_ctx = buffersrc_ctx;\n    outputs- pad_idx    = 0;\n    outputs- next       = NULL;\n    inputs- name       = av_strdup( out );\n    inputs- filter_ctx = buffersink_ctx;\n    inputs- pad_idx    = 0;\n    inputs- next       = NULL;\n    if (!outputs- name || !inputs- name) {\n        ret = AVERROR(ENOMEM);\n        goto end;\n    }\n    if ((ret = avfilter_graph_parse_ptr(filter_graph, filter_spec,\n                     inputs,  outputs, NULL))   0)\n        goto end;\n    if ((ret = avfilter_graph_config(filter_graph, NULL))   0)\n        goto end;\n    /* Fill FilteringContext */\n    fctx- buffersrc_ctx = buffersrc_ctx;\n    fctx- buffersink_ctx = buffersink_ctx;\n    fctx- filter_graph = filter_graph;\nend:\n    avfilter_inout_free( inputs);\n    avfilter_inout_free( outputs);\n    return ret;\n}\nstatic int init_filters(void)\n{\n    const char *filter_spec;\n    unsigned int i;\n    int ret;\n    filter_ctx = av_malloc_array(ifmt_ctx- nb_streams, sizeof(*filter_ctx));\n    if (!filter_ctx)\n        return AVERROR(ENOMEM);\n    for (i = 0; i   ifmt_ctx- nb_streams; i++) {\n        filter_ctx[i].buffersrc_ctx  = NULL;\n        filter_ctx[i].buffersink_ctx = NULL;\n        filter_ctx[i].filter_graph   = NULL;\n        if (!(ifmt_ctx- streams[i]- codec- codec_type == AVMEDIA_TYPE_AUDIO\n                || ifmt_ctx- streams[i]- codec- codec_type == AVMEDIA_TYPE_VIDEO))\n            continue;\n        if (ifmt_ctx- streams[i]- codec- codec_type == AVMEDIA_TYPE_VIDEO)\n            filter_spec =  null ; /* passthrough (dummy) filter for video */\n        else\n            filter_spec =  anull ; /* passthrough (dummy) filter for audio */\n        ret = init_filter( filter_ctx[i], ifmt_ctx- streams[i]- codec,\n                ofmt_ctx- streams[i]- codec, filter_spec);\n        if (ret)\n            return ret;\n    }\n    return 0;\n}\nstatic int encode_write_frame(AVFrame *filt_frame, unsigned int stream_index, int *got_frame) {\n    int ret;\n    int got_frame_local;\n    AVPacket enc_pkt;\n    int (*enc_func)(AVCodecContext *, AVPacket *, const AVFrame *, int *) =\n        (ifmt_ctx- streams[stream_index]- codec- codec_type ==\n         AVMEDIA_TYPE_VIDEO) ? avcodec_encode_video2 : avcodec_encode_audio2;\n    if (!got_frame)\n        got_frame =  got_frame_local;\n    av_log(NULL, AV_LOG_INFO,  Encoding frame\\n );\n    /* encode filtered frame */\n    enc_pkt.data = NULL;\n    enc_pkt.size = 0;\n    av_init_packet( enc_pkt);\n    ret = enc_func(ofmt_ctx- streams[stream_index]- codec,  enc_pkt,\n            filt_frame, got_frame);\n    av_frame_free( filt_frame);\n    if (ret   0)\n        return ret;\n    if (!(*got_frame))\n        return 0;\n    /* prepare packet for muxing */\n    enc_pkt.stream_index = stream_index;\n    av_packet_rescale_ts( enc_pkt,\n                         ofmt_ctx- streams[stream_index]- codec- time_base,\n                         ofmt_ctx- streams[stream_index]- time_base);\n    av_log(NULL, AV_LOG_DEBUG,  Muxing frame\\n );\n    /* mux encoded frame */\n    ret = av_interleaved_write_frame(ofmt_ctx,  enc_pkt);\n    return ret;\n}\nstatic int filter_encode_write_frame(AVFrame *frame, unsigned int stream_index)\n{\n    int ret;\n    AVFrame *filt_frame;\n    av_log(NULL, AV_LOG_INFO,  Pushing decoded frame to filters\\n );\n    /* push the decoded frame into the filtergraph */\n    ret = av_buffersrc_add_frame_flags(filter_ctx[stream_index].buffersrc_ctx,\n            frame, 0);\n    if (ret   0) {\n        av_log(NULL, AV_LOG_ERROR,  Error while feeding the filtergraph\\n );\n        return ret;\n    }\n    /* pull filtered frames from the filtergraph */\n    while (1) {\n        filt_frame = av_frame_alloc();\n        if (!filt_frame) {\n            ret = AVERROR(ENOMEM);\n            break;\n        }\n        av_log(NULL, AV_LOG_INFO,  Pulling filtered frame from filters\\n );\n        ret = av_buffersink_get_frame(filter_ctx[stream_index].buffersink_ctx,\n                filt_frame);\n        if (ret   0) {\n            /* if no more frames for output - returns AVERROR(EAGAIN)\n             * if flushed and no more frames for output - returns AVERROR_EOF\n             * rewrite retcode to 0 to show it as normal procedure completion\n             */\n            if (ret == AVERROR(EAGAIN) || ret == AVERROR_EOF)\n                ret = 0;\n            av_frame_free( filt_frame);\n            break;\n        }\n        filt_frame- pict_type = AV_PICTURE_TYPE_NONE;\n        ret = encode_write_frame(filt_frame, stream_index, NULL);\n        if (ret   0)\n            break;\n    }\n    return ret;\n}\nstatic int flush_encoder(unsigned int stream_index)\n{\n    int ret;\n    int got_frame;\n    if (!(ofmt_ctx- streams[stream_index]- codec- codec- capabilities  \n                AV_CODEC_CAP_DELAY))\n        return 0;\n    while (1) {\n        av_log(NULL, AV_LOG_INFO,  Flushing stream #%u encoder\\n , stream_index);\n        ret = encode_write_frame(NULL, stream_index,  got_frame);\n        if (ret   0)\n            break;\n        if (!got_frame)\n            return 0;\n    }\n    return ret;\n}\nint main(int argc, char **argv)\n{\n    int ret;\n    AVPacket packet = { .data = NULL, .size = 0 };\n    AVFrame *frame = NULL;\n    enum AVMediaType type;\n    unsigned int stream_index;\n    unsigned int i;\n    int got_frame;\n    int (*dec_func)(AVCodecContext *, AVFrame *, int *, const AVPacket *);\n    if (argc != 3) {\n        av_log(NULL, AV_LOG_ERROR,  Usage: %s  input file   output file \\n , argv[0]);\n        return 1;\n    }\n    av_register_all();\n    avfilter_register_all();\n    if ((ret = open_input_file(argv[1]))   0)\n        goto end;\n    if ((ret = open_output_file(argv[2]))   0)\n        goto end;\n    if ((ret = init_filters())   0)\n        goto end;\n    /* read all packets */\n    while (1) {\n        if ((ret = av_read_frame(ifmt_ctx,  packet))   0)\n            break;\n        stream_index = packet.stream_index;\n        type = ifmt_ctx- streams[packet.stream_index]- codec- codec_type;\n        av_log(NULL, AV_LOG_DEBUG,  Demuxer gave frame of stream_index %u\\n ,\n                stream_index);\n        if (filter_ctx[stream_index].filter_graph) {\n            av_log(NULL, AV_LOG_DEBUG,  Going to reencode filter the frame\\n );\n            frame = av_frame_alloc();\n            if (!frame) {\n                ret = AVERROR(ENOMEM);\n                break;\n            }\n            av_packet_rescale_ts( packet,\n                                 ifmt_ctx- streams[stream_index]- time_base,\n                                 ifmt_ctx- streams[stream_index]- codec- time_base);\n            dec_func = (type == AVMEDIA_TYPE_VIDEO) ? avcodec_decode_video2 :\n                avcodec_decode_audio4;\n            ret = dec_func(ifmt_ctx- streams[stream_index]- codec, frame,\n                     got_frame,  packet);\n            if (ret   0) {\n                av_frame_free( frame);\n                av_log(NULL, AV_LOG_ERROR,  Decoding failed\\n );\n                break;\n            }\n            if (got_frame) {\n                frame- pts = av_frame_get_best_effort_timestamp(frame);\n                ret = filter_encode_write_frame(frame, stream_index);\n                av_frame_free( frame);\n                if (ret   0)\n                    goto end;\n            } else {\n                av_frame_free( frame);\n            }\n        } else {\n            /* remux this frame without reencoding */\n            av_packet_rescale_ts( packet,\n                                 ifmt_ctx- streams[stream_index]- time_base,\n                                 ofmt_ctx- streams[stream_index]- time_base);\n            ret = av_interleaved_write_frame(ofmt_ctx,  packet);\n            if (ret   0)\n                goto end;\n        }\n        av_packet_unref( packet);\n    }\n    /* flush filters and encoders */\n    for (i = 0; i   ifmt_ctx- nb_streams; i++) {\n        /* flush filter */\n        if (!filter_ctx[i].filter_graph)\n            continue;\n        ret = filter_encode_write_frame(NULL, i);\n        if (ret   0) {\n            av_log(NULL, AV_LOG_ERROR,  Flushing filter failed\\n );\n            goto end;\n        }\n        /* flush encoder */\n        ret = flush_encoder(i);\n        if (ret   0) {\n            av_log(NULL, AV_LOG_ERROR,  Flushing encoder failed\\n );\n            goto end;\n        }\n    }\n    av_write_trailer(ofmt_ctx);\nend:\n    av_packet_unref( packet);\n    av_frame_free( frame);\n    for (i = 0; i   ifmt_ctx- nb_streams; i++) {\n        avcodec_close(ifmt_ctx- streams[i]- codec);\n        if (ofmt_ctx   ofmt_ctx- nb_streams   i   ofmt_ctx- streams[i]   ofmt_ctx- streams[i]- codec)\n            avcodec_close(ofmt_ctx- streams[i]- codec);\n        if (filter_ctx   filter_ctx[i].filter_graph)\n            avfilter_graph_free( filter_ctx[i].filter_graph);\n    }\n    av_free(filter_ctx);\n    avformat_close_input( ifmt_ctx);\n    if (ofmt_ctx   !(ofmt_ctx- oformat- flags   AVFMT_NOFILE))\n        avio_closep( ofmt_ctx- pb);\n    avformat_free_context(ofmt_ctx);\n    if (ret   0)\n        av_log(NULL, AV_LOG_ERROR,  Error occurred: %s\\n , av_err2str(ret));\n    return ret ? 1 : 0;\n}", 
            "title": "\u6700\u540e\u9644\u4e0a\u4fee\u6539\u540e\u7684\u5b8c\u6574\u4ee3\u7801\uff1a"
        }, 
        {
            "location": "/tech/Nmap Basics/", 
            "text": "Nmap\n Basics\n\n\n\u4f7f\u7528nmap\u6709\u4e00\u6bb5\u65f6\u95f4\u4e86\uff0c\u4e3b\u8981\u662f\u5728\u5b66\u4e60\u6811\u8393\u6d3e\u7684\u8fc7\u7a0b\u4e2d\u63a5\u89e6\u7684\uff0c\u53d1\u73b0\u8fd9\u4e2a\u5de5\u5177\u5f02\u5e38\u5f3a\u5927\uff0c\u662f\u9ed1\u5ba2\u5fc5\u5907\u7684\u5de5\u5177\u8f6f\u4ef6\uff0c\u4e0d\u8fc7\uff0c\u4f5c\u4e3a\u4e00\u822c\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u7684\u6211\uff0c\u4e5f\u60f3\u5b66\u4e60\u4e00\u4e9b\u57fa\u672c\u7684\u64cd\u4f5c\uff0c\u4ee5\u5907\u4e0d\u65f6\u4e4b\u9700\u3002\n\n\n\u4e0b\u9762\u8bb0\u5f55\u4e00\u4e9b\u5173\u4e8enamp\u7684\u5e38\u89c1\u7528\u6cd5\uff1a\n\n\n\u67e5\u8be2\u672c\u673aip:\n\n\n$ ifconfig en0\nen0: flags=8863\nUP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST\n mtu 1500\n    options=10b\nRXCSUM,TXCSUM,VLAN_HWTAGGING,AV\n\n    ether 98:5a:eb:ce:ff:c5 \n    inet6 fe80::10:d16a:4c30:3acd%en0 prefixlen 64 secured scopeid 0x4 \n    inet 192.168.70.83 netmask 0xffffff00 broadcast 192.168.70.255\n    nd6 options=201\nPERFORMNUD,DAD\n\n    media: autoselect (1000baseT \nfull-duplex\n)\n    status: active\n\n\n\n\n\u90a3\u4e48\u5c31\u4f7f\u7528 \n192.168.70.83\n / \n192.168.70.83/24\n \u8fd9\u4e2a\u7f51\u7edc\u5730\u5740\u8fdb\u884c\u672c\u673a/\u672c\u5730\u7f51\u7edc\u626b\u63cf\n\n\n1. \u83b7\u53d6\u8fdc\u7a0b\u4e3b\u673a\u7684\u7cfb\u7edf\u7c7b\u578b\u548c\u5f00\u653e\u7aef\u53e3\n\n\nsudo nmap -sS -P0 -sV -O 192.168.70.83\n\n\n\n\n\n\n-sS\n \u4f7f\u7528 TCP SYN \u6280\u672f\u626b\u63cf \n\n\n\n\ns(scan) \n\n\nS(SYN)  \n\n\n\n\n\n\n\n\n-P0\n \u5f3a\u5236 Nmap \u626b\u63cf\u4efb\u4f55\u5730\u5740\uff0c\u4e0d\u8bba\u5b83\u662f\u5426\u54cd\u5e94\u4e86 ping \n\n\n\n\n-sV\n \u63a2\u6d4b\u5f00\u653e\u7aef\u53e3\u63d0\u4f9b\u7684\u670d\u52a1\u548c\u7248\u672c\n\n\n-O\n  \u4fa6\u6d4b\u64cd\u4f5c\u7cfb\u7edf\n\n\n\n\nOutput\n\n\nStarting Nmap 7.12 ( https://nmap.org ) at 2016-12-23 18:51 CST\nNmap scan report for bogon (192.168.70.83)\nHost is up (0.000096s latency).\nNot shown: 997 closed ports\nPORT     STATE SERVICE         VERSION\n53/tcp   open  domain?\n80/tcp   open  http            Apache httpd 2.4.23 ((Unix))\n8888/tcp open  sun-answerbook?\n1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :\nSF-Port8888-TCP:V=7.12%I=7%D=12/23%Time=585D01AC%P=x86_64-apple-darwin15.4\nSF:.0%r(GetRequest,3AF,\nHTTP/1\\.0\\x20503\\x20Error\\r\\nServer:\\x20Charles\\r\\\nSF:nCache-Control:\\x20must-revalidate,no-cache,no-store\\r\\nContent-Type:\\x\nSF:20text/html;charset=ISO-8859-1\\r\\nContent-Length:\\x20764\\r\\nProxy-Conne\nSF:ction:\\x20Close\\r\\n\\r\\n\nhtml\n\\n\nhead\n\\n\\x20\\x20\\x20\\x20\ntitle\nCharles\\x\nSF:20Error\\x20Report\n/title\n\\n\\x20\\x20\\x20\\x20\nstyle\\x20type=\\\ntext/css\\\n\nSF:\\nbody\\x20{\\n\\x20\\x20\\x20\\x20font-family:\\x20Arial,Helvetica,Sans-serif\nSF:;\\n\\x20\\x20\\x20\\x20font-size:\\x2012px;\\n\\x20\\x20\\x20\\x20color:\\x20#3333\nSF:33;\\n\\x20\\x20\\x20\\x20background-color:\\x20#ffffff;\\n}\\n\\nh1\\x20{\\n\\x20\\\nSF:x20\\x20\\x20font-size:\\x2024px;\\n\\x20\\x20\\x20\\x20font-weight:\\x20bold;\\n\nSF:}\\n\\nh2\\x20{\\n\\x20\\x20\\x20\\x20font-size:\\x2018px;\\n\\x20\\x20\\x20\\x20font\nSF:-weight:\\x20bold;\\n}\\n\\x20\\x20\\x20\\x20\n/style\n\\n\n/head\n\\n\nbody\n\\n\\n\nh1\n\nSF:Charles\\x20Error\\x20Report\n/h1\n\\n\nh2\nFailure\n/h2\n\\n\np\nMalformed\\x20requ\nSF:est\\x20URL\\x20\nquot;\n#x2F;\nquot;\\.\\x20Consider\\x20enabling\\x20Transpare\nSF:nt\\x20proxying\\.\n/p\n\\n\np\nThe\\x20actual\\x20exception\\x20reported\\x20was:\nSF:\n/p\n\\n\npre\n\\ncom\\.xk72\\.proxy\\.ProxyException:\\x20Malformed\\x20request\\\nSF:x20URL\\x20\nquot;\n#x2F;\nquot;\\.\\x20Consider\\x20enabling\\x20Transparent\\x\nSF:20proxying\\.\\n\n/pre\n\\n\\n\np\n\\n\ni\nCharles\\x20Proxy,\\x20\na\\x20href=\\\nhttp:\nSF://www\\.charlesproxy\\.com/\\\nhttp://www\\.cha\n)%r(HTTPOptions,3AF,\nHTTP/1\nSF:\\.0\\x20503\\x20Error\\r\\nServer:\\x20Charles\\r\\nCache-Control:\\x20must-rev\nSF:alidate,no-cache,no-store\\r\\nContent-Type:\\x20text/html;charset=ISO-885\nSF:9-1\\r\\nContent-Length:\\x20764\\r\\nProxy-Connection:\\x20Close\\r\\n\\r\\n\nhtm\nSF:l\n\\n\nhead\n\\n\\x20\\x20\\x20\\x20\ntitle\nCharles\\x20Error\\x20Report\n/title\n\\n\nSF:\\x20\\x20\\x20\\x20\nstyle\\x20type=\\\ntext/css\\\n\\nbody\\x20{\\n\\x20\\x20\\x20\\x\nSF:20font-family:\\x20Arial,Helvetica,Sans-serif;\\n\\x20\\x20\\x20\\x20font-siz\nSF:e:\\x2012px;\\n\\x20\\x20\\x20\\x20color:\\x20#333333;\\n\\x20\\x20\\x20\\x20backgr\nSF:ound-color:\\x20#ffffff;\\n}\\n\\nh1\\x20{\\n\\x20\\x20\\x20\\x20font-size:\\x2024\nSF:px;\\n\\x20\\x20\\x20\\x20font-weight:\\x20bold;\\n}\\n\\nh2\\x20{\\n\\x20\\x20\\x20\\\nSF:x20font-size:\\x2018px;\\n\\x20\\x20\\x20\\x20font-weight:\\x20bold;\\n}\\n\\x20\\\nSF:x20\\x20\\x20\n/style\n\\n\n/head\n\\n\nbody\n\\n\\n\nh1\nCharles\\x20Error\\x20Report\n\nSF:/h1\n\\n\nh2\nFailure\n/h2\n\\n\np\nMalformed\\x20request\\x20URL\\x20\nquot;\n#x2F;\n\nSF:quot;\\.\\x20Consider\\x20enabling\\x20Transparent\\x20proxying\\.\n/p\n\\n\np\nTh\nSF:e\\x20actual\\x20exception\\x20reported\\x20was:\n/p\n\\n\npre\n\\ncom\\.xk72\\.pro\nSF:xy\\.ProxyException:\\x20Malformed\\x20request\\x20URL\\x20\nquot;\n#x2F;\nquot\nSF:;\\.\\x20Consider\\x20enabling\\x20Transparent\\x20proxying\\.\\n\n/pre\n\\n\\n\np\n\nSF:\\n\ni\nCharles\\x20Proxy,\\x20\na\\x20href=\\\nhttp://www\\.charlesproxy\\.com/\\\n\nSF:\nhttp://www\\.cha\n);\nDevice type: general purpose\nRunning: Apple Mac OS X 10.10.X|10.11.X\nOS CPE: cpe:/o:apple:mac_os_x:10.10 cpe:/o:apple:mac_os_x:10.11\nOS details: Apple Mac OS X 10.10 (Yosemite) - 10.11 (El Capitan) (Darwin 14.0.0 - 15.0.0)\nNetwork Distance: 0 hops\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 131.69 seconds\n\n\n\n\n2. \u5217\u51fa\u5f00\u653e\u4e86\u6307\u5b9a\u7aef\u53e3\u7684\u4e3b\u673a\u5217\u8868\n\n\nsudo nmap -sT -p 80 -oG - 192.168.70.83/24 | grep open\n\n\n\n\n-sT\n \u4f7f\u7528 Connect() \u6280\u672f\u626b\u63cf\n\n\n-p\n  \u6307\u5b9a\u626b\u63cf\u7aef\u53e3\u53f7\n\n\n-oG\n \u4ee5 Grepable \u683c\u5f0f\u5f0f\u8f93\u51fa\u626b\u63cf\u7ed3\u679c\n\n\ngrep open\n \u8fc7\u6ee4\u626b\u63cf\u7ed3\u679c\uff0c\u8f93\u51fa\u6253\u5f00\u7684\u7aef\u53e3\u76f8\u5173\u7684\u4fe1\u606f\n\n\n\n\nOutput\n\n\nHost: 192.168.70.114 (bogon)    Ports: 80/open/tcp//http///    \nHost: 192.168.70.164 () Ports: 80/open/tcp//http///    \nHost: 192.168.70.83 (bogon) Ports: 80/open/tcp//http///\n\n\n\n\n3. \u5728\u7f51\u7edc\u4e2d\u5bfb\u627e\u6240\u6709\u5728\u7ebf\u4e3b\u673a\n\n\nsudo nmap -sP 192.168.70.83/24\n\n\n\n\n-sP\n \u5bf9\u6307\u5b9a IP \u8303\u56f4\u5185\u7684\u6240\u6709\u5730\u5740\u8fdb\u884c ping \u626b\u63cf\uff0c\u5217\u51fa\u54cd\u5e94\u7684\u4e3b\u673a\n\n\n\n\nOutput\n\n\nStarting Nmap 7.12 ( https://nmap.org ) at 2016-12-23 19:10 CST\nNmap scan report for bogon (192.168.70.1)\nHost is up (0.00016s latency).\nMAC Address: 00:13:72:3F:72:F1 (Dell)\nNmap scan report for 192.168.70.29\nHost is up (0.00037s latency).\nMAC Address: 08:62:66:8A:42:84 (Asustek Computer)\nNmap scan report for bogon (192.168.70.30)\nHost is up (0.00038s latency).\nMAC Address: C8:60:00:5B:14:33 (Asustek Computer)\nNmap scan report for 192.168.70.32\nHost is up (0.00023s latency).\nMAC Address: 60:A4:4C:3E:53:71 (Asustek Computer)\nNmap scan report for bogon (192.168.70.35)\nHost is up (0.00017s latency).\nMAC Address: 08:60:6E:EF:78:7B (Asustek Computer)\nNmap scan report for 192.168.70.78\nHost is up (0.00040s latency).\nMAC Address: 20:6A:8A:11:DF:C4 (Wistron InfoComm Manufacturing(Kunshan)Co.)\nNmap scan report for bogon (192.168.70.86)\nHost is up (0.00039s latency).\nMAC Address: FC:AA:14:7F:82:C7 (Giga-byte Technology)\nNmap scan report for 192.168.70.108\nHost is up (0.00038s latency).\nMAC Address: E0:CB:4E:A4:AA:AA (Asustek Computer)\nNmap scan report for bogon (192.168.70.114)\nHost is up (0.0018s latency).\nMAC Address: 38:C9:86:3A:11:B8 (Apple)\nNmap scan report for 192.168.70.121\nHost is up (0.00028s latency).\nMAC Address: 74:D0:2B:9C:CB:B0 (Asustek Computer)\nNmap scan report for bogon (192.168.70.146)\nHost is up (0.00024s latency).\nMAC Address: E0:CB:4E:E3:15:E7 (Asustek Computer)\nNmap scan report for 192.168.70.250\nHost is up (0.00027s latency).\nMAC Address: 14:DA:E9:91:A8:B5 (Asustek Computer)\nNmap scan report for bogon (192.168.70.83)\nHost is up.\nNmap done: 256 IP addresses (13 hosts up) scanned in 1.19 seconds\n\n\n\n\n4. Ping\u6307\u5b9a\u8303\u56f4\u5185\u7684IP\u5730\u5740\n\n\nsudo nmap -sP 192.168.70.100-200\n\n\n\n\n-sP\n \u5bf9\u6307\u5b9a IP \u8303\u56f4\u5185\u7684\u6240\u6709\u5730\u5740\u8fdb\u884c ping \u626b\u63cf\uff0c\u5217\u51fa\u54cd\u5e94\u7684\u4e3b\u673a\n\n\n\n\nOutput\n\n\nStarting Nmap 7.12 ( https://nmap.org ) at 2016-12-23 19:13 CST\nNmap scan report for bogon (192.168.70.108)\nHost is up (0.00041s latency).\nMAC Address: E0:CB:4E:A4:AA:AA (Asustek Computer)\nNmap scan report for 192.168.70.114\nHost is up (0.00057s latency).\nMAC Address: 38:C9:86:3A:11:B8 (Apple)\nNmap scan report for bogon (192.168.70.121)\nHost is up (0.00021s latency).\nMAC Address: 74:D0:2B:9C:CB:B0 (Asustek Computer)\nNmap scan report for 192.168.70.146\nHost is up (0.00029s latency).\nMAC Address: E0:CB:4E:E3:15:E7 (Asustek Computer)\nNmap done: 101 IP addresses (4 hosts up) scanned in 1.60 seconds\n\n\n\n\n5. \u5728\u67d0\u6bb5\u5b50\u7f51\u4e0a\u67e5\u627e\u672a\u5360\u7528IP\n\n\nsudo nmap -T4 -sP 192.168.70.83/24 \n egrep \"00:00:00:00:00:00\" /proc/net/arp\n\n\n\n\n-T\n0-5\n \u8bbe\u5b9a\u5b9a\u65f6\u6a21\u677f\uff0c\u8d8a\u5927\u8d8a\u5feb\n\n\n-sP\n \u5bf9\u6307\u5b9a IP \u8303\u56f4\u5185\u7684\u6240\u6709\u5730\u5740\u8fdb\u884c ping \u626b\u63cf\uff0c\u5217\u51fa\u54cd\u5e94\u7684\u4e3b\u673a\n\n\negrep \"00:00:00:00:00:00\" /proc/net/arp\n  \u4f7f\u7528\u5728ARP\u53cd\u5411\u89e3\u6790\uff0c\u67e5\u627e\u6ca1\u6709MAC\u5730\u5740\u5bf9\u5e94\u7684IP\n\n\n\n\nOutput\n\n\n\n\n\n6. \u5728\u5c40\u57df\u7f51\u4e0a\u626b\u63cfConficker\u8815\u866b\u75c5\u6bd2\n\n\nnmap -PN -T4 -p139,455 -n -v --script=smb-check-vulns --script-args safe = 1 192.168.0.1-254\n\n\n7. \u626b\u63cf\u7f51\u7edc\u4e0a\u7684\u6076\u610f\u63a5\u5165\u70b9\n\n\nnmap -A -p1-85,113,443,8080-8100 -T4 --min-hostgroup 50 --max-rtt-timeout 2000 --initial-rtt-timeout 300 --max-retries 3 --host-timeout 20m --max-scan-delay 1000 -oA wapscan 10.0.0.0/8\n\n\n8. \u4f7f\u7528\u8bf1\u9975\u626b\u63cf\u65b9\u6cd5\u6765\u626b\u63cf\u4e3b\u673a\u7aef\u53e3\n\n\nsudo nmap -sS 192.168.0.10 -D 192.168.0.2\n\n\n9. \u4e3a\u4e00\u4e2a\u5b50\u7f51\u5217\u51fa\u53cd\u5411 DNS \u8bb0\u5f55\n\n\nnmap -R -sL 209.85.229.99/27 | awk {if($3==\"not\")print\"(\"$2\") no PTR\";else print$3\" is \"$2} | grep (\n\n\n10. \u663e\u793a\u7f51\u7edc\u4e0a\u5171\u6709\u591a\u5c11\u53f0 Linux \u53ca Win \u8bbe\u5907?\n\n\nsudo nmap -F -O 192.168.0.1-255 | grep \"Running: \" \n /tmp/os; echo \"$(cat /tmp/os | grep Linux | wc -l) Linux device(s)\"; echo \"$(cat /tmp/os | grep Windows | wc -l) Window(s) device\"\n\n\nlink\n\n\n\u4e0b\u9762\u5217\u4e00\u4e0b nmap \u7684\u5e2e\u52a9\u4fe1\u606f\n\n\nNmap version 7.12 ( https://nmap.org )\nPlatform: x86_64-apple-darwin15.4.0\nCompiled with: liblua-5.2.4 openssl-1.0.2g nmap-libpcre-7.6 libpcap-1.7.4 nmap-libdnet-1.12 ipv6\nCompiled without:\nAvailable nsock engines: kqueue poll select\n\n\n\n\nnmap --help\n\n\nNmap 7.12 ( https://nmap.org )\nUsage: nmap [Scan Type(s)] [Options] {target specification}\nTARGET SPECIFICATION:\n  Can pass hostnames, IP addresses, networks, etc.\n  Ex: scanme.nmap.org, microsoft.com/24, 192.168.0.1; 10.0.0-255.1-254\n  -iL \ninputfilename\n: Input from list of hosts/networks\n  -iR \nnum hosts\n: Choose random targets\n  --exclude \nhost1[,host2][,host3],...\n: Exclude hosts/networks\n  --excludefile \nexclude_file\n: Exclude list from file\nHOST DISCOVERY:\n  -sL: List Scan - simply list targets to scan\n  -sn: Ping Scan - disable port scan\n  -Pn: Treat all hosts as online -- skip host discovery\n  -PS/PA/PU/PY[portlist]: TCP SYN/ACK, UDP or SCTP discovery to given ports\n  -PE/PP/PM: ICMP echo, timestamp, and netmask request discovery probes\n  -PO[protocol list]: IP Protocol Ping\n  -n/-R: Never do DNS resolution/Always resolve [default: sometimes]\n  --dns-servers \nserv1[,serv2],...\n: Specify custom DNS servers\n  --system-dns: Use OS's DNS resolver\n  --traceroute: Trace hop path to each host\nSCAN TECHNIQUES:\n  -sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans\n  -sU: UDP Scan\n  -sN/sF/sX: TCP Null, FIN, and Xmas scans\n  --scanflags \nflags\n: Customize TCP scan flags\n  -sI \nzombie host[:probeport]\n: Idle scan\n  -sY/sZ: SCTP INIT/COOKIE-ECHO scans\n  -sO: IP protocol scan\n  -b \nFTP relay host\n: FTP bounce scan\nPORT SPECIFICATION AND SCAN ORDER:\n  -p \nport ranges\n: Only scan specified ports\n    Ex: -p22; -p1-65535; -p U:53,111,137,T:21-25,80,139,8080,S:9\n  --exclude-ports \nport ranges\n: Exclude the specified ports from scanning\n  -F: Fast mode - Scan fewer ports than the default scan\n  -r: Scan ports consecutively - don't randomize\n  --top-ports \nnumber\n: Scan \nnumber\n most common ports\n  --port-ratio \nratio\n: Scan ports more common than \nratio\n\nSERVICE/VERSION DETECTION:\n  -sV: Probe open ports to determine service/version info\n  --version-intensity \nlevel\n: Set from 0 (light) to 9 (try all probes)\n  --version-light: Limit to most likely probes (intensity 2)\n  --version-all: Try every single probe (intensity 9)\n  --version-trace: Show detailed version scan activity (for debugging)\nSCRIPT SCAN:\n  -sC: equivalent to --script=default\n  --script=\nLua scripts\n: \nLua scripts\n is a comma separated list of\n           directories, script-files or script-categories\n  --script-args=\nn1=v1,[n2=v2,...]\n: provide arguments to scripts\n  --script-args-file=filename: provide NSE script args in a file\n  --script-trace: Show all data sent and received\n  --script-updatedb: Update the script database.\n  --script-help=\nLua scripts\n: Show help about scripts.\n           \nLua scripts\n is a comma-separated list of script-files or\n           script-categories.\nOS DETECTION:\n  -O: Enable OS detection\n  --osscan-limit: Limit OS detection to promising targets\n  --osscan-guess: Guess OS more aggressively\nTIMING AND PERFORMANCE:\n  Options which take \ntime\n are in seconds, or append 'ms' (milliseconds),\n  's' (seconds), 'm' (minutes), or 'h' (hours) to the value (e.g. 30m).\n  -T\n0-5\n: Set timing template (higher is faster)\n  --min-hostgroup/max-hostgroup \nsize\n: Parallel host scan group sizes\n  --min-parallelism/max-parallelism \nnumprobes\n: Probe parallelization\n  --min-rtt-timeout/max-rtt-timeout/initial-rtt-timeout \ntime\n: Specifies\n      probe round trip time.\n  --max-retries \ntries\n: Caps number of port scan probe retransmissions.\n  --host-timeout \ntime\n: Give up on target after this long\n  --scan-delay/--max-scan-delay \ntime\n: Adjust delay between probes\n  --min-rate \nnumber\n: Send packets no slower than \nnumber\n per second\n  --max-rate \nnumber\n: Send packets no faster than \nnumber\n per second\nFIREWALL/IDS EVASION AND SPOOFING:\n  -f; --mtu \nval\n: fragment packets (optionally w/given MTU)\n  -D \ndecoy1,decoy2[,ME],...\n: Cloak a scan with decoys\n  -S \nIP_Address\n: Spoof source address\n  -e \niface\n: Use specified interface\n  -g/--source-port \nportnum\n: Use given port number\n  --proxies \nurl1,[url2],...\n: Relay connections through HTTP/SOCKS4 proxies\n  --data \nhex string\n: Append a custom payload to sent packets\n  --data-string \nstring\n: Append a custom ASCII string to sent packets\n  --data-length \nnum\n: Append random data to sent packets\n  --ip-options \noptions\n: Send packets with specified ip options\n  --ttl \nval\n: Set IP time-to-live field\n  --spoof-mac \nmac address/prefix/vendor name\n: Spoof your MAC address\n  --badsum: Send packets with a bogus TCP/UDP/SCTP checksum\nOUTPUT:\n  -oN/-oX/-oS/-oG \nfile\n: Output scan in normal, XML, s|\nrIpt kIddi3,\n     and Grepable format, respectively, to the given filename.\n  -oA \nbasename\n: Output in the three major formats at once\n  -v: Increase verbosity level (use -vv or more for greater effect)\n  -d: Increase debugging level (use -dd or more for greater effect)\n  --reason: Display the reason a port is in a particular state\n  --open: Only show open (or possibly open) ports\n  --packet-trace: Show all packets sent and received\n  --iflist: Print host interfaces and routes (for debugging)\n  --append-output: Append to rather than clobber specified output files\n  --resume \nfilename\n: Resume an aborted scan\n  --stylesheet \npath/URL\n: XSL stylesheet to transform XML output to HTML\n  --webxml: Reference stylesheet from Nmap.Org for more portable XML\n  --no-stylesheet: Prevent associating of XSL stylesheet w/XML output\nMISC:\n  -6: Enable IPv6 scanning\n  -A: Enable OS detection, version detection, script scanning, and traceroute\n  --datadir \ndirname\n: Specify custom Nmap data file location\n  --send-eth/--send-ip: Send using raw ethernet frames or IP packets\n  --privileged: Assume that the user is fully privileged\n  --unprivileged: Assume the user lacks raw socket privileges\n  -V: Print version number\n  -h: Print this help summary page.\nEXAMPLES:\n  nmap -v -A scanme.nmap.org\n  nmap -v -sn 192.168.0.0/16 10.0.0.0/8\n  nmap -v -iR 10000 -Pn -p 80\nSEE THE MAN PAGE (https://nmap.org/book/man.html) FOR MORE OPTIONS AND EXAMPLES", 
            "title": "Nmap Basics"
        }, 
        {
            "location": "/tech/Nmap Basics/#nmap-basics", 
            "text": "\u4f7f\u7528nmap\u6709\u4e00\u6bb5\u65f6\u95f4\u4e86\uff0c\u4e3b\u8981\u662f\u5728\u5b66\u4e60\u6811\u8393\u6d3e\u7684\u8fc7\u7a0b\u4e2d\u63a5\u89e6\u7684\uff0c\u53d1\u73b0\u8fd9\u4e2a\u5de5\u5177\u5f02\u5e38\u5f3a\u5927\uff0c\u662f\u9ed1\u5ba2\u5fc5\u5907\u7684\u5de5\u5177\u8f6f\u4ef6\uff0c\u4e0d\u8fc7\uff0c\u4f5c\u4e3a\u4e00\u822c\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u7684\u6211\uff0c\u4e5f\u60f3\u5b66\u4e60\u4e00\u4e9b\u57fa\u672c\u7684\u64cd\u4f5c\uff0c\u4ee5\u5907\u4e0d\u65f6\u4e4b\u9700\u3002", 
            "title": "Nmap Basics"
        }, 
        {
            "location": "/tech/Nmap Basics/#namp", 
            "text": "\u67e5\u8be2\u672c\u673aip:  $ ifconfig en0\nen0: flags=8863 UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST  mtu 1500\n    options=10b RXCSUM,TXCSUM,VLAN_HWTAGGING,AV \n    ether 98:5a:eb:ce:ff:c5 \n    inet6 fe80::10:d16a:4c30:3acd%en0 prefixlen 64 secured scopeid 0x4 \n    inet 192.168.70.83 netmask 0xffffff00 broadcast 192.168.70.255\n    nd6 options=201 PERFORMNUD,DAD \n    media: autoselect (1000baseT  full-duplex )\n    status: active  \u90a3\u4e48\u5c31\u4f7f\u7528  192.168.70.83  /  192.168.70.83/24  \u8fd9\u4e2a\u7f51\u7edc\u5730\u5740\u8fdb\u884c\u672c\u673a/\u672c\u5730\u7f51\u7edc\u626b\u63cf", 
            "title": "\u4e0b\u9762\u8bb0\u5f55\u4e00\u4e9b\u5173\u4e8enamp\u7684\u5e38\u89c1\u7528\u6cd5\uff1a"
        }, 
        {
            "location": "/tech/Nmap Basics/#1", 
            "text": "sudo nmap -sS -P0 -sV -O 192.168.70.83    -sS  \u4f7f\u7528 TCP SYN \u6280\u672f\u626b\u63cf    s(scan)   S(SYN)       -P0  \u5f3a\u5236 Nmap \u626b\u63cf\u4efb\u4f55\u5730\u5740\uff0c\u4e0d\u8bba\u5b83\u662f\u5426\u54cd\u5e94\u4e86 ping    -sV  \u63a2\u6d4b\u5f00\u653e\u7aef\u53e3\u63d0\u4f9b\u7684\u670d\u52a1\u548c\u7248\u672c  -O   \u4fa6\u6d4b\u64cd\u4f5c\u7cfb\u7edf   Output  Starting Nmap 7.12 ( https://nmap.org ) at 2016-12-23 18:51 CST\nNmap scan report for bogon (192.168.70.83)\nHost is up (0.000096s latency).\nNot shown: 997 closed ports\nPORT     STATE SERVICE         VERSION\n53/tcp   open  domain?\n80/tcp   open  http            Apache httpd 2.4.23 ((Unix))\n8888/tcp open  sun-answerbook?\n1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :\nSF-Port8888-TCP:V=7.12%I=7%D=12/23%Time=585D01AC%P=x86_64-apple-darwin15.4\nSF:.0%r(GetRequest,3AF, HTTP/1\\.0\\x20503\\x20Error\\r\\nServer:\\x20Charles\\r\\\nSF:nCache-Control:\\x20must-revalidate,no-cache,no-store\\r\\nContent-Type:\\x\nSF:20text/html;charset=ISO-8859-1\\r\\nContent-Length:\\x20764\\r\\nProxy-Conne\nSF:ction:\\x20Close\\r\\n\\r\\n html \\n head \\n\\x20\\x20\\x20\\x20 title Charles\\x\nSF:20Error\\x20Report /title \\n\\x20\\x20\\x20\\x20 style\\x20type=\\ text/css\\ \nSF:\\nbody\\x20{\\n\\x20\\x20\\x20\\x20font-family:\\x20Arial,Helvetica,Sans-serif\nSF:;\\n\\x20\\x20\\x20\\x20font-size:\\x2012px;\\n\\x20\\x20\\x20\\x20color:\\x20#3333\nSF:33;\\n\\x20\\x20\\x20\\x20background-color:\\x20#ffffff;\\n}\\n\\nh1\\x20{\\n\\x20\\\nSF:x20\\x20\\x20font-size:\\x2024px;\\n\\x20\\x20\\x20\\x20font-weight:\\x20bold;\\n\nSF:}\\n\\nh2\\x20{\\n\\x20\\x20\\x20\\x20font-size:\\x2018px;\\n\\x20\\x20\\x20\\x20font\nSF:-weight:\\x20bold;\\n}\\n\\x20\\x20\\x20\\x20 /style \\n /head \\n body \\n\\n h1 \nSF:Charles\\x20Error\\x20Report /h1 \\n h2 Failure /h2 \\n p Malformed\\x20requ\nSF:est\\x20URL\\x20 quot; #x2F; quot;\\.\\x20Consider\\x20enabling\\x20Transpare\nSF:nt\\x20proxying\\. /p \\n p The\\x20actual\\x20exception\\x20reported\\x20was:\nSF: /p \\n pre \\ncom\\.xk72\\.proxy\\.ProxyException:\\x20Malformed\\x20request\\\nSF:x20URL\\x20 quot; #x2F; quot;\\.\\x20Consider\\x20enabling\\x20Transparent\\x\nSF:20proxying\\.\\n /pre \\n\\n p \\n i Charles\\x20Proxy,\\x20 a\\x20href=\\ http:\nSF://www\\.charlesproxy\\.com/\\ http://www\\.cha )%r(HTTPOptions,3AF, HTTP/1\nSF:\\.0\\x20503\\x20Error\\r\\nServer:\\x20Charles\\r\\nCache-Control:\\x20must-rev\nSF:alidate,no-cache,no-store\\r\\nContent-Type:\\x20text/html;charset=ISO-885\nSF:9-1\\r\\nContent-Length:\\x20764\\r\\nProxy-Connection:\\x20Close\\r\\n\\r\\n htm\nSF:l \\n head \\n\\x20\\x20\\x20\\x20 title Charles\\x20Error\\x20Report /title \\n\nSF:\\x20\\x20\\x20\\x20 style\\x20type=\\ text/css\\ \\nbody\\x20{\\n\\x20\\x20\\x20\\x\nSF:20font-family:\\x20Arial,Helvetica,Sans-serif;\\n\\x20\\x20\\x20\\x20font-siz\nSF:e:\\x2012px;\\n\\x20\\x20\\x20\\x20color:\\x20#333333;\\n\\x20\\x20\\x20\\x20backgr\nSF:ound-color:\\x20#ffffff;\\n}\\n\\nh1\\x20{\\n\\x20\\x20\\x20\\x20font-size:\\x2024\nSF:px;\\n\\x20\\x20\\x20\\x20font-weight:\\x20bold;\\n}\\n\\nh2\\x20{\\n\\x20\\x20\\x20\\\nSF:x20font-size:\\x2018px;\\n\\x20\\x20\\x20\\x20font-weight:\\x20bold;\\n}\\n\\x20\\\nSF:x20\\x20\\x20 /style \\n /head \\n body \\n\\n h1 Charles\\x20Error\\x20Report \nSF:/h1 \\n h2 Failure /h2 \\n p Malformed\\x20request\\x20URL\\x20 quot; #x2F; \nSF:quot;\\.\\x20Consider\\x20enabling\\x20Transparent\\x20proxying\\. /p \\n p Th\nSF:e\\x20actual\\x20exception\\x20reported\\x20was: /p \\n pre \\ncom\\.xk72\\.pro\nSF:xy\\.ProxyException:\\x20Malformed\\x20request\\x20URL\\x20 quot; #x2F; quot\nSF:;\\.\\x20Consider\\x20enabling\\x20Transparent\\x20proxying\\.\\n /pre \\n\\n p \nSF:\\n i Charles\\x20Proxy,\\x20 a\\x20href=\\ http://www\\.charlesproxy\\.com/\\ \nSF: http://www\\.cha );\nDevice type: general purpose\nRunning: Apple Mac OS X 10.10.X|10.11.X\nOS CPE: cpe:/o:apple:mac_os_x:10.10 cpe:/o:apple:mac_os_x:10.11\nOS details: Apple Mac OS X 10.10 (Yosemite) - 10.11 (El Capitan) (Darwin 14.0.0 - 15.0.0)\nNetwork Distance: 0 hops\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 131.69 seconds", 
            "title": "1. \u83b7\u53d6\u8fdc\u7a0b\u4e3b\u673a\u7684\u7cfb\u7edf\u7c7b\u578b\u548c\u5f00\u653e\u7aef\u53e3"
        }, 
        {
            "location": "/tech/Nmap Basics/#2", 
            "text": "sudo nmap -sT -p 80 -oG - 192.168.70.83/24 | grep open   -sT  \u4f7f\u7528 Connect() \u6280\u672f\u626b\u63cf  -p   \u6307\u5b9a\u626b\u63cf\u7aef\u53e3\u53f7  -oG  \u4ee5 Grepable \u683c\u5f0f\u5f0f\u8f93\u51fa\u626b\u63cf\u7ed3\u679c  grep open  \u8fc7\u6ee4\u626b\u63cf\u7ed3\u679c\uff0c\u8f93\u51fa\u6253\u5f00\u7684\u7aef\u53e3\u76f8\u5173\u7684\u4fe1\u606f   Output  Host: 192.168.70.114 (bogon)    Ports: 80/open/tcp//http///    \nHost: 192.168.70.164 () Ports: 80/open/tcp//http///    \nHost: 192.168.70.83 (bogon) Ports: 80/open/tcp//http///", 
            "title": "2. \u5217\u51fa\u5f00\u653e\u4e86\u6307\u5b9a\u7aef\u53e3\u7684\u4e3b\u673a\u5217\u8868"
        }, 
        {
            "location": "/tech/Nmap Basics/#3", 
            "text": "sudo nmap -sP 192.168.70.83/24   -sP  \u5bf9\u6307\u5b9a IP \u8303\u56f4\u5185\u7684\u6240\u6709\u5730\u5740\u8fdb\u884c ping \u626b\u63cf\uff0c\u5217\u51fa\u54cd\u5e94\u7684\u4e3b\u673a   Output  Starting Nmap 7.12 ( https://nmap.org ) at 2016-12-23 19:10 CST\nNmap scan report for bogon (192.168.70.1)\nHost is up (0.00016s latency).\nMAC Address: 00:13:72:3F:72:F1 (Dell)\nNmap scan report for 192.168.70.29\nHost is up (0.00037s latency).\nMAC Address: 08:62:66:8A:42:84 (Asustek Computer)\nNmap scan report for bogon (192.168.70.30)\nHost is up (0.00038s latency).\nMAC Address: C8:60:00:5B:14:33 (Asustek Computer)\nNmap scan report for 192.168.70.32\nHost is up (0.00023s latency).\nMAC Address: 60:A4:4C:3E:53:71 (Asustek Computer)\nNmap scan report for bogon (192.168.70.35)\nHost is up (0.00017s latency).\nMAC Address: 08:60:6E:EF:78:7B (Asustek Computer)\nNmap scan report for 192.168.70.78\nHost is up (0.00040s latency).\nMAC Address: 20:6A:8A:11:DF:C4 (Wistron InfoComm Manufacturing(Kunshan)Co.)\nNmap scan report for bogon (192.168.70.86)\nHost is up (0.00039s latency).\nMAC Address: FC:AA:14:7F:82:C7 (Giga-byte Technology)\nNmap scan report for 192.168.70.108\nHost is up (0.00038s latency).\nMAC Address: E0:CB:4E:A4:AA:AA (Asustek Computer)\nNmap scan report for bogon (192.168.70.114)\nHost is up (0.0018s latency).\nMAC Address: 38:C9:86:3A:11:B8 (Apple)\nNmap scan report for 192.168.70.121\nHost is up (0.00028s latency).\nMAC Address: 74:D0:2B:9C:CB:B0 (Asustek Computer)\nNmap scan report for bogon (192.168.70.146)\nHost is up (0.00024s latency).\nMAC Address: E0:CB:4E:E3:15:E7 (Asustek Computer)\nNmap scan report for 192.168.70.250\nHost is up (0.00027s latency).\nMAC Address: 14:DA:E9:91:A8:B5 (Asustek Computer)\nNmap scan report for bogon (192.168.70.83)\nHost is up.\nNmap done: 256 IP addresses (13 hosts up) scanned in 1.19 seconds", 
            "title": "3. \u5728\u7f51\u7edc\u4e2d\u5bfb\u627e\u6240\u6709\u5728\u7ebf\u4e3b\u673a"
        }, 
        {
            "location": "/tech/Nmap Basics/#4-pingip", 
            "text": "sudo nmap -sP 192.168.70.100-200   -sP  \u5bf9\u6307\u5b9a IP \u8303\u56f4\u5185\u7684\u6240\u6709\u5730\u5740\u8fdb\u884c ping \u626b\u63cf\uff0c\u5217\u51fa\u54cd\u5e94\u7684\u4e3b\u673a   Output  Starting Nmap 7.12 ( https://nmap.org ) at 2016-12-23 19:13 CST\nNmap scan report for bogon (192.168.70.108)\nHost is up (0.00041s latency).\nMAC Address: E0:CB:4E:A4:AA:AA (Asustek Computer)\nNmap scan report for 192.168.70.114\nHost is up (0.00057s latency).\nMAC Address: 38:C9:86:3A:11:B8 (Apple)\nNmap scan report for bogon (192.168.70.121)\nHost is up (0.00021s latency).\nMAC Address: 74:D0:2B:9C:CB:B0 (Asustek Computer)\nNmap scan report for 192.168.70.146\nHost is up (0.00029s latency).\nMAC Address: E0:CB:4E:E3:15:E7 (Asustek Computer)\nNmap done: 101 IP addresses (4 hosts up) scanned in 1.60 seconds", 
            "title": "4. Ping\u6307\u5b9a\u8303\u56f4\u5185\u7684IP\u5730\u5740"
        }, 
        {
            "location": "/tech/Nmap Basics/#5-ip", 
            "text": "sudo nmap -T4 -sP 192.168.70.83/24   egrep \"00:00:00:00:00:00\" /proc/net/arp   -T 0-5  \u8bbe\u5b9a\u5b9a\u65f6\u6a21\u677f\uff0c\u8d8a\u5927\u8d8a\u5feb  -sP  \u5bf9\u6307\u5b9a IP \u8303\u56f4\u5185\u7684\u6240\u6709\u5730\u5740\u8fdb\u884c ping \u626b\u63cf\uff0c\u5217\u51fa\u54cd\u5e94\u7684\u4e3b\u673a  egrep \"00:00:00:00:00:00\" /proc/net/arp   \u4f7f\u7528\u5728ARP\u53cd\u5411\u89e3\u6790\uff0c\u67e5\u627e\u6ca1\u6709MAC\u5730\u5740\u5bf9\u5e94\u7684IP   Output", 
            "title": "5. \u5728\u67d0\u6bb5\u5b50\u7f51\u4e0a\u67e5\u627e\u672a\u5360\u7528IP"
        }, 
        {
            "location": "/tech/Nmap Basics/#6-conficker", 
            "text": "nmap -PN -T4 -p139,455 -n -v --script=smb-check-vulns --script-args safe = 1 192.168.0.1-254", 
            "title": "6. \u5728\u5c40\u57df\u7f51\u4e0a\u626b\u63cfConficker\u8815\u866b\u75c5\u6bd2"
        }, 
        {
            "location": "/tech/Nmap Basics/#7", 
            "text": "nmap -A -p1-85,113,443,8080-8100 -T4 --min-hostgroup 50 --max-rtt-timeout 2000 --initial-rtt-timeout 300 --max-retries 3 --host-timeout 20m --max-scan-delay 1000 -oA wapscan 10.0.0.0/8", 
            "title": "7. \u626b\u63cf\u7f51\u7edc\u4e0a\u7684\u6076\u610f\u63a5\u5165\u70b9"
        }, 
        {
            "location": "/tech/Nmap Basics/#8", 
            "text": "sudo nmap -sS 192.168.0.10 -D 192.168.0.2", 
            "title": "8. \u4f7f\u7528\u8bf1\u9975\u626b\u63cf\u65b9\u6cd5\u6765\u626b\u63cf\u4e3b\u673a\u7aef\u53e3"
        }, 
        {
            "location": "/tech/Nmap Basics/#9-dns", 
            "text": "nmap -R -sL 209.85.229.99/27 | awk {if($3==\"not\")print\"(\"$2\") no PTR\";else print$3\" is \"$2} | grep (", 
            "title": "9. \u4e3a\u4e00\u4e2a\u5b50\u7f51\u5217\u51fa\u53cd\u5411 DNS \u8bb0\u5f55"
        }, 
        {
            "location": "/tech/Nmap Basics/#10-linux-win", 
            "text": "sudo nmap -F -O 192.168.0.1-255 | grep \"Running: \"   /tmp/os; echo \"$(cat /tmp/os | grep Linux | wc -l) Linux device(s)\"; echo \"$(cat /tmp/os | grep Windows | wc -l) Window(s) device\"  link", 
            "title": "10. \u663e\u793a\u7f51\u7edc\u4e0a\u5171\u6709\u591a\u5c11\u53f0 Linux \u53ca Win \u8bbe\u5907?"
        }, 
        {
            "location": "/tech/Nmap Basics/#nmap", 
            "text": "Nmap version 7.12 ( https://nmap.org )\nPlatform: x86_64-apple-darwin15.4.0\nCompiled with: liblua-5.2.4 openssl-1.0.2g nmap-libpcre-7.6 libpcap-1.7.4 nmap-libdnet-1.12 ipv6\nCompiled without:\nAvailable nsock engines: kqueue poll select", 
            "title": "\u4e0b\u9762\u5217\u4e00\u4e0b nmap \u7684\u5e2e\u52a9\u4fe1\u606f"
        }, 
        {
            "location": "/tech/Nmap Basics/#nmap-help", 
            "text": "Nmap 7.12 ( https://nmap.org )\nUsage: nmap [Scan Type(s)] [Options] {target specification}\nTARGET SPECIFICATION:\n  Can pass hostnames, IP addresses, networks, etc.\n  Ex: scanme.nmap.org, microsoft.com/24, 192.168.0.1; 10.0.0-255.1-254\n  -iL  inputfilename : Input from list of hosts/networks\n  -iR  num hosts : Choose random targets\n  --exclude  host1[,host2][,host3],... : Exclude hosts/networks\n  --excludefile  exclude_file : Exclude list from file\nHOST DISCOVERY:\n  -sL: List Scan - simply list targets to scan\n  -sn: Ping Scan - disable port scan\n  -Pn: Treat all hosts as online -- skip host discovery\n  -PS/PA/PU/PY[portlist]: TCP SYN/ACK, UDP or SCTP discovery to given ports\n  -PE/PP/PM: ICMP echo, timestamp, and netmask request discovery probes\n  -PO[protocol list]: IP Protocol Ping\n  -n/-R: Never do DNS resolution/Always resolve [default: sometimes]\n  --dns-servers  serv1[,serv2],... : Specify custom DNS servers\n  --system-dns: Use OS's DNS resolver\n  --traceroute: Trace hop path to each host\nSCAN TECHNIQUES:\n  -sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans\n  -sU: UDP Scan\n  -sN/sF/sX: TCP Null, FIN, and Xmas scans\n  --scanflags  flags : Customize TCP scan flags\n  -sI  zombie host[:probeport] : Idle scan\n  -sY/sZ: SCTP INIT/COOKIE-ECHO scans\n  -sO: IP protocol scan\n  -b  FTP relay host : FTP bounce scan\nPORT SPECIFICATION AND SCAN ORDER:\n  -p  port ranges : Only scan specified ports\n    Ex: -p22; -p1-65535; -p U:53,111,137,T:21-25,80,139,8080,S:9\n  --exclude-ports  port ranges : Exclude the specified ports from scanning\n  -F: Fast mode - Scan fewer ports than the default scan\n  -r: Scan ports consecutively - don't randomize\n  --top-ports  number : Scan  number  most common ports\n  --port-ratio  ratio : Scan ports more common than  ratio \nSERVICE/VERSION DETECTION:\n  -sV: Probe open ports to determine service/version info\n  --version-intensity  level : Set from 0 (light) to 9 (try all probes)\n  --version-light: Limit to most likely probes (intensity 2)\n  --version-all: Try every single probe (intensity 9)\n  --version-trace: Show detailed version scan activity (for debugging)\nSCRIPT SCAN:\n  -sC: equivalent to --script=default\n  --script= Lua scripts :  Lua scripts  is a comma separated list of\n           directories, script-files or script-categories\n  --script-args= n1=v1,[n2=v2,...] : provide arguments to scripts\n  --script-args-file=filename: provide NSE script args in a file\n  --script-trace: Show all data sent and received\n  --script-updatedb: Update the script database.\n  --script-help= Lua scripts : Show help about scripts.\n            Lua scripts  is a comma-separated list of script-files or\n           script-categories.\nOS DETECTION:\n  -O: Enable OS detection\n  --osscan-limit: Limit OS detection to promising targets\n  --osscan-guess: Guess OS more aggressively\nTIMING AND PERFORMANCE:\n  Options which take  time  are in seconds, or append 'ms' (milliseconds),\n  's' (seconds), 'm' (minutes), or 'h' (hours) to the value (e.g. 30m).\n  -T 0-5 : Set timing template (higher is faster)\n  --min-hostgroup/max-hostgroup  size : Parallel host scan group sizes\n  --min-parallelism/max-parallelism  numprobes : Probe parallelization\n  --min-rtt-timeout/max-rtt-timeout/initial-rtt-timeout  time : Specifies\n      probe round trip time.\n  --max-retries  tries : Caps number of port scan probe retransmissions.\n  --host-timeout  time : Give up on target after this long\n  --scan-delay/--max-scan-delay  time : Adjust delay between probes\n  --min-rate  number : Send packets no slower than  number  per second\n  --max-rate  number : Send packets no faster than  number  per second\nFIREWALL/IDS EVASION AND SPOOFING:\n  -f; --mtu  val : fragment packets (optionally w/given MTU)\n  -D  decoy1,decoy2[,ME],... : Cloak a scan with decoys\n  -S  IP_Address : Spoof source address\n  -e  iface : Use specified interface\n  -g/--source-port  portnum : Use given port number\n  --proxies  url1,[url2],... : Relay connections through HTTP/SOCKS4 proxies\n  --data  hex string : Append a custom payload to sent packets\n  --data-string  string : Append a custom ASCII string to sent packets\n  --data-length  num : Append random data to sent packets\n  --ip-options  options : Send packets with specified ip options\n  --ttl  val : Set IP time-to-live field\n  --spoof-mac  mac address/prefix/vendor name : Spoof your MAC address\n  --badsum: Send packets with a bogus TCP/UDP/SCTP checksum\nOUTPUT:\n  -oN/-oX/-oS/-oG  file : Output scan in normal, XML, s| rIpt kIddi3,\n     and Grepable format, respectively, to the given filename.\n  -oA  basename : Output in the three major formats at once\n  -v: Increase verbosity level (use -vv or more for greater effect)\n  -d: Increase debugging level (use -dd or more for greater effect)\n  --reason: Display the reason a port is in a particular state\n  --open: Only show open (or possibly open) ports\n  --packet-trace: Show all packets sent and received\n  --iflist: Print host interfaces and routes (for debugging)\n  --append-output: Append to rather than clobber specified output files\n  --resume  filename : Resume an aborted scan\n  --stylesheet  path/URL : XSL stylesheet to transform XML output to HTML\n  --webxml: Reference stylesheet from Nmap.Org for more portable XML\n  --no-stylesheet: Prevent associating of XSL stylesheet w/XML output\nMISC:\n  -6: Enable IPv6 scanning\n  -A: Enable OS detection, version detection, script scanning, and traceroute\n  --datadir  dirname : Specify custom Nmap data file location\n  --send-eth/--send-ip: Send using raw ethernet frames or IP packets\n  --privileged: Assume that the user is fully privileged\n  --unprivileged: Assume the user lacks raw socket privileges\n  -V: Print version number\n  -h: Print this help summary page.\nEXAMPLES:\n  nmap -v -A scanme.nmap.org\n  nmap -v -sn 192.168.0.0/16 10.0.0.0/8\n  nmap -v -iR 10000 -Pn -p 80\nSEE THE MAN PAGE (https://nmap.org/book/man.html) FOR MORE OPTIONS AND EXAMPLES", 
            "title": "nmap --help"
        }, 
        {
            "location": "/tech/Use GDB/", 
            "text": "Use GDB\n\n\n\u7528\u4e86\u51e0\u5929GDB\uff0c\u89c9\u5f97\u633a\u597d\u7528\u7684\uff0c\u7279\u522b\u662f\u5199\u793a\u4f8b\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u7531\u4e8e\u6e90\u6587\u4ef6\u4e5f\u4e0d\u662f\u5f88\u590d\u6742\uff0c\u8c03\u8bd5\u5de5\u4f5c\u8fd8\u662f\u4f7f\u7528\u8f7b\u91cf\u7ea7\u7684GDB\u6765\u7684\u65b9\u4fbf\u3001\u76f4\u63a5\uff0c\u540c\u65f6GDB\u8fd8\u53ef\u4ee5\u8fdc\u7a0b\u8c03\u8bd5\uff0c\u529f\u80fd\u4e0a\u4e5f\u662f\u5f88\u5f3a\u5927\u7684\u3002\n\n\n\u4e0b\u9762\u6574\u7406\u4e00\u4e0b\u4f7f\u7528GDB\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u7ecf\u5e38\u4f7f\u7528\u7684\u4e00\u4e9b\u547d\u4ee4\u548c\u7ec4\u5408\u952e\uff1a\n\n\n\n\ngdb insert_sort\n \u4f7f\u7528GDB\u8c03\u8bd5\u7a0b\u5e8f\ninsert_sort\n\n\nbreak 16\n    \u5728\u7a0b\u5e8f\u7684\u7b2c16\u884c\u8bbe\u7f6e\u65ad\u70b9\n\n\ntbreak 16\n \u5728\u7a0b\u5e8f\u7b2c16\u884c\u8bbe\u7f6e\u4e00\u4e2a\u4e34\u65f6\u65ad\u70b9\uff0c\u4e2d\u6b62\u4e00\u6b21\u540e\u5931\u6548\n\n\nclear 16\n    \u6e05\u9664\u7a0b\u5e8f\u7b2c16\u884c\u8bbe\u7f6e\u7684\u65ad\u70b9\n\n\ndelete 1\n    \u5220\u9664\u7b2c\u4e00\u4e2a\u65ad\u70b9\n\n\ndisable 1 2 5\n \u4f7f\u65ad\u70b91\uff0c2\uff0c5\u4e0d\u8d77\u4f5c\u7528\n\n\nenable  1 2 5\n \u4f7f\u65ad\u70b91\uff0c2\uff0c5\u8d77\u4f5c\u7528 \n\n\nenable once 1 2\n \u4f7f\u80fd\u65ad\u70b91\uff0c2\u8d77\u4f5c\u7528\u4e00\u6b21\uff0c\u4e4b\u540edisable\n\n\ninfo break\n  \u67e5\u770b\u6240\u6709\u65ad\u70b9\u4fe1\u606f\n\n\nctrl-P\n\u548c\nctrl-N\n \u524d\u540e\u6d4f\u89c8\u4ee3\u7801\u6216\u7f16\u8f91\n\n\nENTER\n   \u91cd\u590d\u6267\u884c\u4e0a\u6b21\u8c03\u8bd5\u547d\u4ee4\n\n\nnext\n    \u8c03\u8bd5\u4e0b\u4e00\u53e5\u4ee3\u7801(Step Over)\n\n\nnext 3\n \u5411\u4e0b\u8d70\u4e09\u53e5(Step Over)\n\n\ndefine\n  \u53ef\u4ee5\u5b9a\u4e49\u76f8\u5173\u7684\u5b8f\u547d\u4ee4\uff0c\u4f7f\u8f93\u5165\u547d\u4ee4\u66f4\u52a0\u81ea\u7531\u548c\u4e2a\u6027\n\n\nrun 12 5 6\n \u8fd0\u884c\u5230\u65ad\u70b912\u30015\u30016\u65f6\u6682\u505c\u6267\u884c\n\n\nlist\n    \u591a\u4e2a\u6e90\u6587\u4ef6\u8c03\u8bd5\u65f6\u663e\u793a\u4e0d\u540c\u7684\u4ee3\u7801\u533a\u57df\n\n\nstep\n    \u6b65\u5165\u8c03\u8bd5\uff08Step Into)\n\n\ncontinue\n \u7ee7\u7eed\u6267\u884c\n\n\ncontinue 3\n \u7ee7\u7eed\u6267\u884c\uff0c\u5e76\u5ffd\u7565\u4e09\u6b21\u65ad\u70b9\n\n\ncommands 3\n\u7ed9\u65ad\u70b9\u5173\u8054\u76f8\u5173\u7684\u547d\u4ee4\uff0c\u4e00\u884c\u4e00\u6761\u547d\u4ee4\uff0c\u4ee5end\u7ed3\u675f\uff0c\u6dfb\u52a0\u4e00\u6761slient\u547d\u4ee4\u53ef\u4ee5\u5c4f\u6389\u65ad\u70b9\u505c\u6b62\u65f6\u81ea\u52a8\u4ea7\u751f\u7684\u76f8\u5173\u4fe1\u606f\u8f93\u51fa\n\n\ndefine\n \u5b9a\u4e49GDB\u5b8f\u547d\u4ee4\uff0c\u4ee5end\u7ed3\u675f\u5b9a\u4e49, \u53c2\u6570\u4ee5$\u53f7\u5f00\u59cb\n\n\nshow user\n \u5217\u51fa\u6240\u6709\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u5b8f\u547d\u4ee4\n\n\nuntil\n \u7ee7\u7eed\u6267\u884c\uff0c\u76f4\u5230\u4e00\u4e2a\u5faa\u73af\u5b8c\u6210\n\n\nuntil swap\n \u7ee7\u7eed\u6267\u884c\uff0c\u76f4\u5230swap\u51fd\u6570\u88ab\u6267\u884c\n\n\nfinish\n \u7ee7\u7eed\u6267\u884c\uff0c\u76f4\u5230\u51fd\u6570\u8fd4\u56de\n\n\ntbreak 16\n 16\u884c\u8bbe\u7f6e\u4e34\u65f6\u65ad\u70b9\uff0c\u4e34\u65f6\u65ad\u70b9\u53ea\u4f1a\u8fdb\u5165\u4e00\u6b21\n\n\nuntil\n\u548c\nfinish\n\u7528\u6765\u521b\u5efa\u6761\u4ef6\u65ad\u70b9\n\n\nwatch i\n \u89c2\u5bdf\u53d8\u91cfi,\u53ea\u8981\u5b83\u7684\u503c\u53d1\u751f\u4e86\u6539\u53d8\uff0c\u5c31\u4f1a\u505c\u6b62\u8fd0\u884c\n\n\nprint j\n \u7a0b\u5e8f\u5230\u65ad\u70b9\u6682\u505c\u65f6\uff0c\u6253\u5370\u53d8\u91cf\u503c\n\n\nwatch z\n \u53d8\u91cfz\u7684\u503c\u6539\u53d8\u65f6\uff0c\u6682\u505c\u6267\u884c\u7a0b\u5e8f\n\n\nwatch (z\n28)\n \u8bbe\u7f6e\u6761\u4ef6\u5224\u65ad\u7684\u76d1\u89c6\u65ad\u70b9\n\n\nframe 1\n \u67e5\u770b\u524d\u4e00\u4e2a\u8c03\u7528\u6808\u4fe1\u606f\n\n\nframe 0\n \u67e5\u770b\u5f53\u524d\u8c03\u7528\u6808\n\n\nup\n  \u8c03\u7528\u6808\u4e0a\u4e00\u7ea7\n\n\ndown\n    \u8c03\u7528\u6808\u4e0b\u4e00\u7ea7\n\n\nbacktrace\n       \u67e5\u770b\u6574\u4e2a\u8c03\u7528\u6808\u4fe1\u606f\n\n\nhelp\n        \u67e5\u770bGDB\u5e2e\u52a9\u4fe1\u606f\n\n\n\n\nGDB\u8fd8\u63d0\u4f9b\u4e86\nTUI\n\u6a21\u5f0f\uff0c\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4e2d\u63d0\u4f9b\u001d\nGUI\n\u7c7b\u4f3c\u7684\u663e\u793a\u3002\n\n\n\n\ngdb -tui insert_sort\n    \u4ee5TUI\u6a21\u5f0f\u542f\u52a8GDB\n\n\nctrl-X-A\n    \u547d\u4ee4\u884c\u001d\u65f6\n\u975eTUI\n\u548c\nTUI\n\u6a21\u5f0f\u76f8\u4e92\u8f6c\u6362\n\n\n\n\n\u77e5\u9053\u4e86\u4e00\u4e9b\u57fa\u672c\u547d\u4ee4\uff0c\u5c31\u4ee5\u4e00\u4e2a\u5b9e\u9645\u8c03\u8bd5\u4f8b\u5b50\u5de9\u56fa\u4e00\u4e0b\u3002\n\n\n\u4e00\u4e2a\u8c03\u8bd5\u5b9e\u4f8b\n\n\n\u4e0b\u9762\u4e00\u4e2a\u793a\u4f8b\u7a0b\u5e8f\ninsert_sort.c\n\uff0c\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u7f16\u8bd1\uff1a\n\n\ngcc -g -Wall -o insert_sort insert_sort.c\n\n\n\n\n\u7f16\u8bd1\u540e\u751f\u6210\u4e86\u4e8c\u8fdb\u5236\u6267\u884c\u6587\u4ef6:\ninsert_sort\n\uff0c\u8fd9\u91cc\u5fc5\u987b\u4f7f\u7528\n-g\n\u53c2\u6570\u544a\u8bc9\u7f16\u8bd1\u5668\u4fdd\u5b58\u7b26\u53f7\u8868(\u4ee3\u7801\u884c\u53f7\u548c\u53d8\u91cf\u5185\u5b58\u5730\u5740\u76f8\u5173\u7684\u5217\u8868)\uff0c\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u7b26\u53f7\u8868\uff0c\u5c31\u4e0d\u80fd\u5728\u8c03\u8bd5\u7684\u65f6\u5019\u4f7f\u7528\u8bf8\u5982\uff1a\n\u572830\u884c\u4e2d\u65ad\n\u548c\n\u6253\u5370\u53d8\u91cfx\u7684\u503c\n\u8fd9\u7c7b\u7684\u64cd\u4f5c\u3002\n\n\n\u73b0\u5728\u7684\u7f16\u8bd1\u5668\u4e5f\u662f\u5f88\u667a\u80fd\u7684\uff0c\u4e00\u822c\u5728\u7f16\u8bd1\u9636\u6bb5\u4e5f\u80fd\u68c0\u67e5\u51fa\u4e00\u4e9b\u9519\u8bef\u6765\uff0c\u5c31\u50cf\u4e0b\u9762\u8fd9\u6837\uff1a\n\n\ninsert_sort.c:29:10: warning: using the result of an assignment as a condition without parentheses\n      [-Wparentheses]\n        if(num_y=0)\n           ~~~~~^~\ninsert_sort.c:29:10: note: place parentheses around the assignment to silence this warning\n        if(num_y=0)\n                ^\n           (      )\ninsert_sort.c:29:10: note: use '==' to turn this assignment into an equality comparison\n        if(num_y=0)\n                ^\n                ==\n1 warning generated.\n\n\n\n\n\u4e0b\u9762\u662f\u6709\u95ee\u9898\u7684\u7a0b\u5e8f\u6e90\u4ee3\u7801\uff1a\n\n\n\n/* filename: insert_sort.c */\n\n#include \nstdio.h\n\n#include \nstdlib.h\n\n\nint x[10],y[10],num_inputs,num_y=0;\n\nvoid print_results()\n{\n    int i;\n    for(i=0;i\nnum_inputs;i++)\n    {\n        printf(\n%d\\n\n,y[i]);\n    }\n}\n\nvoid scoot_over(int jj)\n{\n    int k ;\n    for(k=num_y-1;k\njj;k++)\n    {\n        y[k]=y[k-1];\n    }\n}\n\nvoid insert(int new_y)\n{\n    int j;\n    if(num_y=0)\n    {\n        y[0]=new_y;\n        return ;\n    }\n\n    for(j=0;j\nnum_y;j++)\n    {\n        if(new_y \n y[j])\n        {\n            scoot_over(j);\n            y[j]=new_y;\n            return;\n        }\n    }\n}\n\nvoid process_data()\n{\n    for(num_y=0;num_y\nnum_inputs;num_y++)\n    {\n        insert(x[num_y]);\n    }\n}\n\nvoid get_args(int ac, char **av)\n{\n    int i;\n    num_inputs = ac - 1;    \n    for(i=0; i\nnum_inputs; i++)\n    {\n        x[i] = atoi(av[i+1]);\n    }\n}\n\nint main(int argc, char **argv)\n{\n    get_args(argc,argv);\n    process_data();\n    print_results();\n    return 0;\n}\n\n\n\n\n\u6211\u4eec\u5148\u8fd0\u884c\u4e00\u4e0b\uff1a\n\n\n./insert_sort 12 5\n\n\n\n\n\u53d1\u73b0\u7a0b\u5e8f\u9677\u5165\u4e86\u6b7b\u5faa\u73af\u3002\u4f7f\u7528Ctrl-C\u4e2d\u65ad\u7a0b\u5e8f\u8fd0\u884c\u3002\u8fd9\u662f\u7b2c\u4e00\u4e2a\u9700\u8981\u89e3\u51b3\u7684bug\u3002\n\n\nDebug #1 - \u7a0b\u5e8f\u6b7b\u5faa\u73af\n\n\n\u4f7f\u7528GDB TUI\u6a21\u5f0f\u8fdb\u884c\u8c03\u8bd5(\u53ef\u4ee5\u4f7f\u7528\nctrl-X-A\n\u5728\u547d\u4ee4\u884c\u548cTUI\u6a21\u5f0f\u95f4\u76f8\u4e92\u8f6c\u6362)\uff1a\n\n\ngdb insert_sort -tui\n\n\n\n\n\u6309\nEnter\n\u8fdb\u5165GDB TUI\u8c03\u8bd5\u73af\u5883\u540e\uff0c\u4f7f\u7528\u5e26\u6709\u53c2\u6570\n12 5\n\u7684\u8fd0\u884c(run)\u547d\u4ee4\u542f\u52a8\u7a0b\u5e8f\uff0c\u4f1a\u53d1\u73b0\u7a0b\u5e8f\u4e00\u76f4\u8fd0\u884c\uff0c\u5e76\u8fdb\u5165\u6b7b\u5faa\u73af\n\n\nrun 12 5\n\n\n\n\n\u8fd9\u65f6\u6211\u4eec\u4f7f\u7528\u547d\u4ee4\nCtrl+C\n\u6765\u4e2d\u6b62\u8c03\u8bd5\u7a0b\u5e8f\u7684\u8fd0\u884c(\u6b64\u65f6\u5e76\u4e0d\u4f1a\u9000\u51faGDB\u8c03\u8bd5\u73af\u5883\uff0c\u7531\u4e8e\u6682\u505c\u65f6\u7a0b\u5e8f\u8fd0\u884c\u7684\u4f4d\u7f6e\u4e0d\u786e\u5b9a\uff0c\u6240\u4ee5\u4f60\u8bd5\u9a8c\u65f6\u7684\u60c5\u51b5\u548c\u6211\u7a0d\u6709\u4e9b\u4e0d\u540c\uff0c\u4e0d\u8fc7\u4e0d\u4f1a\u5f71\u54cd),\u6211\u4eec\u53d1\u73b0\u7a0b\u5e8f\u505c\u7559\u5728\u51fd\u6570\nprocess_data()\n\u4e2d\u7684for\u5faa\u73af\u4e2d\uff0c\u4e9b\u65f6\nnum_y=1\n\uff0c\u6211\u4eec\u4f7f\u7528\u4e86GDB\u7684\nprint\n\u547d\u4ee4\u6765\u67e5\u770b\u53d8\u91cf\u503c\u3002\u521d\u6b65\u65ad\u5b9a\u6b7b\u5faa\u73af\u53d1\u751f\u7684\u4f4d\u7f6e\u540e\uff0c\u5c31\u8981\u8fdb\u4e00\u6b65\u5bfb\u627e\u51fa\u73b0\u7684\u539f\u56e0\uff0c\u8fdb\u800cDebug\n\n\n   \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u250243              }                                                          \u2502\n   \u250244      }                                                                  \u2502\n   \u250245                                                                         \u2502\n   \u250246      void process_data()                                                \u2502\n   \u250247      {                                                                  \u2502\n  \n\u250248              for(num_y=0;num_y\nnum_inputs;num_y++)                      \u2502\n   \u250249              {                                                          \u2502\n   \u250250                      insert(x[num_y]);                                  \u2502\n   \u250251              }                                                          \u2502\n   \u250252      }                                                                  \u2502\n   \u250253                                                                         \u2502\n   \u250254      void get_args(int ac, char **av)                                   \u2502\n   \u250255      {                                                                  \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nnative process 18485 In: process_data                        L48   PC: 0x400684 \nType \napropos word\n to search for commands related to \nword\n...\nReading symbols from insert_sort...done.\n(gdb) run 12 5\nStarting program: /home/parallels/Documents/debug/insert_sort 12 5\n^C\nProgram received signal SIGINT, Interrupt.\n0x0000000000400684 in process_data () at ins.c:48\n(gdb) print num_y\n$1 = 0 \n\n\n\n\n\u6211\u4eec\u4f7f\u7528\nnext\n\u547d\u4ee4\u5355\u6b65\u8c03\u8bd5\uff0c\nnext\n\u547d\u4ee4\u4e0d\u4f1a\u8fdb\u5165\u51fd\u6570\u5185\u90e8\uff0c\u8fd9\u662f\u4e00\u79cd\u5148\u7c97\u540e\u7ec6\u7684\u8c03\u8bd5\u65b9\u5f0f\uff0c\u5355\u6b65\u8c03\u8bd5\u4e86\u51e0\u6b21\uff0c\u53d1\u73b0\u6bcf\u6b21\u6267\u884c\u5b8c\ninsert(x[num_y]);\n\u8fd9\u4e00\u53e5\u540e\uff0c\nnum_y\n\u90fd\u4f1a\u53d8\u6210\n0\n\uff0c\u4ece\u800c\u5bfc\u81f4\nfor\n\u5faa\u73af\u4e0d\u80fd\u7ed3\u675f\u3002\u7531\u662f\u6211\u4eec\u4f7f\u7528\nstep\n\u547d\u4ee4\u5728\u8c03\u8bd5\u5230\ninsert(x[num_y]);\n\u65f6\uff0c\u8fdb\u5165\u51fd\u6570\u5185\u90e8\u8c03\u8bd5\uff0c\u7531\u4e8e\nnum_y\n\u662f\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u5728\ninsert\n\u51fd\u6570\u5185\u90e8\u7b2c\u4e00\u884c\u65f6\u9519\u8bef\u7684\u628a\n==\n\u7528\u6210\u4e86\n=\n\u8d4b\u503c\uff0c\u5bfc\u81f4\u7b2c\u6b21\u51fd\u6570\u6267\u884c\u5b8c\u540e\uff0c\nnum_y\n\u90fd\u88ab\u7f6e\u4e3a\u4e860\n\n\n   \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u250224      }                                                                  \u2502\n   \u250225                                                                         \u2502\n   \u250226      void insert(int new_y)                                             \u2502\n   \u250227      {                                                                  \u2502\n   \u250228              int j;                                                     \u2502\n  \n\u250229              if(num_y=0)                                                \u2502\n   \u250230              {                                                          \u2502\n   \u250231                      y[0]=new_y;                                        \u2502\n   \u250232                      return ;                                           \u2502\n   \u250233              }                                                          \u2502\n   \u250234                                                                         \u2502\n   \u250235              for(j=0;j\nnum_y;j++)                                       \u2502\n   \u250236              {                                                          \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nnative process 18485 In: insert                              L29   PC: 0x4005f0 \n(gdb) next\n(gdb) step\ninsert (new_y=5) at ins.c:29\n(gdb) \n\n\n\n\n\u53d1\u73b0\u539f\u56e0\u540e\uff0c \u6211\u4eec\u53e6\u5f00\u4e00\u4e2a\u63a7\u5236\u53f0\u4fee\u6539\u6e90\u7801\u5e76\u91cd\u65b0\u7f16\u8bd1\uff0c\u4e3a\u7684\u662f\u4e0d\u9000\u51fa\u5f53\u524d\u7684GDB\u8c03\u8bd5\u73af\u5883\uff0c\u53ef\u4ee5\u4fdd\u7559\u8c03\u8bd5\u4e2d\u8bbe\u7f6e\u8fc7\u7684\u65ad\u70b9\u7b49\u4fe1\u606f\uff0c\u8fd9\u91cc\u6211\u4eec\u8fd8\u6ca1\u6709\u8bbe\u7f6e\u8fc7\u65ad\u70b9\u3002\n\n\n\u5728\u53e6\u4e00\u4e2a\u63a7\u5236\u53f0\u4e2d\u91cd\u65b0\u7f16\u8bd1\u5e76\u8fd0\u884c\u540e\uff0c\u53d1\u73b0\u6b7b\u5faa\u73af\u89e3\u9664\u4e86\uff0c\u4f46\u662f\u6392\u5e8f\u7ed3\u679c\u4e0d\u6b63\u786e\uff1a\n\n\nparallels@ubuntu:~/Documents/debug$ gcc -g -Wall -o insert_sort ins.c\nparallels@ubuntu:~/Documents/debug$ ./insert_sort 12 5\n5\n0\n\n\n\n\nDebug #2 - \u7a0b\u5e8f\u903b\u8f91\u9519\u8bef\n\n\n\u6211\u4eec\u53d1\u73b0\n12\n\u6ca1\u6709\u88ab\u6b63\u786e\u7684\u63d2\u5165\u5230\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\uff0c\u4e8e\u662f\u6211\u4eec\u56de\u5230GDB\u8c03\u8bd5\u73af\u5883\u6240\u5728\u7684\u63a7\u5236\u53f0\uff0c\u5728\ninsert\n\u51fd\u6570\u4e2d\u8bbe\u7f6e\u65ad\u70b9\u540e\uff0c\u4f7f\u7528\nrun\n\u547d\u4ee4\u91cd\u65b0\u5f00\u59cb\u4e00\u6b21\u8c03\u8bd5\uff0c\nrun\n\u9ed8\u8ba4\u4e3a\u4f7f\u7528\u4e0a\u4e00\u6b21\u4f7f\u7528\u7684\u53c2\u6570\n12 5\n\n\n   \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u250224      }                                                                  \u2502\n   \u250225                                                                         \u2502\n   \u250226      void insert(int new_y)                                             \u2502\n   \u250227      {                                                                  \u2502\n   \u250228              int j;                                                     \u2502\nB+\n\u250229              if(num_y==0)                                               \u2502\n   \u250230              {                                                          \u2502\n   \u250231                      y[0]=new_y;                                        \u2502\n   \u250232                      return ;                                           \u2502\n   \u250233              }                                                          \u2502\n   \u250234                                                                         \u2502\n   \u250235              for(j=0;j\nnum_y;j++)                                       \u2502\n   \u250236              {                                                          \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nnative process 25009 In: insert                              L29   PC: 0x4005f0 \n[Inferior 1 (process 24275) exited normally]\n(gdb) break insert\nBreakpoint 1 at 0x4005f0: insert. (4 locations)\n(gdb) run\nStarting program: /home/parallels/Documents/debug/insert_sort 12 5\n\nBreakpoint 1, insert (new_y=12) at ins.c:29\n(gdb) \n\n(gdb) \n\n\n\n\n\u6211\u4eec\u770b\u5230\u7a0b\u5e8f\u5728\u65ad\u70b9\u5904\u505c\u6b62\u8fd0\u884c\u4e86\uff0c\u518d\u6b21\u4f7f\u7528\u5355\u6b65\u8c03\u8bd5\u6574\u4e2a\u6570\u7ec4\u7684\u63d2\u5165\u8fc7\u7a0b\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u6570\u5b57\n12\n,\u7b2c\u4e00\u6b21\u4f1a\u88ab\u63d2\u5165\u6392\u5e8f\u7ed3\u679c\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u7b2c\u4e8c\u4e2a\u6570\u5b57\n5\n\u5728\u88ab\u63d2\u5165\u65f6\u4f1a\u5148\u4e0e\u5f53\u524d\u6392\u5e8f\u7ed3\u679c\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u6bd4\u8f83\u5c0f\uff0c\u4f1a\u628a\u6392\u5e8f\u7ed3\u679c\u6570\u7ec4\u7684\u6bcf\u4e00\u4e2a\u6570\u636e\u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4e3a\u8fd9\u4e2a\u8f83\u5c0f\u7684\u6570\u636e\u817e\u51fa\u4e00\u4e2a\u4f4d\u7f6e\u6765\u653e\u5165\u3002\n\n\n   \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u250233              }                                                          \u2502\n   \u250234                                                                         \u2502\n   \u250235              for(j=0;j\nnum_y;j++)                                       \u2502\n   \u250236              {                                                          \u2502\n   \u250237                      if(new_y \n y[j])                                   \u2502\n   \u250238                      {                                                  \u2502\n   \u250239                              scoot_over(j);                             \u2502\n   \u250240                              y[j]=new_y;                                \u2502\n  \n\u250241                              return;                                    \u2502\n   \u250242                      }                                                  \u2502\n   \u250243              }                                                          \u2502\n   \u250244      }                                                                  \u2502\n   \u250245                                                                         \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nnative process 25009 In: insert                              L41   PC: 0x400638 \n(gdb) print y\n$5 = {12, 0, 0, 0, 0, 0, 0, 0, 0, 0}\n(gdb) n\n(gdb) print y\n$6 = {5, 0, 0, 0, 0, 0, 0, 0, 0, 0}\n(gdb)  \n\n\n\n\n\u5728\u8fd9\u4e2a\u63d2\u5165\u6392\u5e8f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53d1\u73b0\u5728\u6570\u5b57\n5\n\u88ab\u63d2\u5165\u540e\uff0c\u4e4b\u524d\u7684\u6570\u5b57\n12\n\u6ca1\u6709\u88ab\u6b63\u786e\u7684\u540e\u79fb\u4e00\u4f4d\uff0c\u6240\u4ee5\u95ee\u9898\u5c31\u5b9a\u4f4d \u5728\u51fd\u6570\nscoot_over\n\u4e2d\u4e86\uff0c\u56e0\u4e3a\u5b83\u7684\u529f\u80fd\u548c\u6211\u4eec\u671f\u671b\u7684\u4e0d\u4e00\u81f4\u3002\u6211\u4eec\u518d\u8bbe\u7f6e\u65ad\u70b9\u5230\nscoot_over\n\u51fd\u6570\u4e2d\uff0c\u5e76\u6e05\u9664\u4e4b\u524d\u7684\u65ad\u70b9\uff0c\u56e0\u4e3a\u95ee\u9898\u662f\u51fa\u73b0\u5728\u6570\u5b57\n5\n\u4e0e\u6570\u5b57\n12\n\u6bd4\u8f83\u540e\u7684\nscoot_over\n\u8c03\u7528\u65f6\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u65ad\u70b9\u8bbe\u7f6e\u4e3a\u6761\u4ef6\u65ad\u70b9\uff0c\u4e5f\u5c31\u662f\nnum_y\n\u4e3a\n1\n\u65f6\uff1a\n\n\n   \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u250215      }                                                                  \u2502\n   \u250216                                                                         \u2502\n   \u250217      void scoot_over(int jj)                                            \u2502\n   \u250218      {                                                                  \u2502\n   \u250219              int k ;                                                    \u2502\nB+\n\u250220              for(k=num_y-1;k\njj;k++)                                    \u2502\n   \u250221              {                                                          \u2502\n   \u250222                      y[k]=y[k-1];                                       \u2502\n   \u250223              }                                                          \u2502\n   \u250224      }                                                                  \u2502\n   \u250225                                                                         \u2502\n   \u250226      void insert(int new_y)                                             \u2502\n   \u250227      {                                                                  \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nnative process 28018 In: scoot_over                          L20   PC: 0x4005ad \n\n(gdb) clear 29\nDeleted breakpoint 1\n(gdb) break scoot_over if num_y==1\nBreakpoint 2 at 0x4005ad: file ins.c, line 20.\n(gdb) i b\nNum     Type           Disp Enb Address            What\n2       breakpoint     keep y   0x00000000004005ad in scoot_over at ins.c:20\n        stop only if num_y==1\n(gdb) c   \nContinuing.\n\nBreakpoint 2, scoot_over (jj=0) at ins.c:20\n(gdb) p num_y\n$7 = 1\n\n\n\n\n\u8fd9\u65f6\u6211\u4eec\u8fd0\u884c\u5230\u65ad\u70b9\u5904\u505c\u6b62\u4e0b\u6765\uff0c\u4f7f\u7528\u5355\u6b65\u8c03\u8bd5\uff0c\u53d1\u73b0\nscoot_over\n\u51fd\u6570\u4e2d\u7684for\u5faa\u73af\u4e00\u6b21\u90fd\u6ca1\u6709\u6267\u884c\u3002\u6b64\u65f6\nnum_y\n\u4e3a1\uff0c\u6240\u4ee5\nk\n\u4e3a0\uff0c\u800c\njj\n\u4e5f\u662f0\uff0c\u6240\u4ee5\u6ca1\u6709\u8fdb\u5165\u5faa\u73af\u4e2d\uff0c\u6240\u4ee5\nk\n\u7684\u521d\u59cb\u503c\u8d4b\u503c\u4e0d\u6b63\u786e\uff0c\u5e94\u8be5\u4fee\u6539\u4e3a\nk=num_y\n\n\n\u518d\u6b21\u5728\u53e6\u4e00\u4e2a\u63a7\u5236\u53f0\u4fee\u6539\u6e90\u7a0b\u5e8f\uff0c\u7f16\u8bd1\u8fd0\u884c\uff0c\u53d1\u73b0\u4ea7\u751f\u4e86\u6bb5\u9519\u8bef\uff0c\u8fd9\u662f\u7531\u4e8e\u5185\u5b58\u5730\u5740\u8bbf\u95ee\u4e0d\u5f53\u5f15\u8d77\u7684\uff1a\n\n\nparallels@ubuntu:~/Documents/debug$ gcc -g -Wall -o insert_sort ins.c\nparallels@ubuntu:~/Documents/debug$ ./insert_sort 12 5\nSegmentation fault (core dumped)\n\n\n\n\nDebug #3 - \u7a0b\u5e8f\u6bb5\u9519\u8bef\n\n\n\u8fd9\u65f6\u5c31\u4f53\u73b0\u51fa\u5f00\u4e24\u4e2a\u63a7\u5236\u53f0\u7684\u597d\u5904\u4e86\uff0c\u56de\u5230GDB\u73af\u5883\u540e\uff0c\u6e05\u9664\u4e4b\u524d\u7684\u65ad\u70b9\uff0c\u5e76\u518d\u6b21\u8fd0\u884c, GDB\u4f1a\u5728\u6bb5\u9519\u8bef\u7684\u4f4d\u7f6e\u505c\u4e0b\u6765\uff1a\n\n\n   \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u250217      void scoot_over(int jj)                                            \u2502\n   \u250218      {                                                                  \u2502\n   \u250219              int k ;                                                    \u2502\n   \u250220              for(k=num_y;k\njj;k++)                                      \u2502\n   \u250221              {                                                          \u2502\n  \n\u250222                      y[k]=y[k-1];                                       \u2502\n   \u250223              }                                                          \u2502\n   \u250224      }                                                                  \u2502\n   \u250225                                                                         \u2502\n   \u250226      void insert(int new_y)                                             \u2502\n   \u250227      {                                                                  \u2502\n   \u250228              int j;                                                     \u2502\n   \u250229              if(num_y==0)                                               \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nnative process 30018 In: scoot_over                          L22   PC: 0x4005cc \n\n(gdb) clear 20\nDeleted breakpoint 2\n(gdb) run\nThe program being debugged has been started already.\nStart it from the beginning? (y or n) y\nStarting program: /home/parallels/Documents/debug/insert_sort 12 5\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x00000000004005cc in scoot_over (jj=0) at ins.c:22\n(gdb) print k\n$8 = 976\n\n\n\n\n\u6b64\u65f6\u6211\u4eec\u5c06\u6570\u7ec4\u7d22\u5f15\u503c\u6253\u5370\u51fa\u6765\uff0c\u53d1\u73b0\u5b83\u8fdc\u8fdc\u5927\u4e8e\u6392\u5e8f\u7ed3\u679c\u6570\u7ec4\u7684\u8fb9\u754c\n10\n, \u8fd9\u662f\u7531\u4e8efor\u5faa\u73af\u7684\u53d8\u91cfk\u81ea\u52a0\u5f15\u8d77\u7684\u9519\u8bef\uff0c\u6211\u4eec\u5c06\u5176\u4fee\u6539\u4e3a\u81ea\u51cf\u3002\u518d\u6b21\u7f16\u8bd1\u8fd0\u884c\uff1a\n\n\nparallels@ubuntu:~/Documents/debug$ gcc -g -Wall -o insert_sort ins.c\nparallels@ubuntu:~/Documents/debug$ ./insert_sort 12 5\n5\n12\n\n\n\n\n\u53d1\u73b0\u6392\u5e8f\u4e24\u4e2a\u6570\u5b57\u6b63\u786e\u4e86\uff0c\u6211\u4eec\u8bd5\u7740\u6392\u4e0b\u591a\u4e2a\u6570\u636e\u3002\n\n\nparallels@ubuntu:~/Documents/debug$ ./insert_sort 12 5 19 22 6 1\n1\n5\n6\n12\n0\n0\n\n\n\n\nDebug #4 - \u7a0b\u5e8f\u9057\u6f0f\u60c5\u51b5\n\n\n\u53d1\u73b0\u6392\u5e8f\u7ed3\u679c\u5bf9\u4e8e\u6570\u5b57\n19 22\n\u6709\u95ee\u9898\uff0c\u6211\u4eec\u91cd\u65b0\u8c03\u8bd5\u63d2\u5165\u6570\u636e19\u548c22\u65f6\u7684\u8fc7\u7a0b\uff0c\u8bbe\u7f6e\u65ad\u70b9\uff0c\u5e76\u5355\u6b65\u8ddf\u8e2a\uff0c\u53d1\u73b0\uff0c\u5b83\u4eec\u5927\u4e8e\u6392\u5e8f\u7ed3\u679c\u4e2d\u7684\u6240\u6709\u6570\u636e\u65f6\uff0c\u9700\u8981\u88ab\u63d2\u5165\u5230\u6700\u540e\u7684\u4f4d\u7f6e\uff0c\u4f46\u4e8b\u5b9e\u4e0a\u7a0b\u5e8f\u6ca1\u6709\u8003\u8651\u5230\u8fd9\u79cd\u60c5\u51b5\u3002\n\n\n   \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u250229              if(num_y==0)                                               \u2502\n   \u250230              {                                                          \u2502\n   \u250231                      y[0]=new_y;                                        \u2502\n   \u250232                      return ;                                           \u2502\n   \u250233              }                                                          \u2502\n   \u250234                                                                         \u2502\n  \n\u250235              for(j=0;j\nnum_y;j++)                                       \u2502\n   \u250236              {                                                          \u2502\nB+ \u250237                      if(new_y \n y[j])                                   \u2502\n   \u250238                      {                                                  \u2502\n   \u250239                              scoot_over(j);                             \u2502\n   \u250240                              y[j]=new_y;                                \u2502\n   \u250241                              return;                                    \u2502\n   \u250242                      }                                                  \u2502\n   \u250243              }                                                          \u2502\n   \u250244      }                                                                  \u2502\n   \u250245                                                                         \u2502\n   \u250246      void process_data()                                                \u2502\n   \u250247      {                                                                  \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nnative process 32621 In: insert                              L35   PC: 0x400637 \n(gdb) break 37 if new_y == 19\nBreakpoint 1 at 0x40060b: file ins.c, line 37.\n(gdb) run 12 5 19 22 6 1\nStarting program: /home/parallels/Documents/debug/insert_sort 12 5 19 22 6 1\n\nBreakpoint 1, insert (new_y=19) at ins.c:37\n(gdb) print y  \n$1 = {5, 12, 0, 0, 0, 0, 0, 0, 0, 0}\n(gdb) n\n(gdb) \n\n\n\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728\u7b2c\n43\n\u884c\u540e\u9762\u8865\u5145\u8fd9\u79cd\u60c5\u51b5\uff1a\ny[j]=new_y;\n\n\n\u91cd\u65b0\u7f16\u8bd1\u5e76\u8fd0\u884c\uff1a\n\n\nparallels@ubuntu:~/Documents/debug$ gcc -g -Wall -o insert_sort ins.c\nparallels@ubuntu:~/Documents/debug$ ./insert_sort 12 5 19 22 6 1\n1\n5\n6\n12\n19\n22\n\n\n\n\n\u8fd9\u6b21\u53d1\u73b0\u7ed3\u679c\u6b63\u786e\uff0c\u4f46\u8fd8\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u6d4b\u8bd5\u4e00\u4e0b\u3002\u6574\u4e2a\u8fc7\u6574\u5c31\u662f\u8fd9\u4e2a\u6837\u5b50\uff0c\u8c03\u8bd5\u662f\u4e00\u95e8\u827a\u672f\u800c\u4e0d\u662f\u79d1\u5b66\uff0c\u901a\u5e38\u5f88\u96be\u63cf\u8ff0\u8fd9\u6574\u4e2a\u8fc7\u7a0b\uff0c\u6240\u4ee5\u6709\u758f\u6f0f\u7684\u5730\u65b9\uff0c\u8bf7\u591a\u5305\u6db5\u3002", 
            "title": "Use GDB"
        }, 
        {
            "location": "/tech/Use GDB/#use-gdb", 
            "text": "\u7528\u4e86\u51e0\u5929GDB\uff0c\u89c9\u5f97\u633a\u597d\u7528\u7684\uff0c\u7279\u522b\u662f\u5199\u793a\u4f8b\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u7531\u4e8e\u6e90\u6587\u4ef6\u4e5f\u4e0d\u662f\u5f88\u590d\u6742\uff0c\u8c03\u8bd5\u5de5\u4f5c\u8fd8\u662f\u4f7f\u7528\u8f7b\u91cf\u7ea7\u7684GDB\u6765\u7684\u65b9\u4fbf\u3001\u76f4\u63a5\uff0c\u540c\u65f6GDB\u8fd8\u53ef\u4ee5\u8fdc\u7a0b\u8c03\u8bd5\uff0c\u529f\u80fd\u4e0a\u4e5f\u662f\u5f88\u5f3a\u5927\u7684\u3002  \u4e0b\u9762\u6574\u7406\u4e00\u4e0b\u4f7f\u7528GDB\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u7ecf\u5e38\u4f7f\u7528\u7684\u4e00\u4e9b\u547d\u4ee4\u548c\u7ec4\u5408\u952e\uff1a   gdb insert_sort  \u4f7f\u7528GDB\u8c03\u8bd5\u7a0b\u5e8f insert_sort  break 16     \u5728\u7a0b\u5e8f\u7684\u7b2c16\u884c\u8bbe\u7f6e\u65ad\u70b9  tbreak 16  \u5728\u7a0b\u5e8f\u7b2c16\u884c\u8bbe\u7f6e\u4e00\u4e2a\u4e34\u65f6\u65ad\u70b9\uff0c\u4e2d\u6b62\u4e00\u6b21\u540e\u5931\u6548  clear 16     \u6e05\u9664\u7a0b\u5e8f\u7b2c16\u884c\u8bbe\u7f6e\u7684\u65ad\u70b9  delete 1     \u5220\u9664\u7b2c\u4e00\u4e2a\u65ad\u70b9  disable 1 2 5  \u4f7f\u65ad\u70b91\uff0c2\uff0c5\u4e0d\u8d77\u4f5c\u7528  enable  1 2 5  \u4f7f\u65ad\u70b91\uff0c2\uff0c5\u8d77\u4f5c\u7528   enable once 1 2  \u4f7f\u80fd\u65ad\u70b91\uff0c2\u8d77\u4f5c\u7528\u4e00\u6b21\uff0c\u4e4b\u540edisable  info break   \u67e5\u770b\u6240\u6709\u65ad\u70b9\u4fe1\u606f  ctrl-P \u548c ctrl-N  \u524d\u540e\u6d4f\u89c8\u4ee3\u7801\u6216\u7f16\u8f91  ENTER    \u91cd\u590d\u6267\u884c\u4e0a\u6b21\u8c03\u8bd5\u547d\u4ee4  next     \u8c03\u8bd5\u4e0b\u4e00\u53e5\u4ee3\u7801(Step Over)  next 3  \u5411\u4e0b\u8d70\u4e09\u53e5(Step Over)  define   \u53ef\u4ee5\u5b9a\u4e49\u76f8\u5173\u7684\u5b8f\u547d\u4ee4\uff0c\u4f7f\u8f93\u5165\u547d\u4ee4\u66f4\u52a0\u81ea\u7531\u548c\u4e2a\u6027  run 12 5 6  \u8fd0\u884c\u5230\u65ad\u70b912\u30015\u30016\u65f6\u6682\u505c\u6267\u884c  list     \u591a\u4e2a\u6e90\u6587\u4ef6\u8c03\u8bd5\u65f6\u663e\u793a\u4e0d\u540c\u7684\u4ee3\u7801\u533a\u57df  step     \u6b65\u5165\u8c03\u8bd5\uff08Step Into)  continue  \u7ee7\u7eed\u6267\u884c  continue 3  \u7ee7\u7eed\u6267\u884c\uff0c\u5e76\u5ffd\u7565\u4e09\u6b21\u65ad\u70b9  commands 3 \u7ed9\u65ad\u70b9\u5173\u8054\u76f8\u5173\u7684\u547d\u4ee4\uff0c\u4e00\u884c\u4e00\u6761\u547d\u4ee4\uff0c\u4ee5end\u7ed3\u675f\uff0c\u6dfb\u52a0\u4e00\u6761slient\u547d\u4ee4\u53ef\u4ee5\u5c4f\u6389\u65ad\u70b9\u505c\u6b62\u65f6\u81ea\u52a8\u4ea7\u751f\u7684\u76f8\u5173\u4fe1\u606f\u8f93\u51fa  define  \u5b9a\u4e49GDB\u5b8f\u547d\u4ee4\uff0c\u4ee5end\u7ed3\u675f\u5b9a\u4e49, \u53c2\u6570\u4ee5$\u53f7\u5f00\u59cb  show user  \u5217\u51fa\u6240\u6709\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u5b8f\u547d\u4ee4  until  \u7ee7\u7eed\u6267\u884c\uff0c\u76f4\u5230\u4e00\u4e2a\u5faa\u73af\u5b8c\u6210  until swap  \u7ee7\u7eed\u6267\u884c\uff0c\u76f4\u5230swap\u51fd\u6570\u88ab\u6267\u884c  finish  \u7ee7\u7eed\u6267\u884c\uff0c\u76f4\u5230\u51fd\u6570\u8fd4\u56de  tbreak 16  16\u884c\u8bbe\u7f6e\u4e34\u65f6\u65ad\u70b9\uff0c\u4e34\u65f6\u65ad\u70b9\u53ea\u4f1a\u8fdb\u5165\u4e00\u6b21  until \u548c finish \u7528\u6765\u521b\u5efa\u6761\u4ef6\u65ad\u70b9  watch i  \u89c2\u5bdf\u53d8\u91cfi,\u53ea\u8981\u5b83\u7684\u503c\u53d1\u751f\u4e86\u6539\u53d8\uff0c\u5c31\u4f1a\u505c\u6b62\u8fd0\u884c  print j  \u7a0b\u5e8f\u5230\u65ad\u70b9\u6682\u505c\u65f6\uff0c\u6253\u5370\u53d8\u91cf\u503c  watch z  \u53d8\u91cfz\u7684\u503c\u6539\u53d8\u65f6\uff0c\u6682\u505c\u6267\u884c\u7a0b\u5e8f  watch (z 28)  \u8bbe\u7f6e\u6761\u4ef6\u5224\u65ad\u7684\u76d1\u89c6\u65ad\u70b9  frame 1  \u67e5\u770b\u524d\u4e00\u4e2a\u8c03\u7528\u6808\u4fe1\u606f  frame 0  \u67e5\u770b\u5f53\u524d\u8c03\u7528\u6808  up   \u8c03\u7528\u6808\u4e0a\u4e00\u7ea7  down     \u8c03\u7528\u6808\u4e0b\u4e00\u7ea7  backtrace        \u67e5\u770b\u6574\u4e2a\u8c03\u7528\u6808\u4fe1\u606f  help         \u67e5\u770bGDB\u5e2e\u52a9\u4fe1\u606f   GDB\u8fd8\u63d0\u4f9b\u4e86 TUI \u6a21\u5f0f\uff0c\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4e2d\u63d0\u4f9b\u001d GUI \u7c7b\u4f3c\u7684\u663e\u793a\u3002   gdb -tui insert_sort     \u4ee5TUI\u6a21\u5f0f\u542f\u52a8GDB  ctrl-X-A     \u547d\u4ee4\u884c\u001d\u65f6 \u975eTUI \u548c TUI \u6a21\u5f0f\u76f8\u4e92\u8f6c\u6362   \u77e5\u9053\u4e86\u4e00\u4e9b\u57fa\u672c\u547d\u4ee4\uff0c\u5c31\u4ee5\u4e00\u4e2a\u5b9e\u9645\u8c03\u8bd5\u4f8b\u5b50\u5de9\u56fa\u4e00\u4e0b\u3002", 
            "title": "Use GDB"
        }, 
        {
            "location": "/tech/Use GDB/#_1", 
            "text": "\u4e0b\u9762\u4e00\u4e2a\u793a\u4f8b\u7a0b\u5e8f insert_sort.c \uff0c\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u7f16\u8bd1\uff1a  gcc -g -Wall -o insert_sort insert_sort.c  \u7f16\u8bd1\u540e\u751f\u6210\u4e86\u4e8c\u8fdb\u5236\u6267\u884c\u6587\u4ef6: insert_sort \uff0c\u8fd9\u91cc\u5fc5\u987b\u4f7f\u7528 -g \u53c2\u6570\u544a\u8bc9\u7f16\u8bd1\u5668\u4fdd\u5b58\u7b26\u53f7\u8868(\u4ee3\u7801\u884c\u53f7\u548c\u53d8\u91cf\u5185\u5b58\u5730\u5740\u76f8\u5173\u7684\u5217\u8868)\uff0c\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u7b26\u53f7\u8868\uff0c\u5c31\u4e0d\u80fd\u5728\u8c03\u8bd5\u7684\u65f6\u5019\u4f7f\u7528\u8bf8\u5982\uff1a \u572830\u884c\u4e2d\u65ad \u548c \u6253\u5370\u53d8\u91cfx\u7684\u503c \u8fd9\u7c7b\u7684\u64cd\u4f5c\u3002  \u73b0\u5728\u7684\u7f16\u8bd1\u5668\u4e5f\u662f\u5f88\u667a\u80fd\u7684\uff0c\u4e00\u822c\u5728\u7f16\u8bd1\u9636\u6bb5\u4e5f\u80fd\u68c0\u67e5\u51fa\u4e00\u4e9b\u9519\u8bef\u6765\uff0c\u5c31\u50cf\u4e0b\u9762\u8fd9\u6837\uff1a  insert_sort.c:29:10: warning: using the result of an assignment as a condition without parentheses\n      [-Wparentheses]\n        if(num_y=0)\n           ~~~~~^~\ninsert_sort.c:29:10: note: place parentheses around the assignment to silence this warning\n        if(num_y=0)\n                ^\n           (      )\ninsert_sort.c:29:10: note: use '==' to turn this assignment into an equality comparison\n        if(num_y=0)\n                ^\n                ==\n1 warning generated.  \u4e0b\u9762\u662f\u6709\u95ee\u9898\u7684\u7a0b\u5e8f\u6e90\u4ee3\u7801\uff1a  \n/* filename: insert_sort.c */\n\n#include  stdio.h \n#include  stdlib.h \n\nint x[10],y[10],num_inputs,num_y=0;\n\nvoid print_results()\n{\n    int i;\n    for(i=0;i num_inputs;i++)\n    {\n        printf( %d\\n ,y[i]);\n    }\n}\n\nvoid scoot_over(int jj)\n{\n    int k ;\n    for(k=num_y-1;k jj;k++)\n    {\n        y[k]=y[k-1];\n    }\n}\n\nvoid insert(int new_y)\n{\n    int j;\n    if(num_y=0)\n    {\n        y[0]=new_y;\n        return ;\n    }\n\n    for(j=0;j num_y;j++)\n    {\n        if(new_y   y[j])\n        {\n            scoot_over(j);\n            y[j]=new_y;\n            return;\n        }\n    }\n}\n\nvoid process_data()\n{\n    for(num_y=0;num_y num_inputs;num_y++)\n    {\n        insert(x[num_y]);\n    }\n}\n\nvoid get_args(int ac, char **av)\n{\n    int i;\n    num_inputs = ac - 1;    \n    for(i=0; i num_inputs; i++)\n    {\n        x[i] = atoi(av[i+1]);\n    }\n}\n\nint main(int argc, char **argv)\n{\n    get_args(argc,argv);\n    process_data();\n    print_results();\n    return 0;\n}  \u6211\u4eec\u5148\u8fd0\u884c\u4e00\u4e0b\uff1a  ./insert_sort 12 5  \u53d1\u73b0\u7a0b\u5e8f\u9677\u5165\u4e86\u6b7b\u5faa\u73af\u3002\u4f7f\u7528Ctrl-C\u4e2d\u65ad\u7a0b\u5e8f\u8fd0\u884c\u3002\u8fd9\u662f\u7b2c\u4e00\u4e2a\u9700\u8981\u89e3\u51b3\u7684bug\u3002", 
            "title": "\u4e00\u4e2a\u8c03\u8bd5\u5b9e\u4f8b"
        }, 
        {
            "location": "/tech/Use GDB/#debug-1-", 
            "text": "\u4f7f\u7528GDB TUI\u6a21\u5f0f\u8fdb\u884c\u8c03\u8bd5(\u53ef\u4ee5\u4f7f\u7528 ctrl-X-A \u5728\u547d\u4ee4\u884c\u548cTUI\u6a21\u5f0f\u95f4\u76f8\u4e92\u8f6c\u6362)\uff1a  gdb insert_sort -tui  \u6309 Enter \u8fdb\u5165GDB TUI\u8c03\u8bd5\u73af\u5883\u540e\uff0c\u4f7f\u7528\u5e26\u6709\u53c2\u6570 12 5 \u7684\u8fd0\u884c(run)\u547d\u4ee4\u542f\u52a8\u7a0b\u5e8f\uff0c\u4f1a\u53d1\u73b0\u7a0b\u5e8f\u4e00\u76f4\u8fd0\u884c\uff0c\u5e76\u8fdb\u5165\u6b7b\u5faa\u73af  run 12 5  \u8fd9\u65f6\u6211\u4eec\u4f7f\u7528\u547d\u4ee4 Ctrl+C \u6765\u4e2d\u6b62\u8c03\u8bd5\u7a0b\u5e8f\u7684\u8fd0\u884c(\u6b64\u65f6\u5e76\u4e0d\u4f1a\u9000\u51faGDB\u8c03\u8bd5\u73af\u5883\uff0c\u7531\u4e8e\u6682\u505c\u65f6\u7a0b\u5e8f\u8fd0\u884c\u7684\u4f4d\u7f6e\u4e0d\u786e\u5b9a\uff0c\u6240\u4ee5\u4f60\u8bd5\u9a8c\u65f6\u7684\u60c5\u51b5\u548c\u6211\u7a0d\u6709\u4e9b\u4e0d\u540c\uff0c\u4e0d\u8fc7\u4e0d\u4f1a\u5f71\u54cd),\u6211\u4eec\u53d1\u73b0\u7a0b\u5e8f\u505c\u7559\u5728\u51fd\u6570 process_data() \u4e2d\u7684for\u5faa\u73af\u4e2d\uff0c\u4e9b\u65f6 num_y=1 \uff0c\u6211\u4eec\u4f7f\u7528\u4e86GDB\u7684 print \u547d\u4ee4\u6765\u67e5\u770b\u53d8\u91cf\u503c\u3002\u521d\u6b65\u65ad\u5b9a\u6b7b\u5faa\u73af\u53d1\u751f\u7684\u4f4d\u7f6e\u540e\uff0c\u5c31\u8981\u8fdb\u4e00\u6b65\u5bfb\u627e\u51fa\u73b0\u7684\u539f\u56e0\uff0c\u8fdb\u800cDebug     \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u250243              }                                                          \u2502\n   \u250244      }                                                                  \u2502\n   \u250245                                                                         \u2502\n   \u250246      void process_data()                                                \u2502\n   \u250247      {                                                                  \u2502\n   \u250248              for(num_y=0;num_y num_inputs;num_y++)                      \u2502\n   \u250249              {                                                          \u2502\n   \u250250                      insert(x[num_y]);                                  \u2502\n   \u250251              }                                                          \u2502\n   \u250252      }                                                                  \u2502\n   \u250253                                                                         \u2502\n   \u250254      void get_args(int ac, char **av)                                   \u2502\n   \u250255      {                                                                  \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nnative process 18485 In: process_data                        L48   PC: 0x400684 \nType  apropos word  to search for commands related to  word ...\nReading symbols from insert_sort...done.\n(gdb) run 12 5\nStarting program: /home/parallels/Documents/debug/insert_sort 12 5\n^C\nProgram received signal SIGINT, Interrupt.\n0x0000000000400684 in process_data () at ins.c:48\n(gdb) print num_y\n$1 = 0   \u6211\u4eec\u4f7f\u7528 next \u547d\u4ee4\u5355\u6b65\u8c03\u8bd5\uff0c next \u547d\u4ee4\u4e0d\u4f1a\u8fdb\u5165\u51fd\u6570\u5185\u90e8\uff0c\u8fd9\u662f\u4e00\u79cd\u5148\u7c97\u540e\u7ec6\u7684\u8c03\u8bd5\u65b9\u5f0f\uff0c\u5355\u6b65\u8c03\u8bd5\u4e86\u51e0\u6b21\uff0c\u53d1\u73b0\u6bcf\u6b21\u6267\u884c\u5b8c insert(x[num_y]); \u8fd9\u4e00\u53e5\u540e\uff0c num_y \u90fd\u4f1a\u53d8\u6210 0 \uff0c\u4ece\u800c\u5bfc\u81f4 for \u5faa\u73af\u4e0d\u80fd\u7ed3\u675f\u3002\u7531\u662f\u6211\u4eec\u4f7f\u7528 step \u547d\u4ee4\u5728\u8c03\u8bd5\u5230 insert(x[num_y]); \u65f6\uff0c\u8fdb\u5165\u51fd\u6570\u5185\u90e8\u8c03\u8bd5\uff0c\u7531\u4e8e num_y \u662f\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u5728 insert \u51fd\u6570\u5185\u90e8\u7b2c\u4e00\u884c\u65f6\u9519\u8bef\u7684\u628a == \u7528\u6210\u4e86 = \u8d4b\u503c\uff0c\u5bfc\u81f4\u7b2c\u6b21\u51fd\u6570\u6267\u884c\u5b8c\u540e\uff0c num_y \u90fd\u88ab\u7f6e\u4e3a\u4e860     \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u250224      }                                                                  \u2502\n   \u250225                                                                         \u2502\n   \u250226      void insert(int new_y)                                             \u2502\n   \u250227      {                                                                  \u2502\n   \u250228              int j;                                                     \u2502\n   \u250229              if(num_y=0)                                                \u2502\n   \u250230              {                                                          \u2502\n   \u250231                      y[0]=new_y;                                        \u2502\n   \u250232                      return ;                                           \u2502\n   \u250233              }                                                          \u2502\n   \u250234                                                                         \u2502\n   \u250235              for(j=0;j num_y;j++)                                       \u2502\n   \u250236              {                                                          \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nnative process 18485 In: insert                              L29   PC: 0x4005f0 \n(gdb) next\n(gdb) step\ninsert (new_y=5) at ins.c:29\n(gdb)   \u53d1\u73b0\u539f\u56e0\u540e\uff0c \u6211\u4eec\u53e6\u5f00\u4e00\u4e2a\u63a7\u5236\u53f0\u4fee\u6539\u6e90\u7801\u5e76\u91cd\u65b0\u7f16\u8bd1\uff0c\u4e3a\u7684\u662f\u4e0d\u9000\u51fa\u5f53\u524d\u7684GDB\u8c03\u8bd5\u73af\u5883\uff0c\u53ef\u4ee5\u4fdd\u7559\u8c03\u8bd5\u4e2d\u8bbe\u7f6e\u8fc7\u7684\u65ad\u70b9\u7b49\u4fe1\u606f\uff0c\u8fd9\u91cc\u6211\u4eec\u8fd8\u6ca1\u6709\u8bbe\u7f6e\u8fc7\u65ad\u70b9\u3002  \u5728\u53e6\u4e00\u4e2a\u63a7\u5236\u53f0\u4e2d\u91cd\u65b0\u7f16\u8bd1\u5e76\u8fd0\u884c\u540e\uff0c\u53d1\u73b0\u6b7b\u5faa\u73af\u89e3\u9664\u4e86\uff0c\u4f46\u662f\u6392\u5e8f\u7ed3\u679c\u4e0d\u6b63\u786e\uff1a  parallels@ubuntu:~/Documents/debug$ gcc -g -Wall -o insert_sort ins.c\nparallels@ubuntu:~/Documents/debug$ ./insert_sort 12 5\n5\n0", 
            "title": "Debug #1 - \u7a0b\u5e8f\u6b7b\u5faa\u73af"
        }, 
        {
            "location": "/tech/Use GDB/#debug-2-", 
            "text": "\u6211\u4eec\u53d1\u73b0 12 \u6ca1\u6709\u88ab\u6b63\u786e\u7684\u63d2\u5165\u5230\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\uff0c\u4e8e\u662f\u6211\u4eec\u56de\u5230GDB\u8c03\u8bd5\u73af\u5883\u6240\u5728\u7684\u63a7\u5236\u53f0\uff0c\u5728 insert \u51fd\u6570\u4e2d\u8bbe\u7f6e\u65ad\u70b9\u540e\uff0c\u4f7f\u7528 run \u547d\u4ee4\u91cd\u65b0\u5f00\u59cb\u4e00\u6b21\u8c03\u8bd5\uff0c run \u9ed8\u8ba4\u4e3a\u4f7f\u7528\u4e0a\u4e00\u6b21\u4f7f\u7528\u7684\u53c2\u6570 12 5     \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u250224      }                                                                  \u2502\n   \u250225                                                                         \u2502\n   \u250226      void insert(int new_y)                                             \u2502\n   \u250227      {                                                                  \u2502\n   \u250228              int j;                                                     \u2502\nB+ \u250229              if(num_y==0)                                               \u2502\n   \u250230              {                                                          \u2502\n   \u250231                      y[0]=new_y;                                        \u2502\n   \u250232                      return ;                                           \u2502\n   \u250233              }                                                          \u2502\n   \u250234                                                                         \u2502\n   \u250235              for(j=0;j num_y;j++)                                       \u2502\n   \u250236              {                                                          \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nnative process 25009 In: insert                              L29   PC: 0x4005f0 \n[Inferior 1 (process 24275) exited normally]\n(gdb) break insert\nBreakpoint 1 at 0x4005f0: insert. (4 locations)\n(gdb) run\nStarting program: /home/parallels/Documents/debug/insert_sort 12 5\n\nBreakpoint 1, insert (new_y=12) at ins.c:29\n(gdb) \n\n(gdb)   \u6211\u4eec\u770b\u5230\u7a0b\u5e8f\u5728\u65ad\u70b9\u5904\u505c\u6b62\u8fd0\u884c\u4e86\uff0c\u518d\u6b21\u4f7f\u7528\u5355\u6b65\u8c03\u8bd5\u6574\u4e2a\u6570\u7ec4\u7684\u63d2\u5165\u8fc7\u7a0b\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u6570\u5b57 12 ,\u7b2c\u4e00\u6b21\u4f1a\u88ab\u63d2\u5165\u6392\u5e8f\u7ed3\u679c\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u7b2c\u4e8c\u4e2a\u6570\u5b57 5 \u5728\u88ab\u63d2\u5165\u65f6\u4f1a\u5148\u4e0e\u5f53\u524d\u6392\u5e8f\u7ed3\u679c\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u6bd4\u8f83\u5c0f\uff0c\u4f1a\u628a\u6392\u5e8f\u7ed3\u679c\u6570\u7ec4\u7684\u6bcf\u4e00\u4e2a\u6570\u636e\u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4e3a\u8fd9\u4e2a\u8f83\u5c0f\u7684\u6570\u636e\u817e\u51fa\u4e00\u4e2a\u4f4d\u7f6e\u6765\u653e\u5165\u3002     \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u250233              }                                                          \u2502\n   \u250234                                                                         \u2502\n   \u250235              for(j=0;j num_y;j++)                                       \u2502\n   \u250236              {                                                          \u2502\n   \u250237                      if(new_y   y[j])                                   \u2502\n   \u250238                      {                                                  \u2502\n   \u250239                              scoot_over(j);                             \u2502\n   \u250240                              y[j]=new_y;                                \u2502\n   \u250241                              return;                                    \u2502\n   \u250242                      }                                                  \u2502\n   \u250243              }                                                          \u2502\n   \u250244      }                                                                  \u2502\n   \u250245                                                                         \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nnative process 25009 In: insert                              L41   PC: 0x400638 \n(gdb) print y\n$5 = {12, 0, 0, 0, 0, 0, 0, 0, 0, 0}\n(gdb) n\n(gdb) print y\n$6 = {5, 0, 0, 0, 0, 0, 0, 0, 0, 0}\n(gdb)    \u5728\u8fd9\u4e2a\u63d2\u5165\u6392\u5e8f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53d1\u73b0\u5728\u6570\u5b57 5 \u88ab\u63d2\u5165\u540e\uff0c\u4e4b\u524d\u7684\u6570\u5b57 12 \u6ca1\u6709\u88ab\u6b63\u786e\u7684\u540e\u79fb\u4e00\u4f4d\uff0c\u6240\u4ee5\u95ee\u9898\u5c31\u5b9a\u4f4d \u5728\u51fd\u6570 scoot_over \u4e2d\u4e86\uff0c\u56e0\u4e3a\u5b83\u7684\u529f\u80fd\u548c\u6211\u4eec\u671f\u671b\u7684\u4e0d\u4e00\u81f4\u3002\u6211\u4eec\u518d\u8bbe\u7f6e\u65ad\u70b9\u5230 scoot_over \u51fd\u6570\u4e2d\uff0c\u5e76\u6e05\u9664\u4e4b\u524d\u7684\u65ad\u70b9\uff0c\u56e0\u4e3a\u95ee\u9898\u662f\u51fa\u73b0\u5728\u6570\u5b57 5 \u4e0e\u6570\u5b57 12 \u6bd4\u8f83\u540e\u7684 scoot_over \u8c03\u7528\u65f6\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u65ad\u70b9\u8bbe\u7f6e\u4e3a\u6761\u4ef6\u65ad\u70b9\uff0c\u4e5f\u5c31\u662f num_y \u4e3a 1 \u65f6\uff1a     \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u250215      }                                                                  \u2502\n   \u250216                                                                         \u2502\n   \u250217      void scoot_over(int jj)                                            \u2502\n   \u250218      {                                                                  \u2502\n   \u250219              int k ;                                                    \u2502\nB+ \u250220              for(k=num_y-1;k jj;k++)                                    \u2502\n   \u250221              {                                                          \u2502\n   \u250222                      y[k]=y[k-1];                                       \u2502\n   \u250223              }                                                          \u2502\n   \u250224      }                                                                  \u2502\n   \u250225                                                                         \u2502\n   \u250226      void insert(int new_y)                                             \u2502\n   \u250227      {                                                                  \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nnative process 28018 In: scoot_over                          L20   PC: 0x4005ad \n\n(gdb) clear 29\nDeleted breakpoint 1\n(gdb) break scoot_over if num_y==1\nBreakpoint 2 at 0x4005ad: file ins.c, line 20.\n(gdb) i b\nNum     Type           Disp Enb Address            What\n2       breakpoint     keep y   0x00000000004005ad in scoot_over at ins.c:20\n        stop only if num_y==1\n(gdb) c   \nContinuing.\n\nBreakpoint 2, scoot_over (jj=0) at ins.c:20\n(gdb) p num_y\n$7 = 1  \u8fd9\u65f6\u6211\u4eec\u8fd0\u884c\u5230\u65ad\u70b9\u5904\u505c\u6b62\u4e0b\u6765\uff0c\u4f7f\u7528\u5355\u6b65\u8c03\u8bd5\uff0c\u53d1\u73b0 scoot_over \u51fd\u6570\u4e2d\u7684for\u5faa\u73af\u4e00\u6b21\u90fd\u6ca1\u6709\u6267\u884c\u3002\u6b64\u65f6 num_y \u4e3a1\uff0c\u6240\u4ee5 k \u4e3a0\uff0c\u800c jj \u4e5f\u662f0\uff0c\u6240\u4ee5\u6ca1\u6709\u8fdb\u5165\u5faa\u73af\u4e2d\uff0c\u6240\u4ee5 k \u7684\u521d\u59cb\u503c\u8d4b\u503c\u4e0d\u6b63\u786e\uff0c\u5e94\u8be5\u4fee\u6539\u4e3a k=num_y  \u518d\u6b21\u5728\u53e6\u4e00\u4e2a\u63a7\u5236\u53f0\u4fee\u6539\u6e90\u7a0b\u5e8f\uff0c\u7f16\u8bd1\u8fd0\u884c\uff0c\u53d1\u73b0\u4ea7\u751f\u4e86\u6bb5\u9519\u8bef\uff0c\u8fd9\u662f\u7531\u4e8e\u5185\u5b58\u5730\u5740\u8bbf\u95ee\u4e0d\u5f53\u5f15\u8d77\u7684\uff1a  parallels@ubuntu:~/Documents/debug$ gcc -g -Wall -o insert_sort ins.c\nparallels@ubuntu:~/Documents/debug$ ./insert_sort 12 5\nSegmentation fault (core dumped)", 
            "title": "Debug #2 - \u7a0b\u5e8f\u903b\u8f91\u9519\u8bef"
        }, 
        {
            "location": "/tech/Use GDB/#debug-3-", 
            "text": "\u8fd9\u65f6\u5c31\u4f53\u73b0\u51fa\u5f00\u4e24\u4e2a\u63a7\u5236\u53f0\u7684\u597d\u5904\u4e86\uff0c\u56de\u5230GDB\u73af\u5883\u540e\uff0c\u6e05\u9664\u4e4b\u524d\u7684\u65ad\u70b9\uff0c\u5e76\u518d\u6b21\u8fd0\u884c, GDB\u4f1a\u5728\u6bb5\u9519\u8bef\u7684\u4f4d\u7f6e\u505c\u4e0b\u6765\uff1a     \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u250217      void scoot_over(int jj)                                            \u2502\n   \u250218      {                                                                  \u2502\n   \u250219              int k ;                                                    \u2502\n   \u250220              for(k=num_y;k jj;k++)                                      \u2502\n   \u250221              {                                                          \u2502\n   \u250222                      y[k]=y[k-1];                                       \u2502\n   \u250223              }                                                          \u2502\n   \u250224      }                                                                  \u2502\n   \u250225                                                                         \u2502\n   \u250226      void insert(int new_y)                                             \u2502\n   \u250227      {                                                                  \u2502\n   \u250228              int j;                                                     \u2502\n   \u250229              if(num_y==0)                                               \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nnative process 30018 In: scoot_over                          L22   PC: 0x4005cc \n\n(gdb) clear 20\nDeleted breakpoint 2\n(gdb) run\nThe program being debugged has been started already.\nStart it from the beginning? (y or n) y\nStarting program: /home/parallels/Documents/debug/insert_sort 12 5\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x00000000004005cc in scoot_over (jj=0) at ins.c:22\n(gdb) print k\n$8 = 976  \u6b64\u65f6\u6211\u4eec\u5c06\u6570\u7ec4\u7d22\u5f15\u503c\u6253\u5370\u51fa\u6765\uff0c\u53d1\u73b0\u5b83\u8fdc\u8fdc\u5927\u4e8e\u6392\u5e8f\u7ed3\u679c\u6570\u7ec4\u7684\u8fb9\u754c 10 , \u8fd9\u662f\u7531\u4e8efor\u5faa\u73af\u7684\u53d8\u91cfk\u81ea\u52a0\u5f15\u8d77\u7684\u9519\u8bef\uff0c\u6211\u4eec\u5c06\u5176\u4fee\u6539\u4e3a\u81ea\u51cf\u3002\u518d\u6b21\u7f16\u8bd1\u8fd0\u884c\uff1a  parallels@ubuntu:~/Documents/debug$ gcc -g -Wall -o insert_sort ins.c\nparallels@ubuntu:~/Documents/debug$ ./insert_sort 12 5\n5\n12  \u53d1\u73b0\u6392\u5e8f\u4e24\u4e2a\u6570\u5b57\u6b63\u786e\u4e86\uff0c\u6211\u4eec\u8bd5\u7740\u6392\u4e0b\u591a\u4e2a\u6570\u636e\u3002  parallels@ubuntu:~/Documents/debug$ ./insert_sort 12 5 19 22 6 1\n1\n5\n6\n12\n0\n0", 
            "title": "Debug #3 - \u7a0b\u5e8f\u6bb5\u9519\u8bef"
        }, 
        {
            "location": "/tech/Use GDB/#debug-4-", 
            "text": "\u53d1\u73b0\u6392\u5e8f\u7ed3\u679c\u5bf9\u4e8e\u6570\u5b57 19 22 \u6709\u95ee\u9898\uff0c\u6211\u4eec\u91cd\u65b0\u8c03\u8bd5\u63d2\u5165\u6570\u636e19\u548c22\u65f6\u7684\u8fc7\u7a0b\uff0c\u8bbe\u7f6e\u65ad\u70b9\uff0c\u5e76\u5355\u6b65\u8ddf\u8e2a\uff0c\u53d1\u73b0\uff0c\u5b83\u4eec\u5927\u4e8e\u6392\u5e8f\u7ed3\u679c\u4e2d\u7684\u6240\u6709\u6570\u636e\u65f6\uff0c\u9700\u8981\u88ab\u63d2\u5165\u5230\u6700\u540e\u7684\u4f4d\u7f6e\uff0c\u4f46\u4e8b\u5b9e\u4e0a\u7a0b\u5e8f\u6ca1\u6709\u8003\u8651\u5230\u8fd9\u79cd\u60c5\u51b5\u3002     \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u250229              if(num_y==0)                                               \u2502\n   \u250230              {                                                          \u2502\n   \u250231                      y[0]=new_y;                                        \u2502\n   \u250232                      return ;                                           \u2502\n   \u250233              }                                                          \u2502\n   \u250234                                                                         \u2502\n   \u250235              for(j=0;j num_y;j++)                                       \u2502\n   \u250236              {                                                          \u2502\nB+ \u250237                      if(new_y   y[j])                                   \u2502\n   \u250238                      {                                                  \u2502\n   \u250239                              scoot_over(j);                             \u2502\n   \u250240                              y[j]=new_y;                                \u2502\n   \u250241                              return;                                    \u2502\n   \u250242                      }                                                  \u2502\n   \u250243              }                                                          \u2502\n   \u250244      }                                                                  \u2502\n   \u250245                                                                         \u2502\n   \u250246      void process_data()                                                \u2502\n   \u250247      {                                                                  \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nnative process 32621 In: insert                              L35   PC: 0x400637 \n(gdb) break 37 if new_y == 19\nBreakpoint 1 at 0x40060b: file ins.c, line 37.\n(gdb) run 12 5 19 22 6 1\nStarting program: /home/parallels/Documents/debug/insert_sort 12 5 19 22 6 1\n\nBreakpoint 1, insert (new_y=19) at ins.c:37\n(gdb) print y  \n$1 = {5, 12, 0, 0, 0, 0, 0, 0, 0, 0}\n(gdb) n\n(gdb)   \u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728\u7b2c 43 \u884c\u540e\u9762\u8865\u5145\u8fd9\u79cd\u60c5\u51b5\uff1a y[j]=new_y;  \u91cd\u65b0\u7f16\u8bd1\u5e76\u8fd0\u884c\uff1a  parallels@ubuntu:~/Documents/debug$ gcc -g -Wall -o insert_sort ins.c\nparallels@ubuntu:~/Documents/debug$ ./insert_sort 12 5 19 22 6 1\n1\n5\n6\n12\n19\n22  \u8fd9\u6b21\u53d1\u73b0\u7ed3\u679c\u6b63\u786e\uff0c\u4f46\u8fd8\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u6d4b\u8bd5\u4e00\u4e0b\u3002\u6574\u4e2a\u8fc7\u6574\u5c31\u662f\u8fd9\u4e2a\u6837\u5b50\uff0c\u8c03\u8bd5\u662f\u4e00\u95e8\u827a\u672f\u800c\u4e0d\u662f\u79d1\u5b66\uff0c\u901a\u5e38\u5f88\u96be\u63cf\u8ff0\u8fd9\u6574\u4e2a\u8fc7\u7a0b\uff0c\u6240\u4ee5\u6709\u758f\u6f0f\u7684\u5730\u65b9\uff0c\u8bf7\u591a\u5305\u6db5\u3002", 
            "title": "Debug #4 - \u7a0b\u5e8f\u9057\u6f0f\u60c5\u51b5"
        }, 
        {
            "location": "/tech/User OpenCV to add watermark on a video/", 
            "text": "User OpenCV to add watermark on a video\n\n\n\u5b89\u88c5\u5f00\u53d1\u73af\u5883\n\n\n\u9996\u5148\uff0c\u9700\u8981\nOpenCV\n\u5f00\u53d1\u73af\u5883\uff0c\u5c31\u662f\u5b89\u88c5\nOpenCV\n\u76f8\u5173\u7684\u5e93\u3002\n\n\n\u76f4\u63a5\u5230\nGitHub\n\u4e0a\u62c9\u4e0b\u001d\nOpenCV\u6e90\u4ee3\u7801\n\uff0c\u7136\u540e\u8fdb\u5165\n\u9879\u76ee\u6587\u6863\n\u4e2d\u5bfb\u627e\u4ece\u6e90\u4ee3\u7801\u7f16\u8bd1\u7684\u65b9\u6cd5\u3002\u6211\u7684\u5e73\u53f0\u662f\nMacOS\n\uff0c\u6240\u4ee5\u627e\u5230\u7684\u662fLinux/Mac\u5e73\u53f0\u4e0b\u7684\u5b89\u88c5\u65b9\u6cd5: \nhttp://docs.opencv.org/master/d7/d9f/tutorial_linux_install.html\n\n\n\u4f46\u662f\u53c2\u8003\u4e86\u53e6\u4e00\u7bc7\u6587\u7ae0\uff0c\u4e0b\u8f7d\u4e86\u6e90\u4ee3\u7801\u5e76\u8fdb\u5165\u76ee\u5f55(\nopencv-master/\n)\u4e0b\uff0c\u4f7f\u4ee5\u4e0b\u547d\u4ee4\u7f16\u8bd1:\n\n\nsudo cmake -G \nUnix Makefiles\n //\u68c0\u67e5\u76f8\u5173\u914d\u7f6e\u9009\u9879\nsudo make -j8  //\u516b\u7ebf\u7a0b\u7f16\u8bd1\nsudo make install  //\u5b89\u88c5\u7f16\u8bd1\u597d\u7684\u5e93\u6587\u4ef6\u548c\u5934\u6587\u4ef6\u5230\u7cfb\u7edf\u76ee\u5f55\u4e0b\n\n\n\n\n\u6d4b\u8bd5\u5f00\u53d1\u73af\u5883\u662f\u5426\u5b89\u88c5\u6210\u529f\n\n\n\u56e0\u4e3a\u6211\u7684\u529f\u80fd\u4e5f\u4e0d\u662f\u5f88\u590d\u6742\uff0c\u6240\u4ee5\u6253\u7b97\u53ea\u7528\ng++\n\u7f16\u8bd1\u8fd0\u884c\uff0c\u5c31\u4e0d\u52a8\u7528\u5404\u79cd\u5927\u578bIDE\u4e86\u3002\u4e0b\u5728\u662f\u6211\u7684\u6d4b\u8bd5\u7528\u4f8b\uff1a\n\n\n#include \niostream\n\n#include \nopencv2/opencv.hpp\n\n\nusing namespace std;\nusing namespace cv;\n\nint main(int argc, char **argv)\n{\n        Mat img = imread(argv[1]);\n        imshow(\ntest\n,img);\n        waitKey(0);\n        return 0;\n}\n\n\n\n\n\u7f16\u8bd1\u4f7f\u7528\uff1a\n\n\nsudo g++ opencv_test.cpp -lopencv_core -lopencv_highgui -lopencv_imgcodecs -I/usr/local/include -L/usr/local/lib\n\n\n\n\n\u4f7f\u7528\u4e0b\u9762\u547d\u4ee4\u663e\u793a\u4e00\u5e45\u56fe\u7247:\n\n\n./a.out test.jpg # test.jpg is your own picture file\n\n\n\n\n\u5982\u679c\u80fd\u591f\u663e\u793a\u51fa\u56fe\u7247\uff0c\u8bf4\u660e\u5f00\u53d1\u73af\u5883\u5df2\u7ecf\u5b89\u88c5\u6210\u529f;-)\n\n\n\u8bfb\u89c6\u9891\n\n\n\u5e9f\u8bdd\u4e0d\u591a\u8bdd\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a\n\n\n\n#include \niostream\n\n#include \nsstream\n\n#include \nopencv2/opencv.hpp\n\n\nusing namespace std;\nusing namespace cv;\n\nVideoWriter output;\n\nMat addWatermarkInFrame(Mat frame, int frameNum)\n{\n    cout \n \nprocessing \n \nframeNum \n \n frame\n \nendl; \n\n    Mat redSquare = Mat(Size(20,20),CV_8UC3,Scalar(0,0,255));\n\n    Mat imageROI = frame(Rect(10,10,redSquare.cols, redSquare.rows));\n\n    addWeighted(imageROI, 1.0, redSquare, 1.0,0,imageROI);  \n\n    return frame;\n}\n\nvoid Stop(int signal)\n{   \n    output.~VideoWriter();\n    cout \n \nprocess been interrupted!\n \n endl;\n    exit(0);\n}\n\nvoid help()\n{\n    cout\n    \n \n-----------------------------------------------------\n \n endl\n    \n \nThis program shows how to read a video file with OpenCV.\n \n endl\n    \n \nIn addition, it show the process of add watermark in a video\n \n endl\n    \n \nUsage:\n \n endl\n    \n \n./a.out \ninput_video_file or video_stream_url\n \n endl;\n}\n\nint main(int argc, char **argv)\n{\n    if(argc \n 2)\n    {\n        help();\n    }\n    else if(argc \n 2)\n    {\n        cout \n \nToo many parameters\n \n endl;\n    }\n\n    const string cameraOrFile= argv[1];\n\n    stringstream ss;\n    ss \n cameraOrFile;\n\n    int deviceID;\n    ss \n deviceID;\n\n    VideoCapture video;\n    if(ss.good())\n    {\n        video.open(deviceID);\n    }\n    else\n    {\n        video.open(cameraOrFile);\n    }\n\n    if(!video.isOpened())\n    {\n        cout\n \nCould not open the video file!\n \n endl;\n        return -1;\n    }\n\n    Size videoSize = Size((int)video.get(CAP_PROP_FRAME_WIDTH),\n                        (int)video.get(CAP_PROP_FRAME_HEIGHT));\n    int frameRate = video.get(CAP_PROP_FPS);\n\n    cout \n \nThe size of video frame is: \n videoSize \n endl;\n    cout \n \nThe frame rate is: \n \n frameRate \n endl; \n\n    int frameNum = -1;\n    Mat frame;\n    namedWindow(\nframe\n,WINDOW_AUTOSIZE);\n\n    remove(\noutput.mp4\n);\n    output.open(\noutput.mp4\n, -1, frameRate,videoSize,true);\n    if(!output.isOpened())\n    {\n        cout \n \nCould not open the output video for write!\n \n endl;\n        return -1;\n    }\n\n    signal(SIGINT,Stop);\n\n    while(1)\n    {\n        video \n frame;\n        if(frame.empty())\n        {\n            cout \n \nThe video had been processed!\n \n endl;\n            break;\n        }\n\n        Mat ret = addWatermarkInFrame(frame, ++frameNum);\n\n        imshow(\nframe\n,ret);\n        waitKey(1.0/frameRate * 1000);\n\n        output \n ret;\n    }\n\n    cout \n \nFinished writing video\n \n endl;\n\n    return 0;\n}\n\n\n\n\n\n\u7f16\u8bd1\u547d\u4ee4\u5982\u4e0b\uff1a\n\n\nsudo g++ opencv_test.cpp -lopencv_core -lopencv_highgui -lopencv_imgcodecs -I/usr/local/include -L/usr/local/lib -lopencv_videoio\n\n\n\n\n\u7f16\u8bd1\u51fa\u7684\u53ef\u6267\u884c\u6587\u4ef6\u662f\na.out\n, \u4f7f\u7528\u65b9\u6cd5\u53ef\u4ee5\u662f\uff1a\n\n\n./a.out test.mp4 # process the video file\n\n\n\n\n\n\u6216\u8005\n\n\n./a.out \nhttp://zhulongyixian.vicp.cc:30236/?action=stream\n # \nvideo_stream_url\n process the video stream\n\n\n\n\n\u4e0d\u8fc7\u5982\u679c\u539f\u6765\u7684\u89c6\u9891\u6709\u58f0\u97f3\u7684\u8bdd\uff0c\u7531\u4e8eOpenCV\u5904\u7406\u540e\u53ea\u6709\u89c6\u9891\u6570\u636e\u88ab\u5199\u5165\u4e86\u6587\u4ef6\uff0c\u8fd9\u6837\u9020\u6210\u5904\u7406\u7ed3\u679c\u6587\u4ef6\u4e2d\u4e22\u5931\u4e86\u97f3\u9891\u901a\u9053\u7684\u6570\u636e\u3002\u4e0b\u4e00\u6b65\u9700\u8981\u8003\u8651\u4f7f\u7528FFmpeg\u6765\u6539\u5199\u89c6\u9891\u7f16\u89e3\u7801\u90e8\u5206\u4e86\u3002\n\n\n\u52a0\u6c34\u5370\n\n\n\u52a0\u6c34\u5370\u90e8\u5206\u53ef\u4ee5\u5728\u4e0a\u9762\u7a0b\u5e8f\u7684\u7b2c\n10\n\u884c\u5f00\u59cb\u7684\u51fd\u6570\u91cc\u9762\u8fdb\u884c\uff0c\u4e3a\u4e86\u7b80\u5316\u5904\u7406\uff0c\u53ea\u7ed9\u89c6\u9891\u5de6\u4e0a\u89d2\u52a0\u4e86\u4e00\u4e2a\u7ea2\u8272\u5c0f\u65b9\u5757\u3002\n\n\n\u540e\u8bb0\n\n\n\u6700\u8fd1\u5b66\u4e60linux\u76f8\u5173\u77e5\u8bc6\uff0c\u53d1\u73b0\u547d\u4ee4\u884c\u8d8a\u6765\u8d8a\u597d\u7528\u4e86\uff0c\u5f53\u7136\u53ea\u662f\u9488\u5bf9\u7b80\u5355\u70b9\u7684\u5f00\u53d1\u4efb\u52a1\u3002", 
            "title": "User OpenCV to add watermark on a video"
        }, 
        {
            "location": "/tech/User OpenCV to add watermark on a video/#user-opencv-to-add-watermark-on-a-video", 
            "text": "", 
            "title": "User OpenCV to add watermark on a video"
        }, 
        {
            "location": "/tech/User OpenCV to add watermark on a video/#_1", 
            "text": "\u9996\u5148\uff0c\u9700\u8981 OpenCV \u5f00\u53d1\u73af\u5883\uff0c\u5c31\u662f\u5b89\u88c5 OpenCV \u76f8\u5173\u7684\u5e93\u3002  \u76f4\u63a5\u5230 GitHub \u4e0a\u62c9\u4e0b\u001d OpenCV\u6e90\u4ee3\u7801 \uff0c\u7136\u540e\u8fdb\u5165 \u9879\u76ee\u6587\u6863 \u4e2d\u5bfb\u627e\u4ece\u6e90\u4ee3\u7801\u7f16\u8bd1\u7684\u65b9\u6cd5\u3002\u6211\u7684\u5e73\u53f0\u662f MacOS \uff0c\u6240\u4ee5\u627e\u5230\u7684\u662fLinux/Mac\u5e73\u53f0\u4e0b\u7684\u5b89\u88c5\u65b9\u6cd5:  http://docs.opencv.org/master/d7/d9f/tutorial_linux_install.html  \u4f46\u662f\u53c2\u8003\u4e86\u53e6\u4e00\u7bc7\u6587\u7ae0\uff0c\u4e0b\u8f7d\u4e86\u6e90\u4ee3\u7801\u5e76\u8fdb\u5165\u76ee\u5f55( opencv-master/ )\u4e0b\uff0c\u4f7f\u4ee5\u4e0b\u547d\u4ee4\u7f16\u8bd1:  sudo cmake -G  Unix Makefiles  //\u68c0\u67e5\u76f8\u5173\u914d\u7f6e\u9009\u9879\nsudo make -j8  //\u516b\u7ebf\u7a0b\u7f16\u8bd1\nsudo make install  //\u5b89\u88c5\u7f16\u8bd1\u597d\u7684\u5e93\u6587\u4ef6\u548c\u5934\u6587\u4ef6\u5230\u7cfb\u7edf\u76ee\u5f55\u4e0b", 
            "title": "\u5b89\u88c5\u5f00\u53d1\u73af\u5883"
        }, 
        {
            "location": "/tech/User OpenCV to add watermark on a video/#_2", 
            "text": "\u56e0\u4e3a\u6211\u7684\u529f\u80fd\u4e5f\u4e0d\u662f\u5f88\u590d\u6742\uff0c\u6240\u4ee5\u6253\u7b97\u53ea\u7528 g++ \u7f16\u8bd1\u8fd0\u884c\uff0c\u5c31\u4e0d\u52a8\u7528\u5404\u79cd\u5927\u578bIDE\u4e86\u3002\u4e0b\u5728\u662f\u6211\u7684\u6d4b\u8bd5\u7528\u4f8b\uff1a  #include  iostream \n#include  opencv2/opencv.hpp \n\nusing namespace std;\nusing namespace cv;\n\nint main(int argc, char **argv)\n{\n        Mat img = imread(argv[1]);\n        imshow( test ,img);\n        waitKey(0);\n        return 0;\n}  \u7f16\u8bd1\u4f7f\u7528\uff1a  sudo g++ opencv_test.cpp -lopencv_core -lopencv_highgui -lopencv_imgcodecs -I/usr/local/include -L/usr/local/lib  \u4f7f\u7528\u4e0b\u9762\u547d\u4ee4\u663e\u793a\u4e00\u5e45\u56fe\u7247:  ./a.out test.jpg # test.jpg is your own picture file  \u5982\u679c\u80fd\u591f\u663e\u793a\u51fa\u56fe\u7247\uff0c\u8bf4\u660e\u5f00\u53d1\u73af\u5883\u5df2\u7ecf\u5b89\u88c5\u6210\u529f;-)", 
            "title": "\u6d4b\u8bd5\u5f00\u53d1\u73af\u5883\u662f\u5426\u5b89\u88c5\u6210\u529f"
        }, 
        {
            "location": "/tech/User OpenCV to add watermark on a video/#_3", 
            "text": "\u5e9f\u8bdd\u4e0d\u591a\u8bdd\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a  \n#include  iostream \n#include  sstream \n#include  opencv2/opencv.hpp \n\nusing namespace std;\nusing namespace cv;\n\nVideoWriter output;\n\nMat addWatermarkInFrame(Mat frame, int frameNum)\n{\n    cout    processing    frameNum     frame   endl; \n\n    Mat redSquare = Mat(Size(20,20),CV_8UC3,Scalar(0,0,255));\n\n    Mat imageROI = frame(Rect(10,10,redSquare.cols, redSquare.rows));\n\n    addWeighted(imageROI, 1.0, redSquare, 1.0,0,imageROI);  \n\n    return frame;\n}\n\nvoid Stop(int signal)\n{   \n    output.~VideoWriter();\n    cout    process been interrupted!    endl;\n    exit(0);\n}\n\nvoid help()\n{\n    cout\n       -----------------------------------------------------    endl\n       This program shows how to read a video file with OpenCV.    endl\n       In addition, it show the process of add watermark in a video    endl\n       Usage:    endl\n       ./a.out  input_video_file or video_stream_url    endl;\n}\n\nint main(int argc, char **argv)\n{\n    if(argc   2)\n    {\n        help();\n    }\n    else if(argc   2)\n    {\n        cout    Too many parameters    endl;\n    }\n\n    const string cameraOrFile= argv[1];\n\n    stringstream ss;\n    ss   cameraOrFile;\n\n    int deviceID;\n    ss   deviceID;\n\n    VideoCapture video;\n    if(ss.good())\n    {\n        video.open(deviceID);\n    }\n    else\n    {\n        video.open(cameraOrFile);\n    }\n\n    if(!video.isOpened())\n    {\n        cout   Could not open the video file!    endl;\n        return -1;\n    }\n\n    Size videoSize = Size((int)video.get(CAP_PROP_FRAME_WIDTH),\n                        (int)video.get(CAP_PROP_FRAME_HEIGHT));\n    int frameRate = video.get(CAP_PROP_FPS);\n\n    cout    The size of video frame is:   videoSize   endl;\n    cout    The frame rate is:     frameRate   endl; \n\n    int frameNum = -1;\n    Mat frame;\n    namedWindow( frame ,WINDOW_AUTOSIZE);\n\n    remove( output.mp4 );\n    output.open( output.mp4 , -1, frameRate,videoSize,true);\n    if(!output.isOpened())\n    {\n        cout    Could not open the output video for write!    endl;\n        return -1;\n    }\n\n    signal(SIGINT,Stop);\n\n    while(1)\n    {\n        video   frame;\n        if(frame.empty())\n        {\n            cout    The video had been processed!    endl;\n            break;\n        }\n\n        Mat ret = addWatermarkInFrame(frame, ++frameNum);\n\n        imshow( frame ,ret);\n        waitKey(1.0/frameRate * 1000);\n\n        output   ret;\n    }\n\n    cout    Finished writing video    endl;\n\n    return 0;\n}  \u7f16\u8bd1\u547d\u4ee4\u5982\u4e0b\uff1a  sudo g++ opencv_test.cpp -lopencv_core -lopencv_highgui -lopencv_imgcodecs -I/usr/local/include -L/usr/local/lib -lopencv_videoio  \u7f16\u8bd1\u51fa\u7684\u53ef\u6267\u884c\u6587\u4ef6\u662f a.out , \u4f7f\u7528\u65b9\u6cd5\u53ef\u4ee5\u662f\uff1a  ./a.out test.mp4 # process the video file  \u6216\u8005  ./a.out  http://zhulongyixian.vicp.cc:30236/?action=stream  #  video_stream_url  process the video stream  \u4e0d\u8fc7\u5982\u679c\u539f\u6765\u7684\u89c6\u9891\u6709\u58f0\u97f3\u7684\u8bdd\uff0c\u7531\u4e8eOpenCV\u5904\u7406\u540e\u53ea\u6709\u89c6\u9891\u6570\u636e\u88ab\u5199\u5165\u4e86\u6587\u4ef6\uff0c\u8fd9\u6837\u9020\u6210\u5904\u7406\u7ed3\u679c\u6587\u4ef6\u4e2d\u4e22\u5931\u4e86\u97f3\u9891\u901a\u9053\u7684\u6570\u636e\u3002\u4e0b\u4e00\u6b65\u9700\u8981\u8003\u8651\u4f7f\u7528FFmpeg\u6765\u6539\u5199\u89c6\u9891\u7f16\u89e3\u7801\u90e8\u5206\u4e86\u3002", 
            "title": "\u8bfb\u89c6\u9891"
        }, 
        {
            "location": "/tech/User OpenCV to add watermark on a video/#_4", 
            "text": "\u52a0\u6c34\u5370\u90e8\u5206\u53ef\u4ee5\u5728\u4e0a\u9762\u7a0b\u5e8f\u7684\u7b2c 10 \u884c\u5f00\u59cb\u7684\u51fd\u6570\u91cc\u9762\u8fdb\u884c\uff0c\u4e3a\u4e86\u7b80\u5316\u5904\u7406\uff0c\u53ea\u7ed9\u89c6\u9891\u5de6\u4e0a\u89d2\u52a0\u4e86\u4e00\u4e2a\u7ea2\u8272\u5c0f\u65b9\u5757\u3002", 
            "title": "\u52a0\u6c34\u5370"
        }, 
        {
            "location": "/tech/User OpenCV to add watermark on a video/#_5", 
            "text": "\u6700\u8fd1\u5b66\u4e60linux\u76f8\u5173\u77e5\u8bc6\uff0c\u53d1\u73b0\u547d\u4ee4\u884c\u8d8a\u6765\u8d8a\u597d\u7528\u4e86\uff0c\u5f53\u7136\u53ea\u662f\u9488\u5bf9\u7b80\u5355\u70b9\u7684\u5f00\u53d1\u4efb\u52a1\u3002", 
            "title": "\u540e\u8bb0"
        }, 
        {
            "location": "/tech/Wireshark Basics/", 
            "text": "Wireshark Basics", 
            "title": "Wireshark Basics"
        }, 
        {
            "location": "/tech/Wireshark Basics/#wireshark-basics", 
            "text": "", 
            "title": "Wireshark Basics"
        }, 
        {
            "location": "/tech/Optimizing App Startup Time/", 
            "text": "# \u4e00\u6b21\u4f18\u5316App\u542f\u52a8\u901f\u5ea6\u7684\u4f53\u9a8c\n\n\n\u5e94\u7528\u7684\u542f\u52a8\u8fc7\u7a0b\n\n\n\n\n\n\n\u8fde\u63a5\u548c\u88c5\u8f7d\n\n\n\n\n\n\nUIKit\u521d\u59cb\u5316\n\n\n\n\n\n\n\u5e94\u7528\u7a0b\u5e8f\u56de\u8c03\n\n\n\n\n\n\n\u5f00\u673a\u52a8\u753b\u5c55\u73b0 \n\n\n\n\n\n\n\u7406\u8bba - main()\u51fd\u6570\u6267\u884c\u524d\u53d1\u751f\u7684\u4e8b\u60c5\n\n\nMach-O\u683c\u5f0f\n\n\n\u6587\u4ef6\u7c7b\u578b\n\n\n\n\nExecutable\n \u2014\u2014 \u5e94\u7528\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\n\n\nDylib\n \u2014\u2014 \u52a8\u6001\u5e93\uff0c\u4f8b\u5982: DSOs/DLLs\n\n\nBundle\n \u2014\u2014 \u4e0d\u80fd\u88ab\u94fe\u63a5\u7684\u52a8\u6001\u5e93\uff0c\u53ea\u80fd\u5728\u8fd0\u884c\u65f6\u7528dlopen()\u51fd\u6570\u52a0\u8f7d\uff0c\u4f8b\u5982\uff1a\u63d2\u4ef6\n\n\n\n\nimage\n \u2014\u2014 \u53ef\u4ee5\u662f\u4e0a\u9762\u63d0\u5230\u7684\u4e09\u79cd\u7c7b\u578b\u4e2d\u7684\u4efb\u4f55\u4e00\u79cd\n\nFramework\n \u2014\u2014 \u4ee5\u4e00\u5b9a\u76ee\u5f55\u7ed3\u6784\u7ec4\u7ec7\u8d44\u6e90\u548c\u5934\u6587\u4ef6\u7684\u4e00\u79cd\u52a8\u6001\u5e93\n\n\nMach-O\u955c\u50cf\u6587\u4ef6\n\n\n\u901a\u5e38\u88ab\u5212\u5206\u6210\u6bb5(\nsegment\n)\uff1a\n__TEXT\n\u3001\n__DATA\n\u3001\n__LINKEDIT\n\n\n\u4e00\u4e2a\u6bb5\u901a\u5e38\u7531\u591a\u4e2a\u9875(\npage\n)\u6784\u6210\uff0c\u9875\u5927\u5c0f\u7531\u786c\u4ef6\u51b3\u5b9a\uff0c\narm64\n\u673a\u5668\u4e0a\u7684\u9875\u662f16KB, \u5176\u5b83\u673a\u5668\u4e0a\u7684\u9875\u5927\u5c0f\u4e3a4KB\u3002\n\n\n\u533a\u57df(\nsection\n)\u662f\u6bb5(\nsegment\n)\u7684\u5c40\u90e8\uff0c\u7f16\u8bd1\u5668\u4e00\u822c\u4e0d\u4f1a\u8003\u8651\u8fd9\u4e2a\u6982\u5ff5\u3002\u5b83\u4eec\u5f7c\u6b64\u4e4b\u95f4\u4e0d\u80fd\u91cd\u53e0\u3002\n\n\n__TEXT\n\u6bb5\u662f\u4e8c\u8fdb\u5236\u7684\u5934\u90e8\uff0c\u7528\u6765\u5b58\u653eMach\u5934\u4fe1\u606f\u3001\u673a\u5668\u547d\u4ee4\u6216\u8005\u5e38\u91cf\uff0c\u53ea\u8bfb\u3002\n\n\n__DATA\n\u6bb5\u5b58\u653e\u5168\u5c40\u53d8\u91cf\uff0c\u53ef\u8bfb\u5199\u3002\n\n\n__LINKEDIT\n\u6bb5\u5305\u542b\u600e\u4e48\u88c5\u8f7d\u7a0b\u5e8f\u7684\n\u5143\u6570\u636e\n, \u50cf\u51fd\u6570\u3001\u53d8\u91cf\u7684\u540d\u79f0\u548c\u5730\u5740\u3002\n\n\nMach-O Universal\u6587\u4ef6\n\n\n\u628a\u9488\u5bf9\u4e0d\u540c\u5e73\u53f0\u7684\u591a\u4e2aMach-O\u6587\u4ef6\u5408\u5e76\u5230\u4e00\u4e2a\u6587\u4ef6\u91cc\u9762\uff0c\u6709\u4e00\u4e2a\nFat Header\n\u4fe1\u606f\u533a\u5b58\u653e\u6240\u6709\u67b6\u6784\u548c\u5bf9\u5c31\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u5728\u6574\u4e2a\u6587\u4ef6\u4e2d\u7684\u504f\u79fb\u5730\u5740\u3002\n\n\n\u865a\u62df\u5185\u5b58\u57fa\u7840\n\n\n\u8f6f\u4ef6\u4e2d\u7684\u95ee\u9898\u90fd\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u4e2d\u95f4\u5c42\u6765\u89e3\u51b3\uff0c\u865a\u62df\u5185\u5b58\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u4e0d\u540c\u8fdb\u7a0b\u7684\u903b\u8f91\u5730\u5740\u7075\u6d3b\u7684\u6620\u5c04\u5230\u7269\u7406\u5185\u5b58\u5730\u5740\u7684\u95ee\u9898\u800c\u5b58\u5728\u7684\u3002\u4e0d\u540c\u8fdb\u7a0b\u7684\u903b\u8f91\u5730\u5740\u53ef\u4ee5\u88ab\u865a\u62df\u5185\u5b58\u7cfb\u7edf\u6620\u5c04\u5230\u4e0d\u540c\u6216\u8005\u76f8\u540c\u7684\u7269\u7406\u5185\u5b58\u4e2d\uff0c\u4ece\u800c\u5b9e\u73b0\u4e92\u65a5\u6216\u5171\u4eab\u7684\u529f\u80fd\u3002\u6211\u4eec\u524d\u9762\u6240\u63d0\u5230\u7684\u52a8\u6001\u5e93\u5728\u4e0d\u540c\u8fdb\u7a0b\u95f4\u7684\u5171\u4eab\u5c31\u53ef\u4ee5\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8fdb\u884c\u3002\u6bcf\u4e00\u4e2a\u9875\u90fd\u53ef\u4ee5\u88ab\u8bbe\u7f6e\u4e3a\n\u8bfb\n\u3001\n\u5199\n\u3001\n\u6267\u884c\n\u7684\u4efb\u610f\u7ec4\u5408\u6765\u9650\u5236\u5176\u8bbf\u95ee\u6743\u9650\u3002\n\n\nASLR\n \u2014\u2014 \u5730\u5740\u7a7a\u95f4\u5e03\u5c40\u968f\u673a\uff0c\u955c\u50cf\u88ab\u52a0\u8f7d\u8fdb\u5185\u5b58\u7a7a\u95f4\u4e2d\u7684\u968f\u673a\u4f4d\u7f6e\n\n\n\u4ee3\u7801\u7b7e\u540d\n \u2014\u2014 \u6bcf\u4e00\u9875\u7684\u6570\u636e\u90fd\u88ab\u54c8\u5e0c\u7b97\u6cd5\u5904\u7406\u8fc7\uff0c\u5f53\u9875\u9762\u52a0\u8f7d\u8fdb\u5185\u5b58\u65f6\u4f1a\u88ab\u6821\u9a8c\uff0c\u8fd9\u4e9b\u54c8\u5e0c\u503c\u90fd\u88ab\u5b58\u653e\u5728\n__LINKEDIT\n\u6bb5\u4e2d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u786e\u4fdd\u6821\u9a8c\u6bcf\u4e00\u9875\u6570\u636e\uff0c\u4fdd\u8bc1\u7a0b\u5e8f\u8fd0\u884c\u7684\u5b89\u5168\u6027\u3002\n\n\nMach-O\u4e8c\u8fdb\u5236\u6587\u4ef6\u5982\u4f55\u52a0\u8f7d\u548c\u51c6\u5907\n\n\nExec()\n \u2014\u2014 \u662f\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u3002\n\ndyld\n \u2014\u2014 \u8d1f\u8d23\u52a0\u8f7d\u52a8\u6001\u5e93\u3002\n\n\n\u7cfb\u7edf\u628a\u5e94\u7528\u6620\u5c04\u5230\u5185\u5b58\u540e\u4f1a\u52a0\u8f7d\ndyld\n\u6765\u8d1f\u8d23\u52a0\u8f7d\u5e94\u7528\u4f9d\u8d56\u7684\u5176\u5b83\u52a8\u6001\u5e93\u3002\n\n\n\n\n\u5206\u6790\u51fa\u5e94\u7528\u8fd0\u884c\u9700\u8981\u4f9d\u8d56\u7684\u52a8\u6001\u5e93\u3002\u4ece\u5df2\u7ecf\u52a0\u8f7d\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u5934\u90e8\u4fe1\u606f\u4e2d\u83b7\u53d6\u3002\n\n\n\u67e5\u627e\u6240\u6709\u4f9d\u8d56\u7684\u52a8\u6001\u5e93\u7684\u4f4d\u7f6e\uff0c\u627e\u5230\u5bf9\u5e94\u7684Mach-O\u6587\u4ef6\uff0c\u6253\u5f00\u5e76\u6821\u9a8c\u4ee3\u7801\u7b7e\u540d\u3002\n\n\n\u6ce8\u518c\u4f9d\u8d56\u5e93\u7684\u4ee3\u7801\u7b7e\u540d\u5230\u5185\u6838\u4e2d\uff0c\u4e4b\u540e\u8c03\u7528\nmmap\n\u6620\u5c04\u52a8\u6001\u5e93\u7684\u6bcf\u4e00\u4e2a\u6bb5\u5230\u7269\u7406\u5185\u5b58\u4e2d\u3002\n\n\n\u5728\u8fd9\u4e2a\u52a0\u8f7d\u4f9d\u8d56\u5e93\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f9d\u8d56\u5e93\u672c\u8eab\u4e5f\u4f1a\u4f9d\u8d56\u5176\u5b83\u7684\u5e93\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8fc7\u7a0b\u4f1a\u9012\u5f52\u6267\u884c\u3002\u5728\u52a0\u8f7d\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u4e9b\u5df2\u7ecf\u52a0\u8f7d\u7684\u5e93\u4e0d\u4f1a\u88ab\u91cd\u65b0\u52a0\u8f7d\uff0c\u5927\u90e8\u5206\u90fd\u662f\u7cfb\u7edf\u5e93\u3002\n\n\n\n\nRebasng And Binding\n\n\nRebasing\n \u2014\u2014 \u7531\u4e8e\u5e94\u7528\u662f\u88ab\u968f\u673a\u52a0\u8f7d\u5230\u7269\u7406\u5730\u5740\u91cc\u7684\uff0c\u6240\u4ee5\u4e00\u4e9b\u5185\u90e8\u5730\u5740\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\u4e00\u4e0b\u5bf9\u5e94\u7684\u504f\u79fb\u91cf\u6765\u8c03\u6574\u6b63\u786e\u6307\u5411\u3002\n\n\nbinding\n \u2014\u2014 \u5e94\u7528\u5185\u7684\u6307\u9488\u6307\u5411\u5e94\u7528\u5916\u90e8\u7684\u7b26\u53f7\uff0c\u627e\u5230\u8fd9\u4e2a\u5916\u90e8\u7b26\u53f7\u540e\uff0c\u9700\u8981\u5c06\u8fd9\u4e2a\u6307\u9488\u4e0e\u8fd9\u4e2a\u7b26\u53f7\u7684\u5bf9\u5e94\u5730\u5740\u8fdb\u884c\u7ed1\u5b9a\u3002\n\n\nObjective-C \u662f\u4e00\u79cd\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\uff0c\u5b83\u5b9a\u4e49\u7684\u6240\u6709\u7c7b\u90fd\u5728\u4e00\u4e2a\u5168\u5c40\u8868\u4e2d\u6ce8\u518c\u540e\u4f7f\u7528\u3002\n\n\nUnique Selector\n\n\n\u611f\u89c9\u548c\u7c7b\u65b9\u6cd5\u662f\u7b49\u4ef7\u7684\u3002 +load() \u6216\u8005 +initialize()\n\n\n\u5b9e\u8df5\n\n\n\u600e\u6837\u6d4b\u91cf\u65f6\u95f4\n\n\n\u4e0d\u540c\u5e73\u53f0\u7684\u6807\u51c6\u4e0d\u540c\uff0c\u4f46\u5927\u81f4\u4e0a\niPhone(400ms)\n\u3001\niPad(500ms)\n\u4ee5\u5185\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u6807\u51c6\u3002\u56e0\u4e3a\u5e94\u7528\u88ab\u6253\u5f00\u65f6\uff0c\u7cfb\u7edf\u4f1a\u6709\u4e00\u6bb5\u52a8\u753b\u6765\u5b8c\u6210\u5e73\u6ed1\u8fc7\u6e21\uff0c\u5728\u8fd9\u6bb5\u52a8\u753b\u65f6\u95f4\u5185\u90fd\u53ef\u4ee5\u7b97\u662f\u4e0d\u9519\u7684\u542f\u52a8\u65f6\u95f4\u3002\u8fd9\u4e2a\u52a8\u753b\u7684\u65f6\u95f4\u5927\u81f4\u662f\n400ms\n\u3002\u5e94\u7528\u5982\u679c\u542f\u52a8\u65f6\u95f4\u8d85\u8fc7\n20s\n\u4f1a\u88ab\u7cfb\u7edf\u6740\u6b7b\u3002\n\n\n\u5982\u679c\u5e94\u7528\u542f\u52a8\u592a\u6162\uff0c\u7cfb\u7edf\u770b\u95e8\u72d7\u4f1a\u7ed3\u675f\u5e94\u7528\uff0cXCode\u8c03\u8bd5\u65f6\u4e0d\u542f\u7528\u7cfb\u7edf\u770b\u95e8\u72d7\u3002\n\n\n\n\n\n\n\n\n\u573a\u666f\n\n\n\u770b\u95e8\u72d7\u5b9a\u65f6\n\n\n\n\n\n\n\n\n\n\n\u542f\u52a8\n\n\n20\u79d2\n\n\n\n\n\n\n\u540e\u53f0\u6062\u590d\n\n\n10\u79d2\n\n\n\n\n\n\n\u6302\u8d77\n\n\n10\u79d2\n\n\n\n\n\n\n\u9000\u51fa\n\n\n6\u79d2\n\n\n\n\n\n\n\u80cc\u666f\u4efb\u52a1\n\n\n10\u5206\u949f\n\n\n\n\n\n\n\n\n\u70ed\u542f\u52a8\u548c\u51b7\u542f\u52a8\n\n\n\n\n\n\n\u70ed\u542f\u52a8 \u2014\u2014 \u5e94\u7528\u5df2\u7ecf\u5728\u5185\u5b58\u7684\u60c5\u51b5\u4e0b\u88ab\u8c03\u8d77\n\n\n\n\n\n\n\u51b7\u542f\u52a8 \u2014\u2014 \u5e94\u7528\u5b8c\u5168\u4e0d\u5728\u5185\u5b58\u6216\u7f13\u5b58\u4e2d\u7684\u60c5\u51b5\u4e0b\u88ab\u8c03\u8d77\n\n\n\n\n\n\n\u6211\u4eec\u6d4b\u91cf\u542f\u52a8\u65f6\u95f4\u662f\u4ee5\u51b7\u542f\u52a8\u65f6\u95f4\u4e3a\u51c6\u7684\u3002\u8fd9\u901a\u5e38\u9700\u8981\u91cd\u65b0\u542f\u52a8\u8bbe\u5907\u3002\n\n\n\u6d4b\u91cfmain()\u51fd\u6570\u8c03\u7528\u524d\u6240\u82b1\u8d39\u7684\u65f6\u95f4\n\n\nDyld\n\u6709\u5185\u5efa\u7684\u6d4b\u8bd5\u673a\u5236\u3002\u53ef\u4ee5\u5728\u9879\u76ee\u4e2d\u8bbe\u7f6e\nDYLD_PRINT_STATICTICS\n\u4e3a\n1\n\u6765\u5f00\u542f\u7edf\u8ba1\u529f\u80fd\u3002\n\n\n\u8bbe\u7f6e\u9879\u76ee\u7684\u542f\u52a8\u65f6\u95f4\u7edf\u8ba1\u76f8\u5173\u7684\u73af\u5883\u53d8\u91cf\uff0c\u5982\u4e0b\u56fe\uff1a\n\n\n\n\n\u9700\u8981\u673a\u5668\u91cd\u65b0\u542f\u52a8\u540e\uff0c\u786e\u4fdd\u6d4b\u8bd5\u65f6\u957f\u6bd4\u8f83\u51c6\u786e\uff0c\u5373\u51b7\u542f\u52a8\u3002\n\n\n\u51b7\u542f\u52a8\u7edf\u8ba1\u7ed3\u679c\u5982\u4e0b\u56fe:\n\n\n\n\n\u4f18\u5316\u542f\u52a8\u65f6\u95f4\u7684\u65b9\u6cd5\n\n\n\n\n\u907f\u514d\u94fe\u63a5\u4e0d\u5fc5\u8981\u7684framework\n\n\nOptional\u7c7b\u578b\u7684framework\u4f1a\u4f7f\u94fe\u63a5\u5668\u6709\u4e00\u4e9b\u989d\u5916\u7684\u6d88\u8017\uff0c\u5c3d\u91cf\u5c11\u7528\n\n\n\u907f\u514d\u521b\u5efa\u5168\u5c40C++\u5bf9\u8c61\uff0c\u907f\u514d\u5728\n+load()\n\u65b9\u6cd5\u4e2d\u8fd0\u884c\u4ee3\u7801(\u7c7b\u52a0\u8f7d\u65f6)\uff0c\u800c\u653e\u5230\n+initialize()\n\u4e2d(\u7c7b\u88ab\u9996\u6b21\u521d\u59cb\u5316\u65f6\u4f1a\u88ab\u8c03\u7528)\n\n\n\u628a\u5e94\u7528\u5f15\u5165\u7684\u52a8\u6001\u5e93\u5408\u5e76\u540e\u8fdb\u884c\u52a0\u8f7d\u3002\n\n\n\u4f7f\u7528\ndlopen\n\u628a\u5e93\u7684\u52a0\u8f7d\u65f6\u673a\u63a8\u8fdf\u4e00\u4e9b\uff0c\u4f46\u4e0d\u63a8\u8350\uff0c\u56e0\u4e3a\u4f1a\u5f15\u8d77\u5f88\u591a\u95ee\u9898\u3002\n\n\n\u5c3d\u91cf\u4f7f\u7528swift\uff0c\u56e0\u4e3aswift\u8003\u8651\u4e86\u8fd9\u4e9b\u56e0\u7d20\u3002\n\n\n\u51cf\u5c11Objc\u7684\u7c7b\u7684\u6570\u91cf\n\n\n\u7f16\u8bd1\u5668\u9009\u9879\u6dfb\u52a0`Wglobal-constructors\n\n\n\u6392\u9664\u9759\u6001\u521d\u59cb\u5316\n\n\n\n\n\u53c2\u8003\u89c6\u9891\uff1a\n\n\n\n\n\n\nWWDC 2012 - iOS App Performance Responsiveness\n\n\n\n\n\n\nWWDC 2016 - Optimizing App Startup Time", 
            "title": "Optimizing App Startup Time"
        }, 
        {
            "location": "/tech/Optimizing App Startup Time/#_1", 
            "text": "\u8fde\u63a5\u548c\u88c5\u8f7d    UIKit\u521d\u59cb\u5316    \u5e94\u7528\u7a0b\u5e8f\u56de\u8c03    \u5f00\u673a\u52a8\u753b\u5c55\u73b0", 
            "title": "\u5e94\u7528\u7684\u542f\u52a8\u8fc7\u7a0b"
        }, 
        {
            "location": "/tech/Optimizing App Startup Time/#-main", 
            "text": "", 
            "title": "\u7406\u8bba - main()\u51fd\u6570\u6267\u884c\u524d\u53d1\u751f\u7684\u4e8b\u60c5"
        }, 
        {
            "location": "/tech/Optimizing App Startup Time/#mach-o", 
            "text": "", 
            "title": "Mach-O\u683c\u5f0f"
        }, 
        {
            "location": "/tech/Optimizing App Startup Time/#_2", 
            "text": "Executable  \u2014\u2014 \u5e94\u7528\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6  Dylib  \u2014\u2014 \u52a8\u6001\u5e93\uff0c\u4f8b\u5982: DSOs/DLLs  Bundle  \u2014\u2014 \u4e0d\u80fd\u88ab\u94fe\u63a5\u7684\u52a8\u6001\u5e93\uff0c\u53ea\u80fd\u5728\u8fd0\u884c\u65f6\u7528dlopen()\u51fd\u6570\u52a0\u8f7d\uff0c\u4f8b\u5982\uff1a\u63d2\u4ef6   image  \u2014\u2014 \u53ef\u4ee5\u662f\u4e0a\u9762\u63d0\u5230\u7684\u4e09\u79cd\u7c7b\u578b\u4e2d\u7684\u4efb\u4f55\u4e00\u79cd Framework  \u2014\u2014 \u4ee5\u4e00\u5b9a\u76ee\u5f55\u7ed3\u6784\u7ec4\u7ec7\u8d44\u6e90\u548c\u5934\u6587\u4ef6\u7684\u4e00\u79cd\u52a8\u6001\u5e93", 
            "title": "\u6587\u4ef6\u7c7b\u578b"
        }, 
        {
            "location": "/tech/Optimizing App Startup Time/#mach-o_1", 
            "text": "\u901a\u5e38\u88ab\u5212\u5206\u6210\u6bb5( segment )\uff1a __TEXT \u3001 __DATA \u3001 __LINKEDIT  \u4e00\u4e2a\u6bb5\u901a\u5e38\u7531\u591a\u4e2a\u9875( page )\u6784\u6210\uff0c\u9875\u5927\u5c0f\u7531\u786c\u4ef6\u51b3\u5b9a\uff0c arm64 \u673a\u5668\u4e0a\u7684\u9875\u662f16KB, \u5176\u5b83\u673a\u5668\u4e0a\u7684\u9875\u5927\u5c0f\u4e3a4KB\u3002  \u533a\u57df( section )\u662f\u6bb5( segment )\u7684\u5c40\u90e8\uff0c\u7f16\u8bd1\u5668\u4e00\u822c\u4e0d\u4f1a\u8003\u8651\u8fd9\u4e2a\u6982\u5ff5\u3002\u5b83\u4eec\u5f7c\u6b64\u4e4b\u95f4\u4e0d\u80fd\u91cd\u53e0\u3002  __TEXT \u6bb5\u662f\u4e8c\u8fdb\u5236\u7684\u5934\u90e8\uff0c\u7528\u6765\u5b58\u653eMach\u5934\u4fe1\u606f\u3001\u673a\u5668\u547d\u4ee4\u6216\u8005\u5e38\u91cf\uff0c\u53ea\u8bfb\u3002  __DATA \u6bb5\u5b58\u653e\u5168\u5c40\u53d8\u91cf\uff0c\u53ef\u8bfb\u5199\u3002  __LINKEDIT \u6bb5\u5305\u542b\u600e\u4e48\u88c5\u8f7d\u7a0b\u5e8f\u7684 \u5143\u6570\u636e , \u50cf\u51fd\u6570\u3001\u53d8\u91cf\u7684\u540d\u79f0\u548c\u5730\u5740\u3002", 
            "title": "Mach-O\u955c\u50cf\u6587\u4ef6"
        }, 
        {
            "location": "/tech/Optimizing App Startup Time/#mach-o-universal", 
            "text": "\u628a\u9488\u5bf9\u4e0d\u540c\u5e73\u53f0\u7684\u591a\u4e2aMach-O\u6587\u4ef6\u5408\u5e76\u5230\u4e00\u4e2a\u6587\u4ef6\u91cc\u9762\uff0c\u6709\u4e00\u4e2a Fat Header \u4fe1\u606f\u533a\u5b58\u653e\u6240\u6709\u67b6\u6784\u548c\u5bf9\u5c31\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u5728\u6574\u4e2a\u6587\u4ef6\u4e2d\u7684\u504f\u79fb\u5730\u5740\u3002", 
            "title": "Mach-O Universal\u6587\u4ef6"
        }, 
        {
            "location": "/tech/Optimizing App Startup Time/#_3", 
            "text": "\u8f6f\u4ef6\u4e2d\u7684\u95ee\u9898\u90fd\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u4e2d\u95f4\u5c42\u6765\u89e3\u51b3\uff0c\u865a\u62df\u5185\u5b58\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u4e0d\u540c\u8fdb\u7a0b\u7684\u903b\u8f91\u5730\u5740\u7075\u6d3b\u7684\u6620\u5c04\u5230\u7269\u7406\u5185\u5b58\u5730\u5740\u7684\u95ee\u9898\u800c\u5b58\u5728\u7684\u3002\u4e0d\u540c\u8fdb\u7a0b\u7684\u903b\u8f91\u5730\u5740\u53ef\u4ee5\u88ab\u865a\u62df\u5185\u5b58\u7cfb\u7edf\u6620\u5c04\u5230\u4e0d\u540c\u6216\u8005\u76f8\u540c\u7684\u7269\u7406\u5185\u5b58\u4e2d\uff0c\u4ece\u800c\u5b9e\u73b0\u4e92\u65a5\u6216\u5171\u4eab\u7684\u529f\u80fd\u3002\u6211\u4eec\u524d\u9762\u6240\u63d0\u5230\u7684\u52a8\u6001\u5e93\u5728\u4e0d\u540c\u8fdb\u7a0b\u95f4\u7684\u5171\u4eab\u5c31\u53ef\u4ee5\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8fdb\u884c\u3002\u6bcf\u4e00\u4e2a\u9875\u90fd\u53ef\u4ee5\u88ab\u8bbe\u7f6e\u4e3a \u8bfb \u3001 \u5199 \u3001 \u6267\u884c \u7684\u4efb\u610f\u7ec4\u5408\u6765\u9650\u5236\u5176\u8bbf\u95ee\u6743\u9650\u3002  ASLR  \u2014\u2014 \u5730\u5740\u7a7a\u95f4\u5e03\u5c40\u968f\u673a\uff0c\u955c\u50cf\u88ab\u52a0\u8f7d\u8fdb\u5185\u5b58\u7a7a\u95f4\u4e2d\u7684\u968f\u673a\u4f4d\u7f6e  \u4ee3\u7801\u7b7e\u540d  \u2014\u2014 \u6bcf\u4e00\u9875\u7684\u6570\u636e\u90fd\u88ab\u54c8\u5e0c\u7b97\u6cd5\u5904\u7406\u8fc7\uff0c\u5f53\u9875\u9762\u52a0\u8f7d\u8fdb\u5185\u5b58\u65f6\u4f1a\u88ab\u6821\u9a8c\uff0c\u8fd9\u4e9b\u54c8\u5e0c\u503c\u90fd\u88ab\u5b58\u653e\u5728 __LINKEDIT \u6bb5\u4e2d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u786e\u4fdd\u6821\u9a8c\u6bcf\u4e00\u9875\u6570\u636e\uff0c\u4fdd\u8bc1\u7a0b\u5e8f\u8fd0\u884c\u7684\u5b89\u5168\u6027\u3002", 
            "title": "\u865a\u62df\u5185\u5b58\u57fa\u7840"
        }, 
        {
            "location": "/tech/Optimizing App Startup Time/#mach-o_2", 
            "text": "Exec()  \u2014\u2014 \u662f\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u3002 dyld  \u2014\u2014 \u8d1f\u8d23\u52a0\u8f7d\u52a8\u6001\u5e93\u3002  \u7cfb\u7edf\u628a\u5e94\u7528\u6620\u5c04\u5230\u5185\u5b58\u540e\u4f1a\u52a0\u8f7d dyld \u6765\u8d1f\u8d23\u52a0\u8f7d\u5e94\u7528\u4f9d\u8d56\u7684\u5176\u5b83\u52a8\u6001\u5e93\u3002   \u5206\u6790\u51fa\u5e94\u7528\u8fd0\u884c\u9700\u8981\u4f9d\u8d56\u7684\u52a8\u6001\u5e93\u3002\u4ece\u5df2\u7ecf\u52a0\u8f7d\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u5934\u90e8\u4fe1\u606f\u4e2d\u83b7\u53d6\u3002  \u67e5\u627e\u6240\u6709\u4f9d\u8d56\u7684\u52a8\u6001\u5e93\u7684\u4f4d\u7f6e\uff0c\u627e\u5230\u5bf9\u5e94\u7684Mach-O\u6587\u4ef6\uff0c\u6253\u5f00\u5e76\u6821\u9a8c\u4ee3\u7801\u7b7e\u540d\u3002  \u6ce8\u518c\u4f9d\u8d56\u5e93\u7684\u4ee3\u7801\u7b7e\u540d\u5230\u5185\u6838\u4e2d\uff0c\u4e4b\u540e\u8c03\u7528 mmap \u6620\u5c04\u52a8\u6001\u5e93\u7684\u6bcf\u4e00\u4e2a\u6bb5\u5230\u7269\u7406\u5185\u5b58\u4e2d\u3002  \u5728\u8fd9\u4e2a\u52a0\u8f7d\u4f9d\u8d56\u5e93\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f9d\u8d56\u5e93\u672c\u8eab\u4e5f\u4f1a\u4f9d\u8d56\u5176\u5b83\u7684\u5e93\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8fc7\u7a0b\u4f1a\u9012\u5f52\u6267\u884c\u3002\u5728\u52a0\u8f7d\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u4e9b\u5df2\u7ecf\u52a0\u8f7d\u7684\u5e93\u4e0d\u4f1a\u88ab\u91cd\u65b0\u52a0\u8f7d\uff0c\u5927\u90e8\u5206\u90fd\u662f\u7cfb\u7edf\u5e93\u3002", 
            "title": "Mach-O\u4e8c\u8fdb\u5236\u6587\u4ef6\u5982\u4f55\u52a0\u8f7d\u548c\u51c6\u5907"
        }, 
        {
            "location": "/tech/Optimizing App Startup Time/#rebasng-and-binding", 
            "text": "Rebasing  \u2014\u2014 \u7531\u4e8e\u5e94\u7528\u662f\u88ab\u968f\u673a\u52a0\u8f7d\u5230\u7269\u7406\u5730\u5740\u91cc\u7684\uff0c\u6240\u4ee5\u4e00\u4e9b\u5185\u90e8\u5730\u5740\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\u4e00\u4e0b\u5bf9\u5e94\u7684\u504f\u79fb\u91cf\u6765\u8c03\u6574\u6b63\u786e\u6307\u5411\u3002  binding  \u2014\u2014 \u5e94\u7528\u5185\u7684\u6307\u9488\u6307\u5411\u5e94\u7528\u5916\u90e8\u7684\u7b26\u53f7\uff0c\u627e\u5230\u8fd9\u4e2a\u5916\u90e8\u7b26\u53f7\u540e\uff0c\u9700\u8981\u5c06\u8fd9\u4e2a\u6307\u9488\u4e0e\u8fd9\u4e2a\u7b26\u53f7\u7684\u5bf9\u5e94\u5730\u5740\u8fdb\u884c\u7ed1\u5b9a\u3002  Objective-C \u662f\u4e00\u79cd\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\uff0c\u5b83\u5b9a\u4e49\u7684\u6240\u6709\u7c7b\u90fd\u5728\u4e00\u4e2a\u5168\u5c40\u8868\u4e2d\u6ce8\u518c\u540e\u4f7f\u7528\u3002", 
            "title": "Rebasng And Binding"
        }, 
        {
            "location": "/tech/Optimizing App Startup Time/#unique-selector", 
            "text": "\u611f\u89c9\u548c\u7c7b\u65b9\u6cd5\u662f\u7b49\u4ef7\u7684\u3002 +load() \u6216\u8005 +initialize()", 
            "title": "Unique Selector"
        }, 
        {
            "location": "/tech/Optimizing App Startup Time/#_4", 
            "text": "", 
            "title": "\u5b9e\u8df5"
        }, 
        {
            "location": "/tech/Optimizing App Startup Time/#_5", 
            "text": "\u4e0d\u540c\u5e73\u53f0\u7684\u6807\u51c6\u4e0d\u540c\uff0c\u4f46\u5927\u81f4\u4e0a iPhone(400ms) \u3001 iPad(500ms) \u4ee5\u5185\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u6807\u51c6\u3002\u56e0\u4e3a\u5e94\u7528\u88ab\u6253\u5f00\u65f6\uff0c\u7cfb\u7edf\u4f1a\u6709\u4e00\u6bb5\u52a8\u753b\u6765\u5b8c\u6210\u5e73\u6ed1\u8fc7\u6e21\uff0c\u5728\u8fd9\u6bb5\u52a8\u753b\u65f6\u95f4\u5185\u90fd\u53ef\u4ee5\u7b97\u662f\u4e0d\u9519\u7684\u542f\u52a8\u65f6\u95f4\u3002\u8fd9\u4e2a\u52a8\u753b\u7684\u65f6\u95f4\u5927\u81f4\u662f 400ms \u3002\u5e94\u7528\u5982\u679c\u542f\u52a8\u65f6\u95f4\u8d85\u8fc7 20s \u4f1a\u88ab\u7cfb\u7edf\u6740\u6b7b\u3002  \u5982\u679c\u5e94\u7528\u542f\u52a8\u592a\u6162\uff0c\u7cfb\u7edf\u770b\u95e8\u72d7\u4f1a\u7ed3\u675f\u5e94\u7528\uff0cXCode\u8c03\u8bd5\u65f6\u4e0d\u542f\u7528\u7cfb\u7edf\u770b\u95e8\u72d7\u3002     \u573a\u666f  \u770b\u95e8\u72d7\u5b9a\u65f6      \u542f\u52a8  20\u79d2    \u540e\u53f0\u6062\u590d  10\u79d2    \u6302\u8d77  10\u79d2    \u9000\u51fa  6\u79d2    \u80cc\u666f\u4efb\u52a1  10\u5206\u949f", 
            "title": "\u600e\u6837\u6d4b\u91cf\u65f6\u95f4"
        }, 
        {
            "location": "/tech/Optimizing App Startup Time/#_6", 
            "text": "\u70ed\u542f\u52a8 \u2014\u2014 \u5e94\u7528\u5df2\u7ecf\u5728\u5185\u5b58\u7684\u60c5\u51b5\u4e0b\u88ab\u8c03\u8d77    \u51b7\u542f\u52a8 \u2014\u2014 \u5e94\u7528\u5b8c\u5168\u4e0d\u5728\u5185\u5b58\u6216\u7f13\u5b58\u4e2d\u7684\u60c5\u51b5\u4e0b\u88ab\u8c03\u8d77    \u6211\u4eec\u6d4b\u91cf\u542f\u52a8\u65f6\u95f4\u662f\u4ee5\u51b7\u542f\u52a8\u65f6\u95f4\u4e3a\u51c6\u7684\u3002\u8fd9\u901a\u5e38\u9700\u8981\u91cd\u65b0\u542f\u52a8\u8bbe\u5907\u3002", 
            "title": "\u70ed\u542f\u52a8\u548c\u51b7\u542f\u52a8"
        }, 
        {
            "location": "/tech/Optimizing App Startup Time/#main", 
            "text": "Dyld \u6709\u5185\u5efa\u7684\u6d4b\u8bd5\u673a\u5236\u3002\u53ef\u4ee5\u5728\u9879\u76ee\u4e2d\u8bbe\u7f6e DYLD_PRINT_STATICTICS \u4e3a 1 \u6765\u5f00\u542f\u7edf\u8ba1\u529f\u80fd\u3002  \u8bbe\u7f6e\u9879\u76ee\u7684\u542f\u52a8\u65f6\u95f4\u7edf\u8ba1\u76f8\u5173\u7684\u73af\u5883\u53d8\u91cf\uff0c\u5982\u4e0b\u56fe\uff1a   \u9700\u8981\u673a\u5668\u91cd\u65b0\u542f\u52a8\u540e\uff0c\u786e\u4fdd\u6d4b\u8bd5\u65f6\u957f\u6bd4\u8f83\u51c6\u786e\uff0c\u5373\u51b7\u542f\u52a8\u3002  \u51b7\u542f\u52a8\u7edf\u8ba1\u7ed3\u679c\u5982\u4e0b\u56fe:", 
            "title": "\u6d4b\u91cfmain()\u51fd\u6570\u8c03\u7528\u524d\u6240\u82b1\u8d39\u7684\u65f6\u95f4"
        }, 
        {
            "location": "/tech/Optimizing App Startup Time/#_7", 
            "text": "\u907f\u514d\u94fe\u63a5\u4e0d\u5fc5\u8981\u7684framework  Optional\u7c7b\u578b\u7684framework\u4f1a\u4f7f\u94fe\u63a5\u5668\u6709\u4e00\u4e9b\u989d\u5916\u7684\u6d88\u8017\uff0c\u5c3d\u91cf\u5c11\u7528  \u907f\u514d\u521b\u5efa\u5168\u5c40C++\u5bf9\u8c61\uff0c\u907f\u514d\u5728 +load() \u65b9\u6cd5\u4e2d\u8fd0\u884c\u4ee3\u7801(\u7c7b\u52a0\u8f7d\u65f6)\uff0c\u800c\u653e\u5230 +initialize() \u4e2d(\u7c7b\u88ab\u9996\u6b21\u521d\u59cb\u5316\u65f6\u4f1a\u88ab\u8c03\u7528)  \u628a\u5e94\u7528\u5f15\u5165\u7684\u52a8\u6001\u5e93\u5408\u5e76\u540e\u8fdb\u884c\u52a0\u8f7d\u3002  \u4f7f\u7528 dlopen \u628a\u5e93\u7684\u52a0\u8f7d\u65f6\u673a\u63a8\u8fdf\u4e00\u4e9b\uff0c\u4f46\u4e0d\u63a8\u8350\uff0c\u56e0\u4e3a\u4f1a\u5f15\u8d77\u5f88\u591a\u95ee\u9898\u3002  \u5c3d\u91cf\u4f7f\u7528swift\uff0c\u56e0\u4e3aswift\u8003\u8651\u4e86\u8fd9\u4e9b\u56e0\u7d20\u3002  \u51cf\u5c11Objc\u7684\u7c7b\u7684\u6570\u91cf  \u7f16\u8bd1\u5668\u9009\u9879\u6dfb\u52a0`Wglobal-constructors  \u6392\u9664\u9759\u6001\u521d\u59cb\u5316   \u53c2\u8003\u89c6\u9891\uff1a    WWDC 2012 - iOS App Performance Responsiveness    WWDC 2016 - Optimizing App Startup Time", 
            "title": "\u4f18\u5316\u542f\u52a8\u65f6\u95f4\u7684\u65b9\u6cd5"
        }, 
        {
            "location": "/tech/OpenVPN on Raspberry Pi/", 
            "text": "", 
            "title": "OpenVPN on Raspberry Pi"
        }, 
        {
            "location": "/tech/swift on client and server/", 
            "text": "Swift On Server End\n\n\nWWDC 2016 - Going Server-side with Swift Open Source\n\n\nIBM Swift Sandbox\n\n\nIBM Bluemix \n Kitura\n\n\nSwift End to End\n\n\n\n\nIBM Cloud Tools for Swift \n\n\nIBM Swift Package Manager Catalog", 
            "title": "Swift on client and server"
        }, 
        {
            "location": "/tech/swift on client and server/#swift-on-server-end", 
            "text": "WWDC 2016 - Going Server-side with Swift Open Source  IBM Swift Sandbox  IBM Bluemix   Kitura", 
            "title": "Swift On Server End"
        }, 
        {
            "location": "/tech/swift on client and server/#swift-end-to-end", 
            "text": "IBM Cloud Tools for Swift   IBM Swift Package Manager Catalog", 
            "title": "Swift End to End"
        }, 
        {
            "location": "/tech/my hardware/", 
            "text": "\u82b1\u751f\u58f3\u52a8\u6001\u57df\u540d\n\n\nzhulongyixian.vicp.cc\n\n\n\u8def\u7531\u5668\u7aef\u53e3\u6620\u5c04\n\n\nRaspberry Pi 3 Model B+\n\n\n\n\nHost IP: 192.168.0.200\n\n\nSSH Port: 22 -\n 22\n\n\nHTTP Port: 80 -\n 8000\n\n\nHTTPs Port: 5000 -\n 443\n\n\nGogs Port: 3000 -\n 30237\n\n\n\n\n\n\n\n\nUSB-Armory inversePath\n\n\n\n\nHost IP: 192.168.0.202\n\n\nSSH Port: 22 -\n 8004\n\n\n\n\n\n\n\n\nMacBook Pro (Retina, 13-inch, Early 2015)\n\n\n\n\nHost IP: 192.168.0.201\n\n\nSSH Port: 22 -\n 8001\n\n\nHTTP Port: 80 -\n 8002\n\n\nGogs Port: 3000 -\n 8003\n\n\n\n\n\n\n\n\n\u9b45\u84ddNote 2\n\n\n\n\nHost IP: 192.168.0.203\n\n\nSSH Port: 22 -\n 8005\n\n\n\n\n\n\n\n\nSSH config file\n\n\nSG9zdCBtYwogIEhvc3ROYW1lIHd3dy5vb2Jienlvby5jb20KICBVc2VyIGpva2VyCgpIb3N0IGthbGkKCUhvc3ROYW1lIHpodWxvbmd5aXhpYW4udmljcC5jYwoJVXNlciByb290CiAgICBQb3J0IDgwMDQKCkhvc3QgcGhvbmUKICAgIEhvc3ROYW1lIHpodWxvbmd5aXhpYW4udmljcC5jYwogICAgVXNlciBhbmRyb2lkCiAgICBQb3J0IDgwMDUKCkhvc3QgcGkKICAgIEhvc3ROYW1lIHpodWxvbmd5aXhpYW4udmljcC5jYwogICAgVXNlciBwaQo=", 
            "title": "My hardware"
        }, 
        {
            "location": "/tech/my hardware/#_1", 
            "text": "zhulongyixian.vicp.cc", 
            "title": "\u82b1\u751f\u58f3\u52a8\u6001\u57df\u540d"
        }, 
        {
            "location": "/tech/my hardware/#_2", 
            "text": "", 
            "title": "\u8def\u7531\u5668\u7aef\u53e3\u6620\u5c04"
        }, 
        {
            "location": "/tech/my hardware/#raspberry-pi-3-model-b", 
            "text": "Host IP: 192.168.0.200  SSH Port: 22 -  22  HTTP Port: 80 -  8000  HTTPs Port: 5000 -  443  Gogs Port: 3000 -  30237", 
            "title": "Raspberry Pi 3 Model B+"
        }, 
        {
            "location": "/tech/my hardware/#usb-armory-inversepath", 
            "text": "Host IP: 192.168.0.202  SSH Port: 22 -  8004", 
            "title": "USB-Armory inversePath"
        }, 
        {
            "location": "/tech/my hardware/#macbook-pro-retina-13-inch-early-2015", 
            "text": "Host IP: 192.168.0.201  SSH Port: 22 -  8001  HTTP Port: 80 -  8002  Gogs Port: 3000 -  8003", 
            "title": "MacBook Pro (Retina, 13-inch, Early 2015)"
        }, 
        {
            "location": "/tech/my hardware/#note-2", 
            "text": "Host IP: 192.168.0.203  SSH Port: 22 -  8005", 
            "title": "\u9b45\u84ddNote 2"
        }, 
        {
            "location": "/tech/my hardware/#ssh-config-file", 
            "text": "SG9zdCBtYwogIEhvc3ROYW1lIHd3dy5vb2Jienlvby5jb20KICBVc2VyIGpva2VyCgpIb3N0IGthbGkKCUhvc3ROYW1lIHpodWxvbmd5aXhpYW4udmljcC5jYwoJVXNlciByb290CiAgICBQb3J0IDgwMDQKCkhvc3QgcGhvbmUKICAgIEhvc3ROYW1lIHpodWxvbmd5aXhpYW4udmljcC5jYwogICAgVXNlciBhbmRyb2lkCiAgICBQb3J0IDgwMDUKCkhvc3QgcGkKICAgIEhvc3ROYW1lIHpodWxvbmd5aXhpYW4udmljcC5jYwogICAgVXNlciBwaQo=", 
            "title": "SSH config file"
        }, 
        {
            "location": "/tech/kotlin/", 
            "text": "\u5b89\u88c5\u6700\u65b0JDK\n\n\n\u6839\u636e\u4e0d\u540c\u5e73\u53f0\u5b89\u88c5\u6700\u65b0JDK: \n\u4e0b\u8f7dJDK\n\n\n\u914d\u7f6e\u73af\u5883JDK\u53d8\u91cf:\n\n\n\n\nLinux: \n~/.bashrc\n\u4e2d\u6dfb\u52a0\u4e0b\u9762\u7684\u73af\u5883\u53d8\u91cf\u914d\u7f6e\n\n\nMacOS: \n~/.bash_profile\n\u4e2d\u6dfb\u52a0\u4e0b\u9762\u7684\u73af\u5883\u53d8\u91cf\u914d\u7f6e\n\n\n\n\nexport JAVA_HOME=\nJDK Dir\n\nexport PATH=$JAVA_HOME/bin:$PATH\nexport CLASSPATH=.:JAVA_HOME/lib/dt.jar:JAVA_HOME/lib/tools.jar\n\n\n\n\n\u4fdd\u5b58\u540e\uff0c\u4f7f\u73af\u5883\u53d8\u91cf\u914d\u7f6e\u751f\u6548\n\n\nsource ~/.bashrc   # Linux\n\n\n\n\nKotlin \u5b89\u88c5\u811a\u672c(Unix/Linux), \u5e76\u6d4b\u8bd5\u662f\u5426\u5b89\u88c5\u6210\u529f\n\n\n# !/usr/bin/env bash\n# \u53c2\u8003: https://kotlinlang.org/docs/tutorials/command-line.html\n# \u6700\u6c42: JDK\u5b89\u88c5\u6700\u65b0\u7248\n\nsudo apt-get install -y zip\ncurl -s https://get.sdkman.io | bash\nsource ~/.sdkman/bin/sdkman-init.sh\nsdk install kotlin\nsource ~/.bashrc\necho \nfun main(args: Array\nString\n) { println(\\\nHello, World!\\\n) }\n \n hello.kt\nkotlinc hello.kt -include-runtime -d hello.jar\njava -jar hello.jar", 
            "title": "Kotlin"
        }, 
        {
            "location": "/tech/kotlin/#jdk", 
            "text": "\u6839\u636e\u4e0d\u540c\u5e73\u53f0\u5b89\u88c5\u6700\u65b0JDK:  \u4e0b\u8f7dJDK  \u914d\u7f6e\u73af\u5883JDK\u53d8\u91cf:   Linux:  ~/.bashrc \u4e2d\u6dfb\u52a0\u4e0b\u9762\u7684\u73af\u5883\u53d8\u91cf\u914d\u7f6e  MacOS:  ~/.bash_profile \u4e2d\u6dfb\u52a0\u4e0b\u9762\u7684\u73af\u5883\u53d8\u91cf\u914d\u7f6e   export JAVA_HOME= JDK Dir \nexport PATH=$JAVA_HOME/bin:$PATH\nexport CLASSPATH=.:JAVA_HOME/lib/dt.jar:JAVA_HOME/lib/tools.jar  \u4fdd\u5b58\u540e\uff0c\u4f7f\u73af\u5883\u53d8\u91cf\u914d\u7f6e\u751f\u6548  source ~/.bashrc   # Linux", 
            "title": "\u5b89\u88c5\u6700\u65b0JDK"
        }, 
        {
            "location": "/tech/kotlin/#kotlin-unixlinux", 
            "text": "# !/usr/bin/env bash\n# \u53c2\u8003: https://kotlinlang.org/docs/tutorials/command-line.html\n# \u6700\u6c42: JDK\u5b89\u88c5\u6700\u65b0\u7248\n\nsudo apt-get install -y zip\ncurl -s https://get.sdkman.io | bash\nsource ~/.sdkman/bin/sdkman-init.sh\nsdk install kotlin\nsource ~/.bashrc\necho  fun main(args: Array String ) { println(\\ Hello, World!\\ ) }    hello.kt\nkotlinc hello.kt -include-runtime -d hello.jar\njava -jar hello.jar", 
            "title": "Kotlin \u5b89\u88c5\u811a\u672c(Unix/Linux), \u5e76\u6d4b\u8bd5\u662f\u5426\u5b89\u88c5\u6210\u529f"
        }, 
        {
            "location": "/tech/Convert MP4 to GIF With FFmpeg/", 
            "text": "\u5b89\u88c5ffmpegffmpeg\n\n\n\n\nsudo apt-get install ffmpeg\n\n\n\n\n\n\n\u4f7f\u7528\n\n\n\n\nffmpeg -t 3.6 -ss 00:00:01 -i Screencast_2016-01-13-17-01-38.mp4  small-clip.gif\n\n\n\n\n\u6ce8\u91ca\uff1a3.6\u662f\u79d2\u6570\uff0c00:00:01\u662f\u5f00\u59cb\u65f6\u95f4\u3002 \n\n\nFFmpeg\u4f7f\u7528\u8bf4\u660e\n\n\n$ ffmpeg --help\nffmpeg version 3.1.4 Copyright (c) 2000-2016 the FFmpeg developers\n  built with Apple LLVM version 8.0.0 (clang-800.0.42.1)\n  configuration: --prefix=/usr/local/Cellar/ffmpeg/3.1.4 --enable-shared --enable-pthreads --enable-gpl --enable-version3 --enable-hardcoded-tables --enable-avresample --cc=clang --host-cflags= --host-ldflags= --enable-opencl --enable-libx264 --enable-libmp3lame --enable-libxvid --enable-libfreetype --enable-libvorbis --enable-libvpx --enable-libass --enable-libfdk-aac --enable-libopus --enable-libx265 --disable-lzma --enable-nonfree --enable-vda\n  libavutil      55. 28.100 / 55. 28.100\n  libavcodec     57. 48.101 / 57. 48.101\n  libavformat    57. 41.100 / 57. 41.100\n  libavdevice    57.  0.101 / 57.  0.101\n  libavfilter     6. 47.100 /  6. 47.100\n  libavresample   3.  0.  0 /  3.  0.  0\n  libswscale      4.  1.100 /  4.  1.100\n  libswresample   2.  1.100 /  2.  1.100\n  libpostproc    54.  0.100 / 54.  0.100\nHyper fast Audio and Video encoder\nusage: ffmpeg [options] [[infile options] -i infile]... {[outfile options] outfile}...\n\nGetting help:\n    -h      -- print basic options\n    -h long -- print more options\n    -h full -- print all options (including all format and codec specific options, very long)\n    -h type=name -- print all options for the named decoder/encoder/demuxer/muxer/filter\n    See man ffmpeg for detailed description of the options.\n\nPrint help / information / capabilities:\n-L                  show license\n-h topic            show help\n-? topic            show help\n-help topic         show help\n--help topic        show help\n-version            show version\n-buildconf          show build configuration\n-formats            show available formats\n-devices            show available devices\n-codecs             show available codecs\n-decoders           show available decoders\n-encoders           show available encoders\n-bsfs               show available bit stream filters\n-protocols          show available protocols\n-filters            show available filters\n-pix_fmts           show available pixel formats\n-layouts            show standard channel layouts\n-sample_fmts        show available audio sample formats\n-colors             show available color names\n-opencl_bench       run benchmark on all OpenCL devices and show results\n-sources device     list sources of the input device\n-sinks device       list sinks of the output device\n-hwaccels           show available HW acceleration methods\n\nGlobal options (affect whole program instead of just one file:\n-loglevel loglevel  set logging level\n-v loglevel         set logging level\n-report             generate a report\n-max_alloc bytes    set maximum size of a single allocated block\n-opencl_options     set OpenCL environment options\n-y                  overwrite output files\n-n                  never overwrite output files\n-ignore_unknown     Ignore unknown stream types\n-stats              print progress report during encoding\n-max_error_rate ratio of errors (0.0: no errors, 1.0: 100% error  maximum error rate\n-bits_per_raw_sample number  set the number of bits per raw sample\n-vol volume         change audio volume (256=normal)\n\nPer-file main options:\n-f fmt              force format\n-c codec            codec name\n-codec codec        codec name\n-pre preset         preset name\n-map_metadata outfile[,metadata]:infile[,metadata]  set metadata information of outfile from infile\n-t duration         record or transcode \nduration\n seconds of audio/video\n-to time_stop       record or transcode stop time\n-fs limit_size      set the limit file size in bytes\n-ss time_off        set the start time offset\n-sseof time_off     set the start time offset relative to EOF\n-seek_timestamp     enable/disable seeking by timestamp with -ss\n-timestamp time     set the recording timestamp ('now' to set the current time)\n-metadata string=string  add metadata\n-program title=string:st=number...  add program with specified streams\n-target type        specify target file type (\nvcd\n, \nsvcd\n, \ndvd\n, \ndv\n or \ndv50\n with optional prefixes \npal-\n, \nntsc-\n or \nfilm-\n)\n-apad               audio pad\n-frames number      set the number of frames to output\n-filter filter_graph  set stream filtergraph\n-filter_script filename  read stream filtergraph description from a file\n-reinit_filter      reinit filtergraph on input parameter changes\n-discard            discard\n-disposition        disposition\n\nVideo options:\n-vframes number     set the number of video frames to output\n-r rate             set frame rate (Hz value, fraction or abbreviation)\n-s size             set frame size (WxH or abbreviation)\n-aspect aspect      set aspect ratio (4:3, 16:9 or 1.3333, 1.7777)\n-bits_per_raw_sample number  set the number of bits per raw sample\n-vn                 disable video\n-vcodec codec       force video codec ('copy' to copy stream)\n-timecode hh:mm:ss[:;.]ff  set initial TimeCode value.\n-pass n             select the pass number (1 to 3)\n-vf filter_graph    set video filters\n-ab bitrate         audio bitrate (please use -b:a)\n-b bitrate          video bitrate (please use -b:v)\n-dn                 disable data\n\nAudio options:\n-aframes number     set the number of audio frames to output\n-aq quality         set audio quality (codec-specific)\n-ar rate            set audio sampling rate (in Hz)\n-ac channels        set number of audio channels\n-an                 disable audio\n-acodec codec       force audio codec ('copy' to copy stream)\n-vol volume         change audio volume (256=normal)\n-af filter_graph    set audio filters\n\nSubtitle options:\n-s size             set frame size (WxH or abbreviation)\n-sn                 disable subtitle\n-scodec codec       force subtitle codec ('copy' to copy stream)\n-stag fourcc/tag    force subtitle tag/fourcc\n-fix_sub_duration   fix subtitles duration\n-canvas_size size   set canvas size (WxH or abbreviation)\n-spre preset        set the subtitle options to the indicated preset", 
            "title": "Convert MP4 to GIF With FFmpeg"
        }, 
        {
            "location": "/tech/Convert MP4 to GIF With FFmpeg/#ffmpeg", 
            "text": "$ ffmpeg --help\nffmpeg version 3.1.4 Copyright (c) 2000-2016 the FFmpeg developers\n  built with Apple LLVM version 8.0.0 (clang-800.0.42.1)\n  configuration: --prefix=/usr/local/Cellar/ffmpeg/3.1.4 --enable-shared --enable-pthreads --enable-gpl --enable-version3 --enable-hardcoded-tables --enable-avresample --cc=clang --host-cflags= --host-ldflags= --enable-opencl --enable-libx264 --enable-libmp3lame --enable-libxvid --enable-libfreetype --enable-libvorbis --enable-libvpx --enable-libass --enable-libfdk-aac --enable-libopus --enable-libx265 --disable-lzma --enable-nonfree --enable-vda\n  libavutil      55. 28.100 / 55. 28.100\n  libavcodec     57. 48.101 / 57. 48.101\n  libavformat    57. 41.100 / 57. 41.100\n  libavdevice    57.  0.101 / 57.  0.101\n  libavfilter     6. 47.100 /  6. 47.100\n  libavresample   3.  0.  0 /  3.  0.  0\n  libswscale      4.  1.100 /  4.  1.100\n  libswresample   2.  1.100 /  2.  1.100\n  libpostproc    54.  0.100 / 54.  0.100\nHyper fast Audio and Video encoder\nusage: ffmpeg [options] [[infile options] -i infile]... {[outfile options] outfile}...\n\nGetting help:\n    -h      -- print basic options\n    -h long -- print more options\n    -h full -- print all options (including all format and codec specific options, very long)\n    -h type=name -- print all options for the named decoder/encoder/demuxer/muxer/filter\n    See man ffmpeg for detailed description of the options.\n\nPrint help / information / capabilities:\n-L                  show license\n-h topic            show help\n-? topic            show help\n-help topic         show help\n--help topic        show help\n-version            show version\n-buildconf          show build configuration\n-formats            show available formats\n-devices            show available devices\n-codecs             show available codecs\n-decoders           show available decoders\n-encoders           show available encoders\n-bsfs               show available bit stream filters\n-protocols          show available protocols\n-filters            show available filters\n-pix_fmts           show available pixel formats\n-layouts            show standard channel layouts\n-sample_fmts        show available audio sample formats\n-colors             show available color names\n-opencl_bench       run benchmark on all OpenCL devices and show results\n-sources device     list sources of the input device\n-sinks device       list sinks of the output device\n-hwaccels           show available HW acceleration methods\n\nGlobal options (affect whole program instead of just one file:\n-loglevel loglevel  set logging level\n-v loglevel         set logging level\n-report             generate a report\n-max_alloc bytes    set maximum size of a single allocated block\n-opencl_options     set OpenCL environment options\n-y                  overwrite output files\n-n                  never overwrite output files\n-ignore_unknown     Ignore unknown stream types\n-stats              print progress report during encoding\n-max_error_rate ratio of errors (0.0: no errors, 1.0: 100% error  maximum error rate\n-bits_per_raw_sample number  set the number of bits per raw sample\n-vol volume         change audio volume (256=normal)\n\nPer-file main options:\n-f fmt              force format\n-c codec            codec name\n-codec codec        codec name\n-pre preset         preset name\n-map_metadata outfile[,metadata]:infile[,metadata]  set metadata information of outfile from infile\n-t duration         record or transcode  duration  seconds of audio/video\n-to time_stop       record or transcode stop time\n-fs limit_size      set the limit file size in bytes\n-ss time_off        set the start time offset\n-sseof time_off     set the start time offset relative to EOF\n-seek_timestamp     enable/disable seeking by timestamp with -ss\n-timestamp time     set the recording timestamp ('now' to set the current time)\n-metadata string=string  add metadata\n-program title=string:st=number...  add program with specified streams\n-target type        specify target file type ( vcd ,  svcd ,  dvd ,  dv  or  dv50  with optional prefixes  pal- ,  ntsc-  or  film- )\n-apad               audio pad\n-frames number      set the number of frames to output\n-filter filter_graph  set stream filtergraph\n-filter_script filename  read stream filtergraph description from a file\n-reinit_filter      reinit filtergraph on input parameter changes\n-discard            discard\n-disposition        disposition\n\nVideo options:\n-vframes number     set the number of video frames to output\n-r rate             set frame rate (Hz value, fraction or abbreviation)\n-s size             set frame size (WxH or abbreviation)\n-aspect aspect      set aspect ratio (4:3, 16:9 or 1.3333, 1.7777)\n-bits_per_raw_sample number  set the number of bits per raw sample\n-vn                 disable video\n-vcodec codec       force video codec ('copy' to copy stream)\n-timecode hh:mm:ss[:;.]ff  set initial TimeCode value.\n-pass n             select the pass number (1 to 3)\n-vf filter_graph    set video filters\n-ab bitrate         audio bitrate (please use -b:a)\n-b bitrate          video bitrate (please use -b:v)\n-dn                 disable data\n\nAudio options:\n-aframes number     set the number of audio frames to output\n-aq quality         set audio quality (codec-specific)\n-ar rate            set audio sampling rate (in Hz)\n-ac channels        set number of audio channels\n-an                 disable audio\n-acodec codec       force audio codec ('copy' to copy stream)\n-vol volume         change audio volume (256=normal)\n-af filter_graph    set audio filters\n\nSubtitle options:\n-s size             set frame size (WxH or abbreviation)\n-sn                 disable subtitle\n-scodec codec       force subtitle codec ('copy' to copy stream)\n-stag fourcc/tag    force subtitle tag/fourcc\n-fix_sub_duration   fix subtitles duration\n-canvas_size size   set canvas size (WxH or abbreviation)\n-spre preset        set the subtitle options to the indicated preset", 
            "title": "FFmpeg\u4f7f\u7528\u8bf4\u660e"
        }, 
        {
            "location": "/life/alipay-scan-fu-icon/", 
            "text": "\u8fc7\u5e74\u96c6\u798f\u5361\u4e4b\u4eba\u54c1\u7bc7\n\n\n\u4eca\u5e74\u963f\u91cc\u7684\u798f\u5361\u6d3b\u52a8\uff0c\u6211\u5904\u7406\u51fa\u6765\u7684\u6a21\u677f\u7167\u7247\uff0c\u8d34\u4e00\u4e0b\uff0c\u4f9b\u81ea\u5df1\u4f7f\u7528\n\n\n\n\n\u76ee\u524d\u6211\u96c6\u7684\u798f\u5361\n\n\n\n\n\u4e0b\u9762\u662f\u4e94\u798f\u7684\u4e8c\u503c\u5316\u56fe\u50cf\uff0c\u65b9\u4fbf\u624b\u673a\u968f\u65f6\u626b\u63cf\n\n\n\n\n\n\n\n\n\u7231\u56fd\u798f\n\n\n\u5bcc\u5f3a\u798f\n\n\n\u548c\u8c10\u798f\n\n\n\u53cb\u5584\u798f\n\n\n\u656c\u4e1a\u798f\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u5982\u679c\u6709\u798f\u5361\u8d60\u9001\uff0c\u8bf7\u52a0\u597d\u53cb\n\n\n\n\n\u6216\u8005\u4f7f\u7528\u53e3\u4ee4\n\n\n\u5fae\u4fe1/QQ:\n#\u5431\u53e3\u4ee4#\u590d\u5236\u6d88\u606f\uff0c\u3010\u8bf7\u4f60\u8d50\u6211\u4e00\u5f20\u656c\u4e1a\u798f\u3011QyzU7j05yn\u3010\u652f\u4ed8\u5b9d\uff0c\u8fc7\u798f\u5e74\u3011", 
            "title": "Alipay scan fu icon"
        }, 
        {
            "location": "/life/alipay-scan-fu-icon/#_1", 
            "text": "\u4eca\u5e74\u963f\u91cc\u7684\u798f\u5361\u6d3b\u52a8\uff0c\u6211\u5904\u7406\u51fa\u6765\u7684\u6a21\u677f\u7167\u7247\uff0c\u8d34\u4e00\u4e0b\uff0c\u4f9b\u81ea\u5df1\u4f7f\u7528   \u76ee\u524d\u6211\u96c6\u7684\u798f\u5361", 
            "title": "\u8fc7\u5e74\u96c6\u798f\u5361\u4e4b\u4eba\u54c1\u7bc7"
        }, 
        {
            "location": "/life/alipay-scan-fu-icon/#_2", 
            "text": "\u7231\u56fd\u798f  \u5bcc\u5f3a\u798f  \u548c\u8c10\u798f  \u53cb\u5584\u798f  \u656c\u4e1a\u798f", 
            "title": "\u4e0b\u9762\u662f\u4e94\u798f\u7684\u4e8c\u503c\u5316\u56fe\u50cf\uff0c\u65b9\u4fbf\u624b\u673a\u968f\u65f6\u626b\u63cf"
        }, 
        {
            "location": "/life/alipay-scan-fu-icon/#_3", 
            "text": "", 
            "title": "\u5982\u679c\u6709\u798f\u5361\u8d60\u9001\uff0c\u8bf7\u52a0\u597d\u53cb"
        }, 
        {
            "location": "/life/alipay-scan-fu-icon/#_4", 
            "text": "\u5fae\u4fe1/QQ: #\u5431\u53e3\u4ee4#\u590d\u5236\u6d88\u606f\uff0c\u3010\u8bf7\u4f60\u8d50\u6211\u4e00\u5f20\u656c\u4e1a\u798f\u3011QyzU7j05yn\u3010\u652f\u4ed8\u5b9d\uff0c\u8fc7\u798f\u5e74\u3011", 
            "title": "\u6216\u8005\u4f7f\u7528\u53e3\u4ee4"
        }, 
        {
            "location": "/life/Renting in Beijing/", 
            "text": "\u6e05\u534e\u4e1c\u8def\u7532\u4e03\u53f7\u96621\u53f7\u697c1202\u5ba4 - \u9694\u9633\n\n\n\u56e0\u4e3a\u662f\u5408\u79df\u623f\uff0c\u8d39\u7528\u5206\u62c5\u9700\u8981\u548c\u5404\u6237\u5546\u91cf\u597d\n\n\n\u6c34\u8d39\n\n\n\u53a8\u623f\u548c\u6d17\u624b\u95f4\u5404\u6709\u4e00\u4e2a\u6c34\u8868\uff0c\u901a\u8fc7\u8868\u6570\u5dee\u4e58\u4ee5\u6c34\u8d39\u8d39\u7387\u8ba1\u7b97\u3002\u5317\u4eac\u5e02\u6c34\u8d39\u8d39\u7387\u8bf7\u81ea\u884c\u641c\u7d22\u3002\n\n\n\u7535\u8d39\n\n\n\u7535\u8d39\u7f34\u7eb3\u8fd8\u4e0d\u80fd\u901a\u8fc7\u7f51\u7edc\u7684\u65b9\u5f0f\uff0c\u662f\u901a\u8fc7\u5230\u6307\u5b9a\u7684\u5730\u70b9\u7ed9\u7535\u5361\u5145\u503c\u8d2d\u7535\u540e\u63d2\u5165\u4f4f\u6237\u7535\u8868\u53d6\u7535\u7684\u65b9\u5f0f\u8fdb\u884c\u7684\u3002\n\n\n\u7535\u5361\u5145\u503c\u5730\u70b9\n\n\n\u5730\u5740: \n\u82b1\u56ed\u8def1\u53f7\u9662\u5185\uff0c\u5854\u9662\u5199\u5b57\u697c\u897f\u8fb9\u7684\u697c\u91cc\u7684\u4e09\u5c42\u6700\u91cc\u9762\u7684\u5c4b\u5b50\n\n\n\u53ef\u4ee5\u4ece\n\u540c\u89c2\u5546\u4e1a\u4e2d\u5fc3\n\u6b63\u5bf9\u7740\u7684\u5c0f\u533a\u5165\u53e3\u8fdb\u53bb\u5bfb\u627e, \u7ec6\u7bad\u5934\u662f\u5c0f\u533a\u5165\u53e3\n\n\n\n\n\u5145\u7535\u5361\u5355\u4f4d\u5de5\u4f5c\u65f6\u95f4\uff1a\n\n\n\u5468\u4e00\u81f3\u5468\u4e94\n\n\n\n\n\n\n\u4e0a\u5348: 8:00 - 12:00\n\n\n\n\n\n\n\u4e0b\u5348: 2:00 - 6:00\n\n\n\n\n\n\n\u5bbd\u5e26\u8d39\u7528\n\n\n~~\u7f51\u8d39\u53ef\u4ee5\u4f7f\u7528\u5fae\u4fe1\u751f\u6d3b\u7f34\u8d39\u529f\u80fd\u67e5\u8be2\u548c\u7f34\u7eb3\uff1a\n11531803\n~~\n (\u7531\u4e8e\u5f00\u6237\u4eba\u590f\u6653\u7490\u5e10\u6237\u53d8\u66f4\u505c\u7528\u8be5\u4e0a\u7f51\u5e10\u53f7)\n\n\n\u9700\u8981\u81ea\u884c\u5f00\u901a\u7f51\u7edc\u5e10\u53f7, \u6700\u597d\u662f\u4e2a\u4eba\u5e10\u53f7\uff1a\n\n\n\n\n\u65b0\u5f00\u4e86\u4e00\u5e74\u7684\u957f\u57ce\u5bbd\u5e2650M, 880\u5143/\u5e74\uff0c \u6bd4\u539f\u6765\u7684\u8054\u901a\u8282\u7701\u4e86\u4e00\u534a\u7684\u8d39\u7528\uff0c\u4e0d\u77e5\u9053\u597d\u4e0d\u597d\u7528\uff0c\u5148\u8bd5\u7528\u4e00\u6bb5\u65f6\u95f4\u518d\u8bf4\n\n\n\n\n\u71c3\u6c14\u8d39\n\n\n\u53ef\u4ee5\u4f7f\u7528\u5fae\u4fe1\u751f\u6d3b\u7f34\u8d39\u529f\u80fd\u67e5\u8be2\u548c\u7f34\u7eb3\uff1a\n96577390000\n\n\n\u536b\u751f\u6ce8\u610f\u4e8b\u9879\n\n\n\n\n\n\n\u53a8\u623f\u4e0d\u8981\u5806\u79ef\u672a\u5403\u5b8c\u7684\u98df\u7269\uff0c\u4f1a\u5438\u5f15\u87d1\u8782\n\n\n\n\n\n\n\u5783\u573e\u4e0d\u8981\u653e\u5728\u5c4b\u5185\uff0c\u53ef\u4e34\u65f6\u653e\u4e8e\u95e8\u5916\uff0c\u4e0d\u8fc7\u6700\u597d\u7b2c\u4e8c\u5929\u5c31\u987a\u624b\u5e26\u5230\u697c\u4e0b\u7684\u5783\u573e\u6876\u91cc\n\n\n\n\n\n\n\u4e0a\u5b8c\u5395\u6240\uff0c\u8bf7\u628a\u7eb8\u653e\u5165\u5395\u7eb8\u6876\uff0c\u4e0d\u8981\u4e22\u5230\u5730\u4e0a\u6216\u8005\u7ba1\u9053\u4e0a\uff0c\u5f88\u96be\u6e05\u7406\uff0c\u6700\u597d\u5728\u5395\u7eb8\u6876\u5185\u5957\u4e2a\u5783\u573e\u888b\uff0c\u4fbf\u4e8e\u6e05\u6d01\n\n\n\n\n\n\n\u4e0b\u6c34\u9053\u7684\u8fc7\u6ee4\u5668\u662f\u4e3a\u4e86\u907f\u514d\u7ba1\u9053\u5835\u585e\u7528\u7684\uff0c\u53ef\u4ee5\u628a\u5934\u53d1\u4e1d\u6216\u8005\u522b\u7684\u5927\u5757\u7684\u7269\u54c1\u62e6\u4f4f\uff0c\u6211\u4eec\u4e0d\u8981\u4e3a\u4e86\u65b9\u4fbf\u5c31\u628a\u90a3\u4e2a\u53d6\u8d70\uff0c\u800c\u662f\u8981\u5728\u770b\u5230\u5835\u4e86\u4e4b\u540e\uff0c\u5b9a\u671f\u7684\u6e05\u7406\u8fc7\u6ee4\u5668\u3002\u540c\u6837\u7684\uff0c\u53a8\u623f\u7684\u51b2\u6d17\u6c60\u91cc\u4e5f\u6709\u4e00\u4e2a\u8fc7\u6ee4\u5668\uff0c\u540c\u6837\u7684\u5904\u7406\u65b9\u5f0f\u3002\n\n\n\n\n\n\n\u51b0\u7bb1\u662f\u516c\u7528\uff0c\u5927\u5bb6\u6309\u81ea\u5df1\u7684\u9700\u8981\u653e\u4e1c\u897f\uff0c\u4e0d\u8981\u5806\u6ee1\u6216\u8005\u5360\u7528\u592a\u591a\u7a7a\u95f4\uff0c\u7ed9\u5176\u5b83\u4eba\u4e5f\u7559\u70b9\u4f4d\u7f6e", 
            "title": "Renting in Beijing"
        }, 
        {
            "location": "/life/Renting in Beijing/#11202-", 
            "text": "\u56e0\u4e3a\u662f\u5408\u79df\u623f\uff0c\u8d39\u7528\u5206\u62c5\u9700\u8981\u548c\u5404\u6237\u5546\u91cf\u597d", 
            "title": "\u6e05\u534e\u4e1c\u8def\u7532\u4e03\u53f7\u96621\u53f7\u697c1202\u5ba4 - \u9694\u9633"
        }, 
        {
            "location": "/life/Renting in Beijing/#_1", 
            "text": "\u53a8\u623f\u548c\u6d17\u624b\u95f4\u5404\u6709\u4e00\u4e2a\u6c34\u8868\uff0c\u901a\u8fc7\u8868\u6570\u5dee\u4e58\u4ee5\u6c34\u8d39\u8d39\u7387\u8ba1\u7b97\u3002\u5317\u4eac\u5e02\u6c34\u8d39\u8d39\u7387\u8bf7\u81ea\u884c\u641c\u7d22\u3002", 
            "title": "\u6c34\u8d39"
        }, 
        {
            "location": "/life/Renting in Beijing/#_2", 
            "text": "\u7535\u8d39\u7f34\u7eb3\u8fd8\u4e0d\u80fd\u901a\u8fc7\u7f51\u7edc\u7684\u65b9\u5f0f\uff0c\u662f\u901a\u8fc7\u5230\u6307\u5b9a\u7684\u5730\u70b9\u7ed9\u7535\u5361\u5145\u503c\u8d2d\u7535\u540e\u63d2\u5165\u4f4f\u6237\u7535\u8868\u53d6\u7535\u7684\u65b9\u5f0f\u8fdb\u884c\u7684\u3002", 
            "title": "\u7535\u8d39"
        }, 
        {
            "location": "/life/Renting in Beijing/#_3", 
            "text": "\u5730\u5740:  \u82b1\u56ed\u8def1\u53f7\u9662\u5185\uff0c\u5854\u9662\u5199\u5b57\u697c\u897f\u8fb9\u7684\u697c\u91cc\u7684\u4e09\u5c42\u6700\u91cc\u9762\u7684\u5c4b\u5b50  \u53ef\u4ee5\u4ece \u540c\u89c2\u5546\u4e1a\u4e2d\u5fc3 \u6b63\u5bf9\u7740\u7684\u5c0f\u533a\u5165\u53e3\u8fdb\u53bb\u5bfb\u627e, \u7ec6\u7bad\u5934\u662f\u5c0f\u533a\u5165\u53e3", 
            "title": "\u7535\u5361\u5145\u503c\u5730\u70b9"
        }, 
        {
            "location": "/life/Renting in Beijing/#_4", 
            "text": "\u5468\u4e00\u81f3\u5468\u4e94    \u4e0a\u5348: 8:00 - 12:00    \u4e0b\u5348: 2:00 - 6:00", 
            "title": "\u5145\u7535\u5361\u5355\u4f4d\u5de5\u4f5c\u65f6\u95f4\uff1a"
        }, 
        {
            "location": "/life/Renting in Beijing/#_5", 
            "text": "~~\u7f51\u8d39\u53ef\u4ee5\u4f7f\u7528\u5fae\u4fe1\u751f\u6d3b\u7f34\u8d39\u529f\u80fd\u67e5\u8be2\u548c\u7f34\u7eb3\uff1a 11531803 ~~\n (\u7531\u4e8e\u5f00\u6237\u4eba\u590f\u6653\u7490\u5e10\u6237\u53d8\u66f4\u505c\u7528\u8be5\u4e0a\u7f51\u5e10\u53f7)  \u9700\u8981\u81ea\u884c\u5f00\u901a\u7f51\u7edc\u5e10\u53f7, \u6700\u597d\u662f\u4e2a\u4eba\u5e10\u53f7\uff1a   \u65b0\u5f00\u4e86\u4e00\u5e74\u7684\u957f\u57ce\u5bbd\u5e2650M, 880\u5143/\u5e74\uff0c \u6bd4\u539f\u6765\u7684\u8054\u901a\u8282\u7701\u4e86\u4e00\u534a\u7684\u8d39\u7528\uff0c\u4e0d\u77e5\u9053\u597d\u4e0d\u597d\u7528\uff0c\u5148\u8bd5\u7528\u4e00\u6bb5\u65f6\u95f4\u518d\u8bf4", 
            "title": "\u5bbd\u5e26\u8d39\u7528"
        }, 
        {
            "location": "/life/Renting in Beijing/#_6", 
            "text": "\u53ef\u4ee5\u4f7f\u7528\u5fae\u4fe1\u751f\u6d3b\u7f34\u8d39\u529f\u80fd\u67e5\u8be2\u548c\u7f34\u7eb3\uff1a 96577390000", 
            "title": "\u71c3\u6c14\u8d39"
        }, 
        {
            "location": "/life/Renting in Beijing/#_7", 
            "text": "\u53a8\u623f\u4e0d\u8981\u5806\u79ef\u672a\u5403\u5b8c\u7684\u98df\u7269\uff0c\u4f1a\u5438\u5f15\u87d1\u8782    \u5783\u573e\u4e0d\u8981\u653e\u5728\u5c4b\u5185\uff0c\u53ef\u4e34\u65f6\u653e\u4e8e\u95e8\u5916\uff0c\u4e0d\u8fc7\u6700\u597d\u7b2c\u4e8c\u5929\u5c31\u987a\u624b\u5e26\u5230\u697c\u4e0b\u7684\u5783\u573e\u6876\u91cc    \u4e0a\u5b8c\u5395\u6240\uff0c\u8bf7\u628a\u7eb8\u653e\u5165\u5395\u7eb8\u6876\uff0c\u4e0d\u8981\u4e22\u5230\u5730\u4e0a\u6216\u8005\u7ba1\u9053\u4e0a\uff0c\u5f88\u96be\u6e05\u7406\uff0c\u6700\u597d\u5728\u5395\u7eb8\u6876\u5185\u5957\u4e2a\u5783\u573e\u888b\uff0c\u4fbf\u4e8e\u6e05\u6d01    \u4e0b\u6c34\u9053\u7684\u8fc7\u6ee4\u5668\u662f\u4e3a\u4e86\u907f\u514d\u7ba1\u9053\u5835\u585e\u7528\u7684\uff0c\u53ef\u4ee5\u628a\u5934\u53d1\u4e1d\u6216\u8005\u522b\u7684\u5927\u5757\u7684\u7269\u54c1\u62e6\u4f4f\uff0c\u6211\u4eec\u4e0d\u8981\u4e3a\u4e86\u65b9\u4fbf\u5c31\u628a\u90a3\u4e2a\u53d6\u8d70\uff0c\u800c\u662f\u8981\u5728\u770b\u5230\u5835\u4e86\u4e4b\u540e\uff0c\u5b9a\u671f\u7684\u6e05\u7406\u8fc7\u6ee4\u5668\u3002\u540c\u6837\u7684\uff0c\u53a8\u623f\u7684\u51b2\u6d17\u6c60\u91cc\u4e5f\u6709\u4e00\u4e2a\u8fc7\u6ee4\u5668\uff0c\u540c\u6837\u7684\u5904\u7406\u65b9\u5f0f\u3002    \u51b0\u7bb1\u662f\u516c\u7528\uff0c\u5927\u5bb6\u6309\u81ea\u5df1\u7684\u9700\u8981\u653e\u4e1c\u897f\uff0c\u4e0d\u8981\u5806\u6ee1\u6216\u8005\u5360\u7528\u592a\u591a\u7a7a\u95f4\uff0c\u7ed9\u5176\u5b83\u4eba\u4e5f\u7559\u70b9\u4f4d\u7f6e", 
            "title": "\u536b\u751f\u6ce8\u610f\u4e8b\u9879"
        }, 
        {
            "location": "/life/Gu Bei Shui Zhen/", 
            "text": "2017\u5e74\u53e4\u5317\u6c34\u9547\u56fd\u5e86\u65c5\u6e38\u8ba1\u5212\n\n\n\u884c\u7a0b\u4e24\u5929\uff1a\n\n\n2017.10.1 - 2017.10.2\n\n\n\u516c\u8f66\u4fe1\u606f:\n\n\n\n\n\u666f\u70b9\n\n\n\n\n\u53e4\u5317\u6c34\u9547\n\n\n\u53f8\u9a6c\u53f0\u957f\u57ce\n\n\n\n\n\u4f4f\u5bbf\n\n\n\u5367\u9f99\u5821\u5ba2\u6808 - 1.5\u7c73\u5927\u5e8a\u623f - \u53cc\b\u4eba\u65e9\u9910 - WiFi - 620\u5143/\u665a - \u53e4\u9547\u95e8\u7968\u4f18\u60e080\u5143/2(\u6309\u6807\u51c6\u5165\u4f4f\u4eba\u6570\u8ba1)\n\n\n\u6b63\u9910\n\n\n\u53cc\u4eba\u65e9\u9910\u514d\u8d39\u4e00\u5929\n\n\n\u8d39\u7528\u9884\u8ba1\n\n\n\u4f4f\u5bbf\uff1a 620\u5143\n\u5730\u94c1\uff1a 3\u5143 * 2 * 2 = 12 \u5143\n\u4e13\u7ebf\u8f66\u8d39\uff1a 48\u5143 * 2 = 96 \u5143\n\u53e4\u9547\u95e8\u7968\uff1a 80\u5143 * 2 = 169 \u5143\n\u53f8\u9a6c\u53f0\u957f\u57ce\u7968\uff1a 40\u5143 * 2 = 80 \u5143\n\n\n\n\n\u5171\u8ba1\uff1a  977 \u5143\n\n\n\n\n\u76ee\u524d\u6ca1\u6709\u8ba1\u5165\u81ea\u5907\u996e\u98df\u548c\u53ef\u9009\u6e29\u6cc9\u9879\u76ee\u8d39\u7528\n\n\n\n\n\u76f8\u5173\u94fe\u63a5\n\n\n\u5b98\u7f51\n\n\n\u5b9e\u9645\u82b1\u8d39\n\n\n\n\n\u81ea\u5907\u96f6\u98df\uff1a 49.02\u5143\n\n\n\u5730\u94c1\u51fa\u53d1\uff1a 4\u5143/\u4eba * 2 = 8 \u5143\n\n\n\u4e1c\u76f4\u95e8\u5230\u53e4\u5317\u6c34\u9547\u76f4\u8fbe\u8f66\uff1a48\u5143/\u4eba * 2\u4eba = 96 \u5143\n\n\n\u5367\u9f99\u5821\u5ba2\u6808\uff1a620\u5143/\u6807\u95f4(2\u4eba) * 1\u95f4 = 620 \u5143\n\n\n\u53e4\u9547\u6e38\u89c8\u7968(\u9547\u5185\u4f4f\u5bbf\u4f18\u60e0\u4ef7)\uff1a80\u5143/\u4eba * 2\u4eba = 160 \u5143\n\n\n\u7172\u4ed4\u996d\uff1a 38\u5143 * 1\u4efd = 38 \u5143\n\n\n\u519c\u592b\u5c71\u6cc9\uff1a3\u5143/\u74f6 * 3 \u74f6 = 9 \u5143\n\n\n\u53f8\u9a6c\u53f0\u957f\u57ce\u95e8\u7968\uff1a40\u5143/\u4eba * 2\u4eba = 80 \u5143\n\n\n\u8c46\u8150\u89d2\uff1a 15\u5143/\u4efd * 1\u4efd= 15 \u5143\n\n\n\u5bc6\u4e91\u5c0f\u70e7\u8089\uff1a204\u5143\n\n\n\u53e4\u5317\u6c34\u9547\u81f3\u4e1c\u76f4\u95e8\u76f4\u8fbe\u8f66\uff1a48\u5143/\u4eba * 2\u4eba = 96 \u5143\n\n\n\u4e1c\u76f4\u95e8\u81f3\u4f4f\u6240\uff1a 4\u5143/\u4eba * 2 \u4eba = 8 \u5143\n\n\n\u665a\u996d\uff08\u9ebb\u8fa3\u70eb\uff09\uff1a51\u5143\n\n\n\n\n\u5b9e\u9645\u5171\u7528\uff1a 1434.02 \u5143\n\n\n\u603b\u7ed3\uff1a\u9879\u76ee\u9884\u4f30\u8981\u4ee5\n1.5\uff5e2\n\u500d\u8ba1\u7b97\n\n\n\u6ca1\u6709\u4f53\u9a8c\u7684\u90e8\u5206\n\n\n\n\n\u6e29\u6cc9\u4f53\u9a8c\u7968\u6ca1\u6709\u7528\uff0c\u7531\u4e8e\u6ca1\u6709\u5e26\u6cf3\u8863\u53c8\u4e0d\u60f3\u79df\u8863\u670d\n\n\n\n\n\u53d1\u73b0\n\n\n\n\n\u5176\u5b9e\u53ef\u4ee5\u4e0d\u7528\u95e8\u7968\u8fdb\u5165\u9547\u5185\uff0c\u552e\u7968\u5927\u5385\u897f\u4fa7\u6709\u4e2a\u6e38\u5ba2\u51fa\u53e3\uff0c\u4e0d\u77e5\u9053\u662f\u5426\u53ef\u4ee5\u6df7\u5165\n\n\n\n\n\u76f8\u5173\u7968\u636e\n\n\n\n\n\n\n\u9644\u79c1\u7167\u4e00\u5f20", 
            "title": "Gu Bei Shui Zhen"
        }, 
        {
            "location": "/life/Gu Bei Shui Zhen/#2017", 
            "text": "\u884c\u7a0b\u4e24\u5929\uff1a  2017.10.1 - 2017.10.2", 
            "title": "2017\u5e74\u53e4\u5317\u6c34\u9547\u56fd\u5e86\u65c5\u6e38\u8ba1\u5212"
        }, 
        {
            "location": "/life/Gu Bei Shui Zhen/#_1", 
            "text": "", 
            "title": "\u516c\u8f66\u4fe1\u606f:"
        }, 
        {
            "location": "/life/Gu Bei Shui Zhen/#_2", 
            "text": "\u53e4\u5317\u6c34\u9547  \u53f8\u9a6c\u53f0\u957f\u57ce", 
            "title": "\u666f\u70b9"
        }, 
        {
            "location": "/life/Gu Bei Shui Zhen/#_3", 
            "text": "\u5367\u9f99\u5821\u5ba2\u6808 - 1.5\u7c73\u5927\u5e8a\u623f - \u53cc\b\u4eba\u65e9\u9910 - WiFi - 620\u5143/\u665a - \u53e4\u9547\u95e8\u7968\u4f18\u60e080\u5143/2(\u6309\u6807\u51c6\u5165\u4f4f\u4eba\u6570\u8ba1)", 
            "title": "\u4f4f\u5bbf"
        }, 
        {
            "location": "/life/Gu Bei Shui Zhen/#_4", 
            "text": "\u53cc\u4eba\u65e9\u9910\u514d\u8d39\u4e00\u5929", 
            "title": "\u6b63\u9910"
        }, 
        {
            "location": "/life/Gu Bei Shui Zhen/#_5", 
            "text": "\u4f4f\u5bbf\uff1a 620\u5143\n\u5730\u94c1\uff1a 3\u5143 * 2 * 2 = 12 \u5143\n\u4e13\u7ebf\u8f66\u8d39\uff1a 48\u5143 * 2 = 96 \u5143\n\u53e4\u9547\u95e8\u7968\uff1a 80\u5143 * 2 = 169 \u5143\n\u53f8\u9a6c\u53f0\u957f\u57ce\u7968\uff1a 40\u5143 * 2 = 80 \u5143   \u5171\u8ba1\uff1a  977 \u5143   \u76ee\u524d\u6ca1\u6709\u8ba1\u5165\u81ea\u5907\u996e\u98df\u548c\u53ef\u9009\u6e29\u6cc9\u9879\u76ee\u8d39\u7528", 
            "title": "\u8d39\u7528\u9884\u8ba1"
        }, 
        {
            "location": "/life/Gu Bei Shui Zhen/#_6", 
            "text": "\u5b98\u7f51", 
            "title": "\u76f8\u5173\u94fe\u63a5"
        }, 
        {
            "location": "/life/Gu Bei Shui Zhen/#_7", 
            "text": "\u81ea\u5907\u96f6\u98df\uff1a 49.02\u5143  \u5730\u94c1\u51fa\u53d1\uff1a 4\u5143/\u4eba * 2 = 8 \u5143  \u4e1c\u76f4\u95e8\u5230\u53e4\u5317\u6c34\u9547\u76f4\u8fbe\u8f66\uff1a48\u5143/\u4eba * 2\u4eba = 96 \u5143  \u5367\u9f99\u5821\u5ba2\u6808\uff1a620\u5143/\u6807\u95f4(2\u4eba) * 1\u95f4 = 620 \u5143  \u53e4\u9547\u6e38\u89c8\u7968(\u9547\u5185\u4f4f\u5bbf\u4f18\u60e0\u4ef7)\uff1a80\u5143/\u4eba * 2\u4eba = 160 \u5143  \u7172\u4ed4\u996d\uff1a 38\u5143 * 1\u4efd = 38 \u5143  \u519c\u592b\u5c71\u6cc9\uff1a3\u5143/\u74f6 * 3 \u74f6 = 9 \u5143  \u53f8\u9a6c\u53f0\u957f\u57ce\u95e8\u7968\uff1a40\u5143/\u4eba * 2\u4eba = 80 \u5143  \u8c46\u8150\u89d2\uff1a 15\u5143/\u4efd * 1\u4efd= 15 \u5143  \u5bc6\u4e91\u5c0f\u70e7\u8089\uff1a204\u5143  \u53e4\u5317\u6c34\u9547\u81f3\u4e1c\u76f4\u95e8\u76f4\u8fbe\u8f66\uff1a48\u5143/\u4eba * 2\u4eba = 96 \u5143  \u4e1c\u76f4\u95e8\u81f3\u4f4f\u6240\uff1a 4\u5143/\u4eba * 2 \u4eba = 8 \u5143  \u665a\u996d\uff08\u9ebb\u8fa3\u70eb\uff09\uff1a51\u5143   \u5b9e\u9645\u5171\u7528\uff1a 1434.02 \u5143  \u603b\u7ed3\uff1a\u9879\u76ee\u9884\u4f30\u8981\u4ee5 1.5\uff5e2 \u500d\u8ba1\u7b97", 
            "title": "\u5b9e\u9645\u82b1\u8d39"
        }, 
        {
            "location": "/life/Gu Bei Shui Zhen/#_8", 
            "text": "\u6e29\u6cc9\u4f53\u9a8c\u7968\u6ca1\u6709\u7528\uff0c\u7531\u4e8e\u6ca1\u6709\u5e26\u6cf3\u8863\u53c8\u4e0d\u60f3\u79df\u8863\u670d", 
            "title": "\u6ca1\u6709\u4f53\u9a8c\u7684\u90e8\u5206"
        }, 
        {
            "location": "/life/Gu Bei Shui Zhen/#_9", 
            "text": "\u5176\u5b9e\u53ef\u4ee5\u4e0d\u7528\u95e8\u7968\u8fdb\u5165\u9547\u5185\uff0c\u552e\u7968\u5927\u5385\u897f\u4fa7\u6709\u4e2a\u6e38\u5ba2\u51fa\u53e3\uff0c\u4e0d\u77e5\u9053\u662f\u5426\u53ef\u4ee5\u6df7\u5165", 
            "title": "\u53d1\u73b0"
        }, 
        {
            "location": "/life/Gu Bei Shui Zhen/#_10", 
            "text": "", 
            "title": "\u76f8\u5173\u7968\u636e"
        }, 
        {
            "location": "/life/Gu Bei Shui Zhen/#_11", 
            "text": "", 
            "title": "\u9644\u79c1\u7167\u4e00\u5f20"
        }, 
        {
            "location": "/music/whistle/", 
            "text": "Can you blow my whistle baby\n\n\nwhistle baby\n\n\nLet me know\n\n\nGirl I'm gonna show you how to do it\n\n\nAnd we start real slow\n\n\nYou just put your lips together\n\n\nAnd you come real close\n\n\nCan you blow my whistle baby\n\n\nwhistle baby\n\n\nHere we go \n\n\nLook, I'm betting you like bebop\n\n\nAnd I'm betting you love creep mode\n\n\nAnd I'm betting you like girls that give\nlove to girls\n\n\nAnd stroke your little ego\n\n\nI bet you I'm guilty your honor\n\n\nThat's just how we live in my genre\n\n\nWho in the hell done paved the road wider\n\n\nThere's only one flo, and one rida\n\n\nI'm a damn shame", 
            "title": "Whistle"
        }, 
        {
            "location": "/minecraft/minecraft/", 
            "text": "Minecraft \u6700\u65b0\u7248(1.12) \u81ea\u5efa\u4f53\u9a8c\n\n\n\n\n\u300aMinecraft\u300b\u662f\u4e00\u6b3e\u98ce\u9761\u5168\u7403\u7684\u9ad8\u81ea\u7531\u5ea6\u6c99\u76d2\u6e38\u620f\uff0c\u7531\u745e\u5178\nMojang AB\n\u548c\n4J Studios\n\u5f00\u53d1\uff0c\u4e8e2009\u5e745\u670813\u65e5\u53d1\u884c\u30022014\u5e7411\u67086\u65e5\uff0c\u8be5\u6e38\u620f\u88ab\u5fae\u8f6f\u6536\u8d2d\u30022016\u5e74\u7f51\u6613\u53d6\u5f97\u4e86\u8be5\u6e38\u620f\u5728\u4e2d\u56fd\u7684\u4ee3\u7406\u6743\u3002\n\n\n\u8be5\u4f5c\u4ee5\u6bcf\u4e00\u4e2a\u73a9\u5bb6\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u81ea\u7531\u5730\u521b\u9020\u548c\u7834\u574f\u4e0d\u540c\u79cd\u7c7b\u7684\u65b9\u5757\u4e3a\u4e3b\u9898\u3002\u73a9\u5bb6\u5728\u6e38\u620f\u4e2d\u53ef\u4ee5\u5728\u5355\u4eba\u6216\u591a\u4eba\u6a21\u5f0f\u4e2d\u901a\u8fc7\u6467\u6bc1\u6216\u521b\u9020\u65b9\u5757\u4ee5\u521b\u9020\u7cbe\u5999\u7edd\u4f26\u7684\u5efa\u7b51\u7269\u548c\u827a\u672f\uff0c\u6216\u8005\u6536\u96c6\u7269\u54c1\u63a2\u7d22\u5730\u56fe\u4ee5\u5b8c\u6210\u6e38\u620f\u7684\u4e3b\u7ebf\u3002\n\n\nMinecraft 1.12 \u5ba2\u6237\u7aef\u4e0b\u8f7d\n\n\n\u542f\u52a8\u4fa0\n \u7cbe\u7b80\u7248\n\n\n\u4f53\u9a8c\u6307\u5bfc\n\n\n\n\n\n\n\u4e0b\u8f7d\u5e76\u89e3\u538b\u5ba2\u6237\u7aef(Unix/Linux \u9700\u8981\u5b89\u88c5Wine\u6765\u652f\u6301exe\u7a0b\u5e8f\u8fd0\u884c)\uff0c\u5982\u679c\u5bf9\u5e94\u7248\u672c\u7684\u6e38\u620f\u6ca1\u6709\u4e0b\u8f7d\uff0c\u8bf7\u9009\u62e9\n\u7248\u672c\n\u4e0b\u62c9\u6846\uff0c\u6309\u63d0\u793a\u4e0b\u8f7d\u5bf9\u5e94\u7248\u672c\u7684\u5ba2\u6237\u7aef\u6587\u4ef6\n\n\n\n\n\n\n\n\n\n\n\u53d6\u4e00\u4e2a\u540d\u5b57\uff0c\u7136\u540e\n\u542f\u52a8\u6e38\u620f\n(\u5982\u679c\u6ca1\u6709Java\u8fd0\u884c\u73af\u5883\uff0c\u542f\u52a8\u8fc7\u7a0b\u4e2d\u4f1a\u81ea\u52a8\u4e0b\u8f7d)\n\n\n\n\n\n\n\u9009\u62e9\n\u591a\u4eba\u6e38\u620f | \u6dfb\u52a0\u670d\u52a1\u5668\n\n\n\n\n\n\n\n\n\u6dfb\u52a0\u670d\u52a1\u5668\u540e\u5982\u679c\u7ea2\u53c9\u63d0\u793a\uff0c\u591a\u70b9\u51e0\u6b21\n\u5237\u65b0\n\u6309\u94ae\n\n\n   \n\n\n\n\n\n\n\u9009\u62e9\u670d\u52a1\u5668\u540e\uff0c\u70b9\u51fb\n\u52a0\u5165\u670d\u52a1\u5668\n\u5373\u53ef\u4f53\u9a8c\n\n\n\n\n\n\n\n\n\n\nMinecraft 1.12 \u4f53\u9a8c\u670d\u52a1\u5668\n\n\n\n\n\u7eaf\u51c0\u7248\uff0c\u65e0Mod\u6dfb\u52a0\n\n\n\u627f\u8f7d\u4e0a\u9650: 20\u4eba\n\n\n\u6a21\u5f0f\uff1a\u751f\u5b58\u6a21\u5f0f\n\n\n\u65e0\u8eab\u4efd\u8ba4\u8bc1(\u4e2a\u4eba\u7ef4\u62a4)\n\n\n\u670d\u52a1\u5668\u5730\u5740: zhulongyixian.vicp.cc:25566\n\n\n\n\n\u5982\u679c\u670d\u52a1\u5668\u8fde\u4e0d\u4e0a\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u6ca1\u6709\u5f00\u542f\uff0c\u5982\u679c\u6709\u5174\u8da3\u60f3\u73a9\u7684\uff0c\u53ef\u4ee5\u8054\u7cfb\u7ba1\u7406\u5458\u5f00\u542f\uff0c\u8054\u7cfb\u65b9\u5f0f\u5728\u4e0b\u8fb9\u3002\n\n\n\u6e38\u620f\u653b\u7565\u8bf4\u660e\n\u5b98\u7f51\n\n\n\n\n\n\nMC1.12\u7248\u672c\u4fe1\u606f\u548c\u64cd\u4f5c\u6307\u5357\n\n\n\n\n\n\nMC\u4e2d\u6587\u7ad9\n\n\n\n\n\n\nMC\u5b98\u65b9Wiki\n\n\n\n\n\n\nMC\u5b98\u7f51\n\n\n\n\n\n\n\u7ba1\u7406\u5458\u8054\u7cfb\u65b9\u5f0f\n\n\n\n\n\u90ae\u7bb1: \n\n\n\n\n\u5fae\u4fe1: \nw_z_z_1991\n\n\n\n\n\n\n\n\n\u51c6\u5907\u597d\u4e86\u5417\uff1f\u6211\u5728\u6211\u7684\u4e16\u754c\u7b49\u4f60", 
            "title": "Minecraft"
        }, 
        {
            "location": "/minecraft/minecraft/#minecraft-112", 
            "text": "\u300aMinecraft\u300b\u662f\u4e00\u6b3e\u98ce\u9761\u5168\u7403\u7684\u9ad8\u81ea\u7531\u5ea6\u6c99\u76d2\u6e38\u620f\uff0c\u7531\u745e\u5178 Mojang AB \u548c 4J Studios \u5f00\u53d1\uff0c\u4e8e2009\u5e745\u670813\u65e5\u53d1\u884c\u30022014\u5e7411\u67086\u65e5\uff0c\u8be5\u6e38\u620f\u88ab\u5fae\u8f6f\u6536\u8d2d\u30022016\u5e74\u7f51\u6613\u53d6\u5f97\u4e86\u8be5\u6e38\u620f\u5728\u4e2d\u56fd\u7684\u4ee3\u7406\u6743\u3002  \u8be5\u4f5c\u4ee5\u6bcf\u4e00\u4e2a\u73a9\u5bb6\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u81ea\u7531\u5730\u521b\u9020\u548c\u7834\u574f\u4e0d\u540c\u79cd\u7c7b\u7684\u65b9\u5757\u4e3a\u4e3b\u9898\u3002\u73a9\u5bb6\u5728\u6e38\u620f\u4e2d\u53ef\u4ee5\u5728\u5355\u4eba\u6216\u591a\u4eba\u6a21\u5f0f\u4e2d\u901a\u8fc7\u6467\u6bc1\u6216\u521b\u9020\u65b9\u5757\u4ee5\u521b\u9020\u7cbe\u5999\u7edd\u4f26\u7684\u5efa\u7b51\u7269\u548c\u827a\u672f\uff0c\u6216\u8005\u6536\u96c6\u7269\u54c1\u63a2\u7d22\u5730\u56fe\u4ee5\u5b8c\u6210\u6e38\u620f\u7684\u4e3b\u7ebf\u3002", 
            "title": "Minecraft \u6700\u65b0\u7248(1.12) \u81ea\u5efa\u4f53\u9a8c"
        }, 
        {
            "location": "/minecraft/minecraft/#minecraft-112_1", 
            "text": "\u542f\u52a8\u4fa0  \u7cbe\u7b80\u7248", 
            "title": "Minecraft 1.12 \u5ba2\u6237\u7aef\u4e0b\u8f7d"
        }, 
        {
            "location": "/minecraft/minecraft/#_1", 
            "text": "\u4e0b\u8f7d\u5e76\u89e3\u538b\u5ba2\u6237\u7aef(Unix/Linux \u9700\u8981\u5b89\u88c5Wine\u6765\u652f\u6301exe\u7a0b\u5e8f\u8fd0\u884c)\uff0c\u5982\u679c\u5bf9\u5e94\u7248\u672c\u7684\u6e38\u620f\u6ca1\u6709\u4e0b\u8f7d\uff0c\u8bf7\u9009\u62e9 \u7248\u672c \u4e0b\u62c9\u6846\uff0c\u6309\u63d0\u793a\u4e0b\u8f7d\u5bf9\u5e94\u7248\u672c\u7684\u5ba2\u6237\u7aef\u6587\u4ef6      \u53d6\u4e00\u4e2a\u540d\u5b57\uff0c\u7136\u540e \u542f\u52a8\u6e38\u620f (\u5982\u679c\u6ca1\u6709Java\u8fd0\u884c\u73af\u5883\uff0c\u542f\u52a8\u8fc7\u7a0b\u4e2d\u4f1a\u81ea\u52a8\u4e0b\u8f7d)    \u9009\u62e9 \u591a\u4eba\u6e38\u620f | \u6dfb\u52a0\u670d\u52a1\u5668     \u6dfb\u52a0\u670d\u52a1\u5668\u540e\u5982\u679c\u7ea2\u53c9\u63d0\u793a\uff0c\u591a\u70b9\u51e0\u6b21 \u5237\u65b0 \u6309\u94ae         \u9009\u62e9\u670d\u52a1\u5668\u540e\uff0c\u70b9\u51fb \u52a0\u5165\u670d\u52a1\u5668 \u5373\u53ef\u4f53\u9a8c", 
            "title": "\u4f53\u9a8c\u6307\u5bfc"
        }, 
        {
            "location": "/minecraft/minecraft/#minecraft-112_2", 
            "text": "\u7eaf\u51c0\u7248\uff0c\u65e0Mod\u6dfb\u52a0  \u627f\u8f7d\u4e0a\u9650: 20\u4eba  \u6a21\u5f0f\uff1a\u751f\u5b58\u6a21\u5f0f  \u65e0\u8eab\u4efd\u8ba4\u8bc1(\u4e2a\u4eba\u7ef4\u62a4)  \u670d\u52a1\u5668\u5730\u5740: zhulongyixian.vicp.cc:25566   \u5982\u679c\u670d\u52a1\u5668\u8fde\u4e0d\u4e0a\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u6ca1\u6709\u5f00\u542f\uff0c\u5982\u679c\u6709\u5174\u8da3\u60f3\u73a9\u7684\uff0c\u53ef\u4ee5\u8054\u7cfb\u7ba1\u7406\u5458\u5f00\u542f\uff0c\u8054\u7cfb\u65b9\u5f0f\u5728\u4e0b\u8fb9\u3002", 
            "title": "Minecraft 1.12 \u4f53\u9a8c\u670d\u52a1\u5668"
        }, 
        {
            "location": "/minecraft/minecraft/#_2", 
            "text": "MC1.12\u7248\u672c\u4fe1\u606f\u548c\u64cd\u4f5c\u6307\u5357    MC\u4e2d\u6587\u7ad9    MC\u5b98\u65b9Wiki    MC\u5b98\u7f51", 
            "title": "\u6e38\u620f\u653b\u7565\u8bf4\u660e&amp;\u5b98\u7f51"
        }, 
        {
            "location": "/minecraft/minecraft/#_3", 
            "text": "\u90ae\u7bb1:    \u5fae\u4fe1:  w_z_z_1991     \u51c6\u5907\u597d\u4e86\u5417\uff1f\u6211\u5728\u6211\u7684\u4e16\u754c\u7b49\u4f60", 
            "title": "\u7ba1\u7406\u5458\u8054\u7cfb\u65b9\u5f0f"
        }, 
        {
            "location": "/me/English Personal Resume/", 
            "text": "English Personal Resume\n\n\nEnglish Self Introduction\n\n\nGood morning Sir/Madam:\n\n\nMy name is WangZhizhou. And I am 24 years old. My hometown is ShanXi province. My parents are all teachers.\nThanks to the cultivation of them.\n\n\nI studied in Nanchang University which locate in JiangXi province for my bechlor degree. And now, I am a\n master cadididate in Tianjin University. During the two study years, I participated in two projects as my \n resume reads. For me, the most important one is the Parking detecting system on yellow grid area. Through this\n project, I learned to use multi-thread technologies to collect datum from multiple hareware devices, such as\n  IP Cameras, Laser ranging finder and radar speed measuring instrument. I also eliminated a bug in the first \n  project about memory leak. The process is tough, eventually, I make it fixed!.\n\n\nAfter those two projects, I mastered some skills about C/C++ programming technologies. I can use MFC to create\n  small desktop application on windows platform. I also learned some knowledge about OpenCV image processing library.\n  This is an open source library written by C++ programming language. I use it to do my graduation project.\n\n\nThat's all. Thanks for your attention. Thank you! \n\n\nReference Material\n\n\nView \nPersonal Photo\n\n\nView \niOS Mobile Development Resume\n\n\nView \nSoftware Development or Testing\n\n\nView \nEnglish Personal Resume", 
            "title": "English Personal Resume"
        }, 
        {
            "location": "/me/English Personal Resume/#english-personal-resume", 
            "text": "", 
            "title": "English Personal Resume"
        }, 
        {
            "location": "/me/English Personal Resume/#english-self-introduction", 
            "text": "Good morning Sir/Madam:  My name is WangZhizhou. And I am 24 years old. My hometown is ShanXi province. My parents are all teachers.\nThanks to the cultivation of them.  I studied in Nanchang University which locate in JiangXi province for my bechlor degree. And now, I am a\n master cadididate in Tianjin University. During the two study years, I participated in two projects as my \n resume reads. For me, the most important one is the Parking detecting system on yellow grid area. Through this\n project, I learned to use multi-thread technologies to collect datum from multiple hareware devices, such as\n  IP Cameras, Laser ranging finder and radar speed measuring instrument. I also eliminated a bug in the first \n  project about memory leak. The process is tough, eventually, I make it fixed!.  After those two projects, I mastered some skills about C/C++ programming technologies. I can use MFC to create\n  small desktop application on windows platform. I also learned some knowledge about OpenCV image processing library.\n  This is an open source library written by C++ programming language. I use it to do my graduation project.  That's all. Thanks for your attention. Thank you!", 
            "title": "English Self Introduction"
        }, 
        {
            "location": "/me/English Personal Resume/#reference-material", 
            "text": "View  Personal Photo  View  iOS Mobile Development Resume  View  Software Development or Testing  View  English Personal Resume", 
            "title": "Reference Material"
        }, 
        {
            "location": "/me/My Plan for finding Job/", 
            "text": "My plan for finding job\n\n\n\u7f51\u7533\u7684\u7f51\u7ad9\n\n\n\u4e2d\u5174\n - \u8f6f\u4ef6\u5f00\u53d1\u5de5\u7a0b\u5e08\n\n\n\n\n\u7528\u6237\u540d\uff1awangzhizhou2015@qq.com\n\n\n\u5bc6\u7801\uff1aW5438\n*\n\n\n\n\n\u5c0f\u7c73\n - iOS\u5f00\u53d1(10\u670812\u53f7 \u5317\u90ae)\n\n\n\n\n\u7528\u6237\u540d\uff1a824219521@qq.com  \n\n\n\u5bc6\u7801\uff1aW5438\n*\n\n\n\n\n\u4e50\u89c6\u7f51\n - iOS\u5f00\u53d1\u5de5\u7a0b\u5e08\n\n\n\n\n\u7528\u6237\u540d\uff1awangzhizhou2015@qq.com\n\n\n\u5bc6\u7801\uff1aW54385\n*\n\n\n\n\n\u5c55\u8baf\n - \u8f6f\u4ef6\u5f00\u53d1\u5de5\u7a0b\u5e08\n\n\n\n\n\u7528\u6237\u540d\uff1azhulongyixian\n\n\n\u5bc6\u7801\uff1aW5438\n*\n\n\n\n\n360\n - ios\u624b\u673a\u8f6f\u4ef6\u5f00\u53d1\u5de5\u7a0b\u5e08\n\n\n\n\n\u7528\u6237\u540d\uff1a15102272032\n\n\n\u5bc6\u7801\uff1aW5438\n*\n\n\n\n\n\n\n\n\n\n\n\u5ba3\u8bb2\u57ce\u5e02\n\n\n\u5ba3\u8bb2\u5b66\u6821\n\n\n\u5ba3\u8bb2\u65e5\u671f\n\n\n\u5ba3\u8bb2\u65f6\u95f4\n\n\n\u5ba3\u8bb2\u573a\u5730\n\n\n\n\n\n\n\n\n\n\n\u5929\u6d25\n\n\n\u5357\u5f00\u5927\u5b66\n\n\n2015/9/17\n\n\n19:00-21:00\n\n\n\u516c\u5171\u6559\u5b66\u697cB203\uff08\u6d25\u5357\u6821\u533a\uff09\n\n\n\n\n\n\n\n\n\u822a\u5929\u79d1\u5de5\u4e8c\u9662\n \u8fd8\u6ca1\u6709\u6210\u7ee9\u5355\n\n\n\n\n\u7528\u6237\u540d\uff1a\u70db\u9f99\u4e00\u73b0\n\n\n\u5bc6\u7801\uff1aW5438\n*\n\n\n\n\n\u5fae\u8f6f\n - Software Enginer\n\n\n51job\n\n\n\n\n\u7528\u6237\u540d: wangzhizhou2015@qq.com\n\n\n\u5bc6\u7801: W5438\n*\n\n\n\n\n\u5fae\u8f6f\u5e94\u5c4a\u751fBBS\u95ee\u7b54\u4e13\u533a\n\n\n\u4eac\u4e1c\n - \u8f6f\u4ef6\u5f00\u53d1\u5de5\u7a0b\u5e08 \u3001\u5ba2\u6237\u7aef\u5f00\u53d1\u5de5\u7a0b\u5e08\n\n\n\n\n\u7528\u6237\u540d\uff1a\u70db\u9f99\u4e00\u73b0\n\n\n\u5bc6\u7801\uff1aW5438\n*\n\n\n\n\n\u7f8e\u56e2\u6821\u62db\n - \u79fb\u52a8\u7aef\u5f00\u53d1\u5de5\u7a0b\u5e08\n\n\n\n\n\u7528\u6237\u540d\uff1awangzhizhou\n\n\n\u5bc6\u7801\uff1aW5\n*\n*\n\n\n\n\n\u7f8e\u56e2\u6821\u62db2\n - \u79fb\u52a8\u7aef\u5f00\u53d1\u5de5\u7a0b\u5e08\n\n\n\n\n\u7528\u6237\u540d\uff1azhulongyixian\n\n\n\u5bc6\u7801\uff1aW5438\n*\n\n\n\n\n2015.9.12 \u7761\u8fc7\u5934\u6ca1\u6709\u53c2\u52a0\u7b14\u8bd5\n\n\n\u767e\u5ea6\u6821\u56ed\u62db\u8058\n - \u5317\u4eac-\u79fb\u52a8\u8f6f\u4ef6\u7814\u53d1\u5de5\u7a0b\u5e08\n\n\n\n\n\u7528\u6237\u540d\uff1awangzhizhou2015@qq.com\n\n\n\u5bc6\u7801\uff1aW5\n*\n*\n\n\n\n\n\u817e\u8baf\u6821\u62db\n - \u8f6f\u4ef6\u5f00\u53d1-\u79fb\u52a8\u5ba2\u6237\u7aef\u5f00\u53d1\u65b9\u5411\n\n\n\n\n\u7528\u6237\u540d\uff1a824\n*\n*\n\n\n\u5bc6\u7801\uff1a!@#\n*\n*\n*\n\n\n\n\n\u963f\u91cc\u6821\u62db\n - \u5ba2\u6237\u7aef\u5f00\u53d1\n\n\n\n\n\u7528\u6237\u540d\uff1a15102\n*\n*\n\n\n\u5bc6\u7801\uff1aW54\n*\n\n\n\n\n\u534e\u4e3a\n - IT\u5e94\u7528\u8f6f\u4ef6\u5f00\u53d1\u5de5\u7a0b\u5e08(C++\u5e94\u7528\u8f6f\u4ef6)\n\n\n\n\n\u7528\u6237\u540d\uff1azhulongyixian\n\n\n\u5bc6\u7801\uff1a_w54\n*\n\n\n\n\n\u7231\u5947\u827a\n - iOS\u7814\u53d1\u5de5\u7a0b\u5e08\n\n\n\n\n\u7528\u6237\u540d\uff1awangzhizhou2015@qq.com\n\n\n\u5bc6\u7801\uff1aW5438\n*\n\n\n\n\nhiho Coder\n\n\n\n\n\u7528\u6237\u540d\uff1awangzhizhou2014GitHub\n\n\n\u5bc6\u7801\uff1agithub\n*\n**\n\n\n\n\nleetCode\n\n\n\n\n\u7528\u6237\u540d\uff1a824219521@qq.com \n\n\n\u5bc6\u7801: W5438\n*\n\n\n\n\nGitHub\n\n\n\n\n\u7528\u6237\u540d\uff1awangzhizhou2014GitHub\n\n\n\u5bc6\u7801\uff1agithub5\n*\n*\n\n\n\n\n[\u66b4\u98ce\u5f71\u97f3] \u5927\u8857\u7f51\u4e0a\u6295\u9012\u7684 - \u6700\u7ec8\u9009\u62e9\u5165\u804c", 
            "title": "My Plan for finding Job"
        }, 
        {
            "location": "/me/My Plan for finding Job/#my-plan-for-finding-job", 
            "text": "", 
            "title": "My plan for finding job"
        }, 
        {
            "location": "/me/My Plan for finding Job/#_1", 
            "text": "", 
            "title": "\u7f51\u7533\u7684\u7f51\u7ad9"
        }, 
        {
            "location": "/me/My Plan for finding Job/#-", 
            "text": "\u7528\u6237\u540d\uff1awangzhizhou2015@qq.com  \u5bc6\u7801\uff1aW5438 *", 
            "title": "\u4e2d\u5174 - \u8f6f\u4ef6\u5f00\u53d1\u5de5\u7a0b\u5e08"
        }, 
        {
            "location": "/me/My Plan for finding Job/#-ios1012", 
            "text": "\u7528\u6237\u540d\uff1a824219521@qq.com    \u5bc6\u7801\uff1aW5438 *", 
            "title": "\u5c0f\u7c73 - iOS\u5f00\u53d1(10\u670812\u53f7 \u5317\u90ae)"
        }, 
        {
            "location": "/me/My Plan for finding Job/#-ios", 
            "text": "\u7528\u6237\u540d\uff1awangzhizhou2015@qq.com  \u5bc6\u7801\uff1aW54385 *", 
            "title": "\u4e50\u89c6\u7f51 - iOS\u5f00\u53d1\u5de5\u7a0b\u5e08"
        }, 
        {
            "location": "/me/My Plan for finding Job/#-_1", 
            "text": "\u7528\u6237\u540d\uff1azhulongyixian  \u5bc6\u7801\uff1aW5438 *", 
            "title": "\u5c55\u8baf - \u8f6f\u4ef6\u5f00\u53d1\u5de5\u7a0b\u5e08"
        }, 
        {
            "location": "/me/My Plan for finding Job/#360-ios", 
            "text": "\u7528\u6237\u540d\uff1a15102272032  \u5bc6\u7801\uff1aW5438 *      \u5ba3\u8bb2\u57ce\u5e02  \u5ba3\u8bb2\u5b66\u6821  \u5ba3\u8bb2\u65e5\u671f  \u5ba3\u8bb2\u65f6\u95f4  \u5ba3\u8bb2\u573a\u5730      \u5929\u6d25  \u5357\u5f00\u5927\u5b66  2015/9/17  19:00-21:00  \u516c\u5171\u6559\u5b66\u697cB203\uff08\u6d25\u5357\u6821\u533a\uff09", 
            "title": "360 - ios\u624b\u673a\u8f6f\u4ef6\u5f00\u53d1\u5de5\u7a0b\u5e08"
        }, 
        {
            "location": "/me/My Plan for finding Job/#_2", 
            "text": "\u7528\u6237\u540d\uff1a\u70db\u9f99\u4e00\u73b0  \u5bc6\u7801\uff1aW5438 *", 
            "title": "\u822a\u5929\u79d1\u5de5\u4e8c\u9662 \u8fd8\u6ca1\u6709\u6210\u7ee9\u5355"
        }, 
        {
            "location": "/me/My Plan for finding Job/#-software-enginer", 
            "text": "", 
            "title": "\u5fae\u8f6f - Software Enginer"
        }, 
        {
            "location": "/me/My Plan for finding Job/#51job", 
            "text": "\u7528\u6237\u540d: wangzhizhou2015@qq.com  \u5bc6\u7801: W5438 *", 
            "title": "51job"
        }, 
        {
            "location": "/me/My Plan for finding Job/#bbs", 
            "text": "", 
            "title": "\u5fae\u8f6f\u5e94\u5c4a\u751fBBS\u95ee\u7b54\u4e13\u533a"
        }, 
        {
            "location": "/me/My Plan for finding Job/#-_2", 
            "text": "\u7528\u6237\u540d\uff1a\u70db\u9f99\u4e00\u73b0  \u5bc6\u7801\uff1aW5438 *", 
            "title": "\u4eac\u4e1c - \u8f6f\u4ef6\u5f00\u53d1\u5de5\u7a0b\u5e08 \u3001\u5ba2\u6237\u7aef\u5f00\u53d1\u5de5\u7a0b\u5e08"
        }, 
        {
            "location": "/me/My Plan for finding Job/#-_3", 
            "text": "\u7528\u6237\u540d\uff1awangzhizhou  \u5bc6\u7801\uff1aW5 * *", 
            "title": "\u7f8e\u56e2\u6821\u62db - \u79fb\u52a8\u7aef\u5f00\u53d1\u5de5\u7a0b\u5e08"
        }, 
        {
            "location": "/me/My Plan for finding Job/#2-", 
            "text": "\u7528\u6237\u540d\uff1azhulongyixian  \u5bc6\u7801\uff1aW5438 *   2015.9.12 \u7761\u8fc7\u5934\u6ca1\u6709\u53c2\u52a0\u7b14\u8bd5", 
            "title": "\u7f8e\u56e2\u6821\u62db2 - \u79fb\u52a8\u7aef\u5f00\u53d1\u5de5\u7a0b\u5e08"
        }, 
        {
            "location": "/me/My Plan for finding Job/#-_4", 
            "text": "\u7528\u6237\u540d\uff1awangzhizhou2015@qq.com  \u5bc6\u7801\uff1aW5 * *", 
            "title": "\u767e\u5ea6\u6821\u56ed\u62db\u8058 - \u5317\u4eac-\u79fb\u52a8\u8f6f\u4ef6\u7814\u53d1\u5de5\u7a0b\u5e08"
        }, 
        {
            "location": "/me/My Plan for finding Job/#-_5", 
            "text": "\u7528\u6237\u540d\uff1a824 * *  \u5bc6\u7801\uff1a!@# * * *", 
            "title": "\u817e\u8baf\u6821\u62db - \u8f6f\u4ef6\u5f00\u53d1-\u79fb\u52a8\u5ba2\u6237\u7aef\u5f00\u53d1\u65b9\u5411"
        }, 
        {
            "location": "/me/My Plan for finding Job/#-_6", 
            "text": "\u7528\u6237\u540d\uff1a15102 * *  \u5bc6\u7801\uff1aW54 *", 
            "title": "\u963f\u91cc\u6821\u62db - \u5ba2\u6237\u7aef\u5f00\u53d1"
        }, 
        {
            "location": "/me/My Plan for finding Job/#-itc", 
            "text": "\u7528\u6237\u540d\uff1azhulongyixian  \u5bc6\u7801\uff1a_w54 *", 
            "title": "\u534e\u4e3a - IT\u5e94\u7528\u8f6f\u4ef6\u5f00\u53d1\u5de5\u7a0b\u5e08(C++\u5e94\u7528\u8f6f\u4ef6)"
        }, 
        {
            "location": "/me/My Plan for finding Job/#-ios_1", 
            "text": "\u7528\u6237\u540d\uff1awangzhizhou2015@qq.com  \u5bc6\u7801\uff1aW5438 *", 
            "title": "\u7231\u5947\u827a - iOS\u7814\u53d1\u5de5\u7a0b\u5e08"
        }, 
        {
            "location": "/me/My Plan for finding Job/#hiho-coder", 
            "text": "\u7528\u6237\u540d\uff1awangzhizhou2014GitHub  \u5bc6\u7801\uff1agithub * **", 
            "title": "hiho Coder"
        }, 
        {
            "location": "/me/My Plan for finding Job/#leetcode", 
            "text": "\u7528\u6237\u540d\uff1a824219521@qq.com   \u5bc6\u7801: W5438 *", 
            "title": "leetCode"
        }, 
        {
            "location": "/me/My Plan for finding Job/#github", 
            "text": "\u7528\u6237\u540d\uff1awangzhizhou2014GitHub  \u5bc6\u7801\uff1agithub5 * *", 
            "title": "GitHub"
        }, 
        {
            "location": "/me/My Plan for finding Job/#-_7", 
            "text": "", 
            "title": "[\u66b4\u98ce\u5f71\u97f3] \u5927\u8857\u7f51\u4e0a\u6295\u9012\u7684 - \u6700\u7ec8\u9009\u62e9\u5165\u804c"
        }, 
        {
            "location": "/me/Personal Pre-Work Record/", 
            "text": "Personal Pre-Work Record\n\n\nDownload the record file(.xls)", 
            "title": "Personal Pre Work Record"
        }, 
        {
            "location": "/me/Personal Pre-Work Record/#personal-pre-work-record", 
            "text": "Download the record file(.xls)", 
            "title": "Personal Pre-Work Record"
        }, 
        {
            "location": "/me/My Financial Planning/", 
            "text": "\u6211\u7684\u7406\u8d22\u89c4\u5212\n\n\n\u91cd\u8981\u539f\u5219\uff1a\n\n\n\n\n\u5f00\u6e90\u8282\u6d41\n\n\n\u5408\u7406\u8ba1\u5212\n\n\n\n\n\u4e2a\u4eba\u57fa\u672c\u60c5\u51b5\n\n\n\u7a0e\u524d\u603b\u6536\u5165\u7ec4\u6210\uff1a\u5de5\u8d44 + \u8865\u52a9(\u9910\u8865/\u52a0\u73ed\u8d39/\u8003\u52e4/\u63d0\u6210/\u672a\u4f11\u5e74\u5047\u8865\u85aa)\n\n\n\u4e2a\u4eba\u6240\u5f97\u7a0e\u8d77\u5f81\u70b9\u4e3a: 3500\u5143\uff0c\u7a0e\u7387\u4e3a20%\uff0c\u57fa\u6570\u4e3a\u7a0e\u524d\u603b\u6536\u5165  \n\n\u7a0e\u524d\u5de5\u8d44\uff1a13000\u5143/\u6708\uff0c\u4ece\u4e8biOS\u7814\u53d1\u5de5\u4f5c\u3002\n\n\n\u66b4\u98ce\u5f71\u97f3\u76ee\u524d\u4f7f\u7528\u516c\u79ef\u91d1\u6bd4\u4f8b\u4e3a\uff1a\n9%\n, \u7f34\u5b58\u57fa\u6570\u4e3a\u7a0e\u524d\u5de5\u8d44\uff0c\u516c\u53f8\u548c\u4e2a\u4eba\u5404\u51fa\u4e00\u4efd\u5b58\u5165\u516c\u79ef\u91d1\u5e10\u6237\uff0c\u5373\u6bcf\u6708:\n13000 * 9% * 2 = 2340\n, \u4f46\u5bf9\u5e10\u6e05\u5355\u662f 2304\u5143/\u6708\uff0c\u6000\u7591\u662f\u4e0d\u662f\u6253\u9519\u540e\u4e24\u4f4d\u4e86\uff0c\u8fd9\u53ef\u5dee\u4e8636\u5757\u554a\u3002\n\n\n\u793e\u4f1a\u4fdd\u969c\uff1a982.2\u5143/\u6708\uff0c \u57fa\u6570\u4e3a\u7a0e\u524d\u5de5\u8d44\n\n\n\u8d44\u91d1\u5b58\u653e\u65b9\u5f0f\uff1a\n\n\n\n\n\u5fae\u4fe1\u94b1\u5305\n\n\n\u652f\u4ed8\u5b9d\n\n\n\u4f59\u989d\u5b9d\n\n\n\u5de5\u8d44\u5361\n\n\n\u4fe1\u7528\u5361\n\n\n\u793e\u4f1a\u4fdd\u969c\u5361\n\n\n\u5b58\u6298\n\n\n\n\n\u6bcf\u6708\u5f00\u652f\uff1a\n\n\n\n\n\u623f\u79df\uff1a1900\u5143/\u6708\n\n\n\u901a\u8baf\u8d39\u7528\uff1a100\u5143/\u6708\n\n\n\u9910\u8d39: 1500\u5143/\u6708 (\u6bcf\u592950\uff0c\u4e00\u670830\u5929\uff09\n\n\n\u7fbd\u6bdb\u7403: 120\u5143/\u6708 \uff08\u4e00\u5468\u4e24\u6b21\uff0c\u5355\u573a2\u4eba\uff0c\u6bcf\u4eba15\u5143\uff09\n\n\n\u4e0a\u4e0b\u73ed\u8f66\u8d39\uff1a120\u5143/\u6708 \uff08\u4e0a\u4e0b\u73ed 4\u5143/\u5929\uff09\n\n\n\n\n\u8d44\u91d1\u5206\u5272\u65b9\u5f0f\n\n\n\u7236\u6bcd\u8d61\u517b\u8d39: 1000\u5143/\u6708\n\n\n\u7b97\u4e0b\u7ed3\u4f59\u6bd4\u7387: \n 50% \u5c5e\u4e8e\u5408\u7406\u7ed3\u6784\n\n\n\u4fdd\u969c\u6027\u5546\u4e1a\u4fdd\u9669:\n\n\n\u94f6\u884c\u901a\u6da8\u4f1a\u8d2c\u503c\n\n\n\u5de5\u8d44\u5212\u5206\n\n\n\u65e5\u5e38\u5e94\u6025\u8d44\u91d1\n\n\n\u5e94\u6025\u8d44\u91d1\u5e94\u7528\u4e3a\u65e5\u5e38\u751f\u6d3b\u8d39\u7684\n3~6\n\u500d, \u53ef\u653e\u5165\u4f59\u989d\u5b9d\u4fdd\u8bc1\u5b58\u53d6\u7075\u6d3b\u6027\uff0c\u8fd8\u53ef\u4ee5\u6709\u6240\u6536\u76ca\u3002\n\n\n\u8d2d\u4e70\u56fa\u5b9a\u6536\u76ca\u7406\u8d22\u4ea7\u54c1\n\n\n\u94f6\u884c\u7406\u8d22\u4ea7\u54c1\u3001\u4e92\u8054\u7f51\u91d1\u878d\u3001\u56fd\u503a\n\n\n\u8d2d\u4e70\u4e00\u5b9a\u7684\u5546\u4e1a\u4fdd\u9669\n\n\n\u610f\u5916\u4f24\u5bb3\u9669\u3001\u91cd\u5927\u75be\u75c5\u9669\u3001\u5b9a\u671f\u5bff\u9669", 
            "title": "My Financial Planning"
        }, 
        {
            "location": "/me/My Financial Planning/#_1", 
            "text": "\u91cd\u8981\u539f\u5219\uff1a   \u5f00\u6e90\u8282\u6d41  \u5408\u7406\u8ba1\u5212", 
            "title": "\u6211\u7684\u7406\u8d22\u89c4\u5212"
        }, 
        {
            "location": "/me/My Financial Planning/#_2", 
            "text": "\u7a0e\u524d\u603b\u6536\u5165\u7ec4\u6210\uff1a\u5de5\u8d44 + \u8865\u52a9(\u9910\u8865/\u52a0\u73ed\u8d39/\u8003\u52e4/\u63d0\u6210/\u672a\u4f11\u5e74\u5047\u8865\u85aa)  \u4e2a\u4eba\u6240\u5f97\u7a0e\u8d77\u5f81\u70b9\u4e3a: 3500\u5143\uff0c\u7a0e\u7387\u4e3a20%\uff0c\u57fa\u6570\u4e3a\u7a0e\u524d\u603b\u6536\u5165   \n\u7a0e\u524d\u5de5\u8d44\uff1a13000\u5143/\u6708\uff0c\u4ece\u4e8biOS\u7814\u53d1\u5de5\u4f5c\u3002  \u66b4\u98ce\u5f71\u97f3\u76ee\u524d\u4f7f\u7528\u516c\u79ef\u91d1\u6bd4\u4f8b\u4e3a\uff1a 9% , \u7f34\u5b58\u57fa\u6570\u4e3a\u7a0e\u524d\u5de5\u8d44\uff0c\u516c\u53f8\u548c\u4e2a\u4eba\u5404\u51fa\u4e00\u4efd\u5b58\u5165\u516c\u79ef\u91d1\u5e10\u6237\uff0c\u5373\u6bcf\u6708: 13000 * 9% * 2 = 2340 , \u4f46\u5bf9\u5e10\u6e05\u5355\u662f 2304\u5143/\u6708\uff0c\u6000\u7591\u662f\u4e0d\u662f\u6253\u9519\u540e\u4e24\u4f4d\u4e86\uff0c\u8fd9\u53ef\u5dee\u4e8636\u5757\u554a\u3002  \u793e\u4f1a\u4fdd\u969c\uff1a982.2\u5143/\u6708\uff0c \u57fa\u6570\u4e3a\u7a0e\u524d\u5de5\u8d44  \u8d44\u91d1\u5b58\u653e\u65b9\u5f0f\uff1a   \u5fae\u4fe1\u94b1\u5305  \u652f\u4ed8\u5b9d  \u4f59\u989d\u5b9d  \u5de5\u8d44\u5361  \u4fe1\u7528\u5361  \u793e\u4f1a\u4fdd\u969c\u5361  \u5b58\u6298   \u6bcf\u6708\u5f00\u652f\uff1a   \u623f\u79df\uff1a1900\u5143/\u6708  \u901a\u8baf\u8d39\u7528\uff1a100\u5143/\u6708  \u9910\u8d39: 1500\u5143/\u6708 (\u6bcf\u592950\uff0c\u4e00\u670830\u5929\uff09  \u7fbd\u6bdb\u7403: 120\u5143/\u6708 \uff08\u4e00\u5468\u4e24\u6b21\uff0c\u5355\u573a2\u4eba\uff0c\u6bcf\u4eba15\u5143\uff09  \u4e0a\u4e0b\u73ed\u8f66\u8d39\uff1a120\u5143/\u6708 \uff08\u4e0a\u4e0b\u73ed 4\u5143/\u5929\uff09", 
            "title": "\u4e2a\u4eba\u57fa\u672c\u60c5\u51b5"
        }, 
        {
            "location": "/me/My Financial Planning/#_3", 
            "text": "\u7236\u6bcd\u8d61\u517b\u8d39: 1000\u5143/\u6708  \u7b97\u4e0b\u7ed3\u4f59\u6bd4\u7387:   50% \u5c5e\u4e8e\u5408\u7406\u7ed3\u6784  \u4fdd\u969c\u6027\u5546\u4e1a\u4fdd\u9669:  \u94f6\u884c\u901a\u6da8\u4f1a\u8d2c\u503c", 
            "title": "\u8d44\u91d1\u5206\u5272\u65b9\u5f0f"
        }, 
        {
            "location": "/me/My Financial Planning/#_4", 
            "text": "", 
            "title": "\u5de5\u8d44\u5212\u5206"
        }, 
        {
            "location": "/me/My Financial Planning/#_5", 
            "text": "\u5e94\u6025\u8d44\u91d1\u5e94\u7528\u4e3a\u65e5\u5e38\u751f\u6d3b\u8d39\u7684 3~6 \u500d, \u53ef\u653e\u5165\u4f59\u989d\u5b9d\u4fdd\u8bc1\u5b58\u53d6\u7075\u6d3b\u6027\uff0c\u8fd8\u53ef\u4ee5\u6709\u6240\u6536\u76ca\u3002", 
            "title": "\u65e5\u5e38\u5e94\u6025\u8d44\u91d1"
        }, 
        {
            "location": "/me/My Financial Planning/#_6", 
            "text": "\u94f6\u884c\u7406\u8d22\u4ea7\u54c1\u3001\u4e92\u8054\u7f51\u91d1\u878d\u3001\u56fd\u503a", 
            "title": "\u8d2d\u4e70\u56fa\u5b9a\u6536\u76ca\u7406\u8d22\u4ea7\u54c1"
        }, 
        {
            "location": "/me/My Financial Planning/#_7", 
            "text": "\u610f\u5916\u4f24\u5bb3\u9669\u3001\u91cd\u5927\u75be\u75c5\u9669\u3001\u5b9a\u671f\u5bff\u9669", 
            "title": "\u8d2d\u4e70\u4e00\u5b9a\u7684\u5546\u4e1a\u4fdd\u9669"
        }, 
        {
            "location": "/me/Life in Beijing/", 
            "text": "\u4eba\u5728\u5317\u4eac\n\n\n\u4ece\u5b66\u6821\u6bd5\u4e1a\u540e\uff0c\u5c31\u6765\u5230\u5317\u4eac\u5de5\u4f5c\uff0c\u516c\u53f8\u7ed9\u4e86\u4e2a\u96c6\u4f53\u6237\u53e3\uff0c\u6240\u4ee5\u524d\u4e24\u5929\u529e\u7406\u4e0b\u6765\uff0c\u62ff\u5230\u4e86\u65b0\u8eab\u4efd\u8bc1\u540e\uff0c\u8981\u529e\u7406\u7684\u4e8b\u60c5\u786e\u5b9e\u8fd8\u662f\u4e0d\u5c11\u7684\u3002\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u62ff\u5230\u4e86\u4e00\u5f20\u95e8\u7968\uff0c\u5176\u5b9e\u4e0d\u7ba1\u5728\u54ea\u4e2a\u57ce\u5e02\uff0c\u751f\u6d3b\u90fd\u5f97\u9760\u81ea\u5df1\uff0c\u53ea\u662f\u5317\u4eac\u8868\u73b0\u7684\u66f4\u52a0\u660e\u663e\u800c\u5df2\uff0c\u4e5f\u8bb8\u8fd9\u624d\u662f\u76f8\u5bf9\u516c\u5e73\u7684\u73af\u5883\u3002\n\n\n\u53ef\u80fd\u662f\u6211\u56e0\u4e3a\u62ff\u5230\u4e86\u6237\u53e3\u624d\u4f1a\u8fd9\u4e48\u8bf4\uff0c\u8981\u662f\u6211\u62ff\u4e0d\u5230\uff0c\u6211\u4e5f\u4f1a\u8bf4\u8fd9\u4e2a\u57ce\u5e02\u4e0d\u516c\u5e73\uff0c\u8fd9\u662f\u5f88\u6b63\u5e38\u7684\uff0c\u6ca1\u6709\u5fc5\u8981\u56de\u907f\u3002\u4f46\u5176\u5b9e\u6237\u53e3\u8fd9\u4e1c\u897f\u5f53\u771f\u53ea\u662f\u4e3a\u4e86\u7f13\u51b2\u4eba\u53e3\u6d8c\u5165\u7684\u538b\u529b\uff0c\u5b9e\u9645\u4e0a\u4f5c\u7528\u5f88\u6709\u9650\u3002\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u8fd9\u5176\u5b9e\u4e5f\u662f\u5bf9\u6211\u7684\u4e00\u79cd\u80af\u5b9a\uff0c\u867d\u7136\u81ea\u5df1\u4e0d\u600e\u4e48\u4f18\u79c0\uff0c\u4f46\u786e\u5b9e\u4e5f\u8fd8\u662f\u5f88\u52aa\u529b\u7684\uff0c\u8fd9\u79cd\u80af\u5b9a\u5bf9\u6211\u5f88\u91cd\u8981\u3002\n\n\n\u5bf9\u627e\u5bf9\u8c61\u3001\u7ed3\u5a5a\u3001\u623f\u5b50\u3001\u8f66\u5b50\u8fd9\u4e9b\u4e1c\u897f\u672c\u6765\u662f\u6ca1\u6709\u4ec0\u4e48\u6982\u5ff5\u7684\uff0c\u53ef\u80fd\u4e8c\u5341\u51e0\u5e74\u8bfb\u4e66\u8bfb\u6210\u4e86\u4e2a\u50bb\u5b50\uff0c\u4e0d\u8fc7\u51e1\u4e8b\u90fd\u6709\u4e2a\u8fc7\u7a0b\uff0c\u867d\u7136\u6210\u957f\u7684\u6bd4\u8f83\u6162\uff0c\u4f46\u6bd5\u7adf\u8fd8\u662f\u5728\u6210\u957f\u3002\n\n\n\u4e00\u5ea6\u5728\u8fdb\u5165\u793e\u4f1a\u5de5\u4f5c\u540e\uff0c\u56e0\u5bf9\u8fd9\u4e2a\u4e16\u754c\u4e0d\u591f\u4e86\u89e3\u548c\u5bf9\u611f\u60c5\u7684\u4e8b\u4e0d\u592a\u4e0a\u5fc3\u800c\u611f\u5230\u5f88\u8ff7\u60d8\uff0c\u751a\u81f3\u73b0\u5728\u4e5f\u6ca1\u597d\u4e00\u4e9b\u3002\u8fd9\u4e5f\u8bb8\u662f\u4e00\u7c7b\u4eba\u5fc5\u987b\u7ecf\u5386\u7684\u4e8b\u60c5\uff0c\u4e5f\u80fd\u5766\u7136\u63a5\u53d7\uff0c\u4e86\u89e3\u751f\u6d3b\u7684\u4e0d\u5bb9\u6613\uff0c\u624d\u4f1a\u66f4\u52a0\u61c2\u5f97\u751f\u6d3b\uff0c\u56e0\u4e3a\u751f\u6d3b\u672c\u6765\u5c31\u4e0d\u5bb9\u6613\uff0c\u4ece\u53e4\u81f3\u4eca\u90fd\u662f\u5982\u6b64\uff0c\u53ea\u4e0d\u8fc7\u5c0f\u7684\u65f6\u5019\u662f\u5927\u4eba\u4eec\u5e2e\u5fd9\u6321\u6389\u4e86\u5927\u90e8\u5206\uff0c\u624d\u80fd\u8ba9\u6211\u6d3b\u7684\u6bd4\u8f83\u8212\u5766\u4e9b\u3002\u73b0\u5728\uff0c\u8f6e\u5230\u81ea\u5df1\u53bb\u9762\u5bf9\u4e86\uff0c\u5f53\u7136\u4e0d\u4f1a\u9000\u7f29\uff0c\u8fd9\u7edd\u5bf9\u662f\u5f53\u7136\u7684\u3002\n\n\n\u4e00\u76f4\u5728\u60f3\uff0c\u4eba\u7684\u60c5\u7eea\u662f\u5426\u80fd\u6709\u610f\u8bc6\u7684\u5265\u79bb\uff0c\u6709\u65f6\u5019\u80fd\u505a\u5230\u6709\u65f6\u5019\u5f88\u96be\uff0c\u6bd4\u65b9\u8bf4\u5728\u6253\n\u738b\u8005\u8363\u8000\n\u7684\u65f6\u5019\uff0c\u6bd4\u8d5b\u6253\u8f93\u4e86\u603b\u4f1a\u4e0d\u7531\u81ea\u4e3b\u7684\u602a\u5bf9\u53cb\uff0c\u5148\u4e0d\u8bba\u5bf9\u53cb\u662f\u5426\u5bf9\u9519\uff0c\u4eba\u975e\u5723\u8d24\uff0c\u5e94\u8be5\u662f\u5728\u73b0\u6709\u6761\u4ef6\u4e0b\uff0c\u505a\u5bf9\u4e8b\u60c5\u6709\u76ca\u7684\u4e8b\uff0c\u800c\u4e0d\u662f\u4efb\u7531\u60c5\u7eea\u63a7\u5236\u3002\u6211\u60f3\u8fd9\u4e2a\u6e38\u620f\u786e\u5b9e\u80fd\u591f\u8ba9\u81ea\u5df1\u7684\u60c5\u7eea\u95ee\u9898\u66b4\u9732\u51fa\u6765\uff0c\u53ef\u4ee5\u7528\u6765\u953b\u70bc\u81ea\u5df1\u3002\u56e0\u4e3a\u6211\u5176\u5b9e\u5634\u4e0a\u5bf9\u8f93\u8d62\u65e0\u6240\u8c13\uff0c\u5176\u5b9e\u5fc3\u91cc\u9762\u770b\u7684\u5f88\u91cd\uff0c\u8fd9\u5c31\u662f\u6211\u76ee\u524d\u53d1\u73b0\u7684\u4e00\u4e2a\u95ee\u9898\u3002\n\n\n\u60f3\u5230\u54ea\uff0c\u5c31\u5199\u5230\u54ea\uff0c\u601d\u8def\u6709\u70b9\u98d8\u7684\u5389\u5bb3-_-#", 
            "title": "Life in Beijing"
        }, 
        {
            "location": "/me/Life in Beijing/#_1", 
            "text": "\u4ece\u5b66\u6821\u6bd5\u4e1a\u540e\uff0c\u5c31\u6765\u5230\u5317\u4eac\u5de5\u4f5c\uff0c\u516c\u53f8\u7ed9\u4e86\u4e2a\u96c6\u4f53\u6237\u53e3\uff0c\u6240\u4ee5\u524d\u4e24\u5929\u529e\u7406\u4e0b\u6765\uff0c\u62ff\u5230\u4e86\u65b0\u8eab\u4efd\u8bc1\u540e\uff0c\u8981\u529e\u7406\u7684\u4e8b\u60c5\u786e\u5b9e\u8fd8\u662f\u4e0d\u5c11\u7684\u3002\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u62ff\u5230\u4e86\u4e00\u5f20\u95e8\u7968\uff0c\u5176\u5b9e\u4e0d\u7ba1\u5728\u54ea\u4e2a\u57ce\u5e02\uff0c\u751f\u6d3b\u90fd\u5f97\u9760\u81ea\u5df1\uff0c\u53ea\u662f\u5317\u4eac\u8868\u73b0\u7684\u66f4\u52a0\u660e\u663e\u800c\u5df2\uff0c\u4e5f\u8bb8\u8fd9\u624d\u662f\u76f8\u5bf9\u516c\u5e73\u7684\u73af\u5883\u3002  \u53ef\u80fd\u662f\u6211\u56e0\u4e3a\u62ff\u5230\u4e86\u6237\u53e3\u624d\u4f1a\u8fd9\u4e48\u8bf4\uff0c\u8981\u662f\u6211\u62ff\u4e0d\u5230\uff0c\u6211\u4e5f\u4f1a\u8bf4\u8fd9\u4e2a\u57ce\u5e02\u4e0d\u516c\u5e73\uff0c\u8fd9\u662f\u5f88\u6b63\u5e38\u7684\uff0c\u6ca1\u6709\u5fc5\u8981\u56de\u907f\u3002\u4f46\u5176\u5b9e\u6237\u53e3\u8fd9\u4e1c\u897f\u5f53\u771f\u53ea\u662f\u4e3a\u4e86\u7f13\u51b2\u4eba\u53e3\u6d8c\u5165\u7684\u538b\u529b\uff0c\u5b9e\u9645\u4e0a\u4f5c\u7528\u5f88\u6709\u9650\u3002\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u8fd9\u5176\u5b9e\u4e5f\u662f\u5bf9\u6211\u7684\u4e00\u79cd\u80af\u5b9a\uff0c\u867d\u7136\u81ea\u5df1\u4e0d\u600e\u4e48\u4f18\u79c0\uff0c\u4f46\u786e\u5b9e\u4e5f\u8fd8\u662f\u5f88\u52aa\u529b\u7684\uff0c\u8fd9\u79cd\u80af\u5b9a\u5bf9\u6211\u5f88\u91cd\u8981\u3002  \u5bf9\u627e\u5bf9\u8c61\u3001\u7ed3\u5a5a\u3001\u623f\u5b50\u3001\u8f66\u5b50\u8fd9\u4e9b\u4e1c\u897f\u672c\u6765\u662f\u6ca1\u6709\u4ec0\u4e48\u6982\u5ff5\u7684\uff0c\u53ef\u80fd\u4e8c\u5341\u51e0\u5e74\u8bfb\u4e66\u8bfb\u6210\u4e86\u4e2a\u50bb\u5b50\uff0c\u4e0d\u8fc7\u51e1\u4e8b\u90fd\u6709\u4e2a\u8fc7\u7a0b\uff0c\u867d\u7136\u6210\u957f\u7684\u6bd4\u8f83\u6162\uff0c\u4f46\u6bd5\u7adf\u8fd8\u662f\u5728\u6210\u957f\u3002  \u4e00\u5ea6\u5728\u8fdb\u5165\u793e\u4f1a\u5de5\u4f5c\u540e\uff0c\u56e0\u5bf9\u8fd9\u4e2a\u4e16\u754c\u4e0d\u591f\u4e86\u89e3\u548c\u5bf9\u611f\u60c5\u7684\u4e8b\u4e0d\u592a\u4e0a\u5fc3\u800c\u611f\u5230\u5f88\u8ff7\u60d8\uff0c\u751a\u81f3\u73b0\u5728\u4e5f\u6ca1\u597d\u4e00\u4e9b\u3002\u8fd9\u4e5f\u8bb8\u662f\u4e00\u7c7b\u4eba\u5fc5\u987b\u7ecf\u5386\u7684\u4e8b\u60c5\uff0c\u4e5f\u80fd\u5766\u7136\u63a5\u53d7\uff0c\u4e86\u89e3\u751f\u6d3b\u7684\u4e0d\u5bb9\u6613\uff0c\u624d\u4f1a\u66f4\u52a0\u61c2\u5f97\u751f\u6d3b\uff0c\u56e0\u4e3a\u751f\u6d3b\u672c\u6765\u5c31\u4e0d\u5bb9\u6613\uff0c\u4ece\u53e4\u81f3\u4eca\u90fd\u662f\u5982\u6b64\uff0c\u53ea\u4e0d\u8fc7\u5c0f\u7684\u65f6\u5019\u662f\u5927\u4eba\u4eec\u5e2e\u5fd9\u6321\u6389\u4e86\u5927\u90e8\u5206\uff0c\u624d\u80fd\u8ba9\u6211\u6d3b\u7684\u6bd4\u8f83\u8212\u5766\u4e9b\u3002\u73b0\u5728\uff0c\u8f6e\u5230\u81ea\u5df1\u53bb\u9762\u5bf9\u4e86\uff0c\u5f53\u7136\u4e0d\u4f1a\u9000\u7f29\uff0c\u8fd9\u7edd\u5bf9\u662f\u5f53\u7136\u7684\u3002  \u4e00\u76f4\u5728\u60f3\uff0c\u4eba\u7684\u60c5\u7eea\u662f\u5426\u80fd\u6709\u610f\u8bc6\u7684\u5265\u79bb\uff0c\u6709\u65f6\u5019\u80fd\u505a\u5230\u6709\u65f6\u5019\u5f88\u96be\uff0c\u6bd4\u65b9\u8bf4\u5728\u6253 \u738b\u8005\u8363\u8000 \u7684\u65f6\u5019\uff0c\u6bd4\u8d5b\u6253\u8f93\u4e86\u603b\u4f1a\u4e0d\u7531\u81ea\u4e3b\u7684\u602a\u5bf9\u53cb\uff0c\u5148\u4e0d\u8bba\u5bf9\u53cb\u662f\u5426\u5bf9\u9519\uff0c\u4eba\u975e\u5723\u8d24\uff0c\u5e94\u8be5\u662f\u5728\u73b0\u6709\u6761\u4ef6\u4e0b\uff0c\u505a\u5bf9\u4e8b\u60c5\u6709\u76ca\u7684\u4e8b\uff0c\u800c\u4e0d\u662f\u4efb\u7531\u60c5\u7eea\u63a7\u5236\u3002\u6211\u60f3\u8fd9\u4e2a\u6e38\u620f\u786e\u5b9e\u80fd\u591f\u8ba9\u81ea\u5df1\u7684\u60c5\u7eea\u95ee\u9898\u66b4\u9732\u51fa\u6765\uff0c\u53ef\u4ee5\u7528\u6765\u953b\u70bc\u81ea\u5df1\u3002\u56e0\u4e3a\u6211\u5176\u5b9e\u5634\u4e0a\u5bf9\u8f93\u8d62\u65e0\u6240\u8c13\uff0c\u5176\u5b9e\u5fc3\u91cc\u9762\u770b\u7684\u5f88\u91cd\uff0c\u8fd9\u5c31\u662f\u6211\u76ee\u524d\u53d1\u73b0\u7684\u4e00\u4e2a\u95ee\u9898\u3002  \u60f3\u5230\u54ea\uff0c\u5c31\u5199\u5230\u54ea\uff0c\u601d\u8def\u6709\u70b9\u98d8\u7684\u5389\u5bb3-_-#", 
            "title": "\u4eba\u5728\u5317\u4eac"
        }, 
        {
            "location": "/me/jokerhub/", 
            "text": "jokerhub \u57df\u540d\u7533\u8bf7\n\n\n\u5728\u767e\u5ea6\u4e91\u4e0a\u7533\u8bf7\u4e86\u4e2a\u4eba\u57df\u540d\uff1a\njokerhub.cn\n, \u6682\u65f6\u4e70\u4e86\u4e00\u5e74\uff0c\u8d39\u752828\u5143\u4eba\u6c11\u5e01\u3002", 
            "title": "Jokerhub"
        }, 
        {
            "location": "/me/jokerhub/#jokerhub", 
            "text": "\u5728\u767e\u5ea6\u4e91\u4e0a\u7533\u8bf7\u4e86\u4e2a\u4eba\u57df\u540d\uff1a jokerhub.cn , \u6682\u65f6\u4e70\u4e86\u4e00\u5e74\uff0c\u8d39\u752828\u5143\u4eba\u6c11\u5e01\u3002", 
            "title": "jokerhub \u57df\u540d\u7533\u8bf7"
        }
    ]
}