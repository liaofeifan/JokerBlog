{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Brief Introduction Hello, I'm Wang Zhizhou, a coder. Right now, I'm working on iOS development. I wanted to have my own blog early, but I didn't find simple tools and methods. Now, I found it. And this blog is powered by MkDocs which is very simple and concise, I love it. With the help of Read the Docs \uff0cyou can publish you blog on the internet for sharing you mind. Oh, maybe you should have a GitHub account for you blog source repo. Trust me, you can also have your own blog in half an hour. I was born in 1991. Yes, the Linux operation system was born in the same year. And I like computer, though I'm not top experts. I just like it, and want to do something with computer, I enjoy that feeling. \u8054\u7cfb\u6211 E-Mail: WeChat: w_z_z_1991 me","title":"Home"},{"location":"#brief-introduction","text":"Hello, I'm Wang Zhizhou, a coder. Right now, I'm working on iOS development. I wanted to have my own blog early, but I didn't find simple tools and methods. Now, I found it. And this blog is powered by MkDocs which is very simple and concise, I love it. With the help of Read the Docs \uff0cyou can publish you blog on the internet for sharing you mind. Oh, maybe you should have a GitHub account for you blog source repo. Trust me, you can also have your own blog in half an hour. I was born in 1991. Yes, the Linux operation system was born in the same year. And I like computer, though I'm not top experts. I just like it, and want to do something with computer, I enjoy that feeling.","title":"Brief Introduction"},{"location":"#_1","text":"E-Mail: WeChat: w_z_z_1991 me","title":"\u8054\u7cfb\u6211"},{"location":"How I create this blog/","text":"\u524d\u63d0\u51c6\u5907 \u719f\u6089 Markdown \u6587\u6863\u4e66\u5199, \u8fd9\u91cc\u6709\u4efd \u8bed\u6cd5\u8bf4\u660e \u719f\u6089 Git \u7684\u7248\u672c\u63a7\u5236\u7684\u57fa\u672c\u7528\u6cd5\uff0c\u8fd9\u91cc\u6709\u4e2a \u7b80\u660e\u624b\u518c \u5728 GitHub \u4e0a\u521b\u5efa\u4e00\u4e2a\u5e10\u53f7, \u4e00\u4e2a\u5f88\u597d\u7684 Git \u548c GitHub \u5b66\u4e60\u8d44\u6e90 \u81f3\u5c11\u770b\u8fc7\u4e00\u6b21 MkDocs \u7684\u4f7f\u7528\u6587\u6863 \u5728 Read the Docs \u4e0a \u5f00\u901a \u4e00\u4e2a\u5e10\u53f7 \u73af\u5883\u642d\u5efa \u672c\u673a\u5b89\u88c5\u6709 python \u73af\u5883\u548c pip \u5305\u7ba1\u7406\u5668\u3002\u7136\u540e\u6267\u884c\u4e0b\u9762\u547d\u4ee4\uff1a 1 pip install mkdocs \u5199\u4f5c\u8fc7\u7a0b \u521b\u5efa\u9ed8\u8ba4\u6587\u6863 1 mkdocs new demo cd demo \u8f93\u51fa\uff1a 1 2 3 INFO - Creating project directory: demo INFO - Writing config file: demo/mkdocs.yml INFO - Writing initial docs: demo/docs/index.md \u9ed8\u8ba4\u7684\u6587\u6863\u7ed3\u6784: 1 2 3 4 demo \u251c\u2500\u2500 docs //\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u5b58\u653emarkdown\u7f16\u5199\u7684\u6587\u6863 \u2502 \u2514\u2500\u2500 index.md \u2514\u2500\u2500 mkdocs.yml //\u9879\u76ee\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5305\u62ec\u6587\u6863\u76ee\u5f55\u548c\u4e3b\u9898\u98ce\u683c\u914d\u7f6e \u672c\u5730\u6587\u6863\u6d4f\u89c8\u4f7f\u7528\u4e0b\u9762\u547d\u4ee4\uff1a 1 mkdocs serve \u8f93\u51fa: 1 2 3 INFO - Building documentation... INFO - Cleaning site directory [I 170524 09:23:48 server:283] Serving on http://127.0.0.1:8000 \u7528\u6d4f\u89c8\u5668\u6253\u5f00 http://127.0.0.1:8000 , \u5c31\u53ef\u4ee5\u67e5\u770b\u6587\u6863\u4e86\u3002\u5982\u679c\u5728\u8c03\u8bd5\u670d\u52a1\u5668\u5f00\u542f\u7684\u60c5\u51b5\u4e0b\u4fee\u6539\u9879\u76ee\u6587\u4ef6\uff0c\u4fee\u6539\u4f1a\u88ab\u81ea\u52a8\u68c0\u6d4b\u5230\uff0c\u5e76\u91cd\u65b0\u751f\u6210\u9879\u76ee\uff0c\u5b9e\u65f6\u9884\u89c8\u4fee\u6539\u540e\u7684\u6548\u679c\u3002 \u8fd9\u6837\u5c31\u53ef\u4ee5\u5728 docs \u6587\u4ef6\u5939\u4e0b\u9762\u521b\u5efa\u6587\u6863\u6587\u4ef6\uff0c\u5e76\u4fee\u6539 mkdocs.yml \u914d\u7f6e\u6587\u4ef6\uff0c\u4f7f\u65b0\u589e\u52a0\u7684\u6587\u4ef6\u5728\u6587\u6863\u76ee\u5f55\u7ed3\u6784\u4e2d\u51fa\u73b0\u3002 \u672c\u535a\u5ba2\u76ee\u524d\u7684\u7ed3\u6784\u548c\u914d\u7f6e\u6587\u4ef6\u60c5\u51b5 \u914d\u7f6e\u6587\u4ef6** mkdocs.yml ** 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 site_name : Joker s Blog //\u914d\u7f6e\u9879\u76ee\u540d\u79f0\uff0c\u4e5f\u5c31\u662f\u6587\u6863\u663e\u793a\u540d\u79f0 pages: //\u914d\u7f6e\u9875\u9762\u7684\u663e\u793a\u5c42\u7ea7\u7ed3\u6784 - Profile : index . md //[ \u663e\u793a\u540d\u79f0 : \u9875\u9762\u6587\u4ef6\u8def\u5f84 ] - Me : //\u591a\u7ea7\u76ee\u5f55\u7ed3\u6784\uff1ame\u4e0b\u9762\u5305\u542b\u591a\u4e2a\u9875\u9762 - me /English Personal Resume.md // \u5982\u679c\u7701\u7565\u914d\u7f6e\u663e\u793a\u540d\u79f0\u5219\u6309\u6587\u4ef6\u540d\u79f0\u663e\u793a - me/My Plan for finding Job.md - me/Personal Pre-Work Record.md - me/My Financial Planning.md - me/How I create this blog.md - Tech : - tech/Network Simulator 2 Installation Guide for Ubuntu.md - tech/Learn STL In 30 Minutes.md - tech/Installation of Ubuntu 16.04 On UDisk.md - tech/Configure Git Server With Ubuntn and Apache 2.md - tech/Add Watermark on Video with OpenCV and FFmpeg.md - tech/Develop DLNA Using Platinum Library.md - tech/FFmpeg and SDL tutorial 1.md - tech/FFmpeg compiled on MacOS.md - tech/FFmpeg version 3.1.4 example code.md - tech/Fmpeg 2.8.6 example code - transcoding.md - tech/Nmap Basics.md - tech/Use GDB.md - tech/User OpenCV to add watermark on a video.md - tech/Wireshark Basics.md - life : - Ali Fu : life/alipay-scan-fu-icon.md theme : readthedocs //\u914d\u7f6e\u6587\u6863\u4f7f\u7528\u7684\u6a21\u677f\u6837\u5f0f \u76ee\u5f55\u7ed3\u6784 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 . \u251c\u2500\u2500 LICENSE //\u9075\u5b88\u7684\u8bb8\u53ef\u8bc1\u6587\u4ef6 \u251c\u2500\u2500 README.md //\u9879\u76ee\u8bf4\u660e \u251c\u2500\u2500 docs //\u6587\u6863\u9875\u9762\u6e90\u6587\u4ef6\u76ee\u5f55 \u2502 \u251c\u2500\u2500 assets //\u5305\u62ec\u4e00\u4e9b\u591a\u5a92\u4f53\u8d44\u6e90 \u2502 \u2502 \u251c\u2500\u2500 Resume \u2502 \u2502 \u251c\u2500\u2500 excels \u2502 \u2502 \u251c\u2500\u2500 ffmpeg-code \u2502 \u2502 \u251c\u2500\u2500 pdfs \u2502 \u2502 \u2514\u2500\u2500 pictures \u2502 \u251c\u2500\u2500 index.md \u2502 \u251c\u2500\u2500 life \u2502 \u2502 \u2514\u2500\u2500 alipay-scan-fu-icon.md \u2502 \u251c\u2500\u2500 me \u2502 \u2502 \u251c\u2500\u2500 English\\ Personal\\ Resume.md \u2502 \u2502 \u251c\u2500\u2500 How\\ I\\ create\\ this\\ blog.md \u2502 \u2502 \u251c\u2500\u2500 My\\ Financial\\ Planning.md \u2502 \u2502 \u251c\u2500\u2500 My\\ Plan\\ for\\ finding\\ Job.md \u2502 \u2502 \u2514\u2500\u2500 Personal\\ Pre-Work\\ Record.md \u2502 \u2514\u2500\u2500 tech \u2502 \u251c\u2500\u2500 Add\\ Watermark\\ on\\ Video\\ with\\ OpenCV\\ and\\ FFmpeg.md \u2502 \u251c\u2500\u2500 Configure\\ Git\\ Server\\ With\\ Ubuntn\\ and\\ Apache\\ 2.md \u2502 \u251c\u2500\u2500 Develop\\ DLNA\\ Using\\ Platinum\\ Library.md \u2502 \u251c\u2500\u2500 FFmpeg\\ and\\ SDL\\ tutorial\\ 1.md \u2502 \u251c\u2500\u2500 FFmpeg\\ compiled\\ on\\ MacOS.md \u2502 \u251c\u2500\u2500 FFmpeg\\ version\\ 3.1.4\\ example\\ code.md \u2502 \u251c\u2500\u2500 Fmpeg\\ 2.8.6\\ example\\ code\\ -\\ transcoding.md \u2502 \u251c\u2500\u2500 Installation\\ of\\ Ubuntu\\ 16.04\\ On\\ UDisk.md \u2502 \u251c\u2500\u2500 Learn\\ STL\\ In\\ 30\\ Minutes.md \u2502 \u251c\u2500\u2500 Network\\ Simulator\\ 2\\ Installation\\ Guide\\ for\\ Ubuntu.md \u2502 \u251c\u2500\u2500 Nmap\\ Basics.md \u2502 \u251c\u2500\u2500 Use\\ GDB.md \u2502 \u251c\u2500\u2500 User\\ OpenCV\\ to\\ add\\ watermark\\ on\\ a\\ video.md \u2502 \u2514\u2500\u2500 Wireshark\\ Basics.md \u2514\u2500\u2500 mkdocs.yml //\u6587\u6863\u7684\u914d\u7f6e\u6587\u4ef6 \u8c03\u8bd5\u65b9\u6cd5 \u5982\u679c\u89c9\u5f97\u4e00\u8fb9\u7528 vim \u5199\u6587\u6863\uff0c\u4e00\u8fb9\u8fd8\u5f97\u5728\u5199\u5b8c\u540e\u624b\u52a8\u8fd0\u884c\u4e00\u6b21 mkdocs serve \u6765\u5f00\u542f\u8c03\u8bd5\u670d\u52a1\u5668\u67e5\u770b\u6548\u679c\u6709\u4e9b\u9ebb\u70e6\uff0c\u8fd9\u91cc\u6709\u65b9\u6cd5\u53ef\u4ee5\u7b80\u5316\u8fd9\u4e9b\u64cd\u4f5c: 1. \u4f7f\u7528shell\u540e\u53f0\u547d\u4ee4\u8fd0\u884c 1 mkdocs serve \u8fd9\u6837\u8fd0\u884c\uff0cshell\u4e0d\u4f1a\u963b\u585e\uff0c\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u8fdb\u884c\u7f16\u8f91\u6d3b\u52a8\u3002\u9700\u8981\u56de\u5230\u524d\u53f0\u8fd0\u884c\u65f6\uff0c\u4f7f\u7528 fg \u547d\u4ee4\uff0c Ctrl+C \u5c31\u53ef\u4ee5\u7ed3\u675f\u8c03\u8bd5\u670d\u52a1\u5668\u4e86\u3002 2. \u4f7f\u7528\u001d screen \u5de5\u5177 \u5982\u679c\u7ef4\u62a4\u8fc7\u670d\u52a1\u5668\uff0c\u90a3\u4e48ssh\u4e0b\u4e00\u5b9a\u7528\u8fc7 screen \u8fd9\u4e2a\u5de5\u5177\uff0c\u7cfb\u7edf\u9ed8\u8ba4\u662f\u4e0d\u4f1a\u5b89\u88c5\u7684\uff0c\u9700\u8981\u624b\u52a8\u5b89\u88c5: sudo apt-get install -y screen \u4f7f\u7528 screen \u542f\u52a8\u8c03\u8bd5\u670d\u52a1\u5668\uff1a 1 screen mkdocs serve \u4e4b\u540e\u6309\u4e0b Ctrl+A+D \u5c31\u53ef\u4ee5\u4f7f\u8c03\u8bd5\u670d\u52a1\u5668\u4e0d\u963b\u585eshell\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7ee7\u7eed\u7f16\u8f91\u6587\u6863\u4e86\u3002\u6d4f\u89c8\u5668\u5728\u6bcf\u6b21\u4fdd\u5b58\u6587\u6863\u540e\u4f1a\u81ea\u52a8\u89e6\u53d1\u4e00\u6b21\u9875\u9762\u5237\u65b0\u6765\u66f4\u65b0\u663e\u793a\u5185\u5bb9\u3002 \u5982\u679c\u8981\u7ed3\u675f\u8c03\u8bd5\u670d\u52a1\u5668\uff0c\u4f7f\u7528\u547d\u4ee4: screen -r \uff0c\u5e76\u4f7f\u7528 Ctrl+C \u6765\u7ed3\u675f\u3002 \u624b\u673a\u9875\u9762\u8c03\u8bd5 \u5982\u679c\u89c9\u5f97\u5728\u4e00\u4e2a\u663e\u793a\u5668\u5c4f\u5e55\u5185\u6765\u56de\u5207\u6362\u6d4f\u89c8\u5668\u548c\u7f16\u8f91\u5668\u6709\u70b9\u9ebb\u70e6\uff0c\u4e5f\u53ef\u4ee5\u7528\u624b\u673a\u505a\u4e3a\u6548\u679c\u9884\u89c8\u5668\uff0c\u4f46\u8fd9\u9700\u8981\u505a\u4e00\u4e9b\u989d\u5916\u7684\u914d\u7f6e\u3002 \u5982\u679c\u624b\u673a\u548c\u7535\u8111\u5728\u540c\u4e00\u4e2a\u5c40\u57df\u7f51\u5185\u90e8\uff0c\u53ef\u4ee5\u628a\u7535\u8111\u4f5c\u4e3a\u624b\u673a\u7684http\u4ee3\u7406\u670d\u52a1\u5668\u6765\u8bbf\u95eehttp\u670d\u52a1\uff0c\u5e76\u5728\u7535\u8111\u7684 hosts \u6587\u4ef6\u4e2d\u914d\u7f6e\u5982\u4e0b\u7684\u57df\u540d\u89e3\u6790\uff1a 1 127.0.0.1 doc.com \u5728\u6587\u6863\u8c03\u8bd5\u670d\u52a1\u5668\u8fd0\u884c\u7684\u60c5\u51b5\u4e0b\uff0c\u624b\u673a\u4e0a\u8bbf\u95ee http://doc.com:8000 \u5c31\u53ef\u4ee5\u5b9e\u65f6\u9884\u89c8\u6587\u6863\u6548\u679c\uff0c\u800c\u4e14\u6bcf\u6b21\u6587\u6863\u4fdd\u5b58\u540e\u4f1a\u81ea\u52a8\u89e6\u53d1\u624b\u673a\u6d4f\u89c8\u5668\u9875\u9762\u5237\u65b0\u3002 \u90a3\u4e48\u5269\u4e0b\u7684\u5c31\u662f\u5982\u4f55\u914d\u7f6e\u624b\u673a\u901a\u8fc7\u7535\u8111\u6765\u8bbf\u95eeHttp\u670d\u52a1\u4e86 \u5728\u5f53\u524d\u7684WiFi\u8fde\u63a5\u4e2d\u914d\u7f6e\u4e00\u4e0b http\u4ee3\u7406 \uff0c\u7535\u8111\u4e0a\u9700\u8981\u6709\u4ee3\u7406\u8f6f\u4ef6\u5b89\u88c5\uff0c\u4f8b\u5982 Charles \u6216\u8005 Fiddler \u4f8b\u5982,Mac\u4e0b\u4f7f\u7528 Charles \u4ee3\u7406\u8f6f\u4ef6\uff0c\u624b\u673a\u53ef\u8bbe\u7f6e\u5982\u4e0b\uff1a \u7136\u540e\u624b\u673a\u8f93\u5165 http://doc.com:8000 \u6d4f\u89c8\u5230\u6587\u6863\u6548\u679c\u5982\u4e0b\uff1a \u5728\u7ebf\u6258\u7ba1 \u672c\u5730\u7f16\u8f91\u7684\u5dee\u4e0d\u591a\u4e86\uff0c\u53ef\u4ee5\u53d1\u5e03\u5230\u7f51\u7edc\u4e0a\uff0c\u8fd9\u5c31\u6d89\u53ca\u5230\u6258\u7ba1\u670d\u52a1\u3002\u6e90\u4ee3\u7801\u53ef\u4ee5\u901a\u8fc7 GitHub \u4ed3\u5e93\u670d\u52a1\u6258\u7ba1\uff0c\u6587\u6863\u81ea\u52a8\u751f\u6210\u548c\u6d4f\u89c8\u53ef\u4ee5\u901a\u8fc7 Read The Docs \u670d\u52a1\u6765\u6258\u7ba1\uff0c\u5e76\u4e14\u5f53\u914d\u7f6e\u4e86 GitHub \u5bf9 Read The Docs \u7684 Web Hook \u540e\uff0c GitHub \u4ed3\u5e93\u7684\u6bcf\u6b21\u63d0\u4ea4\u90fd\u4f1a\u81ea\u52a8\u89e6\u53d1 Read The Docs \u4e0a\u7684\u6587\u6863\u91cd\u65b0\u751f\u6210,\u4ee5\u4fbf\u4fdd\u6301\u6700\u65b0\u72b6\u6001\uff0c\u5f88\u65b9\u4fbf\u3002 \u524d\u9762\u5df2\u7ecf\u6ce8\u518c\u4e86\u8fd9\u4e24\u4e2a\u6258\u7ba1\u670d\u52a1\u7684\u5e10\u53f7\u3002\u4e0b\u9762\u52a8\u624b\u6765\u53d1\u5e03\u6587\u6863\u5230\u7f51\u7edc\u4e0a\uff0c\u8ba9\u66f4\u591a\u7684\u4eba\u53ef\u4ee5\u770b\u5230\u3002 \u767b\u5f55 GitHub \u5e76\u521b\u5efa\u4e00\u4e2a\u6258\u7ba1\u4ed3\u5e93 \u7ed9\u4ed3\u5e93\u6dfb\u52a0 Read The Docs \u7684 WebHook \u767b\u5f55 Read The Docs \u5e76\u5bfc\u5165\u6587\u6863\u9879\u76ee\u4ed3\u5e93 \u4f7f\u7528 git \u547d\u4ee4\u521d\u59cb\u5316\u6587\u6863\u9879\u76ee\u4e3a git \u4ed3\u5e93, \u521b\u5efa\u9996\u6b21\u63d0\u4ea4\u5e76\u4e0a\u4f20\u5230 GitHub \u7684\u4ed3\u5e93\u4e2d\uff0c\u89e6\u53d1 Read The Docs \u81ea\u52a8\u6784\u5efa\u670d\u52a1 1 2 //\u521d\u59cb\u5316git\u4ed3\u5e93\u5e76\u521b\u5efa\u9996\u6b21\u63d0\u4ea4\u8bb0\u5f55 git init git add * git commit -m a demo blog 1 2 //\u8fd9\u91cc\u7684https://github.com/wangzhizhou/demo.git\u8def\u5f84\u5e94\u8be5\u662f\u4f60\u81ea\u5df1\u521b\u5efa\u7684\u4ed3\u5e93\u8def\u5f84 git remote add origin https://github.com/wangzhizhou/demo.git 1 2 //\u63a8\u9001\u5230GitHub\u4ed3\u5e93\u4e2d git push -u origin master \u5728\u7ebf\u6d4f\u89c8\u6587\u6863 \u6211\u521b\u5efa\u7684\u51e0\u4e2a\u6587\u6863\u793a\u4f8b \u5317\u4e0a\u89c1\u9762\u4f1a Joker\u624b\u624e","title":"This Blog"},{"location":"How I create this blog/#_1","text":"\u719f\u6089 Markdown \u6587\u6863\u4e66\u5199, \u8fd9\u91cc\u6709\u4efd \u8bed\u6cd5\u8bf4\u660e \u719f\u6089 Git \u7684\u7248\u672c\u63a7\u5236\u7684\u57fa\u672c\u7528\u6cd5\uff0c\u8fd9\u91cc\u6709\u4e2a \u7b80\u660e\u624b\u518c \u5728 GitHub \u4e0a\u521b\u5efa\u4e00\u4e2a\u5e10\u53f7, \u4e00\u4e2a\u5f88\u597d\u7684 Git \u548c GitHub \u5b66\u4e60\u8d44\u6e90 \u81f3\u5c11\u770b\u8fc7\u4e00\u6b21 MkDocs \u7684\u4f7f\u7528\u6587\u6863 \u5728 Read the Docs \u4e0a \u5f00\u901a \u4e00\u4e2a\u5e10\u53f7","title":"\u524d\u63d0\u51c6\u5907"},{"location":"How I create this blog/#_2","text":"\u672c\u673a\u5b89\u88c5\u6709 python \u73af\u5883\u548c pip \u5305\u7ba1\u7406\u5668\u3002\u7136\u540e\u6267\u884c\u4e0b\u9762\u547d\u4ee4\uff1a 1 pip install mkdocs","title":"\u73af\u5883\u642d\u5efa"},{"location":"How I create this blog/#_3","text":"","title":"\u5199\u4f5c\u8fc7\u7a0b"},{"location":"How I create this blog/#_4","text":"1 mkdocs new demo cd demo \u8f93\u51fa\uff1a 1 2 3 INFO - Creating project directory: demo INFO - Writing config file: demo/mkdocs.yml INFO - Writing initial docs: demo/docs/index.md \u9ed8\u8ba4\u7684\u6587\u6863\u7ed3\u6784: 1 2 3 4 demo \u251c\u2500\u2500 docs //\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u5b58\u653emarkdown\u7f16\u5199\u7684\u6587\u6863 \u2502 \u2514\u2500\u2500 index.md \u2514\u2500\u2500 mkdocs.yml //\u9879\u76ee\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5305\u62ec\u6587\u6863\u76ee\u5f55\u548c\u4e3b\u9898\u98ce\u683c\u914d\u7f6e \u672c\u5730\u6587\u6863\u6d4f\u89c8\u4f7f\u7528\u4e0b\u9762\u547d\u4ee4\uff1a 1 mkdocs serve \u8f93\u51fa: 1 2 3 INFO - Building documentation... INFO - Cleaning site directory [I 170524 09:23:48 server:283] Serving on http://127.0.0.1:8000 \u7528\u6d4f\u89c8\u5668\u6253\u5f00 http://127.0.0.1:8000 , \u5c31\u53ef\u4ee5\u67e5\u770b\u6587\u6863\u4e86\u3002\u5982\u679c\u5728\u8c03\u8bd5\u670d\u52a1\u5668\u5f00\u542f\u7684\u60c5\u51b5\u4e0b\u4fee\u6539\u9879\u76ee\u6587\u4ef6\uff0c\u4fee\u6539\u4f1a\u88ab\u81ea\u52a8\u68c0\u6d4b\u5230\uff0c\u5e76\u91cd\u65b0\u751f\u6210\u9879\u76ee\uff0c\u5b9e\u65f6\u9884\u89c8\u4fee\u6539\u540e\u7684\u6548\u679c\u3002 \u8fd9\u6837\u5c31\u53ef\u4ee5\u5728 docs \u6587\u4ef6\u5939\u4e0b\u9762\u521b\u5efa\u6587\u6863\u6587\u4ef6\uff0c\u5e76\u4fee\u6539 mkdocs.yml \u914d\u7f6e\u6587\u4ef6\uff0c\u4f7f\u65b0\u589e\u52a0\u7684\u6587\u4ef6\u5728\u6587\u6863\u76ee\u5f55\u7ed3\u6784\u4e2d\u51fa\u73b0\u3002","title":"\u521b\u5efa\u9ed8\u8ba4\u6587\u6863"},{"location":"How I create this blog/#_5","text":"","title":"\u672c\u535a\u5ba2\u76ee\u524d\u7684\u7ed3\u6784\u548c\u914d\u7f6e\u6587\u4ef6\u60c5\u51b5"},{"location":"How I create this blog/#mkdocsyml","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 site_name : Joker s Blog //\u914d\u7f6e\u9879\u76ee\u540d\u79f0\uff0c\u4e5f\u5c31\u662f\u6587\u6863\u663e\u793a\u540d\u79f0 pages: //\u914d\u7f6e\u9875\u9762\u7684\u663e\u793a\u5c42\u7ea7\u7ed3\u6784 - Profile : index . md //[ \u663e\u793a\u540d\u79f0 : \u9875\u9762\u6587\u4ef6\u8def\u5f84 ] - Me : //\u591a\u7ea7\u76ee\u5f55\u7ed3\u6784\uff1ame\u4e0b\u9762\u5305\u542b\u591a\u4e2a\u9875\u9762 - me /English Personal Resume.md // \u5982\u679c\u7701\u7565\u914d\u7f6e\u663e\u793a\u540d\u79f0\u5219\u6309\u6587\u4ef6\u540d\u79f0\u663e\u793a - me/My Plan for finding Job.md - me/Personal Pre-Work Record.md - me/My Financial Planning.md - me/How I create this blog.md - Tech : - tech/Network Simulator 2 Installation Guide for Ubuntu.md - tech/Learn STL In 30 Minutes.md - tech/Installation of Ubuntu 16.04 On UDisk.md - tech/Configure Git Server With Ubuntn and Apache 2.md - tech/Add Watermark on Video with OpenCV and FFmpeg.md - tech/Develop DLNA Using Platinum Library.md - tech/FFmpeg and SDL tutorial 1.md - tech/FFmpeg compiled on MacOS.md - tech/FFmpeg version 3.1.4 example code.md - tech/Fmpeg 2.8.6 example code - transcoding.md - tech/Nmap Basics.md - tech/Use GDB.md - tech/User OpenCV to add watermark on a video.md - tech/Wireshark Basics.md - life : - Ali Fu : life/alipay-scan-fu-icon.md theme : readthedocs //\u914d\u7f6e\u6587\u6863\u4f7f\u7528\u7684\u6a21\u677f\u6837\u5f0f","title":"\u914d\u7f6e\u6587\u4ef6**mkdocs.yml**"},{"location":"How I create this blog/#_6","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 . \u251c\u2500\u2500 LICENSE //\u9075\u5b88\u7684\u8bb8\u53ef\u8bc1\u6587\u4ef6 \u251c\u2500\u2500 README.md //\u9879\u76ee\u8bf4\u660e \u251c\u2500\u2500 docs //\u6587\u6863\u9875\u9762\u6e90\u6587\u4ef6\u76ee\u5f55 \u2502 \u251c\u2500\u2500 assets //\u5305\u62ec\u4e00\u4e9b\u591a\u5a92\u4f53\u8d44\u6e90 \u2502 \u2502 \u251c\u2500\u2500 Resume \u2502 \u2502 \u251c\u2500\u2500 excels \u2502 \u2502 \u251c\u2500\u2500 ffmpeg-code \u2502 \u2502 \u251c\u2500\u2500 pdfs \u2502 \u2502 \u2514\u2500\u2500 pictures \u2502 \u251c\u2500\u2500 index.md \u2502 \u251c\u2500\u2500 life \u2502 \u2502 \u2514\u2500\u2500 alipay-scan-fu-icon.md \u2502 \u251c\u2500\u2500 me \u2502 \u2502 \u251c\u2500\u2500 English\\ Personal\\ Resume.md \u2502 \u2502 \u251c\u2500\u2500 How\\ I\\ create\\ this\\ blog.md \u2502 \u2502 \u251c\u2500\u2500 My\\ Financial\\ Planning.md \u2502 \u2502 \u251c\u2500\u2500 My\\ Plan\\ for\\ finding\\ Job.md \u2502 \u2502 \u2514\u2500\u2500 Personal\\ Pre-Work\\ Record.md \u2502 \u2514\u2500\u2500 tech \u2502 \u251c\u2500\u2500 Add\\ Watermark\\ on\\ Video\\ with\\ OpenCV\\ and\\ FFmpeg.md \u2502 \u251c\u2500\u2500 Configure\\ Git\\ Server\\ With\\ Ubuntn\\ and\\ Apache\\ 2.md \u2502 \u251c\u2500\u2500 Develop\\ DLNA\\ Using\\ Platinum\\ Library.md \u2502 \u251c\u2500\u2500 FFmpeg\\ and\\ SDL\\ tutorial\\ 1.md \u2502 \u251c\u2500\u2500 FFmpeg\\ compiled\\ on\\ MacOS.md \u2502 \u251c\u2500\u2500 FFmpeg\\ version\\ 3.1.4\\ example\\ code.md \u2502 \u251c\u2500\u2500 Fmpeg\\ 2.8.6\\ example\\ code\\ -\\ transcoding.md \u2502 \u251c\u2500\u2500 Installation\\ of\\ Ubuntu\\ 16.04\\ On\\ UDisk.md \u2502 \u251c\u2500\u2500 Learn\\ STL\\ In\\ 30\\ Minutes.md \u2502 \u251c\u2500\u2500 Network\\ Simulator\\ 2\\ Installation\\ Guide\\ for\\ Ubuntu.md \u2502 \u251c\u2500\u2500 Nmap\\ Basics.md \u2502 \u251c\u2500\u2500 Use\\ GDB.md \u2502 \u251c\u2500\u2500 User\\ OpenCV\\ to\\ add\\ watermark\\ on\\ a\\ video.md \u2502 \u2514\u2500\u2500 Wireshark\\ Basics.md \u2514\u2500\u2500 mkdocs.yml //\u6587\u6863\u7684\u914d\u7f6e\u6587\u4ef6","title":"\u76ee\u5f55\u7ed3\u6784"},{"location":"How I create this blog/#_7","text":"\u5982\u679c\u89c9\u5f97\u4e00\u8fb9\u7528 vim \u5199\u6587\u6863\uff0c\u4e00\u8fb9\u8fd8\u5f97\u5728\u5199\u5b8c\u540e\u624b\u52a8\u8fd0\u884c\u4e00\u6b21 mkdocs serve \u6765\u5f00\u542f\u8c03\u8bd5\u670d\u52a1\u5668\u67e5\u770b\u6548\u679c\u6709\u4e9b\u9ebb\u70e6\uff0c\u8fd9\u91cc\u6709\u65b9\u6cd5\u53ef\u4ee5\u7b80\u5316\u8fd9\u4e9b\u64cd\u4f5c:","title":"\u8c03\u8bd5\u65b9\u6cd5"},{"location":"How I create this blog/#1-shell","text":"1 mkdocs serve \u8fd9\u6837\u8fd0\u884c\uff0cshell\u4e0d\u4f1a\u963b\u585e\uff0c\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u8fdb\u884c\u7f16\u8f91\u6d3b\u52a8\u3002\u9700\u8981\u56de\u5230\u524d\u53f0\u8fd0\u884c\u65f6\uff0c\u4f7f\u7528 fg \u547d\u4ee4\uff0c Ctrl+C \u5c31\u53ef\u4ee5\u7ed3\u675f\u8c03\u8bd5\u670d\u52a1\u5668\u4e86\u3002","title":"1. \u4f7f\u7528shell\u540e\u53f0\u547d\u4ee4\u8fd0\u884c"},{"location":"How I create this blog/#2-screen","text":"\u5982\u679c\u7ef4\u62a4\u8fc7\u670d\u52a1\u5668\uff0c\u90a3\u4e48ssh\u4e0b\u4e00\u5b9a\u7528\u8fc7 screen \u8fd9\u4e2a\u5de5\u5177\uff0c\u7cfb\u7edf\u9ed8\u8ba4\u662f\u4e0d\u4f1a\u5b89\u88c5\u7684\uff0c\u9700\u8981\u624b\u52a8\u5b89\u88c5: sudo apt-get install -y screen \u4f7f\u7528 screen \u542f\u52a8\u8c03\u8bd5\u670d\u52a1\u5668\uff1a 1 screen mkdocs serve \u4e4b\u540e\u6309\u4e0b Ctrl+A+D \u5c31\u53ef\u4ee5\u4f7f\u8c03\u8bd5\u670d\u52a1\u5668\u4e0d\u963b\u585eshell\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7ee7\u7eed\u7f16\u8f91\u6587\u6863\u4e86\u3002\u6d4f\u89c8\u5668\u5728\u6bcf\u6b21\u4fdd\u5b58\u6587\u6863\u540e\u4f1a\u81ea\u52a8\u89e6\u53d1\u4e00\u6b21\u9875\u9762\u5237\u65b0\u6765\u66f4\u65b0\u663e\u793a\u5185\u5bb9\u3002 \u5982\u679c\u8981\u7ed3\u675f\u8c03\u8bd5\u670d\u52a1\u5668\uff0c\u4f7f\u7528\u547d\u4ee4: screen -r \uff0c\u5e76\u4f7f\u7528 Ctrl+C \u6765\u7ed3\u675f\u3002","title":"2. \u4f7f\u7528"},{"location":"How I create this blog/#_8","text":"\u5982\u679c\u89c9\u5f97\u5728\u4e00\u4e2a\u663e\u793a\u5668\u5c4f\u5e55\u5185\u6765\u56de\u5207\u6362\u6d4f\u89c8\u5668\u548c\u7f16\u8f91\u5668\u6709\u70b9\u9ebb\u70e6\uff0c\u4e5f\u53ef\u4ee5\u7528\u624b\u673a\u505a\u4e3a\u6548\u679c\u9884\u89c8\u5668\uff0c\u4f46\u8fd9\u9700\u8981\u505a\u4e00\u4e9b\u989d\u5916\u7684\u914d\u7f6e\u3002 \u5982\u679c\u624b\u673a\u548c\u7535\u8111\u5728\u540c\u4e00\u4e2a\u5c40\u57df\u7f51\u5185\u90e8\uff0c\u53ef\u4ee5\u628a\u7535\u8111\u4f5c\u4e3a\u624b\u673a\u7684http\u4ee3\u7406\u670d\u52a1\u5668\u6765\u8bbf\u95eehttp\u670d\u52a1\uff0c\u5e76\u5728\u7535\u8111\u7684 hosts \u6587\u4ef6\u4e2d\u914d\u7f6e\u5982\u4e0b\u7684\u57df\u540d\u89e3\u6790\uff1a 1 127.0.0.1 doc.com \u5728\u6587\u6863\u8c03\u8bd5\u670d\u52a1\u5668\u8fd0\u884c\u7684\u60c5\u51b5\u4e0b\uff0c\u624b\u673a\u4e0a\u8bbf\u95ee http://doc.com:8000 \u5c31\u53ef\u4ee5\u5b9e\u65f6\u9884\u89c8\u6587\u6863\u6548\u679c\uff0c\u800c\u4e14\u6bcf\u6b21\u6587\u6863\u4fdd\u5b58\u540e\u4f1a\u81ea\u52a8\u89e6\u53d1\u624b\u673a\u6d4f\u89c8\u5668\u9875\u9762\u5237\u65b0\u3002 \u90a3\u4e48\u5269\u4e0b\u7684\u5c31\u662f\u5982\u4f55\u914d\u7f6e\u624b\u673a\u901a\u8fc7\u7535\u8111\u6765\u8bbf\u95eeHttp\u670d\u52a1\u4e86 \u5728\u5f53\u524d\u7684WiFi\u8fde\u63a5\u4e2d\u914d\u7f6e\u4e00\u4e0b http\u4ee3\u7406 \uff0c\u7535\u8111\u4e0a\u9700\u8981\u6709\u4ee3\u7406\u8f6f\u4ef6\u5b89\u88c5\uff0c\u4f8b\u5982 Charles \u6216\u8005 Fiddler \u4f8b\u5982,Mac\u4e0b\u4f7f\u7528 Charles \u4ee3\u7406\u8f6f\u4ef6\uff0c\u624b\u673a\u53ef\u8bbe\u7f6e\u5982\u4e0b\uff1a \u7136\u540e\u624b\u673a\u8f93\u5165 http://doc.com:8000 \u6d4f\u89c8\u5230\u6587\u6863\u6548\u679c\u5982\u4e0b\uff1a","title":"\u624b\u673a\u9875\u9762\u8c03\u8bd5"},{"location":"How I create this blog/#_9","text":"\u672c\u5730\u7f16\u8f91\u7684\u5dee\u4e0d\u591a\u4e86\uff0c\u53ef\u4ee5\u53d1\u5e03\u5230\u7f51\u7edc\u4e0a\uff0c\u8fd9\u5c31\u6d89\u53ca\u5230\u6258\u7ba1\u670d\u52a1\u3002\u6e90\u4ee3\u7801\u53ef\u4ee5\u901a\u8fc7 GitHub \u4ed3\u5e93\u670d\u52a1\u6258\u7ba1\uff0c\u6587\u6863\u81ea\u52a8\u751f\u6210\u548c\u6d4f\u89c8\u53ef\u4ee5\u901a\u8fc7 Read The Docs \u670d\u52a1\u6765\u6258\u7ba1\uff0c\u5e76\u4e14\u5f53\u914d\u7f6e\u4e86 GitHub \u5bf9 Read The Docs \u7684 Web Hook \u540e\uff0c GitHub \u4ed3\u5e93\u7684\u6bcf\u6b21\u63d0\u4ea4\u90fd\u4f1a\u81ea\u52a8\u89e6\u53d1 Read The Docs \u4e0a\u7684\u6587\u6863\u91cd\u65b0\u751f\u6210,\u4ee5\u4fbf\u4fdd\u6301\u6700\u65b0\u72b6\u6001\uff0c\u5f88\u65b9\u4fbf\u3002 \u524d\u9762\u5df2\u7ecf\u6ce8\u518c\u4e86\u8fd9\u4e24\u4e2a\u6258\u7ba1\u670d\u52a1\u7684\u5e10\u53f7\u3002\u4e0b\u9762\u52a8\u624b\u6765\u53d1\u5e03\u6587\u6863\u5230\u7f51\u7edc\u4e0a\uff0c\u8ba9\u66f4\u591a\u7684\u4eba\u53ef\u4ee5\u770b\u5230\u3002 \u767b\u5f55 GitHub \u5e76\u521b\u5efa\u4e00\u4e2a\u6258\u7ba1\u4ed3\u5e93 \u7ed9\u4ed3\u5e93\u6dfb\u52a0 Read The Docs \u7684 WebHook \u767b\u5f55 Read The Docs \u5e76\u5bfc\u5165\u6587\u6863\u9879\u76ee\u4ed3\u5e93 \u4f7f\u7528 git \u547d\u4ee4\u521d\u59cb\u5316\u6587\u6863\u9879\u76ee\u4e3a git \u4ed3\u5e93, \u521b\u5efa\u9996\u6b21\u63d0\u4ea4\u5e76\u4e0a\u4f20\u5230 GitHub \u7684\u4ed3\u5e93\u4e2d\uff0c\u89e6\u53d1 Read The Docs \u81ea\u52a8\u6784\u5efa\u670d\u52a1 1 2 //\u521d\u59cb\u5316git\u4ed3\u5e93\u5e76\u521b\u5efa\u9996\u6b21\u63d0\u4ea4\u8bb0\u5f55 git init git add * git commit -m a demo blog 1 2 //\u8fd9\u91cc\u7684https://github.com/wangzhizhou/demo.git\u8def\u5f84\u5e94\u8be5\u662f\u4f60\u81ea\u5df1\u521b\u5efa\u7684\u4ed3\u5e93\u8def\u5f84 git remote add origin https://github.com/wangzhizhou/demo.git 1 2 //\u63a8\u9001\u5230GitHub\u4ed3\u5e93\u4e2d git push -u origin master \u5728\u7ebf\u6d4f\u89c8\u6587\u6863","title":"\u5728\u7ebf\u6258\u7ba1"},{"location":"How I create this blog/#_10","text":"\u5317\u4e0a\u89c1\u9762\u4f1a Joker\u624b\u624e","title":"\u6211\u521b\u5efa\u7684\u51e0\u4e2a\u6587\u6863\u793a\u4f8b"},{"location":"docker/Container/","text":"\u662f\u65f6\u5019\u7528 docker \u7684\u65b9\u5f0f\u6784\u5efa\u4e00\u4e2a\u5e94\u7528\u4e86\u3002\u6211\u4eec\u9996\u5148\u4ece\u5e94\u7528\u7ed3\u6784\u7684\u6700\u5e95\u5c42(\u5bb9\u5668)\u5f00\u59cb\u3002\u5728\u5bb9\u5668\u5c42\u4e0a\u9762\u662f\u670d\u52a1\u5c42\uff0c\u5b9a\u4e49\u4e86\u5bb9\u5668\u5728\u751f\u4ea7\u73af\u5883\u4e0b\u7684\u8868\u73b0\uff0c\u5728\u6700\u4e0a\u5c42\u662f\u6808\uff0c\u5b9a\u4e49\u4e86\u6240\u6709\u670d\u52a1\u4e4b\u95f4\u7684\u4ea4\u4e92\u5173\u7cfb\u3002 \u5e94\u7528\u7ed3\u6784\u5982\u4e0b\uff1a \u6808 \u670d\u52a1 \u5bb9\u5668(\u6211\u4eec\u73b0\u5728\u5728\u8fd9\u4e2a\u4f4d\u7f6e) \u5d2d\u65b0\u7684\u5f00\u59cb\u73af\u5883 \u5728\u8fd9\u4e4b\u524d\uff0c\u5982\u679c\u4f60\u8981\u5f00\u59cb\u5f00\u53d1\u4e00\u4e2apython\u5e94\u7528\uff0c\u9996\u5148\u8981\u5728\u81ea\u5df1\u7684\u673a\u5668\u4e0a\u642d\u4e00\u4e2apython\u8fd0\u884c\u73af\u5883\u3002\u4f46\u662f\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u670d\u52a1\u5668\u4e0a\u7684python\u8fd0\u884c\u73af\u5883\u4e5f\u5fc5\u987b\u548c\u4f60\u5f00\u53d1\u673a\u5668\u4e0a\u7684\u73af\u5883\u4e00\u81f4\u3002 \u6709\u4e86 Docker \uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u955c\u50cf\u7684\u65b9\u5f0f\u83b7\u53d6python\u73af\u5883\uff0c\u4e0d\u9700\u8981\u5b89\u88c5\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u4e2a\u73af\u5883\u4e0b\u5f00\u53d1\u4f60\u7684\u5e94\u7528\uff0c\u5e76\u628a\u5e94\u7528\u96c6\u6210\u8fdb\u8fd9\u4e2a\u955c\u50cf\u4e2d\uff0c\u8fd9\u6837\u5e94\u7528\u3001\u8fd0\u884c\u73af\u5883\u548c\u4f9d\u8d56\u5e93\u90fd\u5728\u4e00\u4e2a\u7edf\u4e00\u7684\u5730\u65b9\uff0c\u53ef\u4ee5\u5728\u90e8\u7f72\u65f6\u4e00\u8d77\u79fb\u52a8\u3002 \u8fd9\u4e2a\u53ef\u79fb\u52a8\u7684\u955c\u50cf\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u540d\u4e3a Dockerfile \u7684\u6587\u4ef6\u6765\u5b9a\u4e49\u3002 \u7528 Dockerfile \u6765\u5b9a\u4e49\u5bb9\u5668 Dockerfile \u5b9a\u4e49\u5728\u5bb9\u5668\u5185\u90e8\u6267\u884c\u7684\u6b65\u9aa4\u3002\u8bbf\u95ee\u8d44\u6e90\u5982\u7f51\u7edc\u63a5\u53e3\u4ee5\u53ca\u78c1\u76d8\u9a71\u52a8\u5668\u53ef\u4ee5\u5728\u5bb9\u5668\u5185\u90e8\u8fdb\u884c\uff0c\u8fd9\u5c31\u9694\u79bb\u4e86\u4e0e\u5176\u5b83\u7cfb\u7edf\u7684\u4ea4\u4e92\u3002\u4f46\u662f\u4e3a\u4e86\u771f\u6b63\u7684\u8bbf\u95ee\u5916\u90e8\u4e16\u754c\uff0c\u4f60\u9700\u8981\u505a\u4e00\u4e9b\u7aef\u53e3\u6620\u5c04\u548c\u6587\u4ef6\u62f7\u8d1d\u5de5\u4f5c\u4ece\u800c\u4e0e\u5916\u90e8\u4e16\u754c\u5efa\u7acb\u8054\u7cfb\u3002\u53ea\u8981\u8fd9\u4e00\u8fc7\u7a0b\u5b8c\u6210\uff0c\u4f60\u5c31\u53ef\u4ee5\u786e\u4fdd\u4f60\u7684\u5e94\u7528\u5728\u4efb\u4f55\u5730\u65b9\u8fd0\u884c\u90fd\u662f\u4e00\u81f4\u7684\u3002 \u9996\u5148\u521b\u5efa\u4e00\u4e2a\u7a7a\u76ee\u5f55\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u9762\u5efa\u7acb\u4e00\u4e2a\u540d\u4e3a Dockerfile \u7684\u6587\u4ef6\u3002\u6ce8\u610f\u4e0b\u9762\u6587\u4ef6\u5185\u5bb9\u4e2d\u7684\u6ce8\u91ca\uff0c\u53ef\u4ee5\u5e2e\u4f60\u66f4\u597d\u7684\u7406\u89e3\u5de5\u4f5c\u539f\u7406\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # Use an official Python runtime as a parent image FROM python:2.7-slim # Set the working directory to /app WORKDIR /app # Copy the current directory contents into the container at /app ADD . /app # Install any needed packages specified in requirements.txt RUN pip install -r requirements.txt # Make port 80 available to the world outside this container EXPOSE 80 # Define environment variable ENV NAME World # Run app.py when the container launches CMD [ python , app.py ] \u8fd9\u4e2a Dockerfile \u4e2d\u5f15\u7528\u5230\u7684\u4e00\u4e9b\u5176\u5b83\u6587\u4ef6\u50cf app.py \u548c requirements.txt \u8fd8\u6ca1\u6709\u63d0\u5230\u3002\u6211\u4eec\u5728\u63a5\u4e0b\u6765\u7684\u90e8\u5206\u4e2d\u521b\u5efa\u5b83\u4eec\u3002 \u5e94\u7528\u672c\u8eab \u628a\u4e0b\u9762\u7684\u4e24\u4e2a\u6587\u4ef6\u653e\u5728\u4e0e Dockerfile \u76f8\u540c\u7684\u76ee\u5f55\u4e0b\u3002\u90a3\u4e24\u4e2a\u6587\u4ef6\u5c31\u662f\u6211\u4eec\u5b8c\u6574\u7684\u5e94\u7528\uff0c\u5b9e\u73b0\u8fc7\u7a0b\u5f88\u7b80\u5355\u3002\u5f53\u6211\u4eec\u8981\u521b\u5efa\u955c\u50cf\u65f6\uff0c app.py \u548c requirements.txt \u6587\u4ef6\u4f1a\u88ab\u653e\u5165\u955c\u50cf\u4e2d\uff0c\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86\u6307\u4ee4 ADD \uff0c\u540c\u65f6\uff0c\u5e94\u7528\u7684\u8f93\u51fa\u4e5f\u4f1a\u88ab\u5916\u90e8\u8bbf\u95ee\u5230\uff0c\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u6307\u4ee4 EXPOSE \u66b4\u9732\u4e86\u7aef\u53e3\u81f3\u5916\u90e8\u3002 requirements.txt 1 2 Flask Redis app.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 from flask import Flask from redis import Redis , RedisError import os import socket # Connect to Redis redis = Redis ( host = redis , db = 0 , socket_connect_timeout = 2 , socket_timeout = 2 ) app = Flask ( __name__ ) @app.route ( / ) def hello (): try : visits = redis . incr ( counter ) except RedisError : visits = i cannot connect to Redis, counter disabled /i html = h3 Hello {name}! /h3 \\ b Hostname: /b {hostname} br/ \\ b Visits: /b {visits} return html . format ( name = os . getenv ( NAME , world ), hostname = socket . gethostname (), visits = visits ) if __name__ == __main__ : app . run ( host = 0.0.0.0 , port = 80 ) \u73b0\u5728\u6211\u4eec\u6765\u770b Dockerfile \u6587\u4ef6\u91cc\u7684\u6307\u4ee4 pip install -r requirements.txt \u5b89\u88c5\u4e86\u4f9d\u8d56\u5e93 Flask \u548c Redis ,\u5e76\u4e14\u5e94\u7528\u7684\u8f93\u51fa\u662f\u6253\u73af\u5883\u53d8\u91cf NAME \u548c\u901a\u8fc7\u8c03\u7528\u547d\u4ee4 socket.gethostname() \u6765\u8f93\u51fa\u673a\u5668\u540d\u79f0\u3002\u7531\u4e8e Redis \u8fd8\u6ca1\u6709\u8fd0\u884c\u8d77\u6765\uff0c\u6211\u4eec\u7684\u5e94\u7528\u5982\u679c\u6b64\u65f6\u88ab\u8fd0\u884c\uff0c\u5e94\u8be5\u662f\u4f1a\u5931\u8d25\u5e76\u4ea7\u751f\u9519\u8bef\u4fe1\u606f\u8f93\u51fa\u3002 \u6ce8\u610f \uff1a\u5728\u5bb9\u5668\u5185\u90e8\u83b7\u5f97\u7684\u673a\u5668\u540d\u79f0\u662f\u5bb9\u5668\u7684ID\uff0c\u8fd9\u4e2aID\u7c7b\u4f3c\u4e8e\u8fdb\u7a0bID\u3002 \u6784\u5efa\u5e94\u7528 \u5bbf\u4e3b\u7cfb\u7edf\u4e0a\u4e0d\u9700\u8981\u5b89\u88c5 python \u548c requirements.txt \u4e2d\u6240\u5217\u7684\u4f9d\u8d56\uff0c\u8fd9\u4e9b\u4e1c\u897f\u4e5f\u4e0d\u4f1a\u5728\u6784\u5efa\u8fc7\u7a0b\u4e2d\u5b89\u88c5\u5728\u5bbf\u4e3b\u7cfb\u7edf\u4e0a\u3002\u8fd9\u770b\u4e0a\u51fa\u4e0d\u53ef\u80fd\uff0c\u4f46\u4f60\u786e\u5b9e\u5df2\u7ecf\u53ef\u4ee5\u5efa\u7acb\u8d77\u4e00\u4e2a\u5e94\u7528\u7684\u5f00\u53d1\u73af\u5883\u4e86\u3002 \u5148\u6765\u770b\u4e0b\u76ee\u5f55\u4e0b\u9762\u6709\u4ec0\u4e48\u5185\u5bb9\uff1a 1 2 $ ls Dockerfile app.py requirements.txt \u4e0b\u9762\u6211\u4eec\u8fd0\u884c\u6784\u5efa\u547d\u4ee4\u6765\u5efa\u7acb\u6211\u4eec\u7684 Docker \u955c\u50cf\u3002\u6211\u4eec\u4f7f\u7528 -t \u9009\u9879\u4e3a\u6211\u4eec\u6784\u5efa\u7684\u955c\u50cf\u6307\u5b9a\u4e00\u4e2a\u53cb\u597d\u7684\u540d\u79f0\uff0c\u65b9\u4fbf\u4e4b\u540e\u7684\u4f7f\u7528\u3002 1 $ docker build -t friendlyhello . \u8fd0\u884c\u6210\u529f\u540e\uff0c\u6784\u5efa\u7684\u955c\u50cf\u4f1a\u5728\u4f60\u672c\u5730\u7684 Docker \u955c\u50cf\u767b\u8bb0\u5904\u3002\u4ee5\u4e0b\u547d\u4ee4\u67e5\u770b\uff1a 1 2 3 $ docker images REPOSITORY TAG IMAGE ID CREATED SIZE friendlyhello latest dd76f8897238 Less than a second ago 194MB \u8fd0\u884c\u5e94\u7528 \u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5c06\u5bbf\u4e3b\u673a\u7684 4000 \u7aef\u53e3\u6620\u5c04\u5230\u5bb9\u5668\u7684 80 \u7aef\u53e3\uff0c -p \u9009\u9879\u53ef\u4ee5\u7528\u6765\u6307\u5b9a\u7aef\u53e3\u6620\u5c04\uff1a 1 2 $ docker run -p 4000 :80 friendlyhello * Running on http://0.0.0.0:80/ ( Press CTRL+C to quit ) \u4f60\u4f1a\u770b\u5230\u6211\u4eec\u7684python\u5e94\u7528\u5728 http://0.0.0.0:80 \u5730\u5740\u5411\u5916\u90e8\u63d0\u4f9b\u670d\u52a1\u3002\u4f46\u662f\u5bb9\u5668\u7684\u5185\u90e8\u7aef\u53e3 80 \u5df2\u7ecf\u88ab\u6620\u5c04\u4e3a\u5bbf\u4e3b\u673a\u7684 4000 \u7aef\u53e3\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8bbf\u95ee: http://localhost:4000 ,\u6211\u4eec\u4f1a\u770b\u5230\u4e0b\u9762\u7684\u573a\u666f\uff1a \u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u884c\u6765\u8bbf\u95ee\u6211\u4eec\u7684\u5e94\u7528: 1 2 $ curl http://localhost:4000 h3 Hello world! /h3 b Hostname: /b d10c1e1c27c4 br/ b Visits: /b i cannot connect to Redis, counter disabled /i \u6ce8\u610f : EXPOSE \u6307\u4ee4\u53ea\u662f\u544a\u8bc9\u5bb9\u5668\u5411\u5916\u90e8\u66b4\u9732\u7684\u7aef\u53e3\u3002 -p 4000:80 \u662f\u628a\u5bb9\u5668\u7684 80 \u7aef\u53e3\u6620\u5c04\u4e3a\u5bbf\u4e3b\u673a\u7684 4000 \u7aef\u53e3\u3002 docker run -p \u4f1a\u9ed8\u8ba4\u628a EXPOSE \u7684 80 \u7aef\u53e3\u6620\u5c04\u4e3a\u5bbf\u4e3b\u673a\u7684 80 \u7aef\u53e3\u3002 \u4f7f\u7528 -d \u9009\u9879\u53ef\u4ee5\u8ba9\u5bb9\u5668\u4ee5\u975e\u963b\u585e\u7684\u65b9\u5f0f\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u4f8b\u5982\uff1a 1 2 $ docker run -p -d 4000 :80 friendlyhello 2ee89a76e20b3d2e1aed89d3bd1dff40280a8649abdf756252fe334ece39f057 \u4f7f\u7528 docker ps \u6765\u67e5\u770b\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u6240\u6709\u5bb9\u5668\u3002\u4f7f\u7528 docker stop CONTAINER ID \u6765\u505c\u6b62\u5bb9\u5668\u7684\u8fd0\u884c\u3002 1 2 3 4 5 6 7 $ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 2ee89a76e20b friendlyhello python app.py 8 seconds ago Up 55 seconds 0 .0.0.0:8001- 80/tcp relaxed_pare $ docker stop 2ee89a76e20b 2ee89a76e20b \u5206\u4eab\u4f60\u521b\u5efa\u7684\u955c\u50cf\u7ed9\u5b83\u4eba \u4e3a\u4e86\u8bc1\u660e\u4f60\u521a\u521b\u5efa\u7684\u955c\u50cf\u7684\u53ef\u79fb\u690d\u6027\uff0c\u6211\u4eec\u628a\u5b83\u4e0a\u4f20\u5230\u767b\u8bb0\u5904\u5427\u3002 \u767b\u8bb0\u5904\u662f\u4ed3\u5e93\u7684\u96c6\u5408\u5730\uff0c\u4ed3\u5e93\u662f\u955c\u50cf\u7684\u96c6\u5408\u3002\u5728\u767b\u8bb0\u5904\u521b\u5efa\u4e00\u4e2a\u5e10\u53f7\u540e\uff0c\u5c31\u53ef\u4ee5\u4e0a\u4f20\u4e00\u4e9b\u4ed3\u5e93\u4e86\u3002 docker CLI\u9ed8\u8ba4\u4f7f\u7528 Docker \u7684\u516c\u5171\u767b\u8bb0\u5904\u3002 \u6ce8\u610f : \u6211\u4eec\u4f7f\u7528 Docker \u516c\u5171\u767b\u8bb0\u5904\u53ea\u662f\u56e0\u4e3a\u5b83\u514d\u8d39\u5e76\u4e14\u5df2\u7ecf\u9884\u5148\u914d\u7f6e\u597d\u4e86\u3002\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u9009\u62e9\u5176\u5b83\u7684\u767b\u8bb0\u5904\u6765\u4e0a\u4f20\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 Docker Trusted Registry \u81ea\u5df1\u642d\u5efa\u79c1\u6709\u767b\u8bb0\u5904\u3002 \u5982\u679c\u4f60\u5728 https://hub.docker.com \u4e0a\u9762\u521b\u5efa\u8fc7\u5e10\u53f7\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u90a3\u4e2a\u5e10\u53f7\u6765\u767b\u5f55\u5e76\u4e0a\u4f20\u4f60\u7684\u955c\u50cf\u3002 1 2 3 4 5 $ docker login Login with your Docker ID to push and pull images from Docker Hub. If you don t have a Docker ID, head over to https://hub.docker.com to create one. Username ( zhulongyixian ) : Password: Login Succeeded emh1bG9uZ3lpeGlhbjpXdzU0Mzg1OTIzMAo= \u7ed9\u955c\u50cf\u6253\u6807\u7b7e \u7ed9\u672c\u5730\u955c\u50cf\u6253\u6807\u7b7e\u7684\u683c\u5f0f\u662f: username/repository:tag \uff0c tag \u662f\u53ef\u9009\u7684, \u9ed8\u8ba4\u4e3a latest \u3002 username \u662f\u4f60\u5728\u767b\u8bb0\u5904\u7684\u5e10\u6237\u540d\u79f0\uff0c repository \u662f\u4f60\u5728\u767b\u8bb0\u5904\u81ea\u5df1\u5e10\u53f7\u4e0b\u9762\u521b\u5efa\u7684\u4ed3\u5e93\u540d\u79f0\uff0c tag \u5c31\u662f\u4f60\u7ed9\u955c\u50cf\u6240\u6253\u7684\u6807\u7b7e\u4e86\uff0c\u53ef\u4ee5\u7528\u6765\u4f5c\u7248\u672c\u63a7\u5236\u3002 1 $ docker tag friendlyhello zhulongyixian/hello:v1.0 \u8fd0\u884c docker images \u6765\u67e5\u770b\u955c\u50cf: 1 2 3 4 $ docker images REPOSITORY TAG IMAGE ID CREATED SIZE friendlyhello latest c44e612afbaf About an hour ago 194MB zhulongyixian/hello v1.0 c44e612afbaf About an hour ago 194MB \u53d1\u5e03\u4f60\u7684\u955c\u50cf 1 2 3 4 5 6 7 8 9 10 $ docker push zhulongyixian/hello:v1.0 The push refers to a repository [ docker.io/zhulongyixian/hello ] 66ff03c1986b: Pushed 11d6afaa575f: Pushed 258c807552a6: Pushed 735a46068813: Mounted from library/python 2323e4886d1c: Mounted from library/python 3dd73719e600: Mounted from library/python 2c40c66f7667: Mounted from library/python v1.0: digest: sha256:8fbd239f550124a129ba0874c1634ac4c4b64835f544b66514eb579e00bfd5d4 size: 1787 \u4e00\u65e6\u5b8c\u6210\u53d1\u5e03\uff0c\u4f60\u5c31\u53ef\u4ee5\u5728 docker hub \u4e0a\u9762\u770b\u5230\u5b83\uff0c\u5176\u5b83\u4eba\u4e5f\u53ef\u4ee5\u62c9\u53d6\u4f60\u7684\u955c\u50cf\u5230\u81ea\u5df1\u7684\u672c\u5730\u8fd0\u884c\u670d\u52a1\u3002 \u62c9\u53d6\u4f60\u7684\u955c\u50cf\u5728\u5176\u5b83\u5730\u65b9\u8fd0\u884c 1 docker run -p 4000:80 zhulongyixian/hello:v1.0 \u6ce8\u610f :\u5982\u679c\u4e0d\u6307\u5b9a tag \uff0cdocker\u9ed8\u8ba4\u4f1a\u4f7f\u7528 latest \u6765\u62c9\u53d6\u955c\u50cf \u5e38\u7528\u6307\u4ee4\u5217\u8868 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 docker build -t friendlyname . # Create image using this directory s Dockerfile docker run -p 4000:80 friendlyname # Run friendlyname mapping port 4000 to 80 docker run -d -p 4000:80 friendlyname # Same thing, but in detached mode docker ps # See a list of all running containers docker stop hash # Gracefully stop the specified container docker ps -a # See a list of all containers, even the ones not running docker kill hash # Force shutdown of the specified container docker rm hash # Remove the specified container from this machine docker rm $(docker ps -a -q) # Remove all containers from this machine docker images -a # Show all images on this machine docker rmi imagename # Remove the specified image from this machine docker rmi $(docker images -q) # Remove all images from this machine docker login # Log in this CLI session using your Docker credentials docker tag image username/repository:tag # Tag image for upload to registry docker push username/repository:tag # Upload tagged image to registry docker run username/repository:tag # Run image from a registry","title":"\u5bb9\u5668"},{"location":"docker/Container/#_1","text":"\u5728\u8fd9\u4e4b\u524d\uff0c\u5982\u679c\u4f60\u8981\u5f00\u59cb\u5f00\u53d1\u4e00\u4e2apython\u5e94\u7528\uff0c\u9996\u5148\u8981\u5728\u81ea\u5df1\u7684\u673a\u5668\u4e0a\u642d\u4e00\u4e2apython\u8fd0\u884c\u73af\u5883\u3002\u4f46\u662f\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u670d\u52a1\u5668\u4e0a\u7684python\u8fd0\u884c\u73af\u5883\u4e5f\u5fc5\u987b\u548c\u4f60\u5f00\u53d1\u673a\u5668\u4e0a\u7684\u73af\u5883\u4e00\u81f4\u3002 \u6709\u4e86 Docker \uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u955c\u50cf\u7684\u65b9\u5f0f\u83b7\u53d6python\u73af\u5883\uff0c\u4e0d\u9700\u8981\u5b89\u88c5\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u4e2a\u73af\u5883\u4e0b\u5f00\u53d1\u4f60\u7684\u5e94\u7528\uff0c\u5e76\u628a\u5e94\u7528\u96c6\u6210\u8fdb\u8fd9\u4e2a\u955c\u50cf\u4e2d\uff0c\u8fd9\u6837\u5e94\u7528\u3001\u8fd0\u884c\u73af\u5883\u548c\u4f9d\u8d56\u5e93\u90fd\u5728\u4e00\u4e2a\u7edf\u4e00\u7684\u5730\u65b9\uff0c\u53ef\u4ee5\u5728\u90e8\u7f72\u65f6\u4e00\u8d77\u79fb\u52a8\u3002 \u8fd9\u4e2a\u53ef\u79fb\u52a8\u7684\u955c\u50cf\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u540d\u4e3a Dockerfile \u7684\u6587\u4ef6\u6765\u5b9a\u4e49\u3002","title":"\u5d2d\u65b0\u7684\u5f00\u59cb\u73af\u5883"},{"location":"docker/Container/#dockerfile","text":"Dockerfile \u5b9a\u4e49\u5728\u5bb9\u5668\u5185\u90e8\u6267\u884c\u7684\u6b65\u9aa4\u3002\u8bbf\u95ee\u8d44\u6e90\u5982\u7f51\u7edc\u63a5\u53e3\u4ee5\u53ca\u78c1\u76d8\u9a71\u52a8\u5668\u53ef\u4ee5\u5728\u5bb9\u5668\u5185\u90e8\u8fdb\u884c\uff0c\u8fd9\u5c31\u9694\u79bb\u4e86\u4e0e\u5176\u5b83\u7cfb\u7edf\u7684\u4ea4\u4e92\u3002\u4f46\u662f\u4e3a\u4e86\u771f\u6b63\u7684\u8bbf\u95ee\u5916\u90e8\u4e16\u754c\uff0c\u4f60\u9700\u8981\u505a\u4e00\u4e9b\u7aef\u53e3\u6620\u5c04\u548c\u6587\u4ef6\u62f7\u8d1d\u5de5\u4f5c\u4ece\u800c\u4e0e\u5916\u90e8\u4e16\u754c\u5efa\u7acb\u8054\u7cfb\u3002\u53ea\u8981\u8fd9\u4e00\u8fc7\u7a0b\u5b8c\u6210\uff0c\u4f60\u5c31\u53ef\u4ee5\u786e\u4fdd\u4f60\u7684\u5e94\u7528\u5728\u4efb\u4f55\u5730\u65b9\u8fd0\u884c\u90fd\u662f\u4e00\u81f4\u7684\u3002 \u9996\u5148\u521b\u5efa\u4e00\u4e2a\u7a7a\u76ee\u5f55\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u9762\u5efa\u7acb\u4e00\u4e2a\u540d\u4e3a Dockerfile \u7684\u6587\u4ef6\u3002\u6ce8\u610f\u4e0b\u9762\u6587\u4ef6\u5185\u5bb9\u4e2d\u7684\u6ce8\u91ca\uff0c\u53ef\u4ee5\u5e2e\u4f60\u66f4\u597d\u7684\u7406\u89e3\u5de5\u4f5c\u539f\u7406\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # Use an official Python runtime as a parent image FROM python:2.7-slim # Set the working directory to /app WORKDIR /app # Copy the current directory contents into the container at /app ADD . /app # Install any needed packages specified in requirements.txt RUN pip install -r requirements.txt # Make port 80 available to the world outside this container EXPOSE 80 # Define environment variable ENV NAME World # Run app.py when the container launches CMD [ python , app.py ] \u8fd9\u4e2a Dockerfile \u4e2d\u5f15\u7528\u5230\u7684\u4e00\u4e9b\u5176\u5b83\u6587\u4ef6\u50cf app.py \u548c requirements.txt \u8fd8\u6ca1\u6709\u63d0\u5230\u3002\u6211\u4eec\u5728\u63a5\u4e0b\u6765\u7684\u90e8\u5206\u4e2d\u521b\u5efa\u5b83\u4eec\u3002","title":"\u7528Dockerfile\u6765\u5b9a\u4e49\u5bb9\u5668"},{"location":"docker/Container/#_2","text":"\u628a\u4e0b\u9762\u7684\u4e24\u4e2a\u6587\u4ef6\u653e\u5728\u4e0e Dockerfile \u76f8\u540c\u7684\u76ee\u5f55\u4e0b\u3002\u90a3\u4e24\u4e2a\u6587\u4ef6\u5c31\u662f\u6211\u4eec\u5b8c\u6574\u7684\u5e94\u7528\uff0c\u5b9e\u73b0\u8fc7\u7a0b\u5f88\u7b80\u5355\u3002\u5f53\u6211\u4eec\u8981\u521b\u5efa\u955c\u50cf\u65f6\uff0c app.py \u548c requirements.txt \u6587\u4ef6\u4f1a\u88ab\u653e\u5165\u955c\u50cf\u4e2d\uff0c\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86\u6307\u4ee4 ADD \uff0c\u540c\u65f6\uff0c\u5e94\u7528\u7684\u8f93\u51fa\u4e5f\u4f1a\u88ab\u5916\u90e8\u8bbf\u95ee\u5230\uff0c\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u6307\u4ee4 EXPOSE \u66b4\u9732\u4e86\u7aef\u53e3\u81f3\u5916\u90e8\u3002 requirements.txt 1 2 Flask Redis app.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 from flask import Flask from redis import Redis , RedisError import os import socket # Connect to Redis redis = Redis ( host = redis , db = 0 , socket_connect_timeout = 2 , socket_timeout = 2 ) app = Flask ( __name__ ) @app.route ( / ) def hello (): try : visits = redis . incr ( counter ) except RedisError : visits = i cannot connect to Redis, counter disabled /i html = h3 Hello {name}! /h3 \\ b Hostname: /b {hostname} br/ \\ b Visits: /b {visits} return html . format ( name = os . getenv ( NAME , world ), hostname = socket . gethostname (), visits = visits ) if __name__ == __main__ : app . run ( host = 0.0.0.0 , port = 80 ) \u73b0\u5728\u6211\u4eec\u6765\u770b Dockerfile \u6587\u4ef6\u91cc\u7684\u6307\u4ee4 pip install -r requirements.txt \u5b89\u88c5\u4e86\u4f9d\u8d56\u5e93 Flask \u548c Redis ,\u5e76\u4e14\u5e94\u7528\u7684\u8f93\u51fa\u662f\u6253\u73af\u5883\u53d8\u91cf NAME \u548c\u901a\u8fc7\u8c03\u7528\u547d\u4ee4 socket.gethostname() \u6765\u8f93\u51fa\u673a\u5668\u540d\u79f0\u3002\u7531\u4e8e Redis \u8fd8\u6ca1\u6709\u8fd0\u884c\u8d77\u6765\uff0c\u6211\u4eec\u7684\u5e94\u7528\u5982\u679c\u6b64\u65f6\u88ab\u8fd0\u884c\uff0c\u5e94\u8be5\u662f\u4f1a\u5931\u8d25\u5e76\u4ea7\u751f\u9519\u8bef\u4fe1\u606f\u8f93\u51fa\u3002 \u6ce8\u610f \uff1a\u5728\u5bb9\u5668\u5185\u90e8\u83b7\u5f97\u7684\u673a\u5668\u540d\u79f0\u662f\u5bb9\u5668\u7684ID\uff0c\u8fd9\u4e2aID\u7c7b\u4f3c\u4e8e\u8fdb\u7a0bID\u3002","title":"\u5e94\u7528\u672c\u8eab"},{"location":"docker/Container/#_3","text":"\u5bbf\u4e3b\u7cfb\u7edf\u4e0a\u4e0d\u9700\u8981\u5b89\u88c5 python \u548c requirements.txt \u4e2d\u6240\u5217\u7684\u4f9d\u8d56\uff0c\u8fd9\u4e9b\u4e1c\u897f\u4e5f\u4e0d\u4f1a\u5728\u6784\u5efa\u8fc7\u7a0b\u4e2d\u5b89\u88c5\u5728\u5bbf\u4e3b\u7cfb\u7edf\u4e0a\u3002\u8fd9\u770b\u4e0a\u51fa\u4e0d\u53ef\u80fd\uff0c\u4f46\u4f60\u786e\u5b9e\u5df2\u7ecf\u53ef\u4ee5\u5efa\u7acb\u8d77\u4e00\u4e2a\u5e94\u7528\u7684\u5f00\u53d1\u73af\u5883\u4e86\u3002 \u5148\u6765\u770b\u4e0b\u76ee\u5f55\u4e0b\u9762\u6709\u4ec0\u4e48\u5185\u5bb9\uff1a 1 2 $ ls Dockerfile app.py requirements.txt \u4e0b\u9762\u6211\u4eec\u8fd0\u884c\u6784\u5efa\u547d\u4ee4\u6765\u5efa\u7acb\u6211\u4eec\u7684 Docker \u955c\u50cf\u3002\u6211\u4eec\u4f7f\u7528 -t \u9009\u9879\u4e3a\u6211\u4eec\u6784\u5efa\u7684\u955c\u50cf\u6307\u5b9a\u4e00\u4e2a\u53cb\u597d\u7684\u540d\u79f0\uff0c\u65b9\u4fbf\u4e4b\u540e\u7684\u4f7f\u7528\u3002 1 $ docker build -t friendlyhello . \u8fd0\u884c\u6210\u529f\u540e\uff0c\u6784\u5efa\u7684\u955c\u50cf\u4f1a\u5728\u4f60\u672c\u5730\u7684 Docker \u955c\u50cf\u767b\u8bb0\u5904\u3002\u4ee5\u4e0b\u547d\u4ee4\u67e5\u770b\uff1a 1 2 3 $ docker images REPOSITORY TAG IMAGE ID CREATED SIZE friendlyhello latest dd76f8897238 Less than a second ago 194MB","title":"\u6784\u5efa\u5e94\u7528"},{"location":"docker/Container/#_4","text":"\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5c06\u5bbf\u4e3b\u673a\u7684 4000 \u7aef\u53e3\u6620\u5c04\u5230\u5bb9\u5668\u7684 80 \u7aef\u53e3\uff0c -p \u9009\u9879\u53ef\u4ee5\u7528\u6765\u6307\u5b9a\u7aef\u53e3\u6620\u5c04\uff1a 1 2 $ docker run -p 4000 :80 friendlyhello * Running on http://0.0.0.0:80/ ( Press CTRL+C to quit ) \u4f60\u4f1a\u770b\u5230\u6211\u4eec\u7684python\u5e94\u7528\u5728 http://0.0.0.0:80 \u5730\u5740\u5411\u5916\u90e8\u63d0\u4f9b\u670d\u52a1\u3002\u4f46\u662f\u5bb9\u5668\u7684\u5185\u90e8\u7aef\u53e3 80 \u5df2\u7ecf\u88ab\u6620\u5c04\u4e3a\u5bbf\u4e3b\u673a\u7684 4000 \u7aef\u53e3\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8bbf\u95ee: http://localhost:4000 ,\u6211\u4eec\u4f1a\u770b\u5230\u4e0b\u9762\u7684\u573a\u666f\uff1a \u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u884c\u6765\u8bbf\u95ee\u6211\u4eec\u7684\u5e94\u7528: 1 2 $ curl http://localhost:4000 h3 Hello world! /h3 b Hostname: /b d10c1e1c27c4 br/ b Visits: /b i cannot connect to Redis, counter disabled /i \u6ce8\u610f : EXPOSE \u6307\u4ee4\u53ea\u662f\u544a\u8bc9\u5bb9\u5668\u5411\u5916\u90e8\u66b4\u9732\u7684\u7aef\u53e3\u3002 -p 4000:80 \u662f\u628a\u5bb9\u5668\u7684 80 \u7aef\u53e3\u6620\u5c04\u4e3a\u5bbf\u4e3b\u673a\u7684 4000 \u7aef\u53e3\u3002 docker run -p \u4f1a\u9ed8\u8ba4\u628a EXPOSE \u7684 80 \u7aef\u53e3\u6620\u5c04\u4e3a\u5bbf\u4e3b\u673a\u7684 80 \u7aef\u53e3\u3002 \u4f7f\u7528 -d \u9009\u9879\u53ef\u4ee5\u8ba9\u5bb9\u5668\u4ee5\u975e\u963b\u585e\u7684\u65b9\u5f0f\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u4f8b\u5982\uff1a 1 2 $ docker run -p -d 4000 :80 friendlyhello 2ee89a76e20b3d2e1aed89d3bd1dff40280a8649abdf756252fe334ece39f057 \u4f7f\u7528 docker ps \u6765\u67e5\u770b\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u6240\u6709\u5bb9\u5668\u3002\u4f7f\u7528 docker stop CONTAINER ID \u6765\u505c\u6b62\u5bb9\u5668\u7684\u8fd0\u884c\u3002 1 2 3 4 5 6 7 $ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 2ee89a76e20b friendlyhello python app.py 8 seconds ago Up 55 seconds 0 .0.0.0:8001- 80/tcp relaxed_pare $ docker stop 2ee89a76e20b 2ee89a76e20b","title":"\u8fd0\u884c\u5e94\u7528"},{"location":"docker/Container/#_5","text":"\u4e3a\u4e86\u8bc1\u660e\u4f60\u521a\u521b\u5efa\u7684\u955c\u50cf\u7684\u53ef\u79fb\u690d\u6027\uff0c\u6211\u4eec\u628a\u5b83\u4e0a\u4f20\u5230\u767b\u8bb0\u5904\u5427\u3002 \u767b\u8bb0\u5904\u662f\u4ed3\u5e93\u7684\u96c6\u5408\u5730\uff0c\u4ed3\u5e93\u662f\u955c\u50cf\u7684\u96c6\u5408\u3002\u5728\u767b\u8bb0\u5904\u521b\u5efa\u4e00\u4e2a\u5e10\u53f7\u540e\uff0c\u5c31\u53ef\u4ee5\u4e0a\u4f20\u4e00\u4e9b\u4ed3\u5e93\u4e86\u3002 docker CLI\u9ed8\u8ba4\u4f7f\u7528 Docker \u7684\u516c\u5171\u767b\u8bb0\u5904\u3002 \u6ce8\u610f : \u6211\u4eec\u4f7f\u7528 Docker \u516c\u5171\u767b\u8bb0\u5904\u53ea\u662f\u56e0\u4e3a\u5b83\u514d\u8d39\u5e76\u4e14\u5df2\u7ecf\u9884\u5148\u914d\u7f6e\u597d\u4e86\u3002\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u9009\u62e9\u5176\u5b83\u7684\u767b\u8bb0\u5904\u6765\u4e0a\u4f20\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 Docker Trusted Registry \u81ea\u5df1\u642d\u5efa\u79c1\u6709\u767b\u8bb0\u5904\u3002 \u5982\u679c\u4f60\u5728 https://hub.docker.com \u4e0a\u9762\u521b\u5efa\u8fc7\u5e10\u53f7\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u90a3\u4e2a\u5e10\u53f7\u6765\u767b\u5f55\u5e76\u4e0a\u4f20\u4f60\u7684\u955c\u50cf\u3002 1 2 3 4 5 $ docker login Login with your Docker ID to push and pull images from Docker Hub. If you don t have a Docker ID, head over to https://hub.docker.com to create one. Username ( zhulongyixian ) : Password: Login Succeeded emh1bG9uZ3lpeGlhbjpXdzU0Mzg1OTIzMAo=","title":"\u5206\u4eab\u4f60\u521b\u5efa\u7684\u955c\u50cf\u7ed9\u5b83\u4eba"},{"location":"docker/Container/#_6","text":"\u7ed9\u672c\u5730\u955c\u50cf\u6253\u6807\u7b7e\u7684\u683c\u5f0f\u662f: username/repository:tag \uff0c tag \u662f\u53ef\u9009\u7684, \u9ed8\u8ba4\u4e3a latest \u3002 username \u662f\u4f60\u5728\u767b\u8bb0\u5904\u7684\u5e10\u6237\u540d\u79f0\uff0c repository \u662f\u4f60\u5728\u767b\u8bb0\u5904\u81ea\u5df1\u5e10\u53f7\u4e0b\u9762\u521b\u5efa\u7684\u4ed3\u5e93\u540d\u79f0\uff0c tag \u5c31\u662f\u4f60\u7ed9\u955c\u50cf\u6240\u6253\u7684\u6807\u7b7e\u4e86\uff0c\u53ef\u4ee5\u7528\u6765\u4f5c\u7248\u672c\u63a7\u5236\u3002 1 $ docker tag friendlyhello zhulongyixian/hello:v1.0 \u8fd0\u884c docker images \u6765\u67e5\u770b\u955c\u50cf: 1 2 3 4 $ docker images REPOSITORY TAG IMAGE ID CREATED SIZE friendlyhello latest c44e612afbaf About an hour ago 194MB zhulongyixian/hello v1.0 c44e612afbaf About an hour ago 194MB","title":"\u7ed9\u955c\u50cf\u6253\u6807\u7b7e"},{"location":"docker/Container/#_7","text":"1 2 3 4 5 6 7 8 9 10 $ docker push zhulongyixian/hello:v1.0 The push refers to a repository [ docker.io/zhulongyixian/hello ] 66ff03c1986b: Pushed 11d6afaa575f: Pushed 258c807552a6: Pushed 735a46068813: Mounted from library/python 2323e4886d1c: Mounted from library/python 3dd73719e600: Mounted from library/python 2c40c66f7667: Mounted from library/python v1.0: digest: sha256:8fbd239f550124a129ba0874c1634ac4c4b64835f544b66514eb579e00bfd5d4 size: 1787 \u4e00\u65e6\u5b8c\u6210\u53d1\u5e03\uff0c\u4f60\u5c31\u53ef\u4ee5\u5728 docker hub \u4e0a\u9762\u770b\u5230\u5b83\uff0c\u5176\u5b83\u4eba\u4e5f\u53ef\u4ee5\u62c9\u53d6\u4f60\u7684\u955c\u50cf\u5230\u81ea\u5df1\u7684\u672c\u5730\u8fd0\u884c\u670d\u52a1\u3002","title":"\u53d1\u5e03\u4f60\u7684\u955c\u50cf"},{"location":"docker/Container/#_8","text":"1 docker run -p 4000:80 zhulongyixian/hello:v1.0 \u6ce8\u610f :\u5982\u679c\u4e0d\u6307\u5b9a tag \uff0cdocker\u9ed8\u8ba4\u4f1a\u4f7f\u7528 latest \u6765\u62c9\u53d6\u955c\u50cf","title":"\u62c9\u53d6\u4f60\u7684\u955c\u50cf\u5728\u5176\u5b83\u5730\u65b9\u8fd0\u884c"},{"location":"docker/Container/#_9","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 docker build -t friendlyname . # Create image using this directory s Dockerfile docker run -p 4000:80 friendlyname # Run friendlyname mapping port 4000 to 80 docker run -d -p 4000:80 friendlyname # Same thing, but in detached mode docker ps # See a list of all running containers docker stop hash # Gracefully stop the specified container docker ps -a # See a list of all containers, even the ones not running docker kill hash # Force shutdown of the specified container docker rm hash # Remove the specified container from this machine docker rm $(docker ps -a -q) # Remove all containers from this machine docker images -a # Show all images on this machine docker rmi imagename # Remove the specified image from this machine docker rmi $(docker images -q) # Remove all images from this machine docker login # Log in this CLI session using your Docker credentials docker tag image username/repository:tag # Tag image for upload to registry docker push username/repository:tag # Upload tagged image to registry docker run username/repository:tag # Run image from a registry","title":"\u5e38\u7528\u6307\u4ee4\u5217\u8868"},{"location":"docker/Deploy/","text":"\u6211\u4eec\u5728\u6574\u4e2a\u6559\u7a0b\u4e2d\u7f16\u8f91\u7684\u90a3\u4e2a docker-compose.yml \u6587\u4ef6\u4e5f\u53ef\u4ee5\u653e\u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u8fd9\u4e00\u7ae0\u6211\u4eec\u4f1a\u8fd0\u884c\u6211\u4eec\u7684 docker \u5316\u7684\u5e94\u7528\u3002 \u53ef\u4ee5\u4f7f\u7528 Docker \u4e91\u670d\u52a1 \u63d0\u4f9b\u6765\u7ba1\u7406\u6211\u4eec\u7684\u5e94\u7528\uff0c\u50cf Amazon Web Services \u3001 DigitalOcean \u548c Microsoft Azure \u5efa\u7acb\u548c\u90e8\u7f72 - \u9009\u62e9\u670d\u52a1\u63d0\u4f9b\u5546\uff0c\u5e76\u8fde\u63a5 Docker \u4e91\uff0c\u83b7\u53d6\u6388\u6743\u4f7f\u7528\u7684 Docker \u5316\u865a\u62df\u673a - \u4f7f\u7528 Docker \u4e91\u521b\u5efa\u4f60\u7684\u8ba1\u7b97\u8d44\u6e90\u548c Swarm \u673a\u7fa4 - \u90e8\u7f72\u4f60\u7684\u5e94\u7528 \u4e0b\u9762\u901a\u8fc7\u94fe\u63a5\u7684\u5f62\u5f0f\u7ed9\u51fa\u8fde\u63a5 Docker \u4e91\u7684\u65b9\u6cd5\uff0c Docker \u4e91\u53ef\u4ee5\u4e24\u79cd\u65b9\u6cd5\u8fd0\u884c\uff1a\u6807\u51c6\u6a21\u5f0f\u548c\u673a\u7fa4\u6a21\u5f0f \u6807\u51c6\u6a21\u5f0f Amazon Web Services setup guide DigitalOcean setup guide Microsoft Azure setup guide Packet setup guide SoftLayer setup guide Use the Docker Cloud Agent to Bring your Own Host \u673a\u7fa4\u6a21\u5f0f Automatically create a swarm on AWS Automatically create a swarm on Azure Create your nodes in the Docker Cloud UI Run the docker swarm init and docker swarm join commands you learned in part 4 over SSH via Docker Cloud Enable Swarm Mode Register the swarm \u90e8\u7f72\u4f60\u7684\u5e94\u7528 Connect to your swarm via Docker Cloud Connect to your swarms directly through the desktop app menus \u516d\u6b65Docker\u6559\u7a0b\u5b8c\u6bd5 \u4f60\u5b8c\u6210\u4e86\u4ece\u5f00\u53d1\u5230\u90e8\u7f72\u7684 Docker \u5e73\u53f0\u5168\u90e8\u6d41\u7a0b \u4e0b\u9762\u662f\u4e00\u4e9b\u8fdb\u9636\u6750\u6599\uff1a \u793a\u4f8b \u7528\u6237\u624b\u518c \u7ba1\u7406\u5458\u624b\u518c \u57f9\u8bad \u535a\u5ba2","title":"\u90e8\u7f72\u5e94\u7528"},{"location":"docker/Deploy/#_1","text":"Amazon Web Services setup guide DigitalOcean setup guide Microsoft Azure setup guide Packet setup guide SoftLayer setup guide Use the Docker Cloud Agent to Bring your Own Host","title":"\u6807\u51c6\u6a21\u5f0f"},{"location":"docker/Deploy/#_2","text":"Automatically create a swarm on AWS Automatically create a swarm on Azure Create your nodes in the Docker Cloud UI Run the docker swarm init and docker swarm join commands you learned in part 4 over SSH via Docker Cloud Enable Swarm Mode Register the swarm","title":"\u673a\u7fa4\u6a21\u5f0f"},{"location":"docker/Deploy/#_3","text":"Connect to your swarm via Docker Cloud Connect to your swarms directly through the desktop app menus","title":"\u90e8\u7f72\u4f60\u7684\u5e94\u7528"},{"location":"docker/Deploy/#docker","text":"\u4f60\u5b8c\u6210\u4e86\u4ece\u5f00\u53d1\u5230\u90e8\u7f72\u7684 Docker \u5e73\u53f0\u5168\u90e8\u6d41\u7a0b \u4e0b\u9762\u662f\u4e00\u4e9b\u8fdb\u9636\u6750\u6599\uff1a \u793a\u4f8b \u7528\u6237\u624b\u518c \u7ba1\u7406\u5458\u624b\u518c \u57f9\u8bad \u535a\u5ba2","title":"\u516d\u6b65Docker\u6559\u7a0b\u5b8c\u6bd5"},{"location":"docker/Orientation/","text":"\u7b80\u5355\u7406\u89e3\u5bb9\u5668\u662f\u4e2a\u4ec0\u4e48\u9b3c \u955c\u50cf(image) \uff0c\u662f\u4e00\u4e2a\u72ec\u7acb\u3001\u8f7b\u91cf\u7ea7\u7684\u53ef\u8fd0\u884c\u5305\u3002\u5b83\u5305\u542b\u4e86\u8fd0\u884c\u4e00\u4e2a\u8f6f\u4ef6\u6240\u9700\u8981\u7684\u4ee3\u7801\u3001\u8fd0\u884c\u73af\u5883\u3001\u4f9d\u8d56\u5e93\u3001\u73af\u5883\u53d8\u91cf\u3001\u914d\u7f6e\u6587\u4ef6\u7b49\u5176\u5b83\u5fc5\u987b\u7684\u4e1c\u897f\u3002 \u5bb9\u5668(container) \uff0c\u662f\u4e00\u4e2a\u955c\u50cf\u7684\u8fd0\u884c\u5b9e\u4f8b\uff0c\u4e5f\u5c31\u662f\u955c\u50cf\u8fd0\u884c\u65f6\u88ab\u52a0\u8f7d\u5230\u4e86\u5185\u5b58\u4e2d\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5bb9\u5668\u8fd0\u884c\u53ef\u4ee5\u505a\u5230\u548c\u5bbf\u4e3b\u673a\u5b8c\u5168\u4e92\u4e0d\u5f71\u54cd\u3002\u5f53\u7136\uff0c\u5982\u679c\u660e\u786e\u914d\u7f6e\u4e86\u4ea4\u4e92\u7684\u60c5\u51b5\u4e0b\uff0c\u5bb9\u5668\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u5bbf\u4e3b\u673a\u7684\u6587\u4ef6\u548c\u7aef\u53e3\u3002 \u5bb9\u5668\u662f\u57fa\u4e8e\u5bbf\u4e3b\u673a\u7684\u5185\u6838\u6765\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u7684\u3002\u5b83\u6bd4\u4ec5\u901a\u8fc7 hypervisor \u8bbf\u95ee\u5bbf\u4e3b\u673a\u8d44\u6e90\u7684\u865a\u62df\u673a\u6709\u66f4\u9ad8\u7684\u6267\u884c\u6548\u7387\u3002\u56e0\u4e3a\u5bb9\u5668\u53ef\u4ee5\u4f5c\u4e3a\u5bbf\u4e3b\u673a\u7684\u4e00\u4e2a\u8fdb\u7a0b\u8fd0\u884c\uff0c\u6240\u4ee5\u66f4\u52a0\u8282\u7ea6\u5185\u5b58\u8d44\u6e90\u3002 \u7a97\u53e3 VS \u865a\u62df\u673a \u865a\u62df\u673a\u4f1a\u8fd0\u884c Guest OS \uff0c\u8fd9\u662f\u5f88\u8017\u8d39\u8d44\u6e90\u7684\uff0c\u5e76\u4e14\u8fd9\u4e2a Guest OS \u7684\u78c1\u76d8\u955c\u50cf\u548c\u5e94\u7528\u72b6\u6001\u5f88\u5bb9\u6613\u7ea0\u7f20\u5728\u4e00\u8d77\u3002\u5e76\u4e14\u6bcf\u4e00\u4e2a Guest OS \u7684\u7cfb\u7edf\u8bbe\u7f6e\u3001\u7cfb\u7edf\u4f9d\u8d56\u3001\u7cfb\u7edf\u5b89\u5168\u8865\u4e01\u548c\u4e00\u4e9b\u5176\u5b83\u7ec6\u8282\u5f88\u96be\u4fdd\u8bc1\u4e00\u81f4\u3002 \u5bb9\u5668\u53ef\u4ee5\u5171\u4eab\u5185\u6838\uff0c\u5e76\u4e14\u5bb9\u5668\u955c\u50cf\u5185\u552f\u4e00\u9700\u8981\u7684\u4fe1\u606f\u5c31\u662f\u6240\u8981\u6267\u884c\u7684\u6587\u4ef6\u548c\u5b83\u7684\u4f9d\u8d56\uff0c\u800c\u8fd9\u4e9b\u4fe1\u606f\u662f\u4e0d\u9700\u8981\u5b89\u88c5\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u7684\u3002\u8fd9\u4f7f\u5f97 \u5bb9\u5668 \u53ef\u4ee5\u50cf\u672c\u5730\u8fdb\u7a0b\u4e00\u6837\u8fd0\u884c\u548c\u7ba1\u7406\u3002\u4f60\u53ef\u4ee5\u50cf\u5728 linux \u4e0a\u4f7f\u7528 ps \u547d\u4ee4\u4e00\u6837\uff0c\u4f7f\u7528 docker ps \u6765\u67e5\u770b\u6d3b\u52a8\u5bb9\u5668\u7684\u8fd0\u884c\u60c5\u51b5\uff0c\u56e0\u4e3a\u5bb9\u5668\u5185\u5305\u542b\u4e86\u6240\u6709\u8fd0\u884c\u6240\u9700\u8981\u7684\u4f9d\u8d56\uff0c\u6240\u4ee5\u5b83\u4eec\u4e4b\u95f4\u7684\u914d\u7f6e\u4e0d\u4f1a\u7ea0\u7f20\u5728\u4e00\u8d77\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u8fd0\u884c\u3002 \u5b89\u88c5Docker \u5148\u8981\u786e\u4fdd\u4f60\u5b89\u88c5\u4e86\u6700\u7248\u672c\u7684docker\uff0c\u7248\u672c\u5728 1.13 \u4e4b\u540e\u3002 \u5b89\u88c5Docker \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u6d4b\u8bd5\u4e00\u4e0b\u5b89\u88c5\u662f\u5426\u6b63\u786e, \u5e76\u786e\u8ba4\u4e00\u4e0b\u4f60\u7684docker\u7248\u672c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 $ docker run hello-world docker --version latest: Pulling from library/hello-world b04784fba78d: Pull complete Digest: sha256:f3b3b28a45160805bb16542c9531888519430e9e6d6ffc09d72261b0d26ff74f Status: Downloaded newer image for hello-world:latest Hello from Docker! This message shows that your installation appears to be working correctly. To generate this message, Docker took the following steps: 1 . The Docker client contacted the Docker daemon. 2 . The Docker daemon pulled the hello-world image from the Docker Hub. 3 . The Docker daemon created a new container from that image which runs the executable that produces the output you are currently reading. 4 . The Docker daemon streamed that output to the Docker client, which sent it to your terminal. To try something more ambitious, you can run an Ubuntu container with: $ docker run -it ubuntu bash Share images, automate workflows, and more with a free Docker ID: https://cloud.docker.com/ For more examples and ideas, visit: https://docs.docker.com/engine/userguide/ Docker version 17 .06.0-ce, build 02c1d87 \u5c0f\u7ed3 \u6269\u5c55\u5355\u5143\u7684\u72ec\u7acb\u6027\u3001\u79fb\u690d\u6027\u610f\u5473\u7740\u6301\u7eed\u96c6\u6210\u548c\u6301\u7eed\u5206\u53d1\u53ef\u4ee5\u968f\u65f6\u66f4\u65b0\u5e94\u7528\u7684\u76f8\u5173\u90e8\u5206\uff0c\u907f\u514d\u4e86\u7cfb\u7edf\u4f9d\u8d56\u5e76\u4e14\u589e\u5927\u4e86\u8d44\u6e90\u5229\u7528\u7387\u3002\u6269\u5c55\u884c\u4e3a\u7684\u7f16\u6392\u53ea\u548c\u65b0\u7684\u5e94\u7528\u7528\u5173\uff0c\u800c\u4e0e\u4e3b\u673a\u65e0\u5173\u3002","title":"\u5b9a\u4f4d"},{"location":"docker/Orientation/#_1","text":"\u955c\u50cf(image) \uff0c\u662f\u4e00\u4e2a\u72ec\u7acb\u3001\u8f7b\u91cf\u7ea7\u7684\u53ef\u8fd0\u884c\u5305\u3002\u5b83\u5305\u542b\u4e86\u8fd0\u884c\u4e00\u4e2a\u8f6f\u4ef6\u6240\u9700\u8981\u7684\u4ee3\u7801\u3001\u8fd0\u884c\u73af\u5883\u3001\u4f9d\u8d56\u5e93\u3001\u73af\u5883\u53d8\u91cf\u3001\u914d\u7f6e\u6587\u4ef6\u7b49\u5176\u5b83\u5fc5\u987b\u7684\u4e1c\u897f\u3002 \u5bb9\u5668(container) \uff0c\u662f\u4e00\u4e2a\u955c\u50cf\u7684\u8fd0\u884c\u5b9e\u4f8b\uff0c\u4e5f\u5c31\u662f\u955c\u50cf\u8fd0\u884c\u65f6\u88ab\u52a0\u8f7d\u5230\u4e86\u5185\u5b58\u4e2d\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5bb9\u5668\u8fd0\u884c\u53ef\u4ee5\u505a\u5230\u548c\u5bbf\u4e3b\u673a\u5b8c\u5168\u4e92\u4e0d\u5f71\u54cd\u3002\u5f53\u7136\uff0c\u5982\u679c\u660e\u786e\u914d\u7f6e\u4e86\u4ea4\u4e92\u7684\u60c5\u51b5\u4e0b\uff0c\u5bb9\u5668\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u5bbf\u4e3b\u673a\u7684\u6587\u4ef6\u548c\u7aef\u53e3\u3002 \u5bb9\u5668\u662f\u57fa\u4e8e\u5bbf\u4e3b\u673a\u7684\u5185\u6838\u6765\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u7684\u3002\u5b83\u6bd4\u4ec5\u901a\u8fc7 hypervisor \u8bbf\u95ee\u5bbf\u4e3b\u673a\u8d44\u6e90\u7684\u865a\u62df\u673a\u6709\u66f4\u9ad8\u7684\u6267\u884c\u6548\u7387\u3002\u56e0\u4e3a\u5bb9\u5668\u53ef\u4ee5\u4f5c\u4e3a\u5bbf\u4e3b\u673a\u7684\u4e00\u4e2a\u8fdb\u7a0b\u8fd0\u884c\uff0c\u6240\u4ee5\u66f4\u52a0\u8282\u7ea6\u5185\u5b58\u8d44\u6e90\u3002","title":"\u7b80\u5355\u7406\u89e3\u5bb9\u5668\u662f\u4e2a\u4ec0\u4e48\u9b3c"},{"location":"docker/Orientation/#vs","text":"\u865a\u62df\u673a\u4f1a\u8fd0\u884c Guest OS \uff0c\u8fd9\u662f\u5f88\u8017\u8d39\u8d44\u6e90\u7684\uff0c\u5e76\u4e14\u8fd9\u4e2a Guest OS \u7684\u78c1\u76d8\u955c\u50cf\u548c\u5e94\u7528\u72b6\u6001\u5f88\u5bb9\u6613\u7ea0\u7f20\u5728\u4e00\u8d77\u3002\u5e76\u4e14\u6bcf\u4e00\u4e2a Guest OS \u7684\u7cfb\u7edf\u8bbe\u7f6e\u3001\u7cfb\u7edf\u4f9d\u8d56\u3001\u7cfb\u7edf\u5b89\u5168\u8865\u4e01\u548c\u4e00\u4e9b\u5176\u5b83\u7ec6\u8282\u5f88\u96be\u4fdd\u8bc1\u4e00\u81f4\u3002 \u5bb9\u5668\u53ef\u4ee5\u5171\u4eab\u5185\u6838\uff0c\u5e76\u4e14\u5bb9\u5668\u955c\u50cf\u5185\u552f\u4e00\u9700\u8981\u7684\u4fe1\u606f\u5c31\u662f\u6240\u8981\u6267\u884c\u7684\u6587\u4ef6\u548c\u5b83\u7684\u4f9d\u8d56\uff0c\u800c\u8fd9\u4e9b\u4fe1\u606f\u662f\u4e0d\u9700\u8981\u5b89\u88c5\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u7684\u3002\u8fd9\u4f7f\u5f97 \u5bb9\u5668 \u53ef\u4ee5\u50cf\u672c\u5730\u8fdb\u7a0b\u4e00\u6837\u8fd0\u884c\u548c\u7ba1\u7406\u3002\u4f60\u53ef\u4ee5\u50cf\u5728 linux \u4e0a\u4f7f\u7528 ps \u547d\u4ee4\u4e00\u6837\uff0c\u4f7f\u7528 docker ps \u6765\u67e5\u770b\u6d3b\u52a8\u5bb9\u5668\u7684\u8fd0\u884c\u60c5\u51b5\uff0c\u56e0\u4e3a\u5bb9\u5668\u5185\u5305\u542b\u4e86\u6240\u6709\u8fd0\u884c\u6240\u9700\u8981\u7684\u4f9d\u8d56\uff0c\u6240\u4ee5\u5b83\u4eec\u4e4b\u95f4\u7684\u914d\u7f6e\u4e0d\u4f1a\u7ea0\u7f20\u5728\u4e00\u8d77\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u8fd0\u884c\u3002","title":"\u7a97\u53e3 VS \u865a\u62df\u673a"},{"location":"docker/Orientation/#docker","text":"\u5148\u8981\u786e\u4fdd\u4f60\u5b89\u88c5\u4e86\u6700\u7248\u672c\u7684docker\uff0c\u7248\u672c\u5728 1.13 \u4e4b\u540e\u3002 \u5b89\u88c5Docker \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u6d4b\u8bd5\u4e00\u4e0b\u5b89\u88c5\u662f\u5426\u6b63\u786e, \u5e76\u786e\u8ba4\u4e00\u4e0b\u4f60\u7684docker\u7248\u672c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 $ docker run hello-world docker --version latest: Pulling from library/hello-world b04784fba78d: Pull complete Digest: sha256:f3b3b28a45160805bb16542c9531888519430e9e6d6ffc09d72261b0d26ff74f Status: Downloaded newer image for hello-world:latest Hello from Docker! This message shows that your installation appears to be working correctly. To generate this message, Docker took the following steps: 1 . The Docker client contacted the Docker daemon. 2 . The Docker daemon pulled the hello-world image from the Docker Hub. 3 . The Docker daemon created a new container from that image which runs the executable that produces the output you are currently reading. 4 . The Docker daemon streamed that output to the Docker client, which sent it to your terminal. To try something more ambitious, you can run an Ubuntu container with: $ docker run -it ubuntu bash Share images, automate workflows, and more with a free Docker ID: https://cloud.docker.com/ For more examples and ideas, visit: https://docs.docker.com/engine/userguide/ Docker version 17 .06.0-ce, build 02c1d87","title":"\u5b89\u88c5Docker"},{"location":"docker/Orientation/#_2","text":"\u6269\u5c55\u5355\u5143\u7684\u72ec\u7acb\u6027\u3001\u79fb\u690d\u6027\u610f\u5473\u7740\u6301\u7eed\u96c6\u6210\u548c\u6301\u7eed\u5206\u53d1\u53ef\u4ee5\u968f\u65f6\u66f4\u65b0\u5e94\u7528\u7684\u76f8\u5173\u90e8\u5206\uff0c\u907f\u514d\u4e86\u7cfb\u7edf\u4f9d\u8d56\u5e76\u4e14\u589e\u5927\u4e86\u8d44\u6e90\u5229\u7528\u7387\u3002\u6269\u5c55\u884c\u4e3a\u7684\u7f16\u6392\u53ea\u548c\u65b0\u7684\u5e94\u7528\u7528\u5173\uff0c\u800c\u4e0e\u4e3b\u673a\u65e0\u5173\u3002","title":"\u5c0f\u7ed3"},{"location":"docker/Service/","text":"\u8fd9\u90e8\u5206\uff0c\u6211\u4eec\u6269\u5c55\u6211\u4eec\u7684\u5e94\u7528\uff0c\u5e76\u4f7f\u5176\u8d1f\u8f7d\u5e73\u8861\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u8981\u4e0a\u5347\u5230\u670d\u52a1\u5c42\u6765\u8fdb\u884c\u8ba8\u8bba\u3002 \u6808 \u670d\u52a1(\u76ee\u524d\u6211\u4eec\u5728\u8fd9\u91cc) \u5bb9\u5668 \u7406\u89e3\u4ec0\u4e48\u662f\u670d\u52a1 \u5728\u5206\u5e03\u5f0f\u5e94\u7528\u4e2d\uff0c\u5e94\u7528\u7684\u4e0d\u540c\u90e8\u5206\u88ab\u79f0\u4e3a\u670d\u52a1\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u6709\u4e00\u4e2a\u89c6\u9891\u5206\u4eab\u7f51\u7ad9\uff0c\u5b83\u53ef\u80fd\u4f1a\u5305\u542b\u89c6\u9891\u5b58\u50a8\u3001\u89c6\u9891\u8f6c\u7801\u3001\u524d\u7aef\u7b49\u670d\u52a1\u3002 \u670d\u52a1\u5373\u662f\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u7684\u5bb9\u5668\u3002\u4e00\u4e2a\u670d\u52a1\u53ea\u8fd0\u884c\u4e00\u4e2a\u955c\u50cf\uff0c\u4f46\u662f\u5b83\u4f1a\u89c4\u5b9a\u8fd9\u4e2a\u955c\u50cf\u8fd0\u884c\u7684\u65b9\u5f0f\uff1a\u4f7f\u7528\u54ea\u4e2a\u7aef\u53e3\u3001\u8fd0\u884c\u591a\u5c11\u91cd\u590d\u5bb9\u5668\u5b9e\u4f8b\u6765\u8fbe\u5230\u9700\u8981\u7684\u670d\u52a1\u80fd\u529b\u7b49\u7b49\u3002\u6269\u5c55\u670d\u52a1\u6539\u53d8\u8fd0\u884c\u5e94\u7528\u7684\u5bb9\u5668\u5b9e\u4f8b\u4e2a\u6570\u4f1a\u7ed9\u8fd0\u884c\u5728\u8fdb\u7a0b\u4e2d\u7684\u670d\u52a1\u66f4\u591a\u7684\u8ba1\u7b97\u8d44\u6e90\u3002 \u503c\u5f97\u5e86\u5e78\u7684\u662f\uff0c\u5728 Docker \u4e0a\uff0c\u60f3\u8981\u5b9a\u4e49\u3001\u8fd0\u884c\u3001\u6269\u5c55\u670d\u52a1\uff0c\u53ea\u9700\u8981\u7f16\u5199 docker-compose.yml \u6587\u4ef6\u3002 \u7b2c\u4e00\u4e2adocker-compose.yml\u6587\u4ef6 docker-compose.yml \u662f\u4e00\u4e2a YAML \u683c\u5f0f\u7684\u6587\u4ef6\uff0c\u5b83\u5b9a\u4e49\u4e86 Docker \u5bb9\u5668\u5728\u751f\u4ea7\u73af\u5883\u4e0b\u5e94\u8be5\u600e\u6837\u7684\u8868\u73b0\u81ea\u5df1\u3002 \u521b\u5efa\u4e00\u4e2a docker-compose.yml \u6587\u4ef6\uff0c\u653e\u5728\u4efb\u4f55\u4f60\u60f3\u653e\u7684\u4f4d\u7f6e\uff0c\u524d\u63d0\u662f\u4f60\u5df2\u7ecf\u628a\u4e4b\u524d\u521b\u5efa\u597d\u7684\u955c\u50cf\u4e0a\u4f20\u5230\u4e86\u767b\u8bb0\u5904\uff0c\u56e0\u4e3a\u6211\u4eec\u4f1a\u5728\u6587\u4ef6\u4e2d\u5f15\u7528\u8fd9\u4e2a\u4e0a\u4f20\u7684\u955c\u50cf\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 version: 3 services: web: # replace username/repo:tag with your name and image details image:zhulongyixian/hello:v1.0 deploy: replicas: 5 resources: limits: cpus: 0.1 memory: 50M restart_policy: condition: on-failure ports: - 80:80 networks: - webnet networks: webnet: \u8fd9\u4e2a\u6587\u4ef6\u544a\u8bc9 Docker \u505a\u4ee5\u4e0b\u4e00\u4e9b\u4e8b\u60c5\uff1a \u62c9\u53d6\u6211\u4eec\u524d\u9762\u4e0a\u4f20\u5230\u767b\u8bb0\u5904\u7684\u955c\u50cf \u8fd0\u884c\u4e94\u4e2a\u955c\u50cf\u5b9e\u4f8b\u505a\u4e3a\u670d\u52a1\uff0c\u5e76\u628a\u670d\u52a1\u547d\u540d\u4e3a web \uff0c\u5e76\u4e3a\u6bcf\u4e00\u4e2a\u5b9e\u4f8b\u5206\u914d\u8d44\u6e90\u4e0a\u9650\uff0c\u6700\u591a 10% \u7684CPU\u4f7f\u7528\u548c 50MB \u7684\u5185\u5b58 \u5982\u679c\u6709\u4e00\u4e2a\u5bb9\u5668\u4e0d\u80fd\u8fd0\u884c\u5c31\u7acb\u5373\u91cd\u542f \u6620\u5c04\u5bb9\u5668\u7aef\u53e380\u5230\u5bbf\u4e3b\u673a\u7aef\u53e380 \u6307\u5b9a\u6240\u6709\u5bb9\u5668\u901a\u8fc7\u540d\u4e3a webnet \u7684\u8d1f\u8f7d\u5e73\u8861\u7f51\u7edc\u6765\u5171\u4eab\u7aef\u53e380 \u7528\u9ed8\u8ba4\u8bbe\u7f6e\u6765\u5b9a\u4e49 webnet \u8d1f\u8f7d\u5747\u8861\u7f51\u7edc \u5bf9 Docker-compose.yml \u6587\u4ef6\u7684\u7248\u672c\u3001\u540d\u5b57\u3001\u6307\u4ee4\u611f\u5230\u597d\u5947\u5417\uff1f version: 3 \u4f1a\u4f7f\u673a\u7fa4\u6a21\u5f0f\u751f\u6548\uff0c\u5728\u8fd9\u4e2a\u7248\u672c\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 deploy key \u548c\u5b83\u7684\u4e00\u4e9b\u5b50\u9009\u9879\u6765\u5bf9\u670d\u52a1\u8fdb\u884c\u8d1f\u8f7d\u5e73\u8861\u548c\u6027\u80fd\u4f18\u5316\u3002\u800c\u8fd9\u4e9b\u529f\u80fd\u53ea\u6709\u5728\u7248\u672c\u662f3.x\u65f6\u624d\u80fd\u4f7f\u7528\u3002\u4f7f\u7528\u547d\u4ee4 docker stack deploy \u6765\u90e8\u7f72\u673a\u7fa4\u3002\u5728\u4e0d\u4f7f\u7528\u673a\u7fa4\u914d\u7f6e\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 docker-compose \u3002 docekr-compose.yml \u8fd9\u4e2a\u6587\u4ef6\u540d\u5b57\u53ef\u4ee5\u968f\u4fbf\u53d6\uff0c\u53ea\u8981\u4f60\u81ea\u5df1\u660e\u767d\u5b83\u5b58\u5728\u7684\u610f\u4e49\u5c31\u53ef\u4ee5\u4e86\u3002 docker-compose.yml \u53ea\u662f\u4e00\u4e2a\u60ef\u7528\u7684\u540d\u5b57\u3002 \u8fd0\u884c\u5e26\u6709\u8d1f\u8f7d\u5e73\u8861\u7684\u5e94\u7528 \u5728\u6211\u4eec\u4f7f\u7528 docker stack deploy \u547d\u4ee4\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u8fd0\u884c\uff1a 1 docker swarm init \u8fd9\u4e2a\u547d\u4ee4\u7684\u610f\u4e49\u4f1a\u5728\u4e0b\u4e00\u7ae0\u89e3\u91ca \u73b0\u5728\u6211\u4eec\u6765\u8fd0\u884c\u547d\u4ee4: 1 docker stack deploy -c docker-compose.yml hello \u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u770b\u6211\u4eec\u8fd0\u884c\u8d77\u6765\u7684\u4e94\u4e2a\u5bb9\u5668: 1 2 3 4 5 6 7 $ docker stack ps hello ID NAME IMAGE NODE DESIRED STATE CURRENT STATE ERROR PORTS mdx4cjuphpgu hello_web.1 zhulongyixian/hello:v1.0 moby Running Running 33 seconds ago 0nuenxnduonl hello_web.2 zhulongyixian/hello:v1.0 moby Running Running 33 seconds ago 7wv949rmcgl1 hello_web.3 zhulongyixian/hello:v1.0 moby Running Running 33 seconds ago o09klm7wj1fl hello_web.4 zhulongyixian/hello:v1.0 moby Running Running less than a second ago w9xxpso8jpy3 hello_web.5 zhulongyixian/hello:v1.0 moby Running Running 33 seconds ago \u6211\u4eec\u4e4b\u540e\u8bf7\u6c42\u670d\u52a1\u65f6\uff0c\u4f1a\u968f\u673a\u7684\u8bbf\u95ee\u4e94\u4e2a\u5bb9\u5668\u4e2d\u7684\u5176\u4e2d\u4e00\u4e2a\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u7528\u6237\u6bd4\u8f83\u591a\u65f6\uff0c\u8d1f\u8f7d\u5e73\u8861\u3002\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u7528 curl http://localhost \u6765\u591a\u6b21\u8bf7\u6c42\u670d\u52a1\uff0c\u6216\u8005\u5728\u6d4f\u89c8\u5668\u91cc\u591a\u6b21\u5237\u65b0\u770b\u770b\uff0c\u6bcf\u6b21\u8bf7\u6c42\u56de\u7684\u5bb9\u5668ID\u662f\u4e0d\u662f\u4e94\u4e2a\u5bb9\u5668\u4e2d\u7684\u4e00\u4e2a\u3002 \u6ce8\u610f \uff1a\u76ee\u524d\u6211\u4eec\u7684\u670d\u52a1\u54cd\u5e94\u4e00\u4e2aHTTP\u8bf7\u6c42\u53ef\u80fd\u4f1a\u82b1\u8d3930\u79d2\uff0c\u8fd9\u4e0d\u80fd\u8868\u73b0 Docker \u6216 Swarm \u7684\u6027\u80fd\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u8fd8\u6ca1\u6709\u5efa\u7acb\u8d77\u5e94\u7528\u7684 Redis \u4f9d\u8d56\uff0c\u8fd9\u90e8\u5206\u6211\u4eec\u4f1a\u5728\u540e\u9762\u8fdb\u884c\u8865\u5145\u3002 \u6269\u5c55\u5e94\u7528 \u4f60\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539 docker-compose.yml \u6587\u4ef6\u4e2d\u7684 replicas \u6765\u6269\u5c55\u4f60\u7684\u5e94\u7528\uff0c\u4fee\u6539\u540e\u4fdd\u5b58\u6587\u4ef6\uff0c\u5e76\u91cd\u65b0\u6267\u884c\u4e00\u6b21\u4e0b\u9762\u7684\u547d\u4ee4\uff1a docker stack deploy -c docker-compose.yml hello Docker \u4f1a\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a\u505a\u4e00\u6b21\u66f4\u65b0\uff0c\u4e0d\u9700\u8981\u5173\u95ed\u539f\u6765\u7684\u670d\u52a1\u518d\u91cd\u6765\u4e00\u6b21\u3002 \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 docker stack ps hello \u6765\u67e5\u770b\u4e00\u4e0b\u4fee\u6539\u540e\u7684\u5bb9\u5668\u5b9e\u4f8b\u6709\u591a\u5c11\u4e2a\u3002 \u6211\u628a replicas \u6539\u4e3a 4 \u540e\u6267\u884c\u4e86\u4e00\u6b21\uff0c\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 $ docker stack deploy -c docker-compose.yml hello Updating service hello_web ( id: 6mgnwcgu02lxfx9flyiv40gme ) $ docker stack ps hello ID NAME IMAGE NODE DESIRED STATE CURRENT STATE ERROR PORTS mdx4cjuphpgu hello_web.1 zhulongyixian/hello:v1.0 moby Running Running about a minute ago 0nuenxnduonl hello_web.2 zhulongyixian/hello:v1.0 moby Running Running about a minute ago 7wv949rmcgl1 hello_web.3 zhulongyixian/hello:v1.0 moby Running Running about a minute ago w9xxpso8jpy3 hello_web.5 zhulongyixian/hello:v1.0 moby Running Running about a minute ago \u5173\u95ed\u5e94\u7528\u548c\u673a\u7fa4 docker stack rm hello \u8fd9\u4e2a\u547d\u4ee4\u53ef\u4ee5\u79fb\u9664\u6211\u4eec\u7684\u5e94\u7528\uff0c\u4f46\u662f\u6211\u4eec\u7684\u5355\u8282\u70b9\u673a\u7fa4(\u5373\u5bbf\u4e3b\u673a)\u4ecd\u7136\u4f1a\u8fd0\u884c\uff0c\u53ef\u4ee5\u4f7f\u7528 docker node ls \u6765\u67e5\u770b\u3002 \u5173\u95ed\u673a\u7fa4\u7684\u547d\u4ee4\u5982\u4e0b\uff1a 1 docker swarm leave --force \u4e4b\u540e\u7684\u5185\u5bb9\u6211\u4eec\u4f1a\u5c1d\u8bd5\u5728\u771f\u6b63\u7684 Docker \u673a\u7fa4\u4e0a\u90e8\u7f72\u6211\u4eec\u7684\u670d\u52a1\u3002 \u6ce8\u610f \uff1a\u6211\u4eec\u5b9a\u4e49\u7684 docker-compose.yml \u6587\u4ef6\u53ef\u4ee5\u4e0a\u4f20\u5230 Docker \u4e91 \u63d0\u4f9b\u5546\uff0c\u6216\u8005\u4efb\u4f55\u5176\u5b83\u652f\u6301 Docker \u4f01\u4e1a\u7248\u7684\u786c\u4ef6\u4e0a\u3002 1 2 3 4 5 6 7 8 9 10 $ docker stack rm hello Removing service hello_web Removing network hello_webnet $ docker node ls ID HOSTNAME STATUS AVAILABILITY MANAGER STATUS n0wlb32a7qwudl9p7u5wh9gx7 * moby Ready Active Leader $ docker swarm leave --force Node left the swarm. \u4e00\u4e9b\u5e38\u7528\u7684\u547d\u4ee4 1 2 3 4 5 docker stack ls # List all running applications on this Docker host docker stack deploy -c composefile appname # Run the specified Compose file docker stack services appname # List the services associated with an app docker stack ps appname # List the running containers associated with an app docker stack rm appname # Tear down an application","title":"\u670d\u52a1"},{"location":"docker/Service/#_1","text":"\u5728\u5206\u5e03\u5f0f\u5e94\u7528\u4e2d\uff0c\u5e94\u7528\u7684\u4e0d\u540c\u90e8\u5206\u88ab\u79f0\u4e3a\u670d\u52a1\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u6709\u4e00\u4e2a\u89c6\u9891\u5206\u4eab\u7f51\u7ad9\uff0c\u5b83\u53ef\u80fd\u4f1a\u5305\u542b\u89c6\u9891\u5b58\u50a8\u3001\u89c6\u9891\u8f6c\u7801\u3001\u524d\u7aef\u7b49\u670d\u52a1\u3002 \u670d\u52a1\u5373\u662f\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u7684\u5bb9\u5668\u3002\u4e00\u4e2a\u670d\u52a1\u53ea\u8fd0\u884c\u4e00\u4e2a\u955c\u50cf\uff0c\u4f46\u662f\u5b83\u4f1a\u89c4\u5b9a\u8fd9\u4e2a\u955c\u50cf\u8fd0\u884c\u7684\u65b9\u5f0f\uff1a\u4f7f\u7528\u54ea\u4e2a\u7aef\u53e3\u3001\u8fd0\u884c\u591a\u5c11\u91cd\u590d\u5bb9\u5668\u5b9e\u4f8b\u6765\u8fbe\u5230\u9700\u8981\u7684\u670d\u52a1\u80fd\u529b\u7b49\u7b49\u3002\u6269\u5c55\u670d\u52a1\u6539\u53d8\u8fd0\u884c\u5e94\u7528\u7684\u5bb9\u5668\u5b9e\u4f8b\u4e2a\u6570\u4f1a\u7ed9\u8fd0\u884c\u5728\u8fdb\u7a0b\u4e2d\u7684\u670d\u52a1\u66f4\u591a\u7684\u8ba1\u7b97\u8d44\u6e90\u3002 \u503c\u5f97\u5e86\u5e78\u7684\u662f\uff0c\u5728 Docker \u4e0a\uff0c\u60f3\u8981\u5b9a\u4e49\u3001\u8fd0\u884c\u3001\u6269\u5c55\u670d\u52a1\uff0c\u53ea\u9700\u8981\u7f16\u5199 docker-compose.yml \u6587\u4ef6\u3002","title":"\u7406\u89e3\u4ec0\u4e48\u662f\u670d\u52a1"},{"location":"docker/Service/#docker-composeyml","text":"docker-compose.yml \u662f\u4e00\u4e2a YAML \u683c\u5f0f\u7684\u6587\u4ef6\uff0c\u5b83\u5b9a\u4e49\u4e86 Docker \u5bb9\u5668\u5728\u751f\u4ea7\u73af\u5883\u4e0b\u5e94\u8be5\u600e\u6837\u7684\u8868\u73b0\u81ea\u5df1\u3002 \u521b\u5efa\u4e00\u4e2a docker-compose.yml \u6587\u4ef6\uff0c\u653e\u5728\u4efb\u4f55\u4f60\u60f3\u653e\u7684\u4f4d\u7f6e\uff0c\u524d\u63d0\u662f\u4f60\u5df2\u7ecf\u628a\u4e4b\u524d\u521b\u5efa\u597d\u7684\u955c\u50cf\u4e0a\u4f20\u5230\u4e86\u767b\u8bb0\u5904\uff0c\u56e0\u4e3a\u6211\u4eec\u4f1a\u5728\u6587\u4ef6\u4e2d\u5f15\u7528\u8fd9\u4e2a\u4e0a\u4f20\u7684\u955c\u50cf\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 version: 3 services: web: # replace username/repo:tag with your name and image details image:zhulongyixian/hello:v1.0 deploy: replicas: 5 resources: limits: cpus: 0.1 memory: 50M restart_policy: condition: on-failure ports: - 80:80 networks: - webnet networks: webnet: \u8fd9\u4e2a\u6587\u4ef6\u544a\u8bc9 Docker \u505a\u4ee5\u4e0b\u4e00\u4e9b\u4e8b\u60c5\uff1a \u62c9\u53d6\u6211\u4eec\u524d\u9762\u4e0a\u4f20\u5230\u767b\u8bb0\u5904\u7684\u955c\u50cf \u8fd0\u884c\u4e94\u4e2a\u955c\u50cf\u5b9e\u4f8b\u505a\u4e3a\u670d\u52a1\uff0c\u5e76\u628a\u670d\u52a1\u547d\u540d\u4e3a web \uff0c\u5e76\u4e3a\u6bcf\u4e00\u4e2a\u5b9e\u4f8b\u5206\u914d\u8d44\u6e90\u4e0a\u9650\uff0c\u6700\u591a 10% \u7684CPU\u4f7f\u7528\u548c 50MB \u7684\u5185\u5b58 \u5982\u679c\u6709\u4e00\u4e2a\u5bb9\u5668\u4e0d\u80fd\u8fd0\u884c\u5c31\u7acb\u5373\u91cd\u542f \u6620\u5c04\u5bb9\u5668\u7aef\u53e380\u5230\u5bbf\u4e3b\u673a\u7aef\u53e380 \u6307\u5b9a\u6240\u6709\u5bb9\u5668\u901a\u8fc7\u540d\u4e3a webnet \u7684\u8d1f\u8f7d\u5e73\u8861\u7f51\u7edc\u6765\u5171\u4eab\u7aef\u53e380 \u7528\u9ed8\u8ba4\u8bbe\u7f6e\u6765\u5b9a\u4e49 webnet \u8d1f\u8f7d\u5747\u8861\u7f51\u7edc","title":"\u7b2c\u4e00\u4e2adocker-compose.yml\u6587\u4ef6"},{"location":"docker/Service/#docker-composeyml_1","text":"version: 3 \u4f1a\u4f7f\u673a\u7fa4\u6a21\u5f0f\u751f\u6548\uff0c\u5728\u8fd9\u4e2a\u7248\u672c\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 deploy key \u548c\u5b83\u7684\u4e00\u4e9b\u5b50\u9009\u9879\u6765\u5bf9\u670d\u52a1\u8fdb\u884c\u8d1f\u8f7d\u5e73\u8861\u548c\u6027\u80fd\u4f18\u5316\u3002\u800c\u8fd9\u4e9b\u529f\u80fd\u53ea\u6709\u5728\u7248\u672c\u662f3.x\u65f6\u624d\u80fd\u4f7f\u7528\u3002\u4f7f\u7528\u547d\u4ee4 docker stack deploy \u6765\u90e8\u7f72\u673a\u7fa4\u3002\u5728\u4e0d\u4f7f\u7528\u673a\u7fa4\u914d\u7f6e\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 docker-compose \u3002 docekr-compose.yml \u8fd9\u4e2a\u6587\u4ef6\u540d\u5b57\u53ef\u4ee5\u968f\u4fbf\u53d6\uff0c\u53ea\u8981\u4f60\u81ea\u5df1\u660e\u767d\u5b83\u5b58\u5728\u7684\u610f\u4e49\u5c31\u53ef\u4ee5\u4e86\u3002 docker-compose.yml \u53ea\u662f\u4e00\u4e2a\u60ef\u7528\u7684\u540d\u5b57\u3002","title":"\u5bf9Docker-compose.yml\u6587\u4ef6\u7684\u7248\u672c\u3001\u540d\u5b57\u3001\u6307\u4ee4\u611f\u5230\u597d\u5947\u5417\uff1f"},{"location":"docker/Service/#_2","text":"\u5728\u6211\u4eec\u4f7f\u7528 docker stack deploy \u547d\u4ee4\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u8fd0\u884c\uff1a 1 docker swarm init \u8fd9\u4e2a\u547d\u4ee4\u7684\u610f\u4e49\u4f1a\u5728\u4e0b\u4e00\u7ae0\u89e3\u91ca \u73b0\u5728\u6211\u4eec\u6765\u8fd0\u884c\u547d\u4ee4: 1 docker stack deploy -c docker-compose.yml hello \u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u770b\u6211\u4eec\u8fd0\u884c\u8d77\u6765\u7684\u4e94\u4e2a\u5bb9\u5668: 1 2 3 4 5 6 7 $ docker stack ps hello ID NAME IMAGE NODE DESIRED STATE CURRENT STATE ERROR PORTS mdx4cjuphpgu hello_web.1 zhulongyixian/hello:v1.0 moby Running Running 33 seconds ago 0nuenxnduonl hello_web.2 zhulongyixian/hello:v1.0 moby Running Running 33 seconds ago 7wv949rmcgl1 hello_web.3 zhulongyixian/hello:v1.0 moby Running Running 33 seconds ago o09klm7wj1fl hello_web.4 zhulongyixian/hello:v1.0 moby Running Running less than a second ago w9xxpso8jpy3 hello_web.5 zhulongyixian/hello:v1.0 moby Running Running 33 seconds ago \u6211\u4eec\u4e4b\u540e\u8bf7\u6c42\u670d\u52a1\u65f6\uff0c\u4f1a\u968f\u673a\u7684\u8bbf\u95ee\u4e94\u4e2a\u5bb9\u5668\u4e2d\u7684\u5176\u4e2d\u4e00\u4e2a\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u7528\u6237\u6bd4\u8f83\u591a\u65f6\uff0c\u8d1f\u8f7d\u5e73\u8861\u3002\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u7528 curl http://localhost \u6765\u591a\u6b21\u8bf7\u6c42\u670d\u52a1\uff0c\u6216\u8005\u5728\u6d4f\u89c8\u5668\u91cc\u591a\u6b21\u5237\u65b0\u770b\u770b\uff0c\u6bcf\u6b21\u8bf7\u6c42\u56de\u7684\u5bb9\u5668ID\u662f\u4e0d\u662f\u4e94\u4e2a\u5bb9\u5668\u4e2d\u7684\u4e00\u4e2a\u3002 \u6ce8\u610f \uff1a\u76ee\u524d\u6211\u4eec\u7684\u670d\u52a1\u54cd\u5e94\u4e00\u4e2aHTTP\u8bf7\u6c42\u53ef\u80fd\u4f1a\u82b1\u8d3930\u79d2\uff0c\u8fd9\u4e0d\u80fd\u8868\u73b0 Docker \u6216 Swarm \u7684\u6027\u80fd\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u8fd8\u6ca1\u6709\u5efa\u7acb\u8d77\u5e94\u7528\u7684 Redis \u4f9d\u8d56\uff0c\u8fd9\u90e8\u5206\u6211\u4eec\u4f1a\u5728\u540e\u9762\u8fdb\u884c\u8865\u5145\u3002","title":"\u8fd0\u884c\u5e26\u6709\u8d1f\u8f7d\u5e73\u8861\u7684\u5e94\u7528"},{"location":"docker/Service/#_3","text":"\u4f60\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539 docker-compose.yml \u6587\u4ef6\u4e2d\u7684 replicas \u6765\u6269\u5c55\u4f60\u7684\u5e94\u7528\uff0c\u4fee\u6539\u540e\u4fdd\u5b58\u6587\u4ef6\uff0c\u5e76\u91cd\u65b0\u6267\u884c\u4e00\u6b21\u4e0b\u9762\u7684\u547d\u4ee4\uff1a docker stack deploy -c docker-compose.yml hello Docker \u4f1a\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a\u505a\u4e00\u6b21\u66f4\u65b0\uff0c\u4e0d\u9700\u8981\u5173\u95ed\u539f\u6765\u7684\u670d\u52a1\u518d\u91cd\u6765\u4e00\u6b21\u3002 \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 docker stack ps hello \u6765\u67e5\u770b\u4e00\u4e0b\u4fee\u6539\u540e\u7684\u5bb9\u5668\u5b9e\u4f8b\u6709\u591a\u5c11\u4e2a\u3002 \u6211\u628a replicas \u6539\u4e3a 4 \u540e\u6267\u884c\u4e86\u4e00\u6b21\uff0c\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 $ docker stack deploy -c docker-compose.yml hello Updating service hello_web ( id: 6mgnwcgu02lxfx9flyiv40gme ) $ docker stack ps hello ID NAME IMAGE NODE DESIRED STATE CURRENT STATE ERROR PORTS mdx4cjuphpgu hello_web.1 zhulongyixian/hello:v1.0 moby Running Running about a minute ago 0nuenxnduonl hello_web.2 zhulongyixian/hello:v1.0 moby Running Running about a minute ago 7wv949rmcgl1 hello_web.3 zhulongyixian/hello:v1.0 moby Running Running about a minute ago w9xxpso8jpy3 hello_web.5 zhulongyixian/hello:v1.0 moby Running Running about a minute ago","title":"\u6269\u5c55\u5e94\u7528"},{"location":"docker/Service/#_4","text":"docker stack rm hello \u8fd9\u4e2a\u547d\u4ee4\u53ef\u4ee5\u79fb\u9664\u6211\u4eec\u7684\u5e94\u7528\uff0c\u4f46\u662f\u6211\u4eec\u7684\u5355\u8282\u70b9\u673a\u7fa4(\u5373\u5bbf\u4e3b\u673a)\u4ecd\u7136\u4f1a\u8fd0\u884c\uff0c\u53ef\u4ee5\u4f7f\u7528 docker node ls \u6765\u67e5\u770b\u3002 \u5173\u95ed\u673a\u7fa4\u7684\u547d\u4ee4\u5982\u4e0b\uff1a 1 docker swarm leave --force \u4e4b\u540e\u7684\u5185\u5bb9\u6211\u4eec\u4f1a\u5c1d\u8bd5\u5728\u771f\u6b63\u7684 Docker \u673a\u7fa4\u4e0a\u90e8\u7f72\u6211\u4eec\u7684\u670d\u52a1\u3002 \u6ce8\u610f \uff1a\u6211\u4eec\u5b9a\u4e49\u7684 docker-compose.yml \u6587\u4ef6\u53ef\u4ee5\u4e0a\u4f20\u5230 Docker \u4e91 \u63d0\u4f9b\u5546\uff0c\u6216\u8005\u4efb\u4f55\u5176\u5b83\u652f\u6301 Docker \u4f01\u4e1a\u7248\u7684\u786c\u4ef6\u4e0a\u3002 1 2 3 4 5 6 7 8 9 10 $ docker stack rm hello Removing service hello_web Removing network hello_webnet $ docker node ls ID HOSTNAME STATUS AVAILABILITY MANAGER STATUS n0wlb32a7qwudl9p7u5wh9gx7 * moby Ready Active Leader $ docker swarm leave --force Node left the swarm.","title":"\u5173\u95ed\u5e94\u7528\u548c\u673a\u7fa4"},{"location":"docker/Service/#_5","text":"1 2 3 4 5 docker stack ls # List all running applications on this Docker host docker stack deploy -c composefile appname # Run the specified Compose file docker stack services appname # List the services associated with an app docker stack ps appname # List the running containers associated with an app docker stack rm appname # Tear down an application","title":"\u4e00\u4e9b\u5e38\u7528\u7684\u547d\u4ee4"},{"location":"docker/Stack/","text":"\u5728\u4e0a\u4e00\u7ae0\u5b66\u4f1a\u4e86\u5efa\u7acb Swarm \u96c6\u7fa4\uff0c\u5373\u8fd0\u884c\u7740 Docker \u7684\u4e00\u7c07\u673a\u5668\u3002 \u8fd9\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u4f1a\u5728\u6700\u9ad8\u7684\u5c42\u6b21\u4e0a\uff1a \u5e94\u7528\u6808 \u3002\u6808\u662f\u4e00\u7ec4\u76f8\u4e92\u5173\u8054\u5e76\u5171\u4eab\u4f9d\u8d56\u7684\u670d\u52a1\uff0c\u53ef\u4ee5\u7f16\u5236\u5728\u4e00\u8d77\u3002\u4e00\u4e2a\u5355\u6808\u5c31\u53ef\u4ee5\u5b9a\u4e49\u548c\u64cd\u4f5c\u6574\u4e2a\u5e94\u7528\u7684\u529f\u80fd\uff0c\u4f46\u662f\u6709\u4e9b\u590d\u6742\u7684\u5e94\u7528\u4f1a\u4f7f\u7528\u591a\u6808\u3002 \u4ece\u7b2c\u4e09\u7ae0\u6211\u4eec\u5c31\u4f7f\u7528\u8fc7\u6808\uff0c\u90a3\u65f6\u6211\u4eec\u4f7f\u7528\u4e86 docker stack deploy \u3002\u4f46\u90a3\u662f\u4e00\u4e2a\u8fd0\u884c\u5728\u5355\u4e3b\u673a\u4e0a\u7684\u5355\u670d\u52a1\u6808\uff0c\u4e0d\u662f\u751f\u4ea7\u73af\u5883\u4e2d\u7684\u4e00\u822c\u60c5\u51b5\u3002\u5728\u8fd9\u7ae0\u4e2d\uff0c\u4f60\u8981\u628a\u591a\u4e2a\u670d\u52a1\u5173\u8054\u8d77\u6765\uff0c\u5e76\u8fd0\u884c\u5728\u591a\u4e2a\u673a\u5668\u4e0a\u3002 \u6dfb\u52a0\u4e00\u4e2a\u65b0\u670d\u52a1\u5e76\u91cd\u65b0\u90e8\u7f72 \u5728 docker-compose.yml \u4e2d\u6dfb\u52a0\u670d\u52a1\u662f\u5f88\u5bb9\u6613\u7684\u4e8b\uff0c\u9996\u5148\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a\u514d\u8d39\u7684\u53ef\u89c6\u5316\u670d\u52a1\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u7684 Swarm \u673a\u7fa4\u4e2d\u7684\u5bb9\u5668\u7684\u8c03\u5ea6\u60c5\u51b5\u4e86\u3002 \u7b2c\u4e00\u6b65 \u7f16\u8f91\u5668\u6253\u5f00 docker-compose.yml \u6587\u4ef6\uff0c\u4fee\u6539\u5185\u5bb9\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 version: 3 services: web: # replace username/repo:tag with your name and image details image: zhulongyixian/hello:v1.0 deploy: replicas: 5 restart_policy: condition: on-failure resources: limits: cpus: 0.1 memory: 50M ports: - 80:80 networks: - webnet visualizer: image: dockersamples/visualizer:stable ports: - 8080:8080 volumes: - /var/run/docker.sock:/var/run/docker.sock deploy: placement: constraints: [node.role == manager] networks: - webnet networks: webnet: \u552f\u4e00\u7684\u6539\u52a8\u5c31\u662f\u548c web \u670d\u52a1\u5e76\u5217\uff0c\u591a\u52a0\u4e86\u4e00\u4e2a visualizer \u670d\u52a1\uff0c\u4f60\u4f1a\u770b\u5230\u4e24\u4e2a\u65b0\u7684\u4e1c\u897f\uff1a volumes \uff0c\u5141\u8bb8\u670d\u52a1\u8bbf\u95ee\u4e3b\u673a\u7684 socket \u6587\u4ef6\u3002 placement \u786e\u4fdd\u670d\u52a1\u53ea\u5728 swarm \u673a\u7fa4\u7684\u7ba1\u7406\u8282\u70b9\u4e0a\u8fd0\u884c\u3002\u8fd9\u4e2a\u65b0\u6dfb\u52a0\u7684\u670d\u52a1\u662f docker \u5f00\u53d1\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u7528\u6765\u4ee5\u56fe\u5f62\u7684\u65b9\u5f0f\u663e\u793a Docker \u670d\u52a1\u7684\u8fd0\u884c\u60c5\u51b5\u3002 \u7b2c\u4e8c\u6b65 \u628a\u65b0\u4fee\u6539\u7684 docker-compose.yml \u6587\u4ef6\u590d\u5236\u5230\u6211\u4eec\u7684 swarm \u7ba1\u7406\u8282\u70b9\u4e0a\uff0c\u5373 myvm1 \uff1a 1 docker-machine scp docker-comopose.yml myvm1:~ \u7b2c\u4e09\u6b65 \u91cd\u65b0\u5728\u7ba1\u7406\u8282\u70b9\u4e0a\u8fd0\u884c docker stack deploy \u547d\u4ee4\uff0c\u6765\u66f4\u65b0\u66f4\u65b0\u7684\u670d\u52a1\uff1a 1 $ docker-machine ssh myvm1 docker stack deploy -c docker-compose.yml hello \u7b2c\u56db\u6b65 \u67e5\u770b\u8fd9\u4e2a\u65b0\u6dfb\u52a0\u7684\u53ef\u89c6\u5316\u670d\u52a1 1 2 3 4 $ docker-machine ls NAME ACTIVE DRIVER STATE URL SWARM DOCKER ERRORS myvm1 - virtualbox Running tcp://192.168.99.100:2376 v17.06.0-ce myvm2 - virtualbox Running tcp://192.168.99.101:2376 v17.06.0-ce \u7136\u540e\u6d4f\u89c8\u5668\u8bbf\u95ee: http://192.168.99.100:8080 \u6216\u8005 http://192.168.99.101:8080 \u4ece\u56fe\u4e2d\u770b\u51fa\u8fd9\u4e2a visualizer \u8fd0\u884c\u5728\u7ba1\u7406\u8282\u70b9\u4e0a\uff0c\u5176\u5b83\u4e94\u4e2a web \u670d\u52a1\u7684\u5b9e\u4f8b\u5206\u5e03\u5728 swarm \u673a\u7fa4\u7684\u673a\u5668\u4e0a\u9762\u3002\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u6307\u4ee4\u6765\u786e\u8ba4: 1 $ docker-machine ssh myvm1 docker stack ps hello visualizer \u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u670d\u52a1\uff0c\u5b83\u53ef\u4ee5\u8fd0\u884c\u5728\u4efb\u4f55\u5176\u4ed6\u7684\u5e94\u7528\u6808\u4e2d\u3002\u5b83\u4e0d\u4f9d\u8d56\u4e8e\u5176\u5b83\u4e1c\u897f\u3002\u73b0\u5728\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u6709 Redis \u4f9d\u8d56\u7684\u670d\u52a1\uff0c\u7528\u6765\u63d0\u8bbf\u5ba2\u8ba1\u6570\u529f\u80fd\u3002 \u56fa\u5316\u6570\u636e \u6211\u4eec\u518d\u8fc7\u4e00\u904d\u6d41\u7a0b\uff0c\u8fd9\u79cd\u6211\u4eec\u6dfb\u52a0 Redis \u6570\u636e\u5e93\u6765\u5b58\u50a8\u5e94\u7528\u6570\u636e\u3002 \u7b2c\u4e00\u6b65 \u4fee\u6539 docker-compose.yml \u6587\u4ef6\uff0c\u8fd9\u6b21\u6dfb\u52a0 redis \u670d\u52a1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 version: 3 services: web: # replace username/repo:tag with your name and image details image: username/repo:tag deploy: replicas: 5 restart_policy: condition: on-failure resources: limits: cpus: 0.1 memory: 50M ports: - 80:80 networks: - webnet visualizer: image: dockersamples/visualizer:stable ports: - 8080:8080 volumes: - /var/run/docker.sock:/var/run/docker.sock deploy: placement: constraints: [node.role == manager] networks: - webnet redis: image: redis ports: - 6379:6379 volumes: - ./data:/data deploy: placement: constraints: [node.role == manager] networks: - webnet networks: webnet: Redis \u6709\u4e00\u4e2a\u5b98\u65b9 docker \u955c\u50cf\uff0c\u4f7f\u7528 image : redis \u952e\u503c\u5bf9\u6307\u5b9a\uff0c\u6240\u4ee5\u8fd9\u91cc\u6ca1\u6709 username/repo:tag \u8fd9\u6837\u7684\u884c\u51fa\u73b0\u3002 Redis \u7aef\u53e3\u662f 6379 \uff0c\u5df2\u7ecf\u88ab\u9884\u5148\u914d\u7f6e\u4e3a\u5bb9\u5668\u7aef\u53e3\u66b4\u9732\u7ed9\u4e3b\u673a\u3002 \u6700\u91cd\u8981\u7684\u662f\uff0c\u540e\u9762\u7684\u914d\u7f6e\u4e2d\u6709\u4e00\u4e9b redis \u76f8\u5173\u7684\u6307\u5b9a\uff1a redis \u603b\u662f\u8fd0\u884c\u5728\u7ba1\u7406\u8282\u70b9\u4e0a\uff0c\u56e0\u4e9b\u5b83\u603b\u662f\u4f7f\u7528\u4e0e\u7ba1\u7406\u8282\u70b9\u76f8\u540c\u7684\u6587\u4ef6\u7cfb\u7edf\u3002 redis \u5728\u5bb9\u5668\u5185\u90e8\u8bbf\u95ee\u5bbf\u4e3b\u673a\u7684\u4efb\u4f55\u76ee\u5f55\u90fd\u662f\u901a\u8fc7 /data \uff0c\u8fd9\u4e2a\u76ee\u5f55\u4e5f\u662f redis \u5b58\u653e\u6570\u636e\u7684\u5730\u65b9\u3002 \u8fd9\u4e9b\u7279\u522b\u914d\u7f6e\uff0c\u4f7f\u7684\u5b58\u653e\u5728\u7269\u7406\u6587\u4ef6\u7cfb\u7edf\u7684\u4e2d\u6570\u636e\u53d8\u6210\u53ef\u4fe1\u6e90\uff0c Redis \u5f80 /data \u76ee\u5f55\u5b58\u5165\u6570\u636e\u5c31\u662f\u5b58\u5165\u5230\u7269\u7406\u673a\u7684\u6587\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u8fd9\u53ef\u4ee5\u907f\u514d\u5728\u91cd\u65b0\u90e8\u7f72\u5bb9\u5668\u65f6\u6570\u636e\u4e22\u5931\u7684\u95ee\u9898\u3002 \u53ef\u4fe1\u6e90\u6709\u4e24\u4e2a\u5143\u7d20\uff1a - placement \u9650\u5236 redis \u670d\u52a1\u8fd0\u884c\u5728\u7ba1\u7406\u8282\u70b9\u4e0a\uff0c\u786e\u4fdd\u5b83\u59cb\u7ec8\u4f7f\u7528\u540c\u4e00\u4e2a\u4e3b\u673a\u3002 - volume \u6307\u5b9a\u5bb9\u5668\u5185\u90e8\u8bbf\u95ee ./data \u76ee\u5f55\u76f8\u5f53\u4e8e\u8bbf\u95ee\u5bbf\u4e3b\u673a\u76ee\u5f55 /data \uff0c\u5728\u5bb9\u5668\u8fd0\u884c\u8d77\u6765\u540e\uff0c\u751f\u6210\u7684\u6570\u636e\u4f1a\u56fa\u5316\u5b58\u5728\u6307\u5b9a\u4e3b\u673a\u4e0a \u7b2c\u4e8c\u6b65 \u5728\u7ba1\u7406\u8282\u70b9\u4e0a\u521b\u5efa ./data \u76ee\u5f55 1 $ docker-machine ssh myvm1 mkdir ./data \u7b2c\u4e09\u6b65 \u62f7\u8d1d docker-compose.yml \u6587\u4ef6\u5230\u7ba1\u7406\u8282\u70b9: 1 $ docker-machine scp docker-compose.yml myvm1:~ \u7b2c\u56db\u6b65 \u8fd0\u884c docker stack deploy \u547d\u4ee4\uff1a 1 $ docker-machine ssh myvm1 docker stack deploy -c docker-compose.yml hello \u7b2c\u4e94\u6b65 \u67e5\u770b\u670d\u52a1 http://192.168.99.100 \uff0c\u8fd9\u6b21\u4f60\u5c31\u4f1a\u770b\u5230\u8bbf\u95ee\u8ba1\u6570\u4e86\u3002\u8fd9\u4e2a\u8ba1\u6570\u5b58\u653e\u5728 redis \u4e2d\u3002 \u518d\u67e5\u770b\u4e00\u4e2a visualizer \u670d\u52a1\uff0c\u4f60\u4f1a\u770b\u5230 redis \u670d\u52a1\u548c web \u3001 visualizer \u670d\u52a1\u540c\u65f6\u8fd0\u884c\u3002","title":"\u6808"},{"location":"docker/Stack/#_1","text":"\u5728 docker-compose.yml \u4e2d\u6dfb\u52a0\u670d\u52a1\u662f\u5f88\u5bb9\u6613\u7684\u4e8b\uff0c\u9996\u5148\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a\u514d\u8d39\u7684\u53ef\u89c6\u5316\u670d\u52a1\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u7684 Swarm \u673a\u7fa4\u4e2d\u7684\u5bb9\u5668\u7684\u8c03\u5ea6\u60c5\u51b5\u4e86\u3002","title":"\u6dfb\u52a0\u4e00\u4e2a\u65b0\u670d\u52a1\u5e76\u91cd\u65b0\u90e8\u7f72"},{"location":"docker/Stack/#_2","text":"\u7f16\u8f91\u5668\u6253\u5f00 docker-compose.yml \u6587\u4ef6\uff0c\u4fee\u6539\u5185\u5bb9\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 version: 3 services: web: # replace username/repo:tag with your name and image details image: zhulongyixian/hello:v1.0 deploy: replicas: 5 restart_policy: condition: on-failure resources: limits: cpus: 0.1 memory: 50M ports: - 80:80 networks: - webnet visualizer: image: dockersamples/visualizer:stable ports: - 8080:8080 volumes: - /var/run/docker.sock:/var/run/docker.sock deploy: placement: constraints: [node.role == manager] networks: - webnet networks: webnet: \u552f\u4e00\u7684\u6539\u52a8\u5c31\u662f\u548c web \u670d\u52a1\u5e76\u5217\uff0c\u591a\u52a0\u4e86\u4e00\u4e2a visualizer \u670d\u52a1\uff0c\u4f60\u4f1a\u770b\u5230\u4e24\u4e2a\u65b0\u7684\u4e1c\u897f\uff1a volumes \uff0c\u5141\u8bb8\u670d\u52a1\u8bbf\u95ee\u4e3b\u673a\u7684 socket \u6587\u4ef6\u3002 placement \u786e\u4fdd\u670d\u52a1\u53ea\u5728 swarm \u673a\u7fa4\u7684\u7ba1\u7406\u8282\u70b9\u4e0a\u8fd0\u884c\u3002\u8fd9\u4e2a\u65b0\u6dfb\u52a0\u7684\u670d\u52a1\u662f docker \u5f00\u53d1\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u7528\u6765\u4ee5\u56fe\u5f62\u7684\u65b9\u5f0f\u663e\u793a Docker \u670d\u52a1\u7684\u8fd0\u884c\u60c5\u51b5\u3002","title":"\u7b2c\u4e00\u6b65"},{"location":"docker/Stack/#_3","text":"\u628a\u65b0\u4fee\u6539\u7684 docker-compose.yml \u6587\u4ef6\u590d\u5236\u5230\u6211\u4eec\u7684 swarm \u7ba1\u7406\u8282\u70b9\u4e0a\uff0c\u5373 myvm1 \uff1a 1 docker-machine scp docker-comopose.yml myvm1:~","title":"\u7b2c\u4e8c\u6b65"},{"location":"docker/Stack/#_4","text":"\u91cd\u65b0\u5728\u7ba1\u7406\u8282\u70b9\u4e0a\u8fd0\u884c docker stack deploy \u547d\u4ee4\uff0c\u6765\u66f4\u65b0\u66f4\u65b0\u7684\u670d\u52a1\uff1a 1 $ docker-machine ssh myvm1 docker stack deploy -c docker-compose.yml hello","title":"\u7b2c\u4e09\u6b65"},{"location":"docker/Stack/#_5","text":"\u67e5\u770b\u8fd9\u4e2a\u65b0\u6dfb\u52a0\u7684\u53ef\u89c6\u5316\u670d\u52a1 1 2 3 4 $ docker-machine ls NAME ACTIVE DRIVER STATE URL SWARM DOCKER ERRORS myvm1 - virtualbox Running tcp://192.168.99.100:2376 v17.06.0-ce myvm2 - virtualbox Running tcp://192.168.99.101:2376 v17.06.0-ce \u7136\u540e\u6d4f\u89c8\u5668\u8bbf\u95ee: http://192.168.99.100:8080 \u6216\u8005 http://192.168.99.101:8080 \u4ece\u56fe\u4e2d\u770b\u51fa\u8fd9\u4e2a visualizer \u8fd0\u884c\u5728\u7ba1\u7406\u8282\u70b9\u4e0a\uff0c\u5176\u5b83\u4e94\u4e2a web \u670d\u52a1\u7684\u5b9e\u4f8b\u5206\u5e03\u5728 swarm \u673a\u7fa4\u7684\u673a\u5668\u4e0a\u9762\u3002\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u6307\u4ee4\u6765\u786e\u8ba4: 1 $ docker-machine ssh myvm1 docker stack ps hello visualizer \u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u670d\u52a1\uff0c\u5b83\u53ef\u4ee5\u8fd0\u884c\u5728\u4efb\u4f55\u5176\u4ed6\u7684\u5e94\u7528\u6808\u4e2d\u3002\u5b83\u4e0d\u4f9d\u8d56\u4e8e\u5176\u5b83\u4e1c\u897f\u3002\u73b0\u5728\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u6709 Redis \u4f9d\u8d56\u7684\u670d\u52a1\uff0c\u7528\u6765\u63d0\u8bbf\u5ba2\u8ba1\u6570\u529f\u80fd\u3002","title":"\u7b2c\u56db\u6b65"},{"location":"docker/Stack/#_6","text":"\u6211\u4eec\u518d\u8fc7\u4e00\u904d\u6d41\u7a0b\uff0c\u8fd9\u79cd\u6211\u4eec\u6dfb\u52a0 Redis \u6570\u636e\u5e93\u6765\u5b58\u50a8\u5e94\u7528\u6570\u636e\u3002","title":"\u56fa\u5316\u6570\u636e"},{"location":"docker/Stack/#_7","text":"\u4fee\u6539 docker-compose.yml \u6587\u4ef6\uff0c\u8fd9\u6b21\u6dfb\u52a0 redis \u670d\u52a1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 version: 3 services: web: # replace username/repo:tag with your name and image details image: username/repo:tag deploy: replicas: 5 restart_policy: condition: on-failure resources: limits: cpus: 0.1 memory: 50M ports: - 80:80 networks: - webnet visualizer: image: dockersamples/visualizer:stable ports: - 8080:8080 volumes: - /var/run/docker.sock:/var/run/docker.sock deploy: placement: constraints: [node.role == manager] networks: - webnet redis: image: redis ports: - 6379:6379 volumes: - ./data:/data deploy: placement: constraints: [node.role == manager] networks: - webnet networks: webnet: Redis \u6709\u4e00\u4e2a\u5b98\u65b9 docker \u955c\u50cf\uff0c\u4f7f\u7528 image : redis \u952e\u503c\u5bf9\u6307\u5b9a\uff0c\u6240\u4ee5\u8fd9\u91cc\u6ca1\u6709 username/repo:tag \u8fd9\u6837\u7684\u884c\u51fa\u73b0\u3002 Redis \u7aef\u53e3\u662f 6379 \uff0c\u5df2\u7ecf\u88ab\u9884\u5148\u914d\u7f6e\u4e3a\u5bb9\u5668\u7aef\u53e3\u66b4\u9732\u7ed9\u4e3b\u673a\u3002 \u6700\u91cd\u8981\u7684\u662f\uff0c\u540e\u9762\u7684\u914d\u7f6e\u4e2d\u6709\u4e00\u4e9b redis \u76f8\u5173\u7684\u6307\u5b9a\uff1a redis \u603b\u662f\u8fd0\u884c\u5728\u7ba1\u7406\u8282\u70b9\u4e0a\uff0c\u56e0\u4e9b\u5b83\u603b\u662f\u4f7f\u7528\u4e0e\u7ba1\u7406\u8282\u70b9\u76f8\u540c\u7684\u6587\u4ef6\u7cfb\u7edf\u3002 redis \u5728\u5bb9\u5668\u5185\u90e8\u8bbf\u95ee\u5bbf\u4e3b\u673a\u7684\u4efb\u4f55\u76ee\u5f55\u90fd\u662f\u901a\u8fc7 /data \uff0c\u8fd9\u4e2a\u76ee\u5f55\u4e5f\u662f redis \u5b58\u653e\u6570\u636e\u7684\u5730\u65b9\u3002 \u8fd9\u4e9b\u7279\u522b\u914d\u7f6e\uff0c\u4f7f\u7684\u5b58\u653e\u5728\u7269\u7406\u6587\u4ef6\u7cfb\u7edf\u7684\u4e2d\u6570\u636e\u53d8\u6210\u53ef\u4fe1\u6e90\uff0c Redis \u5f80 /data \u76ee\u5f55\u5b58\u5165\u6570\u636e\u5c31\u662f\u5b58\u5165\u5230\u7269\u7406\u673a\u7684\u6587\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u8fd9\u53ef\u4ee5\u907f\u514d\u5728\u91cd\u65b0\u90e8\u7f72\u5bb9\u5668\u65f6\u6570\u636e\u4e22\u5931\u7684\u95ee\u9898\u3002 \u53ef\u4fe1\u6e90\u6709\u4e24\u4e2a\u5143\u7d20\uff1a - placement \u9650\u5236 redis \u670d\u52a1\u8fd0\u884c\u5728\u7ba1\u7406\u8282\u70b9\u4e0a\uff0c\u786e\u4fdd\u5b83\u59cb\u7ec8\u4f7f\u7528\u540c\u4e00\u4e2a\u4e3b\u673a\u3002 - volume \u6307\u5b9a\u5bb9\u5668\u5185\u90e8\u8bbf\u95ee ./data \u76ee\u5f55\u76f8\u5f53\u4e8e\u8bbf\u95ee\u5bbf\u4e3b\u673a\u76ee\u5f55 /data \uff0c\u5728\u5bb9\u5668\u8fd0\u884c\u8d77\u6765\u540e\uff0c\u751f\u6210\u7684\u6570\u636e\u4f1a\u56fa\u5316\u5b58\u5728\u6307\u5b9a\u4e3b\u673a\u4e0a","title":"\u7b2c\u4e00\u6b65"},{"location":"docker/Stack/#_8","text":"\u5728\u7ba1\u7406\u8282\u70b9\u4e0a\u521b\u5efa ./data \u76ee\u5f55 1 $ docker-machine ssh myvm1 mkdir ./data","title":"\u7b2c\u4e8c\u6b65"},{"location":"docker/Stack/#_9","text":"\u62f7\u8d1d docker-compose.yml \u6587\u4ef6\u5230\u7ba1\u7406\u8282\u70b9: 1 $ docker-machine scp docker-compose.yml myvm1:~","title":"\u7b2c\u4e09\u6b65"},{"location":"docker/Stack/#_10","text":"\u8fd0\u884c docker stack deploy \u547d\u4ee4\uff1a 1 $ docker-machine ssh myvm1 docker stack deploy -c docker-compose.yml hello","title":"\u7b2c\u56db\u6b65"},{"location":"docker/Stack/#_11","text":"\u67e5\u770b\u670d\u52a1 http://192.168.99.100 \uff0c\u8fd9\u6b21\u4f60\u5c31\u4f1a\u770b\u5230\u8bbf\u95ee\u8ba1\u6570\u4e86\u3002\u8fd9\u4e2a\u8ba1\u6570\u5b58\u653e\u5728 redis \u4e2d\u3002 \u518d\u67e5\u770b\u4e00\u4e2a visualizer \u670d\u52a1\uff0c\u4f60\u4f1a\u770b\u5230 redis \u670d\u52a1\u548c web \u3001 visualizer \u670d\u52a1\u540c\u65f6\u8fd0\u884c\u3002","title":"\u7b2c\u4e94\u6b65"},{"location":"docker/Swarm/","text":"\u4e0a\u4e00\u7ae0\uff0c\u628a\u6211\u4eec\u7684\u5e94\u7528\u8f6c\u53d8\u6210\u4e00\u4e2a\u670d\u52a1\u5e76\u90e8\u7f72\u5728\u4e86\u5355\u8282\u70b9\u673a\u7fa4\u4e0a\uff0c\u5355\u8282\u70b9\u673a\u7fa4\u4f7f\u7528\u591a\u4e2a\u8fdb\u7a0b\u6a21\u62df\u673a\u7fa4\u3002 \u8fd9\u4e00\u7ae0\u6211\u4eec\u5c06\u628a\u5e94\u7528\u90e8\u7f72\u5728\u591a\u7269\u7406\u673a\u5668\u7ec4\u6210\u7684\u673a\u7fa4\u4e0a\u3002\u591a\u5bb9\u5668\u591a\u673a\u5668\u5e94\u7528\u53ef\u4ee5\u653e\u5728\u88ab Docker \u5316\u7684\u673a\u7fa4\u4e0a\uff0c\u5373\u001d swarm \u3002 \u7406\u89e3 Swarm \u673a\u7fa4 Swarm \u662f\u8fd0\u884c Docker \u5e76\u7ec4\u6210\u96c6\u7fa4\u7684\u4e00\u7ec4\u673a\u5668\u3002\u4f60\u53ef\u4ee5\u50cf\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u8fd0\u884c Docker \u547d\u4ee4\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c\u5b83\u4f1a\u901a\u8fc7 Swarm Manager \u5728\u6574\u4e2a\u673a\u7fa4\u4e0a\u8fd0\u884c\u3002 Swarm \u673a\u7fa4\u4e2d\u7684\u673a\u5668\u53ef\u4ee5\u662f\u865a\u62df\u7684\u4e5f\u53ef\u4ee5\u662f\u7269\u7406\u7684\uff0c\u5f53\u5b83\u4eec\u52a0\u5165 Swarm \u673a\u7fa4\u540e\uff0c\u88ab\u79f0\u4f5c \u8282\u70b9 \u3002 Swarm \u7ba1\u7406\u5668\u53ef\u4ee5\u4f7f\u7528\u591a\u79cd\u7b56\u7565\u6765\u8fd0\u884c\u5bb9\u5668\uff0c \u7a7a\u7ed3\u70b9 \u662f\u6307\u90a3\u4e9b\u8fd0\u884c\u6700\u4e0d\u5e38\u7528\u5bb9\u5668\u7684\u673a\u5668\u3002 \u5168\u5c40 \u7b56\u7565\u4f1a\u786e\u4fdd\u6bcf\u4e00\u53f0\u673a\u5668\u53ea\u8fd0\u884c\u4e00\u4e2a\u6307\u5b9a\u7684\u5bb9\u5668\u5b9e\u4f8b\u3002\u4f60\u5728 docker-compose.yml \u4e2d\u6307\u793a swarm \u673a\u7fa4\u4f7f\u7528\u54ea\u4e00\u79cd\u7b56\u7565\u3002 Swarm \u7ba1\u7406\u662f\u673a\u7fa4\u4e2d\u552f\u4e00\u7684\u4e00\u53f0\u5141\u8bb8\u4f60\u6267\u884c\u547d\u4ee4\u6216\u6388\u6743\u5176\u5b83\u673a\u5668\u4f5c\u4e3a\u5de5\u4f5c\u8005\u52a0\u5165\u673a\u7fa4\u7684\u89d2\u8272\u3002\u5de5\u4f5c\u8005\u53ea\u63d0\u4f9b\u5904\u7406\u80fd\u529b\uff0c\u4e0d\u80fd\u6307\u6325\u5176\u5b83\u673a\u5668\u3002 \u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u7684\u64cd\u4f5c\u90fd\u662f\u5728\u5355\u4e3b\u673a\u73af\u5883\u4e0b\u8fdb\u884c\u7684\u3002\u4f46\u662f Docker \u53ef\u4ee5\u8f6c\u6362\u6210 \u673a\u7fa4 \u6a21\u5f0f\uff0c\u8f6c\u6362\u4e3a \u673a\u7fa4 \u6a21\u5f0f\u4f1a\u628a\u5f53\u524d\u7684\u673a\u5668\u53d8\u6210 Swarm Manager \u3002\u81f3\u6b64\uff0c Docker \u8fd0\u884c\u7684\u547d\u4ee4\u4f1a\u4f5c\u7528\u5728\u6240\u7ba1\u7406\u7684\u673a\u7fa4\u6240\u6709\u673a\u5668\u4e0a\uff0c\u800c\u4e0d\u4ec5\u4ec5\u53ea\u5728\u5f53\u524d\u673a\u5668\u4e0a\u6267\u884c\u3002 \u5efa\u7acb\u4f60\u7684Swarm\u673a\u7fa4 \u4e00\u4e2a Swarm \u673a\u7fa4\u7531\u591a\u4e2a\u8282\u70b9\u7ec4\u6210\uff0c\u8fd9\u4e9b\u8282\u70b9\u53ef\u4ee5\u662f\u865a\u62df\u7684\u4e5f\u53ef\u4ee5\u662f\u7269\u7406\u7684\u3002 \u8fd0\u884c docker swarm init \u5f00\u542f swarm \u6a21\u5f0f\uff0c\u5e76\u628a\u5f53\u524d\u7684\u673a\u5668\u53d8\u4e3a swarm manager \u3002 \u4f7f\u7528 docker swarm join \u6765\u4f7f\u5176\u5b83\u7684\u673a\u5668\u4f5c\u4e3a\u5de5\u4f5c\u8005\u52a0\u5165\u5230 Swarm \u673a\u7fa4\u4e2d\uff0c\u521b\u5efa\u673a\u7fa4\u9700\u8981\u591a\u4e2a\u673a\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u865a\u62df\u673a\u6765\u521b\u5efa\u591a\u4e2a\u865a\u62df\u7684\u673a\u5668\u3002 \u521b\u5efa\u673a\u7fa4 \u5b89\u88c5 Virtual Box \u6ce8\u610f \uff1a\u5982\u679c\u4f60\u662f Windows 10 \u7cfb\u7edf\uff0c\u5b83\u81ea\u5e26\u7684Hyper-V\u5c31\u53ef\u4ee5\u521b\u5efa\u865a\u62df\u673a\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5b89\u88c5 Virtual Box \u3002 \u5b89\u88c5\u5b8c Virtual Box \u540e\uff0c\u4f7f\u7528 docker-machine \u6765\u521b\u5efa\u591a\u4e2a\u865a\u62df\u673a\uff1a 1 2 $ docker-machine create --driver virtualbox myvm1 $ docker-machine craete --driver virtualbox myvm2 \u4f60\u73b0\u5728\u521b\u5efa\u4e86\u4e24\u4e2a\u865a\u62df\u673a\u4e86\uff0c\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 docker-machine ls \u6765\u67e5\u770b\u3002\u7b2c\u4e00\u4e2a\u4f1a\u6307\u5b9a\u4e3a manager \uff0c\u7b2c\u4e8c\u4e2a\u4f1a\u88ab\u53d7\u6743\u52a0\u5165\u673a\u7fa4\uff0c\u6210\u4e3a\u5de5\u4f5c\u8005\u3002 1 2 3 4 $ docker-machine ls NAME ACTIVE DRIVER STATE URL SWARM DOCKER ERRORS myvm1 - virtualbox Running tcp://192.168.99.100:2376 v17.06.0-ce myvm2 - virtualbox Running tcp://192.168.99.101:2376 v17.06.0-ce \u53ef\u4ee5\u4f7f\u7528 docker-machine ssh \u6765\u767b\u5f55 myvm1 \uff0c\u5e76\u4f7f\u5176\u6210\u4e3a\u4e00\u4e2a Swarm Manager \uff1a 1 2 3 $ docker-machine ssh myvm1 docker swarm init Error response from daemon: could not choose an IP address to advertise since this system has multiple addresses on different interfaces ( 10 .0.2.15 on eth0 and 192 .168.99.100 on eth1 ) - specify one with --advertise-addr exit status 1 \u5982\u679c\u78b0\u5230\u9700\u8981\u4f7f\u7528 --advertise-addr \u7684\u9519\u8bef\uff0c\u53ef\u4ee5\u4f7f\u7528 docker-machine ls \u5148\u67e5\u770b myvm1 \u7684IP\u5730\u5740\uff0c\u518d\u4f7f\u7528\u547d\u4ee4\u8fd0\u884c\u4e00\u6b21\uff0c\u4f46\u662f\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7aef\u53e3 2377 \uff0c\u56e0\u4e3a swarm join \u4f7f\u7528\u8fd9\u4e2a\u7aef\u53e3\u5de5\u4f5c\uff1a 1 2 3 4 5 6 7 8 $ docker-machine ssh myvm1 docker swarm init --advertise-addr 192.168.99.100:2377 Swarm initialized: current node ( 7z8gne0xkr4nixklkx8t1sb3g ) is now a manager. To add a worker to this swarm, run the following command: docker swarm join --token SWMTKN-1-5t4tfzrmtnw9prl7fcpcwpgp924vvntg03urytnw1g2c7ou0ej-6thxazc7buydklnmyi1idr1rv 192 .168.99.100:2377 To add a manager to this swarm, run docker swarm join-token manager and follow the instructions. docker swarm init \u4f1a\u8f93\u51fa\u4e00\u6bb5\u7528\u6765\u52a0\u5165\u673a\u7fa4\u7684\u6307\u4ee4\uff0c\u4f60\u53ef\u4ee5\u590d\u5236\u8fd9\u6bb5\u6307\u4ee4\u5e76\u5728\u60f3\u52a0\u5165\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u5c31\u53ef\u4ee5\u628a\u673a\u5668\u8f6c\u5316\u6210\u5de5\u4f5c\u8005\u4e86\u3002 1 2 $ docker-machine ssh myvm2 docker swarm join --token SWMTKN-1-5t4tfzrmtnw9prl7fcpcwpgp924vvntg03urytnw1g2c7ou0ej-6thxazc7buydklnmyi1idr1rv 192.168.99.100:2377 This node joined a swarm as a worker. \u606d\u559c\u4f60\uff0c\u5df2\u7ecf\u521b\u5efa\u4e86\u4f60\u7684\u7b2c\u4e00\u4e2a\u673a\u7fa4\u4e86\u3002 \u76f4\u63a5\u4f7f\u7528 docker-machine ssh myvm1 \u8fd9\u79cd\u65b9\u5f0f\u4f1a\u767b\u5f55\u673a\u5668\uff0c\u9700\u8981\u4f7f\u7528 exit \u6765\u767b\u51fa \u800c\u4f7f\u7528 docker-machine ssh myvm1 command \u8fd9\u79cd\u65b9\u6cd5\u4f1a\u767b\u5f55\u673a\u5668\u540e\u6267\u884c\u547d\u4ee4\uff0c\u5e76\u81ea\u52a8\u767b\u51fa\u3002 \u5728\u673a\u7fa4\u4e0a\u90e8\u7f72\u4f60\u7684\u5e94\u7528 \u6700\u96be\u7684\u90e8\u5206\u8fc7\u53bb\u4e86\uff0c\u73b0\u5728\u53ea\u9700\u8981\u91cd\u590d\u5728\u4e0a\u4e00\u7ae0\u5df2\u7ecf\u505a\u8fc7\u7684\u6d41\u7a0b\u6765\u5c31\u53ef\u4ee5\u4e86\u3002\u53ea\u9700\u8981\u8bb0\u4f4f myvm1 \u662f Swarm Manager \u53ef\u4ee5\u6267\u884c\u6307\u4ee4\uff0c\u5176\u5b83\u7684\u662f\u5de5\u4f5c\u8005\uff0c\u53ea\u5904\u7406\u4e8b\u52a1\u3002 \u628a\u6211\u4eec\u4e4b\u524d\u521b\u5efa\u7684 docker-compose.yml \u6587\u4ef6\u62f7\u5230 myvm1 \u8fd9\u4e2a swarm manager \u4e0a\uff1a 1 2 $ docker-machine scp docker-compose.yml myvm1:~ docker-compose.yml 100 % 368 333 .7KB/s 00 :00 \u7136\u540e\u5f00\u59cb\u90e8\u7f72\u6211\u4eec\u7684\u5e94\u7528\u5230\u673a\u7fa4\u4e0a\uff1a 1 2 3 $ docker-machine ssh myvm1 docker stack deploy -c docker-compose.yml hello Creating network hello_webnet Creating service hello_web \u67e5\u770b\u90e8\u7f72\u60c5\u51b5\uff1a 1 2 3 4 5 6 $ docker-machine ssh myvm1 docker stack ps hello ID NAME IMAGE NODE DESIRED STATE CURRENT STATE ERROR PORTS fla301e97hse hello_web.1 zhulongyixian/hello:v1.0 myvm2 Running Preparing about a minute ago jhp43be5v3op hello_web.2 zhulongyixian/hello:v1.0 myvm1 Running Preparing about a minute ago k58kkikey222 hello_web.3 zhulongyixian/hello:v1.0 myvm2 Running Preparing about a minute ago 85gtwdojwots hello_web.4 zhulongyixian/hello:v1.0 myvm1 Running Preparing about a minute ago \u53ef\u4ee5\u770b\u5230\u5e94\u7528\u5df2\u7ecf\u88ab\u90e8\u7f72\u5230\u673a\u7fa4\u4e0a\u4e86\u3002 \u8bbf\u95ee\u4f60\u7684\u673a\u7fa4 \u4f60\u53ef\u4ee5\u901a\u8fc7 myvm1 \u6216\u8005 myvm2 \u7684IP\u5730\u5740\u6765\u8bbf\u95ee\u6211\u4eec\u5df2\u7ecf\u90e8\u7f72\u7684\u5e94\u7528\u3002\u56e0\u4e3a\u6211\u4eec\u521b\u5efa\u4e86\u5728\u673a\u7fa4\u673a\u5668\u95f4\u5171\u4eab\u7684\u7f51\u7edc\u5c42\uff0c\u7528\u6765\u5e73\u8861\u8d1f\u8f7d\u3002 \u4f7f\u7528 docker-machine ls \u67e5\u770b\u673a\u5668\u7684IP\u5730\u5740\uff1a 1 2 3 4 $ docker-machine ls NAME ACTIVE DRIVER STATE URL SWARM DOCKER ERRORS myvm1 - virtualbox Running tcp://192.168.99.100:2376 v17.06.0-ce myvm2 - virtualbox Running tcp://192.168.99.101:2376 v17.06.0-ce \u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00: http://192.168.99.100 \u5c31\u53ef\u4ee5\u8bbf\u95ee\u670d\u52a1\u4e86\u3002\u591a\u5237\u65b0\u51e0\u6b21\u6d4f\u89c8\u5668\uff0c\u4f1a\u53d1\u73b0\u5bb9\u5668ID\u4f1a\u4e0d\u505c\u7684\u53d8\u5316\uff0c\u8bf4\u660e\u6211\u4eec\u7684\u673a\u7fa4\u53ef\u4ee5\u5904\u7406\u8d1f\u8f7d\u5e73\u8861\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u673a\u7fa4\u5185\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u7684IP\u6765\u8bbf\u95ee\u670d\u52a1\u7684\u539f\u56e0\u662f\u6211\u4eec\u7684\u673a\u7fa4\u8bbe\u7f6e\u4e86\u8def\u7531\u7f51\u3002\u8fd9\u53ef\u4ee5\u4f7f\u90e8\u7f72\u7684\u670d\u52a1\u5728\u673a\u7fa4\u5185\u90e8\u6709\u6307\u5b9a\u7aef\u53e3\uff0c\u4e0d\u7528\u5173\u5fc3\u5bb9\u5668\u662f\u5982\u679c\u88ab\u6267\u884c\u7684\u3002\u4e0b\u9762\u662f\u4e00\u5f20\u4e09\u8282\u70b9\u673a\u7fa4\u56fe\u7528\u6765\u8bf4\u660e\u53d1\u5e03\u5728 8080 \u7aef\u53e3\u7684 my-web \u670d\u52a1\u7684\u5185\u90e8\u7f51\u7edc\u7ed3\u6784\uff1a \u53ef\u80fd\u9047\u5230\u7684\u8fde\u63a5\u95ee\u9898 : \u4e3a\u4e86\u4f7f\u7528 Swarm \u673a\u7fa4\uff0c\u6211\u4eec\u5728\u5f00\u542f Swarm \u6a21\u5f0f\u524d\u8981\u786e\u4fdd\u8282\u70b9\u4e4b\u95f4\u7684\u4ee5\u4e0b\u7aef\u53e3\u662f\u6253\u5f00\u7684\uff1a 7946 TCP/UDP\u7aef\u53e3\uff0c\u8fd9\u4e2a\u7aef\u53e3\u7528\u4e8e\u7f51\u7edc\u53d1\u73b0 4789 UDP\u7aef\u53e3\uff0c\u8fd9\u4e2a\u7aef\u53e3\u7528\u4e8e\u5bb9\u5668\u7684ingress\u7f51\u7edc \u6269\u5c55\u4f60\u7684\u5e94\u7528 \u4f60\u53ef\u4ee5\u50cf\u7b2c\u4e09\u7ae0\u5b66\u5230\u7684\u90a3\u6837\uff0c\u901a\u8fc7\u6539\u53d8 docker-compose.yml \u4e2d\u7684\u8bbe\u7f6e\u5e76\u91cd\u65b0\u8fd0\u884c\u547d\u4ee4 docker stack deploy -c docker-compose.yml hello \u6765\u6539\u53d8\u90e8\u7f72\u7684\u65b9\u5f0f\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 docker swarm join \u547d\u4ee4\u6765\u52a0\u5165\u66f4\u591a\u7684\u5de5\u4f5c\u8005\u8282\u70b9\uff0c\u7136\u540e\u4f7f\u7528\u524d\u9762\u7684\u547d\u4ee4\u66f4\u65b0\u90e8\u7f72\u4e00\u6b21\u3002 \u6e05\u7406\u5de5\u4f5c \u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u505c\u6b62\u5e94\u7528\u6808\u7684\u8fd0\u884c\uff1a 1 2 3 $ docker-machine ssh myvm1 docker stack rm hello Removing service hello_web Removing network hello_webnet \u8fd9\u53ea\u662f\u79fb\u9664\u4e86\u673a\u7fa4\u4e0a\u7684\u5e94\u7528\uff0c\u4f46\u673a\u7fa4\u672c\u8eab\u8fd8\u5728\u8fd0\u884c\u3002 \u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5173\u95ed\u673a\u7fa4\uff1a 1 2 3 4 5 $ docker-machine ssh myvm2 docker swarm leave Node left the swarm. # \u5de5\u4f5c\u8005\u8282\u70b9\u79bb\u5f00\u673a\u7fa4 $ docker-machine ssh myvm1 docker swarm leave --force Node left the swarm. # \u673a\u7fa4\u7ba1\u7406\u8282\u70b9\u79bb\u5f00\u673a\u7fa4 \u5e38\u7528\u5230\u7684\u6307\u4ee4\u5217\u8868 1 2 3 4 5 6 7 8 9 10 11 12 13 14 docker-machine create --driver virtualbox myvm1 # Create a VM (Mac, Win7, Linux) docker-machine create -d hyperv --hyperv-virtual-switch myswitch myvm1 # Win10 docker-machine env myvm1 # View basic information about your node docker-machine ssh myvm1 docker node ls # List the nodes in your swarm docker-machine ssh myvm1 docker node inspect node ID # Inspect a node docker-machine ssh myvm1 docker swarm join-token -q worker # View join token docker-machine ssh myvm1 # Open an SSH session with the VM; type exit to end docker-machine ssh myvm2 docker swarm leave # Make the worker leave the swarm docker-machine ssh myvm1 docker swarm leave -f # Make master leave, kill swarm docker-machine start myvm1 # Start a VM that is currently not running docker-machine stop $(docker-machine ls -q) # Stop all running VMs docker-machine rm $(docker-machine ls -q) # Delete all VMs and their disk images docker-machine scp docker-compose.yml myvm1:~ # Copy file to node s home dir docker-machine ssh myvm1 docker stack deploy -c file app # Deploy an app","title":"\u673a\u7fa4"},{"location":"docker/Swarm/#swarm","text":"Swarm \u662f\u8fd0\u884c Docker \u5e76\u7ec4\u6210\u96c6\u7fa4\u7684\u4e00\u7ec4\u673a\u5668\u3002\u4f60\u53ef\u4ee5\u50cf\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u8fd0\u884c Docker \u547d\u4ee4\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c\u5b83\u4f1a\u901a\u8fc7 Swarm Manager \u5728\u6574\u4e2a\u673a\u7fa4\u4e0a\u8fd0\u884c\u3002 Swarm \u673a\u7fa4\u4e2d\u7684\u673a\u5668\u53ef\u4ee5\u662f\u865a\u62df\u7684\u4e5f\u53ef\u4ee5\u662f\u7269\u7406\u7684\uff0c\u5f53\u5b83\u4eec\u52a0\u5165 Swarm \u673a\u7fa4\u540e\uff0c\u88ab\u79f0\u4f5c \u8282\u70b9 \u3002 Swarm \u7ba1\u7406\u5668\u53ef\u4ee5\u4f7f\u7528\u591a\u79cd\u7b56\u7565\u6765\u8fd0\u884c\u5bb9\u5668\uff0c \u7a7a\u7ed3\u70b9 \u662f\u6307\u90a3\u4e9b\u8fd0\u884c\u6700\u4e0d\u5e38\u7528\u5bb9\u5668\u7684\u673a\u5668\u3002 \u5168\u5c40 \u7b56\u7565\u4f1a\u786e\u4fdd\u6bcf\u4e00\u53f0\u673a\u5668\u53ea\u8fd0\u884c\u4e00\u4e2a\u6307\u5b9a\u7684\u5bb9\u5668\u5b9e\u4f8b\u3002\u4f60\u5728 docker-compose.yml \u4e2d\u6307\u793a swarm \u673a\u7fa4\u4f7f\u7528\u54ea\u4e00\u79cd\u7b56\u7565\u3002 Swarm \u7ba1\u7406\u662f\u673a\u7fa4\u4e2d\u552f\u4e00\u7684\u4e00\u53f0\u5141\u8bb8\u4f60\u6267\u884c\u547d\u4ee4\u6216\u6388\u6743\u5176\u5b83\u673a\u5668\u4f5c\u4e3a\u5de5\u4f5c\u8005\u52a0\u5165\u673a\u7fa4\u7684\u89d2\u8272\u3002\u5de5\u4f5c\u8005\u53ea\u63d0\u4f9b\u5904\u7406\u80fd\u529b\uff0c\u4e0d\u80fd\u6307\u6325\u5176\u5b83\u673a\u5668\u3002 \u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u7684\u64cd\u4f5c\u90fd\u662f\u5728\u5355\u4e3b\u673a\u73af\u5883\u4e0b\u8fdb\u884c\u7684\u3002\u4f46\u662f Docker \u53ef\u4ee5\u8f6c\u6362\u6210 \u673a\u7fa4 \u6a21\u5f0f\uff0c\u8f6c\u6362\u4e3a \u673a\u7fa4 \u6a21\u5f0f\u4f1a\u628a\u5f53\u524d\u7684\u673a\u5668\u53d8\u6210 Swarm Manager \u3002\u81f3\u6b64\uff0c Docker \u8fd0\u884c\u7684\u547d\u4ee4\u4f1a\u4f5c\u7528\u5728\u6240\u7ba1\u7406\u7684\u673a\u7fa4\u6240\u6709\u673a\u5668\u4e0a\uff0c\u800c\u4e0d\u4ec5\u4ec5\u53ea\u5728\u5f53\u524d\u673a\u5668\u4e0a\u6267\u884c\u3002","title":"\u7406\u89e3Swarm\u673a\u7fa4"},{"location":"docker/Swarm/#swarm_1","text":"\u4e00\u4e2a Swarm \u673a\u7fa4\u7531\u591a\u4e2a\u8282\u70b9\u7ec4\u6210\uff0c\u8fd9\u4e9b\u8282\u70b9\u53ef\u4ee5\u662f\u865a\u62df\u7684\u4e5f\u53ef\u4ee5\u662f\u7269\u7406\u7684\u3002 \u8fd0\u884c docker swarm init \u5f00\u542f swarm \u6a21\u5f0f\uff0c\u5e76\u628a\u5f53\u524d\u7684\u673a\u5668\u53d8\u4e3a swarm manager \u3002 \u4f7f\u7528 docker swarm join \u6765\u4f7f\u5176\u5b83\u7684\u673a\u5668\u4f5c\u4e3a\u5de5\u4f5c\u8005\u52a0\u5165\u5230 Swarm \u673a\u7fa4\u4e2d\uff0c\u521b\u5efa\u673a\u7fa4\u9700\u8981\u591a\u4e2a\u673a\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u865a\u62df\u673a\u6765\u521b\u5efa\u591a\u4e2a\u865a\u62df\u7684\u673a\u5668\u3002","title":"\u5efa\u7acb\u4f60\u7684Swarm\u673a\u7fa4"},{"location":"docker/Swarm/#_1","text":"\u5b89\u88c5 Virtual Box \u6ce8\u610f \uff1a\u5982\u679c\u4f60\u662f Windows 10 \u7cfb\u7edf\uff0c\u5b83\u81ea\u5e26\u7684Hyper-V\u5c31\u53ef\u4ee5\u521b\u5efa\u865a\u62df\u673a\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5b89\u88c5 Virtual Box \u3002 \u5b89\u88c5\u5b8c Virtual Box \u540e\uff0c\u4f7f\u7528 docker-machine \u6765\u521b\u5efa\u591a\u4e2a\u865a\u62df\u673a\uff1a 1 2 $ docker-machine create --driver virtualbox myvm1 $ docker-machine craete --driver virtualbox myvm2 \u4f60\u73b0\u5728\u521b\u5efa\u4e86\u4e24\u4e2a\u865a\u62df\u673a\u4e86\uff0c\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 docker-machine ls \u6765\u67e5\u770b\u3002\u7b2c\u4e00\u4e2a\u4f1a\u6307\u5b9a\u4e3a manager \uff0c\u7b2c\u4e8c\u4e2a\u4f1a\u88ab\u53d7\u6743\u52a0\u5165\u673a\u7fa4\uff0c\u6210\u4e3a\u5de5\u4f5c\u8005\u3002 1 2 3 4 $ docker-machine ls NAME ACTIVE DRIVER STATE URL SWARM DOCKER ERRORS myvm1 - virtualbox Running tcp://192.168.99.100:2376 v17.06.0-ce myvm2 - virtualbox Running tcp://192.168.99.101:2376 v17.06.0-ce \u53ef\u4ee5\u4f7f\u7528 docker-machine ssh \u6765\u767b\u5f55 myvm1 \uff0c\u5e76\u4f7f\u5176\u6210\u4e3a\u4e00\u4e2a Swarm Manager \uff1a 1 2 3 $ docker-machine ssh myvm1 docker swarm init Error response from daemon: could not choose an IP address to advertise since this system has multiple addresses on different interfaces ( 10 .0.2.15 on eth0 and 192 .168.99.100 on eth1 ) - specify one with --advertise-addr exit status 1 \u5982\u679c\u78b0\u5230\u9700\u8981\u4f7f\u7528 --advertise-addr \u7684\u9519\u8bef\uff0c\u53ef\u4ee5\u4f7f\u7528 docker-machine ls \u5148\u67e5\u770b myvm1 \u7684IP\u5730\u5740\uff0c\u518d\u4f7f\u7528\u547d\u4ee4\u8fd0\u884c\u4e00\u6b21\uff0c\u4f46\u662f\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7aef\u53e3 2377 \uff0c\u56e0\u4e3a swarm join \u4f7f\u7528\u8fd9\u4e2a\u7aef\u53e3\u5de5\u4f5c\uff1a 1 2 3 4 5 6 7 8 $ docker-machine ssh myvm1 docker swarm init --advertise-addr 192.168.99.100:2377 Swarm initialized: current node ( 7z8gne0xkr4nixklkx8t1sb3g ) is now a manager. To add a worker to this swarm, run the following command: docker swarm join --token SWMTKN-1-5t4tfzrmtnw9prl7fcpcwpgp924vvntg03urytnw1g2c7ou0ej-6thxazc7buydklnmyi1idr1rv 192 .168.99.100:2377 To add a manager to this swarm, run docker swarm join-token manager and follow the instructions. docker swarm init \u4f1a\u8f93\u51fa\u4e00\u6bb5\u7528\u6765\u52a0\u5165\u673a\u7fa4\u7684\u6307\u4ee4\uff0c\u4f60\u53ef\u4ee5\u590d\u5236\u8fd9\u6bb5\u6307\u4ee4\u5e76\u5728\u60f3\u52a0\u5165\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u5c31\u53ef\u4ee5\u628a\u673a\u5668\u8f6c\u5316\u6210\u5de5\u4f5c\u8005\u4e86\u3002 1 2 $ docker-machine ssh myvm2 docker swarm join --token SWMTKN-1-5t4tfzrmtnw9prl7fcpcwpgp924vvntg03urytnw1g2c7ou0ej-6thxazc7buydklnmyi1idr1rv 192.168.99.100:2377 This node joined a swarm as a worker. \u606d\u559c\u4f60\uff0c\u5df2\u7ecf\u521b\u5efa\u4e86\u4f60\u7684\u7b2c\u4e00\u4e2a\u673a\u7fa4\u4e86\u3002 \u76f4\u63a5\u4f7f\u7528 docker-machine ssh myvm1 \u8fd9\u79cd\u65b9\u5f0f\u4f1a\u767b\u5f55\u673a\u5668\uff0c\u9700\u8981\u4f7f\u7528 exit \u6765\u767b\u51fa \u800c\u4f7f\u7528 docker-machine ssh myvm1 command \u8fd9\u79cd\u65b9\u6cd5\u4f1a\u767b\u5f55\u673a\u5668\u540e\u6267\u884c\u547d\u4ee4\uff0c\u5e76\u81ea\u52a8\u767b\u51fa\u3002","title":"\u521b\u5efa\u673a\u7fa4"},{"location":"docker/Swarm/#_2","text":"\u6700\u96be\u7684\u90e8\u5206\u8fc7\u53bb\u4e86\uff0c\u73b0\u5728\u53ea\u9700\u8981\u91cd\u590d\u5728\u4e0a\u4e00\u7ae0\u5df2\u7ecf\u505a\u8fc7\u7684\u6d41\u7a0b\u6765\u5c31\u53ef\u4ee5\u4e86\u3002\u53ea\u9700\u8981\u8bb0\u4f4f myvm1 \u662f Swarm Manager \u53ef\u4ee5\u6267\u884c\u6307\u4ee4\uff0c\u5176\u5b83\u7684\u662f\u5de5\u4f5c\u8005\uff0c\u53ea\u5904\u7406\u4e8b\u52a1\u3002 \u628a\u6211\u4eec\u4e4b\u524d\u521b\u5efa\u7684 docker-compose.yml \u6587\u4ef6\u62f7\u5230 myvm1 \u8fd9\u4e2a swarm manager \u4e0a\uff1a 1 2 $ docker-machine scp docker-compose.yml myvm1:~ docker-compose.yml 100 % 368 333 .7KB/s 00 :00 \u7136\u540e\u5f00\u59cb\u90e8\u7f72\u6211\u4eec\u7684\u5e94\u7528\u5230\u673a\u7fa4\u4e0a\uff1a 1 2 3 $ docker-machine ssh myvm1 docker stack deploy -c docker-compose.yml hello Creating network hello_webnet Creating service hello_web \u67e5\u770b\u90e8\u7f72\u60c5\u51b5\uff1a 1 2 3 4 5 6 $ docker-machine ssh myvm1 docker stack ps hello ID NAME IMAGE NODE DESIRED STATE CURRENT STATE ERROR PORTS fla301e97hse hello_web.1 zhulongyixian/hello:v1.0 myvm2 Running Preparing about a minute ago jhp43be5v3op hello_web.2 zhulongyixian/hello:v1.0 myvm1 Running Preparing about a minute ago k58kkikey222 hello_web.3 zhulongyixian/hello:v1.0 myvm2 Running Preparing about a minute ago 85gtwdojwots hello_web.4 zhulongyixian/hello:v1.0 myvm1 Running Preparing about a minute ago \u53ef\u4ee5\u770b\u5230\u5e94\u7528\u5df2\u7ecf\u88ab\u90e8\u7f72\u5230\u673a\u7fa4\u4e0a\u4e86\u3002","title":"\u5728\u673a\u7fa4\u4e0a\u90e8\u7f72\u4f60\u7684\u5e94\u7528"},{"location":"docker/Swarm/#_3","text":"\u4f60\u53ef\u4ee5\u901a\u8fc7 myvm1 \u6216\u8005 myvm2 \u7684IP\u5730\u5740\u6765\u8bbf\u95ee\u6211\u4eec\u5df2\u7ecf\u90e8\u7f72\u7684\u5e94\u7528\u3002\u56e0\u4e3a\u6211\u4eec\u521b\u5efa\u4e86\u5728\u673a\u7fa4\u673a\u5668\u95f4\u5171\u4eab\u7684\u7f51\u7edc\u5c42\uff0c\u7528\u6765\u5e73\u8861\u8d1f\u8f7d\u3002 \u4f7f\u7528 docker-machine ls \u67e5\u770b\u673a\u5668\u7684IP\u5730\u5740\uff1a 1 2 3 4 $ docker-machine ls NAME ACTIVE DRIVER STATE URL SWARM DOCKER ERRORS myvm1 - virtualbox Running tcp://192.168.99.100:2376 v17.06.0-ce myvm2 - virtualbox Running tcp://192.168.99.101:2376 v17.06.0-ce \u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00: http://192.168.99.100 \u5c31\u53ef\u4ee5\u8bbf\u95ee\u670d\u52a1\u4e86\u3002\u591a\u5237\u65b0\u51e0\u6b21\u6d4f\u89c8\u5668\uff0c\u4f1a\u53d1\u73b0\u5bb9\u5668ID\u4f1a\u4e0d\u505c\u7684\u53d8\u5316\uff0c\u8bf4\u660e\u6211\u4eec\u7684\u673a\u7fa4\u53ef\u4ee5\u5904\u7406\u8d1f\u8f7d\u5e73\u8861\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u673a\u7fa4\u5185\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u7684IP\u6765\u8bbf\u95ee\u670d\u52a1\u7684\u539f\u56e0\u662f\u6211\u4eec\u7684\u673a\u7fa4\u8bbe\u7f6e\u4e86\u8def\u7531\u7f51\u3002\u8fd9\u53ef\u4ee5\u4f7f\u90e8\u7f72\u7684\u670d\u52a1\u5728\u673a\u7fa4\u5185\u90e8\u6709\u6307\u5b9a\u7aef\u53e3\uff0c\u4e0d\u7528\u5173\u5fc3\u5bb9\u5668\u662f\u5982\u679c\u88ab\u6267\u884c\u7684\u3002\u4e0b\u9762\u662f\u4e00\u5f20\u4e09\u8282\u70b9\u673a\u7fa4\u56fe\u7528\u6765\u8bf4\u660e\u53d1\u5e03\u5728 8080 \u7aef\u53e3\u7684 my-web \u670d\u52a1\u7684\u5185\u90e8\u7f51\u7edc\u7ed3\u6784\uff1a \u53ef\u80fd\u9047\u5230\u7684\u8fde\u63a5\u95ee\u9898 : \u4e3a\u4e86\u4f7f\u7528 Swarm \u673a\u7fa4\uff0c\u6211\u4eec\u5728\u5f00\u542f Swarm \u6a21\u5f0f\u524d\u8981\u786e\u4fdd\u8282\u70b9\u4e4b\u95f4\u7684\u4ee5\u4e0b\u7aef\u53e3\u662f\u6253\u5f00\u7684\uff1a 7946 TCP/UDP\u7aef\u53e3\uff0c\u8fd9\u4e2a\u7aef\u53e3\u7528\u4e8e\u7f51\u7edc\u53d1\u73b0 4789 UDP\u7aef\u53e3\uff0c\u8fd9\u4e2a\u7aef\u53e3\u7528\u4e8e\u5bb9\u5668\u7684ingress\u7f51\u7edc","title":"\u8bbf\u95ee\u4f60\u7684\u673a\u7fa4"},{"location":"docker/Swarm/#_4","text":"\u4f60\u53ef\u4ee5\u50cf\u7b2c\u4e09\u7ae0\u5b66\u5230\u7684\u90a3\u6837\uff0c\u901a\u8fc7\u6539\u53d8 docker-compose.yml \u4e2d\u7684\u8bbe\u7f6e\u5e76\u91cd\u65b0\u8fd0\u884c\u547d\u4ee4 docker stack deploy -c docker-compose.yml hello \u6765\u6539\u53d8\u90e8\u7f72\u7684\u65b9\u5f0f\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 docker swarm join \u547d\u4ee4\u6765\u52a0\u5165\u66f4\u591a\u7684\u5de5\u4f5c\u8005\u8282\u70b9\uff0c\u7136\u540e\u4f7f\u7528\u524d\u9762\u7684\u547d\u4ee4\u66f4\u65b0\u90e8\u7f72\u4e00\u6b21\u3002","title":"\u6269\u5c55\u4f60\u7684\u5e94\u7528"},{"location":"docker/Swarm/#_5","text":"\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u505c\u6b62\u5e94\u7528\u6808\u7684\u8fd0\u884c\uff1a 1 2 3 $ docker-machine ssh myvm1 docker stack rm hello Removing service hello_web Removing network hello_webnet \u8fd9\u53ea\u662f\u79fb\u9664\u4e86\u673a\u7fa4\u4e0a\u7684\u5e94\u7528\uff0c\u4f46\u673a\u7fa4\u672c\u8eab\u8fd8\u5728\u8fd0\u884c\u3002 \u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5173\u95ed\u673a\u7fa4\uff1a 1 2 3 4 5 $ docker-machine ssh myvm2 docker swarm leave Node left the swarm. # \u5de5\u4f5c\u8005\u8282\u70b9\u79bb\u5f00\u673a\u7fa4 $ docker-machine ssh myvm1 docker swarm leave --force Node left the swarm. # \u673a\u7fa4\u7ba1\u7406\u8282\u70b9\u79bb\u5f00\u673a\u7fa4","title":"\u6e05\u7406\u5de5\u4f5c"},{"location":"docker/Swarm/#_6","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 docker-machine create --driver virtualbox myvm1 # Create a VM (Mac, Win7, Linux) docker-machine create -d hyperv --hyperv-virtual-switch myswitch myvm1 # Win10 docker-machine env myvm1 # View basic information about your node docker-machine ssh myvm1 docker node ls # List the nodes in your swarm docker-machine ssh myvm1 docker node inspect node ID # Inspect a node docker-machine ssh myvm1 docker swarm join-token -q worker # View join token docker-machine ssh myvm1 # Open an SSH session with the VM; type exit to end docker-machine ssh myvm2 docker swarm leave # Make the worker leave the swarm docker-machine ssh myvm1 docker swarm leave -f # Make master leave, kill swarm docker-machine start myvm1 # Start a VM that is currently not running docker-machine stop $(docker-machine ls -q) # Stop all running VMs docker-machine rm $(docker-machine ls -q) # Delete all VMs and their disk images docker-machine scp docker-compose.yml myvm1:~ # Copy file to node s home dir docker-machine ssh myvm1 docker stack deploy -c file app # Deploy an app","title":"\u5e38\u7528\u5230\u7684\u6307\u4ee4\u5217\u8868"},{"location":"docker/start-learn/","text":"\u5c06Docker\u6700\u65b0\u6587\u6863\u62c9\u5230\u672c\u5730\u9605\u8bfb Docker\u5b98\u7f51 Docker Hub emh1bG9uZ3lpeGlhbjpXdzU0Mzg1OTIzMAo= 1 $ docker run -ti -p 4000 :4000 docs/docker.github.io:latest \u5728** http://localhost:4000 **\u4e0a\u67e5\u770b\u6587\u6863\u3002 \u6b22\u8fce\u4f7f\u7528 Docker \uff01\u5728\u8fd9\u4e2a\u516d\u6b65\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u4f1a\u5b66\u5230: \u5efa\u7acb\u57fa\u672c\u6982\u5ff5 \u6784\u5efa\u5e76\u8fd0\u884c\u4f60\u7684\u7b2c\u4e00\u4e2a\u5e94\u7528 \u628a\u4f60\u7684\u5e94\u7528\u8f6c\u6362\u6210\u53ef\u6269\u5c55\u670d\u52a1 \u628a\u4f60\u7684\u670d\u52a1\u6269\u5c55\u5230\u591a\u4e2a\u673a\u5668\u4e0a \u6dfb\u52a0\u8bbf\u5ba2\u8ba1\u6570 \u90e8\u7f72\u96c6\u7fa4\u5230\u751f\u4ea7\u73af\u5883 \u6559\u7a0b\u4e2d\u7684\u5e94\u7528\u7a0b\u5e8f\u672c\u8eab\u4e0d\u590d\u6742\uff0c\u8fd9\u6837\u4f60\u5c31\u4e0d\u7528\u5206\u5fc3\u5728\u592a\u591a\u7f16\u7801\u7ec6\u8282\u4e0a\u3002\u6bd5\u7adf Docker \u7684\u4f5c\u7528\u662f\u6784\u5efa\u3001\u88c5\u8f7d\u548c\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e0d\u9700\u8981\u5173\u5fc3\u5e94\u7528\u7a0b\u5e8f\u5177\u4f53\u5e72\u4ec0\u4e48\u3002 \u57fa\u672c\u8981\u6c42 \u5728\u6211\u4eec\u5b9a\u4e49\u4e00\u4e9b\u6982\u5ff5\u524d\uff0c\u6700\u597d\u6211\u4eec\u5df2\u7ecf\u7406\u89e3\u4e86 Docker\u662f\u4ec0\u4e48 \u4ee5\u53ca \u4e3a\u4ec0\u4e48\u6211\u4eec\u8981\u4f7f\u7528Docker \u3002 \u5e76\u4e14\u6211\u4eec\u9700\u8981\u5bf9\u4e00\u4e9b\u57fa\u7840\u6982\u5ff5\u6709\u6240\u638c\u63e1\uff1a IP\u5730\u5740\u548c\u5546\u54c1 \u865a\u62df\u673a \u7f16\u8f91\u914d\u7f6e\u6587\u4ef6 \u719f\u6089\u4ee3\u7801\u4f9d\u8d56\u548c\u6784\u5efa \u4e86\u89e3\u673a\u5668\u8d44\u6e90\u76f8\u5173\u7684\u4e00\u4e9b\u672f\u8bed\uff0c\u50cfCPU\u5360\u7528\u7387\u3001RAM\u5360\u7528\u91cf\u7b49 Docker\u662f\u4ec0\u4e48 Docker \u662f\u4e16\u754c\u9886\u5148\u7684\u8f6f\u4ef6\u5bb9\u5668\u5e73\u53f0\u3002 \u5f00\u53d1\u8005\u4f7f\u7528 Docker \u53ef\u4ee5\u907f\u514d\u4e0e\u5176\u5b83\u4eba\u5408\u4f5c\u65f6\u78b0\u5230\u673a\u5668\u8bbe\u5907\u73af\u5883\u914d\u7f6e\u4e0d\u540c\u7684\u95ee\u9898\u3002 \u8fd0\u7ef4\u4eba\u5458\u4f7f\u7528 Docker \u53ef\u4ee5\u6574\u9f50\u7684\u5b89\u6392\u5404\u79cd\u5e94\u7528\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u5bb9\u5668\u6280\u672f\u505a\u5230\u4e92\u76f8\u72ec\u7acb\u3001\u4e92\u4e0d\u5f71\u54cd\uff0c\u4ece\u800c\u66f4\u597d\u7684\u5229\u7528\u6709\u9650\u7684\u8ba1\u7b97\u8d44\u6e90\u3002 \u4f01\u4e1a\u4f7f\u7528 Docker \u53ef\u4ee5\u6784\u5efa\u654f\u6377\u8f6f\u4ef6\u5206\u53d1\u7ba1\u9053\uff0c\u5c06\u5e94\u7528\u65b0\u7279\u6027\u66f4\u5feb\u3001\u66f4\u5b89\u5168\u7684\u5c55\u73b0\u7ed9\u5ba2\u6237\uff0c\u5e76\u4e14\u4e0d\u53d7\u670d\u52a1\u5668\u7c7b\u578b\u7ea6\u675f\u3002 \u4e3a\u4ec0\u4e48\u8981\u7528Docker \u73b0\u5728\u7684\u5e94\u7528\u5e73\u53f0\u57fa\u4e8e Docker \u548c \u5bb9\u5668 \u6784\u5efa\u3002 Docker \u53ef\u4ee5\u4f5c\u4e3a\u7edf\u4e00\u7684\u5e73\u53f0\u6765\u670d\u52a1\u4e8e\u5546\u4e1a\u5e94\u7528\u3001\u4f5c\u574a\u5e94\u7528\u6216\u8005\u662f\u5fae\u670d\u52a1\u3002\u8fd9\u4e9b\u5e94\u7528\u5982\u679c\u88ab Docker \u5316\u540e\uff0c\u53ef\u4ee5\u53d8\u5f97\u66f4\u654f\u6377\u3001\u66f4\u5b89\u5168\u3001\u66f4\u7075\u6d3b\u3001\u652f\u6301\u4e91\u670d\u52a1\u5e76\u4e14\u53ef\u4ee5\u4f18\u5316\u8d44\u6e90\u6d88\u8017\u3002 Docker \u53ef\u4ee5\u52a0\u901f\u5e94\u7528\u4ece\u5f00\u53d1\u8005\u684c\u9762\u5f00\u53d1\u73af\u5883\u5230\u751f\u4ea7\u73af\u5883\u90e8\u7f72\u8fd9\u4e00\u8fc7\u7a0b\u3002 Docker\u52a0\u901f \u7531\u4e8e\u67d0\u4e9b\u672a\u77e5\u539f\u56e0\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u4f7f\u7528 Docker \u52a0\u901f\u624d\u80fd\u5728\u5929\u671d\u6b63\u5e38\u4f7f\u7528\u76f8\u5173\u529f\u80fd\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e Docker \u56fd\u5185\u955c\u50cf\u5730\u5740\u3002 \u6ce8\u518c DaoCloud \u5e10\u53f7\uff0c\u767b\u5f55\u540e\u5728\u7528\u6237\u4e2d\u5fc3\u4f7f\u7528 Docker \u52a0\u901f\u5668\uff0c\u4f1a\u6709 linux/MacOS/Windows \u5e73\u53f0\u7684\u76f8\u5e94\u5730\u5740\u3002 \u590d\u5236 Docker \u52a0\u901f\u955c\u50cf\u5730\u5740\uff0c\u5e76\u5728 Docker Daemon \u4e2d\u8fdb\u884c\u8bbe\u7f6e\uff0c\u5e76\u91cd\u542f\u540e\u5c31\u53ef\u4ee5\u52a0\u901f\u001d docker \u670d\u52a1\u4e86","title":"\u7b80\u4ecb"},{"location":"docker/start-learn/#docker","text":"Docker\u5b98\u7f51 Docker Hub emh1bG9uZ3lpeGlhbjpXdzU0Mzg1OTIzMAo= 1 $ docker run -ti -p 4000 :4000 docs/docker.github.io:latest \u5728** http://localhost:4000 **\u4e0a\u67e5\u770b\u6587\u6863\u3002 \u6b22\u8fce\u4f7f\u7528 Docker \uff01\u5728\u8fd9\u4e2a\u516d\u6b65\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u4f1a\u5b66\u5230: \u5efa\u7acb\u57fa\u672c\u6982\u5ff5 \u6784\u5efa\u5e76\u8fd0\u884c\u4f60\u7684\u7b2c\u4e00\u4e2a\u5e94\u7528 \u628a\u4f60\u7684\u5e94\u7528\u8f6c\u6362\u6210\u53ef\u6269\u5c55\u670d\u52a1 \u628a\u4f60\u7684\u670d\u52a1\u6269\u5c55\u5230\u591a\u4e2a\u673a\u5668\u4e0a \u6dfb\u52a0\u8bbf\u5ba2\u8ba1\u6570 \u90e8\u7f72\u96c6\u7fa4\u5230\u751f\u4ea7\u73af\u5883 \u6559\u7a0b\u4e2d\u7684\u5e94\u7528\u7a0b\u5e8f\u672c\u8eab\u4e0d\u590d\u6742\uff0c\u8fd9\u6837\u4f60\u5c31\u4e0d\u7528\u5206\u5fc3\u5728\u592a\u591a\u7f16\u7801\u7ec6\u8282\u4e0a\u3002\u6bd5\u7adf Docker \u7684\u4f5c\u7528\u662f\u6784\u5efa\u3001\u88c5\u8f7d\u548c\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e0d\u9700\u8981\u5173\u5fc3\u5e94\u7528\u7a0b\u5e8f\u5177\u4f53\u5e72\u4ec0\u4e48\u3002","title":"\u5c06Docker\u6700\u65b0\u6587\u6863\u62c9\u5230\u672c\u5730\u9605\u8bfb"},{"location":"docker/start-learn/#_1","text":"\u5728\u6211\u4eec\u5b9a\u4e49\u4e00\u4e9b\u6982\u5ff5\u524d\uff0c\u6700\u597d\u6211\u4eec\u5df2\u7ecf\u7406\u89e3\u4e86 Docker\u662f\u4ec0\u4e48 \u4ee5\u53ca \u4e3a\u4ec0\u4e48\u6211\u4eec\u8981\u4f7f\u7528Docker \u3002 \u5e76\u4e14\u6211\u4eec\u9700\u8981\u5bf9\u4e00\u4e9b\u57fa\u7840\u6982\u5ff5\u6709\u6240\u638c\u63e1\uff1a IP\u5730\u5740\u548c\u5546\u54c1 \u865a\u62df\u673a \u7f16\u8f91\u914d\u7f6e\u6587\u4ef6 \u719f\u6089\u4ee3\u7801\u4f9d\u8d56\u548c\u6784\u5efa \u4e86\u89e3\u673a\u5668\u8d44\u6e90\u76f8\u5173\u7684\u4e00\u4e9b\u672f\u8bed\uff0c\u50cfCPU\u5360\u7528\u7387\u3001RAM\u5360\u7528\u91cf\u7b49","title":"\u57fa\u672c\u8981\u6c42"},{"location":"docker/start-learn/#docker_1","text":"Docker \u662f\u4e16\u754c\u9886\u5148\u7684\u8f6f\u4ef6\u5bb9\u5668\u5e73\u53f0\u3002 \u5f00\u53d1\u8005\u4f7f\u7528 Docker \u53ef\u4ee5\u907f\u514d\u4e0e\u5176\u5b83\u4eba\u5408\u4f5c\u65f6\u78b0\u5230\u673a\u5668\u8bbe\u5907\u73af\u5883\u914d\u7f6e\u4e0d\u540c\u7684\u95ee\u9898\u3002 \u8fd0\u7ef4\u4eba\u5458\u4f7f\u7528 Docker \u53ef\u4ee5\u6574\u9f50\u7684\u5b89\u6392\u5404\u79cd\u5e94\u7528\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u5bb9\u5668\u6280\u672f\u505a\u5230\u4e92\u76f8\u72ec\u7acb\u3001\u4e92\u4e0d\u5f71\u54cd\uff0c\u4ece\u800c\u66f4\u597d\u7684\u5229\u7528\u6709\u9650\u7684\u8ba1\u7b97\u8d44\u6e90\u3002 \u4f01\u4e1a\u4f7f\u7528 Docker \u53ef\u4ee5\u6784\u5efa\u654f\u6377\u8f6f\u4ef6\u5206\u53d1\u7ba1\u9053\uff0c\u5c06\u5e94\u7528\u65b0\u7279\u6027\u66f4\u5feb\u3001\u66f4\u5b89\u5168\u7684\u5c55\u73b0\u7ed9\u5ba2\u6237\uff0c\u5e76\u4e14\u4e0d\u53d7\u670d\u52a1\u5668\u7c7b\u578b\u7ea6\u675f\u3002","title":"Docker\u662f\u4ec0\u4e48"},{"location":"docker/start-learn/#docker_2","text":"\u73b0\u5728\u7684\u5e94\u7528\u5e73\u53f0\u57fa\u4e8e Docker \u548c \u5bb9\u5668 \u6784\u5efa\u3002 Docker \u53ef\u4ee5\u4f5c\u4e3a\u7edf\u4e00\u7684\u5e73\u53f0\u6765\u670d\u52a1\u4e8e\u5546\u4e1a\u5e94\u7528\u3001\u4f5c\u574a\u5e94\u7528\u6216\u8005\u662f\u5fae\u670d\u52a1\u3002\u8fd9\u4e9b\u5e94\u7528\u5982\u679c\u88ab Docker \u5316\u540e\uff0c\u53ef\u4ee5\u53d8\u5f97\u66f4\u654f\u6377\u3001\u66f4\u5b89\u5168\u3001\u66f4\u7075\u6d3b\u3001\u652f\u6301\u4e91\u670d\u52a1\u5e76\u4e14\u53ef\u4ee5\u4f18\u5316\u8d44\u6e90\u6d88\u8017\u3002 Docker \u53ef\u4ee5\u52a0\u901f\u5e94\u7528\u4ece\u5f00\u53d1\u8005\u684c\u9762\u5f00\u53d1\u73af\u5883\u5230\u751f\u4ea7\u73af\u5883\u90e8\u7f72\u8fd9\u4e00\u8fc7\u7a0b\u3002","title":"\u4e3a\u4ec0\u4e48\u8981\u7528Docker"},{"location":"docker/start-learn/#docker_3","text":"\u7531\u4e8e\u67d0\u4e9b\u672a\u77e5\u539f\u56e0\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u4f7f\u7528 Docker \u52a0\u901f\u624d\u80fd\u5728\u5929\u671d\u6b63\u5e38\u4f7f\u7528\u76f8\u5173\u529f\u80fd\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e Docker \u56fd\u5185\u955c\u50cf\u5730\u5740\u3002 \u6ce8\u518c DaoCloud \u5e10\u53f7\uff0c\u767b\u5f55\u540e\u5728\u7528\u6237\u4e2d\u5fc3\u4f7f\u7528 Docker \u52a0\u901f\u5668\uff0c\u4f1a\u6709 linux/MacOS/Windows \u5e73\u53f0\u7684\u76f8\u5e94\u5730\u5740\u3002 \u590d\u5236 Docker \u52a0\u901f\u955c\u50cf\u5730\u5740\uff0c\u5e76\u5728 Docker Daemon \u4e2d\u8fdb\u884c\u8bbe\u7f6e\uff0c\u5e76\u91cd\u542f\u540e\u5c31\u53ef\u4ee5\u52a0\u901f\u001d docker \u670d\u52a1\u4e86","title":"Docker\u52a0\u901f"},{"location":"iOS/XCode 9 CI/","text":"XCode 9 \u5df2\u7ecf\u96c6\u6210\u4e86XCode Server, \u4e0d\u7528\u5355\u72ec\u5b89\u88c5\uff0c\u8fd9\u5f88\u65b9\u4fbf\u5750\u6301\u7eed\u96c6\u6210\u3002 \u8bc1\u4e66\u548c\u6388\u6743\u6587\u4ef6 \u6301\u7eed\u96c6\u6210\u73af\u5883 \u6301\u7eed\u96c6\u6210\u81ea\u52a8\u4e0a\u4f20 Pre-integration Scripts 1 2 3 4 #!/bin/sh export LANG = en_US.UTF-8 cd JokerHub/jokerHub/ /usr/local/bin/pod install Post-integration Scripts 1 2 3 4 5 6 7 8 9 10 #!/bin/sh IPA_NAME = $( basename ${ XCS_ARCHIVE %.* } .ipa ) IPA_PATH = ${ XCS_OUTPUT_DIR } /ExportedProduct/Apps/ ${ IPA_NAME } echo ${ IPA_PATH } #\u8bf7\u6839\u636e\u84b2\u516c\u82f1\u81ea\u5df1\u7684\u8d26\u53f7\uff0c\u5c06\u5176\u4e2d\u7684 uKey \u548c _api_key \u7684\u503c\u66ff\u6362\u4e3a\u76f8\u5e94\u7684\u503c\u3002 curl -F file=@ ${ IPA_PATH } -F uKey=b48819d10723f97bd0fcb83f852dfa85 -F _api_key=524a489e84bfa19b9f42eb9acf53779f http://www.pgyer.com/apiv1/app/upload","title":"\u6301\u7eed\u96c6\u6210"},{"location":"iOS/XCode 9 CI/#pre-integration-scripts","text":"1 2 3 4 #!/bin/sh export LANG = en_US.UTF-8 cd JokerHub/jokerHub/ /usr/local/bin/pod install","title":"Pre-integration Scripts"},{"location":"iOS/XCode 9 CI/#post-integration-scripts","text":"1 2 3 4 5 6 7 8 9 10 #!/bin/sh IPA_NAME = $( basename ${ XCS_ARCHIVE %.* } .ipa ) IPA_PATH = ${ XCS_OUTPUT_DIR } /ExportedProduct/Apps/ ${ IPA_NAME } echo ${ IPA_PATH } #\u8bf7\u6839\u636e\u84b2\u516c\u82f1\u81ea\u5df1\u7684\u8d26\u53f7\uff0c\u5c06\u5176\u4e2d\u7684 uKey \u548c _api_key \u7684\u503c\u66ff\u6362\u4e3a\u76f8\u5e94\u7684\u503c\u3002 curl -F file=@ ${ IPA_PATH } -F uKey=b48819d10723f97bd0fcb83f852dfa85 -F _api_key=524a489e84bfa19b9f42eb9acf53779f http://www.pgyer.com/apiv1/app/upload","title":"Post-integration Scripts"},{"location":"iOS/airdrop/","text":"\u6700\u8fd1\u5728\u5730\u94c1\u4e0a\u88ab\u4e00\u4e2a\u964c\u751f\u4eba\u642d\u8baa\uff0c\u4f7f\u7528\u7684\u662f\u82f9\u679ciPhone\u624b\u673a\u81ea\u5e26\u7684Airdrop\u529f\u80fd\uff0c\u8fd9\u4e2a\u529f\u80fd\u53ea\u8981\u628a\u65e0\u7ebf\u30014G\u548c\u84dd\u7259\u5168\u90e8\u6253\u5f00\uff0c\u5e76\u4e14\u9644\u8fd15-10\u7c73\u5185\u7684\u624b\u673a\u8bbe\u7f6e\u4e86Airdrop\u53ef\u4ee5\u88ab\u6240\u6709\u4eba\u641c\u7d22\uff0c\u5c31\u53ef\u4ee5\u88ab\u641c\u7d22\u5230\uff0c\u53ef\u4ee5\u8bf4\u662f\u76f8\u5f53\u7684\u4fbf\u6377\u3002\u88ab\u642d\u8baa\u540e\uff0c\u7a81\u7136\u89c9\u5f97\u8fd9\u4e2a\u529f\u80fd\u9664\u4e86\u53ef\u4ee5\u7528\u6765\u5171\u4eab\u6587\u4ef6\u5916\uff0c\u5c45\u7136\u8fd8\u53ef\u4ee5\u88ab\u8fd9\u4e48\u4f7f\u7528\uff0c\u77ac\u95f4\u89c9\u5f97\u8fd9\u4e2a\u529f\u80fd\u53ef\u4ee5\u88ab\u6269\u5c55\uff0c\u4f46\u8fd9\u4e0aiPhone\u7684\u7cfb\u7edf\u529f\u80fd\uff0c\u76ee\u524d\u8fd8\u6ca1\u6709\u88ab\u5f00\u653e\u4f7f\u7528\uff0c\u6240\u4ee5\u6709\u6240\u9650\u5236\u3002\u4e0d\u8fc7\u53ef\u4ee5\u5c1d\u8bd5\u4f5c\u4e00\u4e9b\u521d\u7ea7\u7684\u793e\u4ea4\u5de5\u5177\uff0c\u6bd5\u7adf\u4f60\u641c\u7d22\u5230\u7684\u4eba\u90fd\u662f\u5728\u4f605-10\u7c73\u8303\u56f4\u5185\u7684\uff0c\u8fd8\u662f\u5c0f\u5fc3\u4e00\u70b9\u4f7f\u7528\u7684\u597d\uff0c\u4e0d\u7136\u4f1a\u88ab\u7206\u6253\u4e00\u987f\u4e5f\u8bf4\u4e0d\u5b9a\u3002","title":"AirDrop\u793e\u4ea4"},{"location":"iOS/design-pattern/","text":"\u4ec0\u4e48\u662f\u8bbe\u8ba1\u6a21\u5f0f \u8bbe\u8ba1\u6a21\u5f0f\u662f\u8f6f\u4ef6\u8bbe\u8ba1\u4e2d\u7684\u6700\u4f73\u5b9e\u8df5\uff0c\u89e3\u51b3\u901a\u7528\u95ee\u9898 \u8bbe\u8ba1\u6a21\u5f0f\u6709\u4e09\u79cd\u4e3b\u8981\u7c7b\u578b\uff1a \u7ed3\u6784\u8bbe\u8ba1\u6a21\u5f0f: \u7528\u6765\u642d\u5efa\u5de5\u7a0b\u6846\u67b6\uff0c\u53ef\u4ee5\u7ec4\u5408\u6210\u5927\u578b\u9879\u76ee\uff0c\u4f8b\u5982: MVC\u3001MVVM\u3001Facade \u884c\u4e3a\u8bbe\u8ba1\u6a21\u5f0f: \u63cf\u8ff0\u5bf9\u8c61\u95f4\u5982\u4f55\u901a\u4fe1\uff0c\u4f8b\u5982\uff1adelegation\u3001Strategy\u3001Observer \u521b\u5efa\u8bbe\u8ba1\u6a21\u5f0f: \u63cf\u8ff0\u600e\u6837\u521b\u5efa\u5bf9\u8c61\uff0c\u4f8b\u5982\uff1aBuilder\u3001Singleton\u3001Prototype \u8bbe\u8ba1\u6a21\u5f0f\u4f7f\u7528\u6ce8\u610f\u4e8b\u9879\uff1a \u4e0d\u8981\u6ee5\u7528\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u8fc7\u5ea6\u4f7f\u7528\u8bbe\u8ba1\u6a21\u5f0f\u53ef\u80fd\u4f7f\u95ee\u9898\u53d8\u5f97\u66f4\u590d\u6742\uff0c\u4f7f\u7528\u8bbe\u8ba1\u6a21\u5f0f\u524d\u8981\u5c06\u95ee\u9898\u5b9a\u4e49\u6e05\u695a \u90e8\u5206\u8bbe\u8ba1\u6a21\u5f0f\u5df2\u7ecf\u5728\u67d0\u4e9b\u73b0\u5728\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u4e2d\u5185\u542b\u4e86 \u8bbe\u8ba1\u6a21\u5f0f\u662f\u5b66\u4e60\u9762\u5411\u5bf9\u8c61\u7684\u61d2\u4eba\u65b9\u5f0f\uff0c\u5982\u679c\u77e5\u9053\u67d0\u4e2a\u8bbe\u8ba1\u6a21\u5f0f\u53ef\u4ee5\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u5c31\u4e0d\u9700\u8981\u91cd\u65b0\u901a\u8fc7\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u5f0f\u5b9e\u73b0\u4e00\u6b21\u4e86 \u4e5f\u6709\u4eba\u8bf4\u8bbe\u8ba1\u6a21\u5f0f\u6ca1\u4ec0\u4e48\u5375\u7528\uff0c\u4e0d\u8fc7\u65e2\u7136\u5b83\u5df2\u7ecf\u5b58\u5728\u5f88\u4e45\u4e86\uff0c\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u96be\u514d\u4f1a\u78b0\u5230 \u8bbe\u8ba1\u6a21\u5f0f\u7684\u4e00\u4e9b\u597d\u5904\uff1a \u8bbe\u8ba1\u6a21\u5f0f\u53ef\u4ee5\u8131\u79bb\u5177\u4f53\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u5bf9\u4e8e\u5f00\u53d1\u8005\u6c9f\u901a\u6709\u597d\u5904\uff0c\u6709\u80fd\u7528\u7684\u63cf\u8ff0\u65b9\u5f0f \u9075\u5faa\u8bbe\u8ba1\u6a21\u5f0f\u7684\u9879\u76ee\u5bf9\u4e8e\u65b0\u63a5\u624b\u7684\u5f00\u53d1\u4eba\u5458\u66f4\u52a0\u53cb\u597d, \u4e0d\u9700\u8981\u8d39\u52b2\u5b66\u4e60\u5b9a\u5236\u7684\u7a0b\u5e8f\u903b\u8f91 \u8bbe\u8ba1\u6a21\u5f0f\u4e5f\u53ef\u4ee5\u7528\u6765\u88c5\u903c\uff0c\u8ba9\u522b\u4eba\u89c9\u5f97\u4f60\u5f88\u725b\u903c \u4e86\u89e3\u8bbe\u8ba1\u6a21\u5f0f\u53ef\u4ee5\u8ba9\u4f60\u66f4\u597d\u7684\u7406\u89e3\u9075\u5faa\u8bbe\u8ba1\u6a21\u5f0f\u7684\u7a0b\u5e8f\u4ee3\u7801 \u5982\u4f55\u8bfb\u61c2\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\u7684\u7c7b\u56fe UML\u662f\u6807\u51c6\u7684\u7c7b\u56fe\u63cf\u8ff0\u65b9\u5f0f\uff0c\u4f46\u5e73\u5e38\u5f00\u53d1\u4e2d\u4e5f\u7528\u4e0d\u5230\u6240\u6709\u5173\u4e8eUML\u4e2d\u7684\u4e1c\u897f\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u5b66\u4e60\u4e00\u4e9b\u5e38\u7528\u7684\u8868\u793a\u65b9\u6cd5\uff0c\u8db3\u591f\u63cf\u8ff0\u5927\u591a\u6570\u8bbe\u8ba1\u6a21\u5f0f\u3002 \u7c7b\u56fe\u5305\u542b\uff1a\u7c7b\u3001\u534f\u8bae\u3001\u5c5e\u6027\u3001\u65b9\u6cd5\u3001\u5173\u7cfb \u4e00\u4e2a\u65b9\u6846\u8868\u793a\u4e00\u4e2a\u7c7b\uff0c\u4e2d\u95f4\u53ef\u4ee5\u5199\u7c7b\u540d \u4e00\u4e2a\u5411\u4e0a\u7684\u7a7a\u5fc3\u4e09\u89d2\u7bad\u5934\u8868\u793a**\u7ee7\u627f\u81ea**\u8fd9\u79cd\u5173\u7cfb\uff0c\u6307\u5411\u7236\u7c7b\uff0c\u8868\u793a is a \u7684\u5173\u7cfb\uff1a \u5b50\u7c7b(\u4e0b\u8fb9) is a \u7236\u7c7b(\u4e0a\u8fb9) \u4e00\u4e2a\u5411\u53f3\u7684\u6b63\u5e38\u7bad\u5934\u8868\u793a\u5c5e\u6027\u5173\u8054\uff0c\u6307\u5411\u5173\u8054\u7684\u5c5e\u6027\uff0c\u8868\u793a has a \u7684\u5173\u7cfb\uff1a \u7c7b has a \u5c5e\u6027 , \u5982\u679c\u5728\u7bad\u5934\u8fb9\u4e0a\u5199 1...* , \u5219\u8868\u793a has one or many \u7684\u5173\u7cfb\uff1a \u7c7b has one or many \u5c5e\u6027 , \u7c7b\u540d\u90fd\u662f\u5355\u6570\u5f62\u5f0f\uff0c\u5173\u8054\u662f\u5f3a\u5f15\u7528 \u7528\u4e00\u4e2a\u65b9\u6846\u8868\u793a\u534f\u8bae\uff0c\u4f46\u65b9\u6846\u5185\u7684\u534f\u8bae\u540d\u79f0\u9700\u8981\u7528 \u6765\u5305\u88f9\uff0c\u8fd9\u6837\u5c31\u548c\u7c7b\u533a\u5206\u5f00\u4e86 \u4f7f\u7528\u5411\u4e0a\u7684\u5e26\u7528\u7a7a\u5fc3\u4e09\u89d2\u7bad\u5934\u7684\u865a\u7ebf\u8868\u793a\u5bf9\u534f\u8bae\u7684\u5b9e\u73b0/\u9075\u5b88\u5173\u7cfb\uff1a \u7c7b(\u4e0b\u8fb9) implements or conforms to \u534f\u8bae \u4f7f\u7528\u6b63\u5e38\u7bad\u5934\u865a\u7ebf\u7bad\u8eab\u8868\u793a\u4f9d\u8d56\u5173\u7cfb\uff0c\u5177\u4f53\u4ec0\u4e48\u6837\u7684\u4f9d\u8d56\u5173\u7cfb\u901a\u5e38\u4f1a\u5728\u7bad\u5934\u8fb9\u4e0a\u6ce8\u660e\uff0c\u4f9d\u8d56\u662f\u5f31\u5f15\u7528 \u7c7b\u56fe\u91cc\u4e5f\u53ef\u4ee5\u5199\u5c5e\u6027\u548c\u65b9\u6cd5 \u57fa\u7840\u8bbe\u8ba1\u6a21\u5f0f(iOS\u4e2d\u7528\u7684\u6bd4\u8f83\u591a\u7684) MVC\u6a21\u5f0f \u4e09\u4e2a\u89d2\u8272\uff1a Model\u3001View\u3001Controller \u5173\u7cfb: View\u548cModel\u4e4b\u95f4\u5b8c\u5168\u9694\u79bb\uff0cController\u8d77\u5230\u4e2d\u95f4\u4eba\u7684\u4f5c\u7528\uff0c\u5f3a\u6301\u6709\u5e76\u4e14\u53ef\u4ee5\u64cd\u4f5cView\u548cModel\uff0cView\u548cModel\u4e5f\u53ef\u4ee5\u5206\u522b\u901a\u8fc7target-Action\u548c\u5c5e\u6027\u89c2\u5bdf\u8005\u6a21\u5f0f\u6765\u548cController\u901a\u4fe1 \u4e3a\u4e86\u907f\u514d\u5faa\u73af\u5f15\u7528\uff0cView\u548cModel\u4e0d\u80fd\u6301\u6709\u6216\u8005\u5fc5\u987b\u4ee5\u5f31\u5f15\u7528\u7684\u65b9\u5f0f\u4f7f\u7528Controller\uff0cView\u4ee5delegate\u7684\u65b9\u5f0f\u5373\u662f\u5f31\u5f15\u7528Controller\u7684\u4f8b\u5b50 \u4ee3\u7406\u6a21\u5f0f \u4e09\u4e2a\u89d2\u8272\uff1a \u4ee3\u7406\u5bf9\u8c61\u3001\u4ee3\u7406\u534f\u8bae\u3001\u534f\u8bae\u5bf9\u8c61 \u4ee3\u7406\u5bf9\u8c61\u4f9d\u8d56\u4e00\u4e2a\u4ee3\u7406\u534f\u8bae\uff0c\u534f\u8bae\u5bf9\u8c61\u5b9e\u73b0\u4e86\u4ee3\u7406\u534f\u8bae\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u4ee3\u7406\u5bf9\u8c61\u7684\u5b9e\u9645\u4ee3\u7406\u4f7f\u7528 \u8fd9\u79cd\u6a21\u5f0f\u4e00\u822c\u7528\u6765\u6298\u5206\u5927\u7c7b\u6216\u521b\u5efa\u901a\u7528\u53ef\u590d\u7528\u7ec4\u4ef6 \u6ce8\u610f\uff1a\u4e0d\u8981\u7ed9\u5bf9\u8c61\u521b\u5efa\u592a\u591a\u4ee3\u7406\uff0c\u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u7684\u4ee3\u7406\u592a\u591a\uff0c\u8bf4\u660e\u8fd9\u4e2a\u5bf9\u8c61\u9700\u8981\u62c6\u5206\u529f\u80fd \u7b56\u7565\u6a21\u5f0f \u5b9a\u4e49\u5728\u8fd0\u884c\u65f6\u53ef\u4ee5\u66ff\u6362\u7684\u4e00\u7c07\u5bf9\u8c61\uff0c\u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff1a \u4f7f\u7528\u534f\u8bae\u7684\u5bf9\u8c61\u3001\u7b56\u7565\u534f\u8bae\u672c\u8eab\u3001\u9075\u5faa\u7b56\u7565\u534f\u8bae\u7684\u591a\u4e2a\u5bf9\u8c61 \u4e0e\u4ee3\u7406\u6a21\u5f0f\u7684\u533a\u522b\u5728\u4e8e\uff0c\u7b56\u7565\u6a21\u5f0f\u5728\u8fd0\u884c\u65f6\u53ef\u4ee5\u52a8\u6001\u66f4\u6362\u9075\u5faa\u534f\u8bae\u7684\u5bf9\u8c61\uff0c\u4ee3\u7406\u6a21\u5f0f\u4e00\u822c\u534f\u8bae\u5bf9\u8c61\u5728\u8fd0\u884c\u65f6\u4e0d\u53ef\u53d8 \u5355\u4f8b\u6a21\u5f0f \u5355\u4f8b\u6a21\u5f0f\u9650\u5236\u4e00\u4e2a\u7c7b\u53ea\u80fd\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff0c UIApplication\u5c31\u662f\u82f9\u679c\u5b9e\u4f8b\u7684\u4e00\u4e2a\u5355\u4f8b\u6a21\u5f0f \u5355\u4f8b\u52a0\u6a21\u5f0f\uff0c\u9664\u4e86\u63d0\u4f9b\u4e00\u4e2a\u516c\u7528\u5b9e\u4f8b\u5916\uff0c\u4e5f\u5141\u8bb8\u521b\u5efa\u7c7b\u5176\u5b83\u5b9e\u4f8b\uff0cFileManager\u5c31\u662f\u82f9\u679c\u7684\u4e00\u4e2a\u5355\u4f8b\u52a0\u6a21\u5f0f\u7684\u5b9e\u73b0 \u5355\u4f8b\u6a21\u5f0f\u8981\u6ce8\u610f\u4e0d\u8981\u6ee5\u7528\uff0c\u5355\u4f8b\u4f1a\u4f8b\u6d4b\u8bd5\u53d8\u7684\u5f88\u56f0\u96be\uff0c\u56e0\u4e3a\u72b6\u6001\u548c\u4f7f\u7528\u987a\u5e8f\u6709\u5173\uff0cmock\u6570\u636e\u5f88\u9ebb\u70e6 \u7eaa\u5ff5\u6a21\u5f0f \u7eaa\u5ff5\u6a21\u5f0f\u53ef\u4ee5\u628a\u4e00\u4e2a\u5bf9\u8c61\u5b58\u50a8/\u6062\u590d\uff0c\u82f9\u679c\u7684encoder\u548cdecoder\u5c31\u662f\u8fd9\u79cd\u6a21\u5f0f \u8fd9\u4e2a\u6a21\u5f0f\u6709\u4e09\u4e2a\u89d2\u8272\uff1a \u8981\u5b58\u50a8\u3001\u6062\u590d\u7684\u5bf9\u8c61 \u3001 \u8bb0\u4e8b\u672c\u3001 \u4e32\u884c\u5316\u7cfb\u7edf \u8fd9\u4e2a\u6a21\u5f0f\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0**\u64a4\u9500/\u91cd\u4f5c**\u529f\u80fd\uff0c \u8fd9\u4e2a\u529f\u80fd\u5728IDE\u4e2d\u5f88\u5e38\u89c1 \u89c2\u5bdf\u8005\u6a21\u5f0f \u6784\u5efa\u8005\u6a21\u5f0f","title":"\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"iOS/design-pattern/#_1","text":"\u8bbe\u8ba1\u6a21\u5f0f\u662f\u8f6f\u4ef6\u8bbe\u8ba1\u4e2d\u7684\u6700\u4f73\u5b9e\u8df5\uff0c\u89e3\u51b3\u901a\u7528\u95ee\u9898 \u8bbe\u8ba1\u6a21\u5f0f\u6709\u4e09\u79cd\u4e3b\u8981\u7c7b\u578b\uff1a \u7ed3\u6784\u8bbe\u8ba1\u6a21\u5f0f: \u7528\u6765\u642d\u5efa\u5de5\u7a0b\u6846\u67b6\uff0c\u53ef\u4ee5\u7ec4\u5408\u6210\u5927\u578b\u9879\u76ee\uff0c\u4f8b\u5982: MVC\u3001MVVM\u3001Facade \u884c\u4e3a\u8bbe\u8ba1\u6a21\u5f0f: \u63cf\u8ff0\u5bf9\u8c61\u95f4\u5982\u4f55\u901a\u4fe1\uff0c\u4f8b\u5982\uff1adelegation\u3001Strategy\u3001Observer \u521b\u5efa\u8bbe\u8ba1\u6a21\u5f0f: \u63cf\u8ff0\u600e\u6837\u521b\u5efa\u5bf9\u8c61\uff0c\u4f8b\u5982\uff1aBuilder\u3001Singleton\u3001Prototype \u8bbe\u8ba1\u6a21\u5f0f\u4f7f\u7528\u6ce8\u610f\u4e8b\u9879\uff1a \u4e0d\u8981\u6ee5\u7528\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u8fc7\u5ea6\u4f7f\u7528\u8bbe\u8ba1\u6a21\u5f0f\u53ef\u80fd\u4f7f\u95ee\u9898\u53d8\u5f97\u66f4\u590d\u6742\uff0c\u4f7f\u7528\u8bbe\u8ba1\u6a21\u5f0f\u524d\u8981\u5c06\u95ee\u9898\u5b9a\u4e49\u6e05\u695a \u90e8\u5206\u8bbe\u8ba1\u6a21\u5f0f\u5df2\u7ecf\u5728\u67d0\u4e9b\u73b0\u5728\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u4e2d\u5185\u542b\u4e86 \u8bbe\u8ba1\u6a21\u5f0f\u662f\u5b66\u4e60\u9762\u5411\u5bf9\u8c61\u7684\u61d2\u4eba\u65b9\u5f0f\uff0c\u5982\u679c\u77e5\u9053\u67d0\u4e2a\u8bbe\u8ba1\u6a21\u5f0f\u53ef\u4ee5\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u5c31\u4e0d\u9700\u8981\u91cd\u65b0\u901a\u8fc7\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u5f0f\u5b9e\u73b0\u4e00\u6b21\u4e86 \u4e5f\u6709\u4eba\u8bf4\u8bbe\u8ba1\u6a21\u5f0f\u6ca1\u4ec0\u4e48\u5375\u7528\uff0c\u4e0d\u8fc7\u65e2\u7136\u5b83\u5df2\u7ecf\u5b58\u5728\u5f88\u4e45\u4e86\uff0c\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u96be\u514d\u4f1a\u78b0\u5230 \u8bbe\u8ba1\u6a21\u5f0f\u7684\u4e00\u4e9b\u597d\u5904\uff1a \u8bbe\u8ba1\u6a21\u5f0f\u53ef\u4ee5\u8131\u79bb\u5177\u4f53\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u5bf9\u4e8e\u5f00\u53d1\u8005\u6c9f\u901a\u6709\u597d\u5904\uff0c\u6709\u80fd\u7528\u7684\u63cf\u8ff0\u65b9\u5f0f \u9075\u5faa\u8bbe\u8ba1\u6a21\u5f0f\u7684\u9879\u76ee\u5bf9\u4e8e\u65b0\u63a5\u624b\u7684\u5f00\u53d1\u4eba\u5458\u66f4\u52a0\u53cb\u597d, \u4e0d\u9700\u8981\u8d39\u52b2\u5b66\u4e60\u5b9a\u5236\u7684\u7a0b\u5e8f\u903b\u8f91 \u8bbe\u8ba1\u6a21\u5f0f\u4e5f\u53ef\u4ee5\u7528\u6765\u88c5\u903c\uff0c\u8ba9\u522b\u4eba\u89c9\u5f97\u4f60\u5f88\u725b\u903c \u4e86\u89e3\u8bbe\u8ba1\u6a21\u5f0f\u53ef\u4ee5\u8ba9\u4f60\u66f4\u597d\u7684\u7406\u89e3\u9075\u5faa\u8bbe\u8ba1\u6a21\u5f0f\u7684\u7a0b\u5e8f\u4ee3\u7801","title":"\u4ec0\u4e48\u662f\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"iOS/design-pattern/#_2","text":"UML\u662f\u6807\u51c6\u7684\u7c7b\u56fe\u63cf\u8ff0\u65b9\u5f0f\uff0c\u4f46\u5e73\u5e38\u5f00\u53d1\u4e2d\u4e5f\u7528\u4e0d\u5230\u6240\u6709\u5173\u4e8eUML\u4e2d\u7684\u4e1c\u897f\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u5b66\u4e60\u4e00\u4e9b\u5e38\u7528\u7684\u8868\u793a\u65b9\u6cd5\uff0c\u8db3\u591f\u63cf\u8ff0\u5927\u591a\u6570\u8bbe\u8ba1\u6a21\u5f0f\u3002 \u7c7b\u56fe\u5305\u542b\uff1a\u7c7b\u3001\u534f\u8bae\u3001\u5c5e\u6027\u3001\u65b9\u6cd5\u3001\u5173\u7cfb \u4e00\u4e2a\u65b9\u6846\u8868\u793a\u4e00\u4e2a\u7c7b\uff0c\u4e2d\u95f4\u53ef\u4ee5\u5199\u7c7b\u540d \u4e00\u4e2a\u5411\u4e0a\u7684\u7a7a\u5fc3\u4e09\u89d2\u7bad\u5934\u8868\u793a**\u7ee7\u627f\u81ea**\u8fd9\u79cd\u5173\u7cfb\uff0c\u6307\u5411\u7236\u7c7b\uff0c\u8868\u793a is a \u7684\u5173\u7cfb\uff1a \u5b50\u7c7b(\u4e0b\u8fb9) is a \u7236\u7c7b(\u4e0a\u8fb9) \u4e00\u4e2a\u5411\u53f3\u7684\u6b63\u5e38\u7bad\u5934\u8868\u793a\u5c5e\u6027\u5173\u8054\uff0c\u6307\u5411\u5173\u8054\u7684\u5c5e\u6027\uff0c\u8868\u793a has a \u7684\u5173\u7cfb\uff1a \u7c7b has a \u5c5e\u6027 , \u5982\u679c\u5728\u7bad\u5934\u8fb9\u4e0a\u5199 1...* , \u5219\u8868\u793a has one or many \u7684\u5173\u7cfb\uff1a \u7c7b has one or many \u5c5e\u6027 , \u7c7b\u540d\u90fd\u662f\u5355\u6570\u5f62\u5f0f\uff0c\u5173\u8054\u662f\u5f3a\u5f15\u7528 \u7528\u4e00\u4e2a\u65b9\u6846\u8868\u793a\u534f\u8bae\uff0c\u4f46\u65b9\u6846\u5185\u7684\u534f\u8bae\u540d\u79f0\u9700\u8981\u7528 \u6765\u5305\u88f9\uff0c\u8fd9\u6837\u5c31\u548c\u7c7b\u533a\u5206\u5f00\u4e86 \u4f7f\u7528\u5411\u4e0a\u7684\u5e26\u7528\u7a7a\u5fc3\u4e09\u89d2\u7bad\u5934\u7684\u865a\u7ebf\u8868\u793a\u5bf9\u534f\u8bae\u7684\u5b9e\u73b0/\u9075\u5b88\u5173\u7cfb\uff1a \u7c7b(\u4e0b\u8fb9) implements or conforms to \u534f\u8bae \u4f7f\u7528\u6b63\u5e38\u7bad\u5934\u865a\u7ebf\u7bad\u8eab\u8868\u793a\u4f9d\u8d56\u5173\u7cfb\uff0c\u5177\u4f53\u4ec0\u4e48\u6837\u7684\u4f9d\u8d56\u5173\u7cfb\u901a\u5e38\u4f1a\u5728\u7bad\u5934\u8fb9\u4e0a\u6ce8\u660e\uff0c\u4f9d\u8d56\u662f\u5f31\u5f15\u7528 \u7c7b\u56fe\u91cc\u4e5f\u53ef\u4ee5\u5199\u5c5e\u6027\u548c\u65b9\u6cd5","title":"\u5982\u4f55\u8bfb\u61c2\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\u7684\u7c7b\u56fe"},{"location":"iOS/design-pattern/#ios","text":"","title":"\u57fa\u7840\u8bbe\u8ba1\u6a21\u5f0f(iOS\u4e2d\u7528\u7684\u6bd4\u8f83\u591a\u7684)"},{"location":"iOS/design-pattern/#mvc","text":"\u4e09\u4e2a\u89d2\u8272\uff1a Model\u3001View\u3001Controller \u5173\u7cfb: View\u548cModel\u4e4b\u95f4\u5b8c\u5168\u9694\u79bb\uff0cController\u8d77\u5230\u4e2d\u95f4\u4eba\u7684\u4f5c\u7528\uff0c\u5f3a\u6301\u6709\u5e76\u4e14\u53ef\u4ee5\u64cd\u4f5cView\u548cModel\uff0cView\u548cModel\u4e5f\u53ef\u4ee5\u5206\u522b\u901a\u8fc7target-Action\u548c\u5c5e\u6027\u89c2\u5bdf\u8005\u6a21\u5f0f\u6765\u548cController\u901a\u4fe1 \u4e3a\u4e86\u907f\u514d\u5faa\u73af\u5f15\u7528\uff0cView\u548cModel\u4e0d\u80fd\u6301\u6709\u6216\u8005\u5fc5\u987b\u4ee5\u5f31\u5f15\u7528\u7684\u65b9\u5f0f\u4f7f\u7528Controller\uff0cView\u4ee5delegate\u7684\u65b9\u5f0f\u5373\u662f\u5f31\u5f15\u7528Controller\u7684\u4f8b\u5b50","title":"MVC\u6a21\u5f0f"},{"location":"iOS/design-pattern/#_3","text":"\u4e09\u4e2a\u89d2\u8272\uff1a \u4ee3\u7406\u5bf9\u8c61\u3001\u4ee3\u7406\u534f\u8bae\u3001\u534f\u8bae\u5bf9\u8c61 \u4ee3\u7406\u5bf9\u8c61\u4f9d\u8d56\u4e00\u4e2a\u4ee3\u7406\u534f\u8bae\uff0c\u534f\u8bae\u5bf9\u8c61\u5b9e\u73b0\u4e86\u4ee3\u7406\u534f\u8bae\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u4ee3\u7406\u5bf9\u8c61\u7684\u5b9e\u9645\u4ee3\u7406\u4f7f\u7528 \u8fd9\u79cd\u6a21\u5f0f\u4e00\u822c\u7528\u6765\u6298\u5206\u5927\u7c7b\u6216\u521b\u5efa\u901a\u7528\u53ef\u590d\u7528\u7ec4\u4ef6 \u6ce8\u610f\uff1a\u4e0d\u8981\u7ed9\u5bf9\u8c61\u521b\u5efa\u592a\u591a\u4ee3\u7406\uff0c\u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u7684\u4ee3\u7406\u592a\u591a\uff0c\u8bf4\u660e\u8fd9\u4e2a\u5bf9\u8c61\u9700\u8981\u62c6\u5206\u529f\u80fd","title":"\u4ee3\u7406\u6a21\u5f0f"},{"location":"iOS/design-pattern/#_4","text":"\u5b9a\u4e49\u5728\u8fd0\u884c\u65f6\u53ef\u4ee5\u66ff\u6362\u7684\u4e00\u7c07\u5bf9\u8c61\uff0c\u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff1a \u4f7f\u7528\u534f\u8bae\u7684\u5bf9\u8c61\u3001\u7b56\u7565\u534f\u8bae\u672c\u8eab\u3001\u9075\u5faa\u7b56\u7565\u534f\u8bae\u7684\u591a\u4e2a\u5bf9\u8c61 \u4e0e\u4ee3\u7406\u6a21\u5f0f\u7684\u533a\u522b\u5728\u4e8e\uff0c\u7b56\u7565\u6a21\u5f0f\u5728\u8fd0\u884c\u65f6\u53ef\u4ee5\u52a8\u6001\u66f4\u6362\u9075\u5faa\u534f\u8bae\u7684\u5bf9\u8c61\uff0c\u4ee3\u7406\u6a21\u5f0f\u4e00\u822c\u534f\u8bae\u5bf9\u8c61\u5728\u8fd0\u884c\u65f6\u4e0d\u53ef\u53d8","title":"\u7b56\u7565\u6a21\u5f0f"},{"location":"iOS/design-pattern/#_5","text":"\u5355\u4f8b\u6a21\u5f0f\u9650\u5236\u4e00\u4e2a\u7c7b\u53ea\u80fd\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff0c UIApplication\u5c31\u662f\u82f9\u679c\u5b9e\u4f8b\u7684\u4e00\u4e2a\u5355\u4f8b\u6a21\u5f0f \u5355\u4f8b\u52a0\u6a21\u5f0f\uff0c\u9664\u4e86\u63d0\u4f9b\u4e00\u4e2a\u516c\u7528\u5b9e\u4f8b\u5916\uff0c\u4e5f\u5141\u8bb8\u521b\u5efa\u7c7b\u5176\u5b83\u5b9e\u4f8b\uff0cFileManager\u5c31\u662f\u82f9\u679c\u7684\u4e00\u4e2a\u5355\u4f8b\u52a0\u6a21\u5f0f\u7684\u5b9e\u73b0 \u5355\u4f8b\u6a21\u5f0f\u8981\u6ce8\u610f\u4e0d\u8981\u6ee5\u7528\uff0c\u5355\u4f8b\u4f1a\u4f8b\u6d4b\u8bd5\u53d8\u7684\u5f88\u56f0\u96be\uff0c\u56e0\u4e3a\u72b6\u6001\u548c\u4f7f\u7528\u987a\u5e8f\u6709\u5173\uff0cmock\u6570\u636e\u5f88\u9ebb\u70e6","title":"\u5355\u4f8b\u6a21\u5f0f"},{"location":"iOS/design-pattern/#_6","text":"\u7eaa\u5ff5\u6a21\u5f0f\u53ef\u4ee5\u628a\u4e00\u4e2a\u5bf9\u8c61\u5b58\u50a8/\u6062\u590d\uff0c\u82f9\u679c\u7684encoder\u548cdecoder\u5c31\u662f\u8fd9\u79cd\u6a21\u5f0f \u8fd9\u4e2a\u6a21\u5f0f\u6709\u4e09\u4e2a\u89d2\u8272\uff1a \u8981\u5b58\u50a8\u3001\u6062\u590d\u7684\u5bf9\u8c61 \u3001 \u8bb0\u4e8b\u672c\u3001 \u4e32\u884c\u5316\u7cfb\u7edf \u8fd9\u4e2a\u6a21\u5f0f\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0**\u64a4\u9500/\u91cd\u4f5c**\u529f\u80fd\uff0c \u8fd9\u4e2a\u529f\u80fd\u5728IDE\u4e2d\u5f88\u5e38\u89c1","title":"\u7eaa\u5ff5\u6a21\u5f0f"},{"location":"iOS/design-pattern/#_7","text":"","title":"\u89c2\u5bdf\u8005\u6a21\u5f0f"},{"location":"iOS/design-pattern/#_8","text":"","title":"\u6784\u5efa\u8005\u6a21\u5f0f"},{"location":"iOS/objc/","text":"\u300aPro Multithreading and Memory Management for iOS and OSX\u300b MRC - \u624b\u52a8\u5f15\u7528\u8ba1\u6570(\u5c5e\u4e8eFoundation Framework NSObject) \u521b\u5efa\u5e76\u6301\u6709(alloc/new/copy/mutableCopy)\uff081\uff09 \u6301\u6709(retain)\uff08+1\uff09 \u653e\u5f03\u6301\u6709(release)\uff08-1\uff09 \u5904\u7406(dealloc)(0) \u65b9\u6cd5\u8fd4\u56de\u5185\u90e8\u6301\u6709\u7684\u5bf9\u8c61\u65f6\uff0c\u4f1a\u628a\u6240\u6709\u6743\u4f20\u9012\u7ed9\u8c03\u7528\u8005(\u8fd9\u7c7b\u65b9\u6cd5\u540d\u79f0\u8981\u6ce8\u610f\u5b9a\u4e49\u5230alloc/new/copy/mutableCopy\u7ec4\u4e2d) \u65b9\u6cd5\u8fd4\u56de\u5185\u90e8\u4e0d\u6301\u6709\u7684\u5bf9\u8c61\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528autorelease\u5ef6\u8fdf\u91ca\u653e(\u65b9\u6cd5\u540d\u79f0\u4e5f\u8981\u6ce8\u610f\u4e0d\u8981\u5b9a\u4e49\u5230alloc/new/copy/mutableCopy\u7ec4\u4e2d) NSZone\u662f\u4e3a\u4e86\u89e3\u51b3\u5185\u5b58\u788e\u7247\u95ee\u9898\uff0c\u4e0d\u8fc7\u73b0\u5728\u65b0\u7684\u5185\u5b58\u7ba1\u7406\u53ea\u591f\u9ad8\u6548\u5df2\u7ecf\u4e0d\u9700\u8981NSZone\u4e86 malloc()\u5206\u914d\u6307\u5b9a\u5927\u5c0f\u7684\u5185\u5b58\u4e0d\u521d\u59cb, calloc()\u5206\u914d\u6307\u5b9a\u6570\u91cf\u6307\u5b9a\u5927\u5c0f\u7684\u5185\u5b58\u5e76\u521d\u59cb\u5316 \u4f7f\u7528LLDB\u6765\u8c03\u8bd5\u4e00\u4e0bARC\u7684\u6267\u884c\u8fc7\u7a0b\u5f53\u4f5c\u9006\u5411\u8bad\u7ec3 \u6240\u6709\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\u88ab\u653e\u5728\u4e00\u5f20\u4ee5\u5bf9\u8c61\u5185\u5b58\u5730\u5740\u4e3a\u952e\uff0c\u8ba1\u6570\u503c\u4e3a\u503c\u7684\u54c8\u5e0c\u8868\u4e2d\uff0c\u8fd9\u6709\u5229\u7528\u8c03\u8bd5 C\u8bed\u8a00\u7684\u81ea\u52a8\u53d8\u91cf\u662f\u90a3\u79cd\u79bb\u5f00\u4f5c\u7528\u57df\u5c31\u4f1a\u88ab\u91ca\u653e\u7684\u53d8\u66f4, NSAutorelasePool\u53d8\u91cf\u5c31\u50cf\u81ea\u52a8\u53d8\u91cf\u4e00\u6837 \u5728NSAutoreleasePool\u5bf9\u8c61\u4e0a\u8c03\u7528autorelease\u65b9\u6cd5\u4f1a\u5bfc\u81f4\u5e94\u7528\u7ec8\u6b62\uff0c\u56e0\u4e3aNSAutoreleasePoot\u91cd\u5199\u4e86\u81ea\u5df1\u7684autorelease\u65b9\u6cd5\uff0c\u5728\u91cc\u9762\u7ec8\u6b62\u4e86 ARC - \u81ea\u52a8\u5f15\u7528\u8ba1\u6570(-fobjc-arc) id \u548c void* \u7b49\u4ef7\uff0c\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u6307\u9488\u90fd\u5fc5\u987b\u6307\u5b9a\u4fee\u9970\u8bcd(__strong/__weak/__unsafe_unretained/__autoreleasing)\u4e2d\u4e00\u4e2a\uff0c\u9ed8\u8ba4\u4e3a __strong \u4f7f\u7528 __strong \u4f1a\u4ea7\u751f\u5faa\u73af\u5f15\u7528\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u6709\u4e86 __weak \u548c __unsafe_unretained __weak \u4fee\u9970\u7684\u6307\u9488\u5728\u5f15\u7528\u7684\u53d8\u91cf\u91ca\u653e\u540e\u4f1a\u81ea\u52a8\u7f6e\u4e3anil,\u5bf9\u5f15\u7528\u7684\u53d8\u91cf\u4e0d\u6301\u6709 __unsafe_unretained \u4fee\u9970\u7684\u53d8\u91cf\u662f\u4e0d\u5b89\u5168\u7684\uff0c\u76f8\u5173\u7684\u5185\u5b58\u7ba1\u7406\u4e0d\u53d7\u7f16\u8bd1\u5668\u652f\u6301\uff0c\u4e0d\u6301\u6709\u53d8\u91cf\uff0c\u5f15\u7528\u7684\u53d8\u91cf\u91ca\u653e\u540e\u4e0d\u4f1a\u81ea\u52a8\u7f6enil,\u6709\u53ef\u80fd\u4f1a\u9020\u6210\u6307\u9488\u60ac\u6302(\u6307\u5411\u66fe\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u800c\u91ce\u6307\u9488\u662f\u6307\u672a\u88ab\u521d\u59cb\u5316\u7684\u6307\u9488) __autoreleasing : \u5305\u542b\u5728 @autoreleaspeool{} \u5757\u4e2d\u7684\u53d8\u91cf \u4efb\u4f55\u7684\u5411 id \u548c \u5bf9\u8c61\u7c7b\u578b \u7684\u6307\u9488\u90fd\u88ab\u81ea\u52a8\u4fee\u9970\u4e3a __autoreleasing \u4f7f\u7528ARC\u7684\u89c4\u5219 \u4e0d\u4f7f\u7528 retain \u3001 release \u3001 retainCount \u3001 autorelease \u56e0\u4e3a\u8fd9\u4e9b\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5b8c\u6210 \u4e0d\u4f7f\u7528 NSAllocateObject \u3001 NSDeallocateObject \u9075\u5faa\u5bf9\u8c61\u521b\u5efa\u76f8\u5173\u7684\u65b9\u6cd5\u547d\u540d\u89c4\u5219:(alloc/new/copy/mutableCopy) \u4e0d\u4f7f\u7528 dealloc \u4f7f\u7528 @autoreleasepool \u800c\u4e0d\u662f NSAutoreleasePool \u4e0d\u4f7f\u7528 NSZone OC\u7684\u5bf9\u8c61\u7c7b\u578b\u53d8\u91cf\u4e0d\u80fd\u6210\u4e3aC\u8bed\u8a00\u7ed3\u6784\u4f53\u548c\u8054\u5408\u4f53\u4e2d\u7684\u6210\u5458 id \u548c void* \u76f8\u5173\u8f6c\u6362\u65f6\u5fc5\u987b\u663e\u793a\u8f6c\u6362\uff0c\u4f7f\u7528 __bridge \u3001 __bridge_retained \u3001 __bridge_transfer \u5c5e\u6027\u4fee\u9970 \u5c5e\u6027\u4fee\u9970 \u6240\u6709\u6743\u4fee\u9970 assign __unsafe_unretained copy __strong retain __strong strong __strong unsafe_unretained __unsafe_unretained weak __weak ARC\u5b9e\u73b0 __weak \u4fee\u9970\u7684\u53d8\u91cf\u4e0d\u8981\u8fc7\u591a\uff0c\u4f1a\u5f71\u54cd\u6027\u80fd\uff0c\u53ea\u5728\u9700\u8981\u89e3\u51b3\u5faa\u73af\u5f15\u7528\u7684\u65f6\u5019\u4f7f\u7528 Block(\u533f\u540d\u51fd\u6570/lambda/\u95ed\u5305) \u8bed\u6cd5 ^ return type (arguments list) { expressions } - \u53ef\u4ee5\u7701\u7565 return type \uff0c\u4f1a\u4ecereturn \u8bed\u53e5\u8fd4\u56de\u503c\u7c7b\u578b\u63a8\u65ad - \u65e0\u53c2\u6570\u65f6\uff0c\u53c2\u6570\u5217\u8868\u4e5f\u53ef\u4ee5\u7701\u7565 block\u53d8\u91cf\u58f0\u660e return type (^var) (arguments list) \u5b9a\u4e49\u793a\u4f8b\uff1a typedef int (^blk_t)(int) \u5757\u5185\u62f7\u8d1d\u5916\u90e8\u81ea\u52a8\u53d8\u91cf\uff0c\u53eb\u4f5c\u53d8\u91cf\u6355\u83b7(\u53ea\u8bfb) \u4ee5 __block \u4fee\u9970\u7684\u5916\u90e8\u81ea\u52a8\u53d8\u91cf\u5728\u5757\u5185\u53ef\u4ee5\u88ab\u4fee\u6539 c\u6570\u7ec4\u4e0d\u80fd\u88ab\u5757\u6355\u83b7\uff0c\u9700\u8981\u4f7f\u7528\u6307\u9488 block\u7684\u5b9e\u73b0 clang\u4f7f\u7528 -rewrite-objc \u7f16\u8bd1\u9009\u9879\u53ef\u4ee5\u5c06\u5305\u542b\u5757\u8bed\u6cd5\u7684\u4ee3\u7801\u8f6c\u6362\u6210\u6807\u51c6C++\u6e90\u4ee3\u7801 \u5185\u5728\u6bb5\u5e03\u5c40\uff1a\u4e00\u4e2a\u5e94\u7528\u5bf9\u5e94\u7684\u5185\u5b58\u5e03\u5c40\u662f .text \u533a \u7528\u6765\u5b58\u653e\u4ee3\u7801\uff0c .data \u533a\u7528\u6765\u5b58\u653e\u548c\u4ee3\u7801\u76f8\u5173\u7684\u6570\u636e\uff0c heap \u533a\u52a8\u6001\u4f7f\u7528\u5185\u5b58\u7a7a\u95f4\uff0c stack \u533a\uff0c\u4ece\u4f4e\u5730\u5740\u5230\u9ad8\u5730\u5740 \u5728\u6570\u636e\u533a\u7684block(\u5168\u5c40\u5b9a\u4e49\u7684block)\uff0c \u5728\u6808\u4e2d\u7684block\u548c\u5728\u5806\u4e2d\u7684block*(\u51fd\u6570\u8fd4\u56de\u7684\u5757\u4f1a\u88ab\u62f7\u5230\u5806\u4e0a) block\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u65f6\uff0c\u5728\u4f20\u9012\u65f6\u4f1a\u88ab\u62f7\u8d1d block\u4f1a\u9020\u6210\u5faa\u73af\u5f15\u7528\u95ee\u9898\uff1a\u89e3\u51b3\u65b9\u5f0f\u6709\u4e24\u79cd\uff1a\u4f7f\u7528 __block \u6765\u53d1\u751f\u5faa\u73af\u5f15\u7528\u540e\u624b\u52a8\u89e3\u9664\u6216\u4f7f\u7528 __weak \u9884\u9632 GCD performSelectorInBackground:withObject performSelectorOnMainThread \u5e38\u89c1\u7528\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 dispatch_async(queue_for_background_threads, ^{ //background task dispatch_async(dispatch_get_main_queue(), ^{ //use the task result on main thread }) }) \u4e00\u4e2a\u7ebf\u7a0b\u5c31\u662fCPU\u7684\u4e00\u4e2a\u6267\u884c\u8def\u5f84\uff0c\u591a\u7ebf\u7a0b\u7f16\u7a0b\u4e2d\u6613\u9047\u5230\u7684\u95ee\u9898\u662f\uff1a\u7adf\u4e89\u548c\u6b7b\u9501 \u591a\u7ebf\u7a0b\u7f16\u7a0b\u662f\u4e3a\u4e86\u5e94\u7528\u53ef\u4ee5\u9ad8\u54cd\u5e94 GCD APIs \u4e24\u79cd\u5206\u53d1\u961f\u5217\uff1a \u4e32\u884c\u961f\u5217\u548c\u5e76\u53d1\u961f\u5217\u3002\u961f\u5217\u91cc\u9762\u53ea\u662f\u5b58\u653e\u6267\u884c\u4efb\u52a1\uff0c\u7136\u540e\u5206\u53d1\u7ed9\u5bf9\u5e94\u7684\u7ebf\u7a0b\u3002 \u83b7\u53d6\u5206\u53d1\u961f\u5217 \u4e32\u884c\u961f\u5217\uff1a\u591a\u4e2a\u4e32\u884c\u961f\u5217\u4e5f\u53ef\u4ee5\u5e76\u53d1\u8fd0\u884c\uff0c\u7cfb\u7edf\u4e3a\u7b2c\u4e00\u4e2a\u4e32\u884c\u961f\u5217\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u4e0e\u4e4b\u5bf9\u5e94\u3002 \u4e32\u884c\u5bf9\u5217\u53ef\u7528\u6765\u89e3\u51b3\u591a\u7ebf\u7a0b\b\u7f16\u7a0b\u4e2d\u7684\u7adf\u4e89\u95ee\u9898\uff0c\u4f46\u4e00\u4e2a\u4e32\u884c\u961f\u5217\u5bf9\u5e94\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u6240\u4ee5\u4e0d\u8981\u521b\u5efa\u8fc7\u591a\u7684\u4e32\u884c\u961f\u5217\u3002 1 2 3 dispatch_queue_t serialDispatchQueue = dispatch_queue_create( com.joker.serialQueue , NULL); //\u4e2d\u95f4\u6b65\u9aa4 dispatch_release(serialDispatchQueue); \u5e76\u53d1\u961f\u5217 1 2 3 dispatch_queue_t concurrentDispatchQueue = dispatch_queue_create( com.joker.concurrentQueue , DISPATCH_QUEUE_CONCURRENT); //\u4e2d\u95f4\u4f7f\u7528 dispatch_release(concurrentDispatchQueue); \u4e00\u822c\u4e0d\u8981\u5355\u72ec\u521b\u5efa\u5e76\u53d1\u961f\u5217\uff0c\u4f7f\u7528\u7cfb\u7edf\u7684\u5168\u5c40\u961f\u5217\u5c31\u597d\uff0c\u5168\u5c40\u961f\u5217\u6709\u56db\u4e2a\u4f18\u5148\u7ea7: \u9ad8\u3001\u9ed8\u8ba4\u3001\u4f4e\u548c\u540e\u53f0 1 2 3 4 5 dispatch_queue_t mainDispatchQueue = dispatch_get_main_queue(); dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_HIGH, 0); dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0); dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_LOW, 0); dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_BACKGROUND, 0); \u8bbe\u7f6e\u5bf9\u5217\u4f18\u5148\u7ea7 \u4f18\u5148\u7ea7\u8bbe\u7f6e\u4e3a\u4e0e\u76ee\u6807\u961f\u5217\u4e00\u81f4\uff0c\u6e90\u961f\u5217\u4e0d\u80fd\u662f\u7cfb\u7edf\u961f\u5217\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u961f\u5217\u5c42\u7ea7 1 2 3 dispatch_queue_t mySerialDispatchQueue = dispatch_queue_create( com.example.gcd.MySerialDispatchQueue , NULL); dispatch_queue_t globalDispatchQueueBackground = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_BACKGROUND, 0); dispatch_set_target_queue(mySerialDispatchQueue, globalDispatchQueueBackground); dispatch_after \u5ef6\u65f6\u5206\u53d1\u4efb\u52a1 1 2 3 dispatch_time_t time = dispatch_time ( DISPATCH_TIME_NOW , 3ull * NSEC_PER_SEC ); dispatch_after ( time , dispatch_get_main_queue (), ^ { NSLog ( @ waited at least three seconds. ); }); dispatch_time\u7528\u6765\u521b\u5efa\u76f8\u5bf9\u65f6\u95f4 dispatch_walltime\u7528\u6765\u521b\u5efa\u7edd\u5bf9\u65f6\u95f4 dispatch_group \u521b\u5efa\u961f\u5217\u7ec4\u4e3a\u5355\u4f4d\u7684\u4efb\u52a1 1 2 3 4 5 6 7 dispatch_queue_t queue = dispatch_get_global_queue ( DISPATCH_QUEUE_PRIORITY_DEFAULT , 0 ); dispatch_group_t group = dispatch_group_create (); dispatch_group_async ( group , queue , ^ { NSLog ( @ blk0 );}); dispatch_group_async ( group , queue , ^ { NSLog ( @ blk1 );}); dispatch_group_async ( group , queue , ^ { NSLog ( @ blk2 );}); dispatch_group_notify ( group , dispatch_get_main_queue (), ^ { NSLog ( @ done );}); dispatch_release ( group ); dispatch_group_wait 1 2 3 4 5 6 dispatch_queue_t queue = dispatch_get_global_queue ( DISPATCH_QUEUE_PRIORITY_DEFAULT , 0 ); dispatch_group_t group = dispatch_group_create (); dispatch_group_async ( group , queue , ^ { NSLog ( @ blk0 );}); dispatch_group_async ( group , queue , ^ { NSLog ( @ blk1 );}); dispatch_group_async ( group , queue , ^ { NSLog ( @ blk2 );}); dispatch_group_wait ( group , DISPATCH_TIME_FOREVER ); dispatch_release ( group ); dispatch_barrier_async 1 2 3 4 5 6 7 8 9 10 dispatch_queue_t queue = dispatch_queue_create( com.example.gcd.ForBarrier , DISPATCH_QUEUE_CONCURRENT); dispatch_async(queue, blk0_for_reading); dispatch_async(queue, blk1_for_reading); dispatch_async(queue, blk2_for_reading); dispatch_async(queue, blk3_for_reading); dispatch_barrier_async(queue, blk_for_writing); dispatch_async(queue, blk4_for_reading); dispatch_async(queue, blk5_for_reading); dispatch_async(queue, blk6_for_reading); dispatch_async(queue, blk7_for_reading); dispatch_release(queue); dispatch_sync \u540c\u6b65\u5206\u53d1\uff0c\u76f4\u5230\u5206\u53d1\u7684\u4efb\u52a1\u5b8c\u6210\u4ee5\u540e\u624d\u7ee7\u7eed dispatch_apply 1 2 3 4 5 dispatch_queue_t queue = dispatch_get_global_queue ( DISPATCH_QUEUE_PRIORITY_DEFAULT , 0 ); dispatch_apply ( 10 , queue , ^ ( size_t index ) { NSLog ( @ %zu , index ); }); NSLog ( @ done ); dispatch_suspend/dispatch_resume 1 2 dispatch_suspend(queue); dispatch_resume(queue); \u4e0d\u4f1a\u5f71\u54cd\u5df2\u7ecf\u5f00\u59cb\u7684\u4efb\u52a1\uff0c\u53ea\u662f\u5bf9\u672a\u5f00\u59cb\u7684\u4efb\u52a1\u6709\u6548 dispatch semaphore 1 2 3 4 dispatch_semaphore_t semaphore = dispatch_semaphore_create(1); dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER); // operations dispatch_semaphore_signal(semaphore); dispatch_once 1 2 3 4 static dispatch_once_t pred; dispatch_once( pred, ^{ /* * Initializing */ }); \u9002\u7528\u4e8e\u5355\u4f8b dispatchIO 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 pipe_q = dispatch_queue_create( PipeQ , NULL); pipe_channel = dispatch_io_create(DISPATCH_IO_STREAM, fd, pipe_q, ^(int err){ close(fd); }); *out_fd = fdpair[1]; dispatch_io_set_low_water(pipe_channel, SIZE_MAX); dispatch_io_read(pipe_channel, 0, SIZE_MAX, pipe_q, ^(bool done, dispatch_data_t pipedata, int err){ if (err == 0) { size_t len = dispatch_data_get_size(pipedata); if (len 0) { const char *bytes = NULL; char *encoded; dispatch_data_t md = dispatch_data_create_map(pipedata, (const void **) bytes, len); encoded = asl_core_encode_buffer(bytes, len); asl_set((aslmsg)merged_msg, ASL_KEY_AUX_DATA, encoded); free(encoded); _asl_send_message(NULL, merged_msg, -1, NULL); asl_msg_release(merged_msg); dispatch_release(md); } } if (done) { dispatch_semaphore_signal(sem); dispatch_release(pipe_channel); dispatch_release(pipe_q); } }); GCD \u5b9e\u73b0 \u5728\u5e94\u7528\u5c42\u4f7f\u7528 GCD \u548c NSOperationQueue \u6bd4\u4f7f\u7528 pthreads \u548c NSThread \u66f4\u9ad8\u6548\u3002 GCD\u7531 libdispatch \u3001 Libc(pthreads) \u548c XNU kernel \u652f\u6491 dispatch_source \u53ef\u4ee5\u5728\u5e94\u7528\u5c42\u5904\u7406\u5185\u6838\u4e8b\u4ef6\uff0c\u8d44\u6e90\u6d88\u8017\u5f88\u5c0f","title":"OC\u76f8\u5173"},{"location":"iOS/objc/#mrc-foundation-framework-nsobject","text":"\u521b\u5efa\u5e76\u6301\u6709(alloc/new/copy/mutableCopy)\uff081\uff09 \u6301\u6709(retain)\uff08+1\uff09 \u653e\u5f03\u6301\u6709(release)\uff08-1\uff09 \u5904\u7406(dealloc)(0) \u65b9\u6cd5\u8fd4\u56de\u5185\u90e8\u6301\u6709\u7684\u5bf9\u8c61\u65f6\uff0c\u4f1a\u628a\u6240\u6709\u6743\u4f20\u9012\u7ed9\u8c03\u7528\u8005(\u8fd9\u7c7b\u65b9\u6cd5\u540d\u79f0\u8981\u6ce8\u610f\u5b9a\u4e49\u5230alloc/new/copy/mutableCopy\u7ec4\u4e2d) \u65b9\u6cd5\u8fd4\u56de\u5185\u90e8\u4e0d\u6301\u6709\u7684\u5bf9\u8c61\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528autorelease\u5ef6\u8fdf\u91ca\u653e(\u65b9\u6cd5\u540d\u79f0\u4e5f\u8981\u6ce8\u610f\u4e0d\u8981\u5b9a\u4e49\u5230alloc/new/copy/mutableCopy\u7ec4\u4e2d) NSZone\u662f\u4e3a\u4e86\u89e3\u51b3\u5185\u5b58\u788e\u7247\u95ee\u9898\uff0c\u4e0d\u8fc7\u73b0\u5728\u65b0\u7684\u5185\u5b58\u7ba1\u7406\u53ea\u591f\u9ad8\u6548\u5df2\u7ecf\u4e0d\u9700\u8981NSZone\u4e86 malloc()\u5206\u914d\u6307\u5b9a\u5927\u5c0f\u7684\u5185\u5b58\u4e0d\u521d\u59cb, calloc()\u5206\u914d\u6307\u5b9a\u6570\u91cf\u6307\u5b9a\u5927\u5c0f\u7684\u5185\u5b58\u5e76\u521d\u59cb\u5316 \u4f7f\u7528LLDB\u6765\u8c03\u8bd5\u4e00\u4e0bARC\u7684\u6267\u884c\u8fc7\u7a0b\u5f53\u4f5c\u9006\u5411\u8bad\u7ec3 \u6240\u6709\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\u88ab\u653e\u5728\u4e00\u5f20\u4ee5\u5bf9\u8c61\u5185\u5b58\u5730\u5740\u4e3a\u952e\uff0c\u8ba1\u6570\u503c\u4e3a\u503c\u7684\u54c8\u5e0c\u8868\u4e2d\uff0c\u8fd9\u6709\u5229\u7528\u8c03\u8bd5 C\u8bed\u8a00\u7684\u81ea\u52a8\u53d8\u91cf\u662f\u90a3\u79cd\u79bb\u5f00\u4f5c\u7528\u57df\u5c31\u4f1a\u88ab\u91ca\u653e\u7684\u53d8\u66f4, NSAutorelasePool\u53d8\u91cf\u5c31\u50cf\u81ea\u52a8\u53d8\u91cf\u4e00\u6837 \u5728NSAutoreleasePool\u5bf9\u8c61\u4e0a\u8c03\u7528autorelease\u65b9\u6cd5\u4f1a\u5bfc\u81f4\u5e94\u7528\u7ec8\u6b62\uff0c\u56e0\u4e3aNSAutoreleasePoot\u91cd\u5199\u4e86\u81ea\u5df1\u7684autorelease\u65b9\u6cd5\uff0c\u5728\u91cc\u9762\u7ec8\u6b62\u4e86","title":"MRC - \u624b\u52a8\u5f15\u7528\u8ba1\u6570(\u5c5e\u4e8eFoundation Framework NSObject)"},{"location":"iOS/objc/#arc-fobjc-arc","text":"id \u548c void* \u7b49\u4ef7\uff0c\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u6307\u9488\u90fd\u5fc5\u987b\u6307\u5b9a\u4fee\u9970\u8bcd(__strong/__weak/__unsafe_unretained/__autoreleasing)\u4e2d\u4e00\u4e2a\uff0c\u9ed8\u8ba4\u4e3a __strong \u4f7f\u7528 __strong \u4f1a\u4ea7\u751f\u5faa\u73af\u5f15\u7528\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u6709\u4e86 __weak \u548c __unsafe_unretained __weak \u4fee\u9970\u7684\u6307\u9488\u5728\u5f15\u7528\u7684\u53d8\u91cf\u91ca\u653e\u540e\u4f1a\u81ea\u52a8\u7f6e\u4e3anil,\u5bf9\u5f15\u7528\u7684\u53d8\u91cf\u4e0d\u6301\u6709 __unsafe_unretained \u4fee\u9970\u7684\u53d8\u91cf\u662f\u4e0d\u5b89\u5168\u7684\uff0c\u76f8\u5173\u7684\u5185\u5b58\u7ba1\u7406\u4e0d\u53d7\u7f16\u8bd1\u5668\u652f\u6301\uff0c\u4e0d\u6301\u6709\u53d8\u91cf\uff0c\u5f15\u7528\u7684\u53d8\u91cf\u91ca\u653e\u540e\u4e0d\u4f1a\u81ea\u52a8\u7f6enil,\u6709\u53ef\u80fd\u4f1a\u9020\u6210\u6307\u9488\u60ac\u6302(\u6307\u5411\u66fe\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u800c\u91ce\u6307\u9488\u662f\u6307\u672a\u88ab\u521d\u59cb\u5316\u7684\u6307\u9488) __autoreleasing : \u5305\u542b\u5728 @autoreleaspeool{} \u5757\u4e2d\u7684\u53d8\u91cf \u4efb\u4f55\u7684\u5411 id \u548c \u5bf9\u8c61\u7c7b\u578b \u7684\u6307\u9488\u90fd\u88ab\u81ea\u52a8\u4fee\u9970\u4e3a __autoreleasing","title":"ARC - \u81ea\u52a8\u5f15\u7528\u8ba1\u6570(-fobjc-arc)"},{"location":"iOS/objc/#arc","text":"\u4e0d\u4f7f\u7528 retain \u3001 release \u3001 retainCount \u3001 autorelease \u56e0\u4e3a\u8fd9\u4e9b\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5b8c\u6210 \u4e0d\u4f7f\u7528 NSAllocateObject \u3001 NSDeallocateObject \u9075\u5faa\u5bf9\u8c61\u521b\u5efa\u76f8\u5173\u7684\u65b9\u6cd5\u547d\u540d\u89c4\u5219:(alloc/new/copy/mutableCopy) \u4e0d\u4f7f\u7528 dealloc \u4f7f\u7528 @autoreleasepool \u800c\u4e0d\u662f NSAutoreleasePool \u4e0d\u4f7f\u7528 NSZone OC\u7684\u5bf9\u8c61\u7c7b\u578b\u53d8\u91cf\u4e0d\u80fd\u6210\u4e3aC\u8bed\u8a00\u7ed3\u6784\u4f53\u548c\u8054\u5408\u4f53\u4e2d\u7684\u6210\u5458 id \u548c void* \u76f8\u5173\u8f6c\u6362\u65f6\u5fc5\u987b\u663e\u793a\u8f6c\u6362\uff0c\u4f7f\u7528 __bridge \u3001 __bridge_retained \u3001 __bridge_transfer","title":"\u4f7f\u7528ARC\u7684\u89c4\u5219"},{"location":"iOS/objc/#_1","text":"\u5c5e\u6027\u4fee\u9970 \u6240\u6709\u6743\u4fee\u9970 assign __unsafe_unretained copy __strong retain __strong strong __strong unsafe_unretained __unsafe_unretained weak __weak","title":"\u5c5e\u6027\u4fee\u9970"},{"location":"iOS/objc/#arc_1","text":"__weak \u4fee\u9970\u7684\u53d8\u91cf\u4e0d\u8981\u8fc7\u591a\uff0c\u4f1a\u5f71\u54cd\u6027\u80fd\uff0c\u53ea\u5728\u9700\u8981\u89e3\u51b3\u5faa\u73af\u5f15\u7528\u7684\u65f6\u5019\u4f7f\u7528","title":"ARC\u5b9e\u73b0"},{"location":"iOS/objc/#blocklambda","text":"","title":"Block(\u533f\u540d\u51fd\u6570/lambda/\u95ed\u5305)"},{"location":"iOS/objc/#_2","text":"^ return type (arguments list) { expressions } - \u53ef\u4ee5\u7701\u7565 return type \uff0c\u4f1a\u4ecereturn \u8bed\u53e5\u8fd4\u56de\u503c\u7c7b\u578b\u63a8\u65ad - \u65e0\u53c2\u6570\u65f6\uff0c\u53c2\u6570\u5217\u8868\u4e5f\u53ef\u4ee5\u7701\u7565","title":"\u8bed\u6cd5"},{"location":"iOS/objc/#block","text":"return type (^var) (arguments list) \u5b9a\u4e49\u793a\u4f8b\uff1a typedef int (^blk_t)(int) \u5757\u5185\u62f7\u8d1d\u5916\u90e8\u81ea\u52a8\u53d8\u91cf\uff0c\u53eb\u4f5c\u53d8\u91cf\u6355\u83b7(\u53ea\u8bfb) \u4ee5 __block \u4fee\u9970\u7684\u5916\u90e8\u81ea\u52a8\u53d8\u91cf\u5728\u5757\u5185\u53ef\u4ee5\u88ab\u4fee\u6539 c\u6570\u7ec4\u4e0d\u80fd\u88ab\u5757\u6355\u83b7\uff0c\u9700\u8981\u4f7f\u7528\u6307\u9488","title":"block\u53d8\u91cf\u58f0\u660e"},{"location":"iOS/objc/#block_1","text":"clang\u4f7f\u7528 -rewrite-objc \u7f16\u8bd1\u9009\u9879\u53ef\u4ee5\u5c06\u5305\u542b\u5757\u8bed\u6cd5\u7684\u4ee3\u7801\u8f6c\u6362\u6210\u6807\u51c6C++\u6e90\u4ee3\u7801 \u5185\u5728\u6bb5\u5e03\u5c40\uff1a\u4e00\u4e2a\u5e94\u7528\u5bf9\u5e94\u7684\u5185\u5b58\u5e03\u5c40\u662f .text \u533a \u7528\u6765\u5b58\u653e\u4ee3\u7801\uff0c .data \u533a\u7528\u6765\u5b58\u653e\u548c\u4ee3\u7801\u76f8\u5173\u7684\u6570\u636e\uff0c heap \u533a\u52a8\u6001\u4f7f\u7528\u5185\u5b58\u7a7a\u95f4\uff0c stack \u533a\uff0c\u4ece\u4f4e\u5730\u5740\u5230\u9ad8\u5730\u5740 \u5728\u6570\u636e\u533a\u7684block(\u5168\u5c40\u5b9a\u4e49\u7684block)\uff0c \u5728\u6808\u4e2d\u7684block\u548c\u5728\u5806\u4e2d\u7684block*(\u51fd\u6570\u8fd4\u56de\u7684\u5757\u4f1a\u88ab\u62f7\u5230\u5806\u4e0a) block\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u65f6\uff0c\u5728\u4f20\u9012\u65f6\u4f1a\u88ab\u62f7\u8d1d block\u4f1a\u9020\u6210\u5faa\u73af\u5f15\u7528\u95ee\u9898\uff1a\u89e3\u51b3\u65b9\u5f0f\u6709\u4e24\u79cd\uff1a\u4f7f\u7528 __block \u6765\u53d1\u751f\u5faa\u73af\u5f15\u7528\u540e\u624b\u52a8\u89e3\u9664\u6216\u4f7f\u7528 __weak \u9884\u9632","title":"block\u7684\u5b9e\u73b0"},{"location":"iOS/objc/#gcd","text":"performSelectorInBackground:withObject performSelectorOnMainThread","title":"GCD"},{"location":"iOS/objc/#_3","text":"1 2 3 4 5 6 7 8 9 dispatch_async(queue_for_background_threads, ^{ //background task dispatch_async(dispatch_get_main_queue(), ^{ //use the task result on main thread }) }) \u4e00\u4e2a\u7ebf\u7a0b\u5c31\u662fCPU\u7684\u4e00\u4e2a\u6267\u884c\u8def\u5f84\uff0c\u591a\u7ebf\u7a0b\u7f16\u7a0b\u4e2d\u6613\u9047\u5230\u7684\u95ee\u9898\u662f\uff1a\u7adf\u4e89\u548c\u6b7b\u9501 \u591a\u7ebf\u7a0b\u7f16\u7a0b\u662f\u4e3a\u4e86\u5e94\u7528\u53ef\u4ee5\u9ad8\u54cd\u5e94","title":"\u5e38\u89c1\u7528\u6cd5\uff1a"},{"location":"iOS/objc/#gcd-apis","text":"\u4e24\u79cd\u5206\u53d1\u961f\u5217\uff1a \u4e32\u884c\u961f\u5217\u548c\u5e76\u53d1\u961f\u5217\u3002\u961f\u5217\u91cc\u9762\u53ea\u662f\u5b58\u653e\u6267\u884c\u4efb\u52a1\uff0c\u7136\u540e\u5206\u53d1\u7ed9\u5bf9\u5e94\u7684\u7ebf\u7a0b\u3002","title":"GCD APIs"},{"location":"iOS/objc/#_4","text":"","title":"\u83b7\u53d6\u5206\u53d1\u961f\u5217"},{"location":"iOS/objc/#_5","text":"\u4e32\u884c\u5bf9\u5217\u53ef\u7528\u6765\u89e3\u51b3\u591a\u7ebf\u7a0b\b\u7f16\u7a0b\u4e2d\u7684\u7adf\u4e89\u95ee\u9898\uff0c\u4f46\u4e00\u4e2a\u4e32\u884c\u961f\u5217\u5bf9\u5e94\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u6240\u4ee5\u4e0d\u8981\u521b\u5efa\u8fc7\u591a\u7684\u4e32\u884c\u961f\u5217\u3002 1 2 3 dispatch_queue_t serialDispatchQueue = dispatch_queue_create( com.joker.serialQueue , NULL); //\u4e2d\u95f4\u6b65\u9aa4 dispatch_release(serialDispatchQueue);","title":"\u4e32\u884c\u961f\u5217\uff1a\u591a\u4e2a\u4e32\u884c\u961f\u5217\u4e5f\u53ef\u4ee5\u5e76\u53d1\u8fd0\u884c\uff0c\u7cfb\u7edf\u4e3a\u7b2c\u4e00\u4e2a\u4e32\u884c\u961f\u5217\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u4e0e\u4e4b\u5bf9\u5e94\u3002"},{"location":"iOS/objc/#_6","text":"1 2 3 dispatch_queue_t concurrentDispatchQueue = dispatch_queue_create( com.joker.concurrentQueue , DISPATCH_QUEUE_CONCURRENT); //\u4e2d\u95f4\u4f7f\u7528 dispatch_release(concurrentDispatchQueue); \u4e00\u822c\u4e0d\u8981\u5355\u72ec\u521b\u5efa\u5e76\u53d1\u961f\u5217\uff0c\u4f7f\u7528\u7cfb\u7edf\u7684\u5168\u5c40\u961f\u5217\u5c31\u597d\uff0c\u5168\u5c40\u961f\u5217\u6709\u56db\u4e2a\u4f18\u5148\u7ea7: \u9ad8\u3001\u9ed8\u8ba4\u3001\u4f4e\u548c\u540e\u53f0 1 2 3 4 5 dispatch_queue_t mainDispatchQueue = dispatch_get_main_queue(); dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_HIGH, 0); dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0); dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_LOW, 0); dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_BACKGROUND, 0);","title":"\u5e76\u53d1\u961f\u5217"},{"location":"iOS/objc/#_7","text":"\u4f18\u5148\u7ea7\u8bbe\u7f6e\u4e3a\u4e0e\u76ee\u6807\u961f\u5217\u4e00\u81f4\uff0c\u6e90\u961f\u5217\u4e0d\u80fd\u662f\u7cfb\u7edf\u961f\u5217\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u961f\u5217\u5c42\u7ea7 1 2 3 dispatch_queue_t mySerialDispatchQueue = dispatch_queue_create( com.example.gcd.MySerialDispatchQueue , NULL); dispatch_queue_t globalDispatchQueueBackground = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_BACKGROUND, 0); dispatch_set_target_queue(mySerialDispatchQueue, globalDispatchQueueBackground);","title":"\u8bbe\u7f6e\u5bf9\u5217\u4f18\u5148\u7ea7"},{"location":"iOS/objc/#dispatch_after","text":"1 2 3 dispatch_time_t time = dispatch_time ( DISPATCH_TIME_NOW , 3ull * NSEC_PER_SEC ); dispatch_after ( time , dispatch_get_main_queue (), ^ { NSLog ( @ waited at least three seconds. ); }); dispatch_time\u7528\u6765\u521b\u5efa\u76f8\u5bf9\u65f6\u95f4 dispatch_walltime\u7528\u6765\u521b\u5efa\u7edd\u5bf9\u65f6\u95f4","title":"dispatch_after \u5ef6\u65f6\u5206\u53d1\u4efb\u52a1"},{"location":"iOS/objc/#dispatch_group","text":"1 2 3 4 5 6 7 dispatch_queue_t queue = dispatch_get_global_queue ( DISPATCH_QUEUE_PRIORITY_DEFAULT , 0 ); dispatch_group_t group = dispatch_group_create (); dispatch_group_async ( group , queue , ^ { NSLog ( @ blk0 );}); dispatch_group_async ( group , queue , ^ { NSLog ( @ blk1 );}); dispatch_group_async ( group , queue , ^ { NSLog ( @ blk2 );}); dispatch_group_notify ( group , dispatch_get_main_queue (), ^ { NSLog ( @ done );}); dispatch_release ( group );","title":"dispatch_group \u521b\u5efa\u961f\u5217\u7ec4\u4e3a\u5355\u4f4d\u7684\u4efb\u52a1"},{"location":"iOS/objc/#dispatch_group_wait","text":"1 2 3 4 5 6 dispatch_queue_t queue = dispatch_get_global_queue ( DISPATCH_QUEUE_PRIORITY_DEFAULT , 0 ); dispatch_group_t group = dispatch_group_create (); dispatch_group_async ( group , queue , ^ { NSLog ( @ blk0 );}); dispatch_group_async ( group , queue , ^ { NSLog ( @ blk1 );}); dispatch_group_async ( group , queue , ^ { NSLog ( @ blk2 );}); dispatch_group_wait ( group , DISPATCH_TIME_FOREVER ); dispatch_release ( group );","title":"dispatch_group_wait"},{"location":"iOS/objc/#dispatch_barrier_async","text":"1 2 3 4 5 6 7 8 9 10 dispatch_queue_t queue = dispatch_queue_create( com.example.gcd.ForBarrier , DISPATCH_QUEUE_CONCURRENT); dispatch_async(queue, blk0_for_reading); dispatch_async(queue, blk1_for_reading); dispatch_async(queue, blk2_for_reading); dispatch_async(queue, blk3_for_reading); dispatch_barrier_async(queue, blk_for_writing); dispatch_async(queue, blk4_for_reading); dispatch_async(queue, blk5_for_reading); dispatch_async(queue, blk6_for_reading); dispatch_async(queue, blk7_for_reading); dispatch_release(queue);","title":"dispatch_barrier_async"},{"location":"iOS/objc/#dispatch_sync","text":"\u540c\u6b65\u5206\u53d1\uff0c\u76f4\u5230\u5206\u53d1\u7684\u4efb\u52a1\u5b8c\u6210\u4ee5\u540e\u624d\u7ee7\u7eed","title":"dispatch_sync"},{"location":"iOS/objc/#dispatch_apply","text":"1 2 3 4 5 dispatch_queue_t queue = dispatch_get_global_queue ( DISPATCH_QUEUE_PRIORITY_DEFAULT , 0 ); dispatch_apply ( 10 , queue , ^ ( size_t index ) { NSLog ( @ %zu , index ); }); NSLog ( @ done );","title":"dispatch_apply"},{"location":"iOS/objc/#dispatch_suspenddispatch_resume","text":"1 2 dispatch_suspend(queue); dispatch_resume(queue); \u4e0d\u4f1a\u5f71\u54cd\u5df2\u7ecf\u5f00\u59cb\u7684\u4efb\u52a1\uff0c\u53ea\u662f\u5bf9\u672a\u5f00\u59cb\u7684\u4efb\u52a1\u6709\u6548","title":"dispatch_suspend/dispatch_resume"},{"location":"iOS/objc/#dispatch-semaphore","text":"1 2 3 4 dispatch_semaphore_t semaphore = dispatch_semaphore_create(1); dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER); // operations dispatch_semaphore_signal(semaphore);","title":"dispatch semaphore"},{"location":"iOS/objc/#dispatch_once","text":"1 2 3 4 static dispatch_once_t pred; dispatch_once( pred, ^{ /* * Initializing */ }); \u9002\u7528\u4e8e\u5355\u4f8b","title":"dispatch_once"},{"location":"iOS/objc/#dispatchio","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 pipe_q = dispatch_queue_create( PipeQ , NULL); pipe_channel = dispatch_io_create(DISPATCH_IO_STREAM, fd, pipe_q, ^(int err){ close(fd); }); *out_fd = fdpair[1]; dispatch_io_set_low_water(pipe_channel, SIZE_MAX); dispatch_io_read(pipe_channel, 0, SIZE_MAX, pipe_q, ^(bool done, dispatch_data_t pipedata, int err){ if (err == 0) { size_t len = dispatch_data_get_size(pipedata); if (len 0) { const char *bytes = NULL; char *encoded; dispatch_data_t md = dispatch_data_create_map(pipedata, (const void **) bytes, len); encoded = asl_core_encode_buffer(bytes, len); asl_set((aslmsg)merged_msg, ASL_KEY_AUX_DATA, encoded); free(encoded); _asl_send_message(NULL, merged_msg, -1, NULL); asl_msg_release(merged_msg); dispatch_release(md); } } if (done) { dispatch_semaphore_signal(sem); dispatch_release(pipe_channel); dispatch_release(pipe_q); } });","title":"dispatchIO"},{"location":"iOS/objc/#gcd_1","text":"\u5728\u5e94\u7528\u5c42\u4f7f\u7528 GCD \u548c NSOperationQueue \u6bd4\u4f7f\u7528 pthreads \u548c NSThread \u66f4\u9ad8\u6548\u3002 GCD\u7531 libdispatch \u3001 Libc(pthreads) \u548c XNU kernel \u652f\u6491","title":"GCD \u5b9e\u73b0"},{"location":"iOS/objc/#dispatch_source","text":"\u53ef\u4ee5\u5728\u5e94\u7528\u5c42\u5904\u7406\u5185\u6838\u4e8b\u4ef6\uff0c\u8d44\u6e90\u6d88\u8017\u5f88\u5c0f","title":"dispatch_source"},{"location":"iOS/optimization/","text":"\u4f7f\u7528 Instruments TableView\u6eda\u52a8 \u672c\u5730\u6570\u636e\u7f13\u5b58 \u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5 \u591a\u7ebf\u7a0b ARC \u4f7f\u7528C++ \u79fb\u52a8\u591a\u5e73\u53f0\u6027\u80fd\u95ee\u9898\u603b\u7ed3 jpeg\u540e\u53f0\u89e3\u538b\u7f29 \u56fe\u7247\u7684\u5927\u5c0f\u5904\u7406\u4e3a\u548c\u663e\u793a\u65f6\u7684\u5927\u5c0f\u4e00\u81f4\uff0c\u907f\u514d\u7f29\u653e \u5f00\u542f\u4e86masksToBounds\u548ccornerRadius\uff0c\u4f1a\u5bfc\u81f4\u79bb\u5c4f\u6e32\u67d3 \u89c6\u56fe\u5c42\u7ea7\u590d\u6742\u65f6\uff0c\u5982\u679c\u4e0d\u9700\u8981\u7528\u6237\u4ea4\u4e92\uff0c\u53ef\u4ee5\u6362\u6210\u76f4\u63a5\u7ed8\u5236","title":"\u5e94\u7528\u4f18\u5316"},{"location":"iOS/optimization/#instruments","text":"","title":"\u4f7f\u7528Instruments"},{"location":"iOS/optimization/#tableview","text":"","title":"TableView\u6eda\u52a8"},{"location":"iOS/optimization/#_1","text":"","title":"\u672c\u5730\u6570\u636e\u7f13\u5b58"},{"location":"iOS/optimization/#_2","text":"","title":"\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5"},{"location":"iOS/optimization/#_3","text":"","title":"\u591a\u7ebf\u7a0b"},{"location":"iOS/optimization/#arc","text":"","title":"ARC"},{"location":"iOS/optimization/#c","text":"","title":"\u4f7f\u7528C++"},{"location":"iOS/optimization/#_4","text":"jpeg\u540e\u53f0\u89e3\u538b\u7f29 \u56fe\u7247\u7684\u5927\u5c0f\u5904\u7406\u4e3a\u548c\u663e\u793a\u65f6\u7684\u5927\u5c0f\u4e00\u81f4\uff0c\u907f\u514d\u7f29\u653e \u5f00\u542f\u4e86masksToBounds\u548ccornerRadius\uff0c\u4f1a\u5bfc\u81f4\u79bb\u5c4f\u6e32\u67d3 \u89c6\u56fe\u5c42\u7ea7\u590d\u6742\u65f6\uff0c\u5982\u679c\u4e0d\u9700\u8981\u7528\u6237\u4ea4\u4e92\uff0c\u53ef\u4ee5\u6362\u6210\u76f4\u63a5\u7ed8\u5236","title":"\u79fb\u52a8\u591a\u5e73\u53f0\u6027\u80fd\u95ee\u9898\u603b\u7ed3"},{"location":"iOS/reverse/","text":"\u82f9\u679c\u9006\u5411\u5de5\u7a0b \u82f9\u679c\u5e73\u53f0\u4e0a\u9006\u5411\u9700\u8981\u5173\u95ed\u7cfb\u7edf\u5b8c\u6574\u6027\u4fdd\u62a4(SIP): \u6062\u590d\u6a21\u5f0f( Command + R )\u4e0b\u547d\u4ee4\u884c\u952e\u5165\uff1a 1 csrutil disable; reboot LLDB\u76f8\u5173\u547d\u4ee4 \u6307\u5b9a\u8981\u9ad8\u5ea6\u7684\u6587\u4ef6\u7684\u8def\u5f84 1 2 3 4 5 (lldb) file /Applications/Xcode.app/Contents/MacOS/Xcode \u6216 $ lldb -f /Applications/Xcode.app/Contents/MacOS/Xcode \u542f\u52a8\u8981\u8c03\u8bd5\u5e76\u6307\u5b9a\u6807\u51c6\u9519\u8bef(stderr)\u8f93\u51fa\u4e3a /dev/ttys027 1 (lldb) process launch -e /dev/ttys027 -- \u8ba1\u7b97switf\u8868\u8fbe\u5f0f 1 2 ( lldb ) ex - l swift -- import Foundation ( lldb ) ex - l swift -- import AppKit \u8d34\u4e0a\u8fdb\u7a0b 1 2 $ lldb -n Finder //\u901a\u8fc7\u540d\u79f0 $ lldb -p ` pgrep -x Finder ` //\u901a\u8fc7PID \u4e0b\u6b21\u542f\u52a8lldb\u65f6\u6302\u8f7d 1 lldb -n Finder -w \u683c\u5f0f\u5316\u6253\u5370 1 2 3 4 5 6 7 8 9 10 (lldb) p/x 10 //\u5341\u516d\u8fdb\u5236\u663e\u793a (lldb) p/t 10 //\u4e8c\u8fdb\u5236\u663e\u793a (lldb) p/d 0010 //\b\u5341\u8fdb\u5236\u663e\u793a (lldb) p/c 1430672467 //\u5b57\u7b26\u663e\u793a (lldb) p/u -10 //\u65e0\u7b26\u53f7\u5341\u8fdb\u5236\u663e\u793a (lldb) p/o //\u516b\u8fdb\u5236\u663e\u793a (lldb) p/a //\u6309\u5730\u5740\u663e\u793a (lldb) p/f 1 //\u6309\u6d6e\u70b9\u6570\u663e\u793a (lldb) p/s //\u6309\u5b57\u7b26\u4e32\u663e\u793a (lldb) p/i //\u6309\u6c47\u7f16\u6307\u4ee4\u663e\u793a \u91cd\u65b0\u8fd0\u884c\u8c03\u8bd5\u7a0b\u5e8f 1 (lldb) run \u8c03\u8bd5\u65b9\u5f0f lldb\u5bf9\u5e94\u547d\u4ee4 Step Over next Step in step Step Out finish \u67e5\u770b\u8c03\u7528\u6808\u4fe1\u606f 1 2 (lldb)frame info (lldb)frame variable \u5217\u51fa\u6240\u6709\u6a21\u5757 1 (lldb)image list \u5b9a\u4e49\u5feb\u6377\u547d\u4ee4 1 command alias - H Yal Autolayout - h quick help text -- Yay_Autolayout expression - l objc - O -- [[[[[ UIApplication sharedApplication ] keyWindow ] rootViewController ] view ] recursiveDescription ] \u9ad8\u7ea7\u5feb\u6377\u547d\u4ee4\u5b9a\u4e49 1 2 3 4 command regex -- tv s/(.+)/expression -l objc -O -- @import QuartzCore; [%1 setHidden:!(BOOL)[%1 isHidden]]; (void)[CATransaction flush];/ usage : ( lldb ) tv [[[ UIApp keyWindow ] rootViewController ] view ] \u4f7f\u7528\u811a\u672c\u6865\u63a5 LLDB \u5feb\u952e Command + K \u6e05\u5c4f Ctrl + D \u9000\u51fa \u6c47\u7f16\u76f8\u5173 \u4e24\u79cd\u4e3b\u6d41\u6c47\u7f16\uff1aIntel\u548cAT T(Apple) Intel \u98ce\u683c\u6c47\u7f16 1 opcode destination source AT T \u98ce\u683c\u6c47\u7f16 $ \u8868\u6c42\u5e38\u91cf\uff0c % \u8868\u793a\u5bc4\u5b58\u5668\u5f15\u7528 1 opcode source destination \u4e24\u79cd\u4e3b\u8981\u67b6\u6784\uff1aX86_64(PC)\u548cARM64(iphone)(uname - m \u67e5\u770b\u673a\u5668\u786c\u4ef6\u540d) iphone 5\u662f\u6700\u540e\u768432\u4f4d\u8bbe\u5907\uff0c\u4e0d\u652f\u6301iOS11 apple watch \u524d\u4e24\u4ee3\u662f32\u4f4d\u8bbe\u5907 \u5bc4\u5b58\u5668\u8c03\u7528\u89c4\u8303 X86_64 X64\u67b6\u678416\u4e2a\u901a\u7528\u5bc4\u5b58\u5668\uff1a RAX\u3001RBX\u3001RCX\u3001RDX\u3001RDI\u3001RSI\u3001RSP\u3001RBP\u3001R8~R15 \u51fd\u6570\u524d6\u4e2a\u53c2\u6570\u5bf9\u5e94:[RDI,RSI,RDX,RCX,R8,R9],\u8d85\u8fc7\u7684\u53c2\u6570\u653e\u5728\u6808\u4e2d rax\u662f\u5b58\u653e\u8fd4\u56de\u503c \u5217\u51faiPhone X \u76f8\u5173\u7684\u6a21\u62df\u5668 1 $ xcrun simctl list | grep iPhone X \u8fd0\u884c\u6a21\u62df\u8e0c\u8e87 1 $ open /Applications/Xcode.app/Contents/Developer/Applications/Simulator.app/ --args -CurrentDeviceUDID 25A1CE2B-F904-4FE7-A3DE-8EF5A8D49DA7 \u8c03\u8bd5\u6a21\u62df\u5668\u7684\u4e3b\u9875\u7ba1\u7406\u5668 1 $ lldb -n SpringBoard \u5728\u65ad\u70b9\u6267\u884c\u65f6\u6dfb\u52a0\u76f8\u5173\u7684\u547d\u4ee4 1 breakpoint command add Objective-c\u73af\u5883\u4e0b\u624d\u53ef\u4ee5\u8bbf\u95ee\u5bc4\u5b58\u5668\uff0cswift\u4e0b\u4e0d\u652f\u6301\b\u5bc4\u5b58\u5668 \u4f7f\u7528x86 Intel\u98ce\u683c\u7684\u6c47\u7f16 1 settings set target.x86-disassembly-flavor intel \u4e0d\u7701\u7565\u51fd\u6570\u5f00\u573a 1 settings set target.skip-prologue false \u4ee5\u6307\u4ee4\u5f62\u5f0f\u8bfb\u53d6\u6307\u5b9a\u4f4d\u7f6e\u7684\u4e00\u6761\u6307\u4ee4 1 (lldb) memory read -fi -c1 0x100008900 \u8bfb\u6307\u5b9a\u4f4d\u7f6e\u6307\u4ee4\uff0c\u6307\u5b9a\u6bcf\u6b21\u8bfb\u7684\u5927\u5c0f(size)\u548c\u8bfb\u591a\u5c11\u4e2a(count)\u5927\u5c0f 1 (lldb) memory read -s1 -c20 -fx 0x10000882c \u67e5\u770b\u5bc4\u5b58\u5668\u6307\u5411\u7684\u5730\u5740\u7684\u5185\u5bb9 1 (lldb) x/gx $rsp \u67e5\u770b\u7cfb\u7edf\u8c03\u7528\u7684\u4e2a\u6570\u4f30\u8ba1 1 $ sudo dtrace -ln syscall:::entry | wc -l \u67e5\u770b\u5171\u4eab\u5e93 1 2 $ otool -L program $ otool -l program //\u663e\u793a\u5e93\u52a0\u8f7d\u547d\u4ee4 LC_LOAD_DYLIB\u5bf9\u5e94\u5fc5\u8981\u5e93\uff0cLC_LOAD_WEAK_DYLIB\u5bf9\u5e94\u53ef\u9009\u5e93 \u91cd\u65b0\u8f7d\u5165 .lldbinit 1 (lldb) command source ~/.lldbinit \u5bc4\u5b58\u5668 RDX 64\u4f4d\u3001 EDX \u4f4e32\u4f4d\u3001 DX \u4f4e16\u4f4d\u3001 DL \u4f4e8\u4f4d\u3001 DH DL \u7ec4\u6210 DX 16\u4f4d R8-R15 \u53ea\u572864\u4f4d\u673a\u5668\u4e0a\uff0c\u4ee5 R9 \u4e3a\u4f8b\uff1a R9 64\u4f4d\u3001 R9D \u4f4e32\u4f4d\u3001 R9W \u4f4e16\u4f4d\u3001 R9L \u4f4e8\u4f4d RIP \u662f\u6307\u4ee4\u6307\u9488\u5bc4\u5b58\u5668 64\u4f4d RSP \u6808\u6307\u9488 RBP \u6808\u57fa\u6307\u9488\uff0c\u7528\u6765\u5b58\u653e\u504f\u79fb\u6570\u636e\u7528\u7684\u53c2\u8003\u4f4d\u7f6e XCode\u9009\u9879: Debug/Debug Flow/Always show Disassembly \uff0c\u603b\u662f\u4ee5\u6c47\u7f16\u7684\u5f62\u5f0f\u8c03\u8bd5 \u5927\u7aef\u548c\u5c0f\u7aef x64 \u548c ARM \u4f53\u7cfb\u7ed3\u6784\u90fd\u4f7f\u7528\u5c0f\u7aef\uff0c\u5373\u4f4e\u5730\u5740\u5bf9\u5e94\u4f4e\u5b57\u8282, \u4e24\u79cd\u67b6\u6784\u5bf9\u5e94\u7684\u6808\u90fd\u662f\u5411\u4e0b\u751f\u957f\u7684 \u53cd\u8c03\u8bd5\u6280\u672f ptrace(PT_DENY_ATTACH, 0, nil, 0) sysctl \u52a8\u6001\u5e93\u548c\u9759\u6001\u5e93 \u52a8\u6001\u5e93\u7684\u597d\u5904\u662f\uff0c\u53ef\u4ee5\u88ab\u591a\u4e2a\u7a0b\u5e8f\u5171\u7528\uff0c\u800c\u4e0d\u9700\u8981\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u4fdd\u7559\u4e00\u4efd\uff0c\u4e5f\u65b9\u4fbf\u5e93\u7684\u5347\u7ea7\u548c\u66f4\u65b0 \u52a8\u6001\u5e93\u662f\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u52a0\u8f7d\u7684\uff0c\u901a\u8fc7 dyld \uff0c\u5373 dynamic loader \u52a8\u6001\u5e93\u53c8\u5206\u4e3a\uff1a\u5fc5\u8981\u52a8\u6001\u5e93\u548c\u53ef\u9009\u52a8\u6001\u5e93\uff0c\u5fc5\u8981\u52a8\u6001\u5e93\u52a0\u8f7d\u5931\u8d25\u4f1a\u9000\u51fa\u7a0b\u5e8f\uff0c\u53ef\u9009\u52a8\u6001\u5e93\u5bf9\u7a0b\u5e8f\u6765\u8bf4\u53ef\u6709\u53ef\u65e0\uff0c\u4e0d\u4f1a\u9020\u6210\u9000\u51fa LLDB\u5e38\u7528\u547d\u4ee4 breakpoint continue script po(print object) p(print value) expression image lookup -rvn help apropos target settings \bthread backtrace frame info frame select command alias -- \u5728.lldbinit\u4e2d\u5b9a\u4e49\u5feb\u6377\u547d\u4ee4 command regex register read -f d \u4ee510\u8fdb\u5236\u683c\u5f0f\u663e\u793a\u5bc4\u5b58\u5668\u5185\u5bb9 thread step-inst","title":"\u9006\u5411\u5de5\u7a0b"},{"location":"iOS/reverse/#_1","text":"\u82f9\u679c\u5e73\u53f0\u4e0a\u9006\u5411\u9700\u8981\u5173\u95ed\u7cfb\u7edf\u5b8c\u6574\u6027\u4fdd\u62a4(SIP): \u6062\u590d\u6a21\u5f0f( Command + R )\u4e0b\u547d\u4ee4\u884c\u952e\u5165\uff1a 1 csrutil disable; reboot","title":"\u82f9\u679c\u9006\u5411\u5de5\u7a0b"},{"location":"iOS/reverse/#lldb","text":"\u6307\u5b9a\u8981\u9ad8\u5ea6\u7684\u6587\u4ef6\u7684\u8def\u5f84 1 2 3 4 5 (lldb) file /Applications/Xcode.app/Contents/MacOS/Xcode \u6216 $ lldb -f /Applications/Xcode.app/Contents/MacOS/Xcode \u542f\u52a8\u8981\u8c03\u8bd5\u5e76\u6307\u5b9a\u6807\u51c6\u9519\u8bef(stderr)\u8f93\u51fa\u4e3a /dev/ttys027 1 (lldb) process launch -e /dev/ttys027 -- \u8ba1\u7b97switf\u8868\u8fbe\u5f0f 1 2 ( lldb ) ex - l swift -- import Foundation ( lldb ) ex - l swift -- import AppKit \u8d34\u4e0a\u8fdb\u7a0b 1 2 $ lldb -n Finder //\u901a\u8fc7\u540d\u79f0 $ lldb -p ` pgrep -x Finder ` //\u901a\u8fc7PID \u4e0b\u6b21\u542f\u52a8lldb\u65f6\u6302\u8f7d 1 lldb -n Finder -w \u683c\u5f0f\u5316\u6253\u5370 1 2 3 4 5 6 7 8 9 10 (lldb) p/x 10 //\u5341\u516d\u8fdb\u5236\u663e\u793a (lldb) p/t 10 //\u4e8c\u8fdb\u5236\u663e\u793a (lldb) p/d 0010 //\b\u5341\u8fdb\u5236\u663e\u793a (lldb) p/c 1430672467 //\u5b57\u7b26\u663e\u793a (lldb) p/u -10 //\u65e0\u7b26\u53f7\u5341\u8fdb\u5236\u663e\u793a (lldb) p/o //\u516b\u8fdb\u5236\u663e\u793a (lldb) p/a //\u6309\u5730\u5740\u663e\u793a (lldb) p/f 1 //\u6309\u6d6e\u70b9\u6570\u663e\u793a (lldb) p/s //\u6309\u5b57\u7b26\u4e32\u663e\u793a (lldb) p/i //\u6309\u6c47\u7f16\u6307\u4ee4\u663e\u793a \u91cd\u65b0\u8fd0\u884c\u8c03\u8bd5\u7a0b\u5e8f 1 (lldb) run \u8c03\u8bd5\u65b9\u5f0f lldb\u5bf9\u5e94\u547d\u4ee4 Step Over next Step in step Step Out finish \u67e5\u770b\u8c03\u7528\u6808\u4fe1\u606f 1 2 (lldb)frame info (lldb)frame variable \u5217\u51fa\u6240\u6709\u6a21\u5757 1 (lldb)image list \u5b9a\u4e49\u5feb\u6377\u547d\u4ee4 1 command alias - H Yal Autolayout - h quick help text -- Yay_Autolayout expression - l objc - O -- [[[[[ UIApplication sharedApplication ] keyWindow ] rootViewController ] view ] recursiveDescription ] \u9ad8\u7ea7\u5feb\u6377\u547d\u4ee4\u5b9a\u4e49 1 2 3 4 command regex -- tv s/(.+)/expression -l objc -O -- @import QuartzCore; [%1 setHidden:!(BOOL)[%1 isHidden]]; (void)[CATransaction flush];/ usage : ( lldb ) tv [[[ UIApp keyWindow ] rootViewController ] view ] \u4f7f\u7528\u811a\u672c\u6865\u63a5","title":"LLDB\u76f8\u5173\u547d\u4ee4"},{"location":"iOS/reverse/#lldb_1","text":"Command + K \u6e05\u5c4f Ctrl + D \u9000\u51fa","title":"LLDB \u5feb\u952e"},{"location":"iOS/reverse/#_2","text":"\u4e24\u79cd\u4e3b\u6d41\u6c47\u7f16\uff1aIntel\u548cAT T(Apple)","title":"\u6c47\u7f16\u76f8\u5173"},{"location":"iOS/reverse/#intel","text":"1 opcode destination source","title":"Intel \u98ce\u683c\u6c47\u7f16"},{"location":"iOS/reverse/#att","text":"$ \u8868\u6c42\u5e38\u91cf\uff0c % \u8868\u793a\u5bc4\u5b58\u5668\u5f15\u7528 1 opcode source destination \u4e24\u79cd\u4e3b\u8981\u67b6\u6784\uff1aX86_64(PC)\u548cARM64(iphone)(uname - m \u67e5\u770b\u673a\u5668\u786c\u4ef6\u540d) iphone 5\u662f\u6700\u540e\u768432\u4f4d\u8bbe\u5907\uff0c\u4e0d\u652f\u6301iOS11 apple watch \u524d\u4e24\u4ee3\u662f32\u4f4d\u8bbe\u5907","title":"AT&amp;T \u98ce\u683c\u6c47\u7f16"},{"location":"iOS/reverse/#_3","text":"","title":"\u5bc4\u5b58\u5668\u8c03\u7528\u89c4\u8303"},{"location":"iOS/reverse/#x86_64","text":"X64\u67b6\u678416\u4e2a\u901a\u7528\u5bc4\u5b58\u5668\uff1a RAX\u3001RBX\u3001RCX\u3001RDX\u3001RDI\u3001RSI\u3001RSP\u3001RBP\u3001R8~R15 \u51fd\u6570\u524d6\u4e2a\u53c2\u6570\u5bf9\u5e94:[RDI,RSI,RDX,RCX,R8,R9],\u8d85\u8fc7\u7684\u53c2\u6570\u653e\u5728\u6808\u4e2d rax\u662f\u5b58\u653e\u8fd4\u56de\u503c \u5217\u51faiPhone X \u76f8\u5173\u7684\u6a21\u62df\u5668 1 $ xcrun simctl list | grep iPhone X \u8fd0\u884c\u6a21\u62df\u8e0c\u8e87 1 $ open /Applications/Xcode.app/Contents/Developer/Applications/Simulator.app/ --args -CurrentDeviceUDID 25A1CE2B-F904-4FE7-A3DE-8EF5A8D49DA7 \u8c03\u8bd5\u6a21\u62df\u5668\u7684\u4e3b\u9875\u7ba1\u7406\u5668 1 $ lldb -n SpringBoard \u5728\u65ad\u70b9\u6267\u884c\u65f6\u6dfb\u52a0\u76f8\u5173\u7684\u547d\u4ee4 1 breakpoint command add Objective-c\u73af\u5883\u4e0b\u624d\u53ef\u4ee5\u8bbf\u95ee\u5bc4\u5b58\u5668\uff0cswift\u4e0b\u4e0d\u652f\u6301\b\u5bc4\u5b58\u5668 \u4f7f\u7528x86 Intel\u98ce\u683c\u7684\u6c47\u7f16 1 settings set target.x86-disassembly-flavor intel \u4e0d\u7701\u7565\u51fd\u6570\u5f00\u573a 1 settings set target.skip-prologue false \u4ee5\u6307\u4ee4\u5f62\u5f0f\u8bfb\u53d6\u6307\u5b9a\u4f4d\u7f6e\u7684\u4e00\u6761\u6307\u4ee4 1 (lldb) memory read -fi -c1 0x100008900 \u8bfb\u6307\u5b9a\u4f4d\u7f6e\u6307\u4ee4\uff0c\u6307\u5b9a\u6bcf\u6b21\u8bfb\u7684\u5927\u5c0f(size)\u548c\u8bfb\u591a\u5c11\u4e2a(count)\u5927\u5c0f 1 (lldb) memory read -s1 -c20 -fx 0x10000882c \u67e5\u770b\u5bc4\u5b58\u5668\u6307\u5411\u7684\u5730\u5740\u7684\u5185\u5bb9 1 (lldb) x/gx $rsp \u67e5\u770b\u7cfb\u7edf\u8c03\u7528\u7684\u4e2a\u6570\u4f30\u8ba1 1 $ sudo dtrace -ln syscall:::entry | wc -l \u67e5\u770b\u5171\u4eab\u5e93 1 2 $ otool -L program $ otool -l program //\u663e\u793a\u5e93\u52a0\u8f7d\u547d\u4ee4 LC_LOAD_DYLIB\u5bf9\u5e94\u5fc5\u8981\u5e93\uff0cLC_LOAD_WEAK_DYLIB\u5bf9\u5e94\u53ef\u9009\u5e93 \u91cd\u65b0\u8f7d\u5165 .lldbinit 1 (lldb) command source ~/.lldbinit","title":"X86_64"},{"location":"iOS/reverse/#_4","text":"RDX 64\u4f4d\u3001 EDX \u4f4e32\u4f4d\u3001 DX \u4f4e16\u4f4d\u3001 DL \u4f4e8\u4f4d\u3001 DH DL \u7ec4\u6210 DX 16\u4f4d R8-R15 \u53ea\u572864\u4f4d\u673a\u5668\u4e0a\uff0c\u4ee5 R9 \u4e3a\u4f8b\uff1a R9 64\u4f4d\u3001 R9D \u4f4e32\u4f4d\u3001 R9W \u4f4e16\u4f4d\u3001 R9L \u4f4e8\u4f4d RIP \u662f\u6307\u4ee4\u6307\u9488\u5bc4\u5b58\u5668 64\u4f4d RSP \u6808\u6307\u9488 RBP \u6808\u57fa\u6307\u9488\uff0c\u7528\u6765\u5b58\u653e\u504f\u79fb\u6570\u636e\u7528\u7684\u53c2\u8003\u4f4d\u7f6e XCode\u9009\u9879: Debug/Debug Flow/Always show Disassembly \uff0c\u603b\u662f\u4ee5\u6c47\u7f16\u7684\u5f62\u5f0f\u8c03\u8bd5","title":"\u5bc4\u5b58\u5668"},{"location":"iOS/reverse/#_5","text":"x64 \u548c ARM \u4f53\u7cfb\u7ed3\u6784\u90fd\u4f7f\u7528\u5c0f\u7aef\uff0c\u5373\u4f4e\u5730\u5740\u5bf9\u5e94\u4f4e\u5b57\u8282, \u4e24\u79cd\u67b6\u6784\u5bf9\u5e94\u7684\u6808\u90fd\u662f\u5411\u4e0b\u751f\u957f\u7684","title":"\u5927\u7aef\u548c\u5c0f\u7aef"},{"location":"iOS/reverse/#_6","text":"ptrace(PT_DENY_ATTACH, 0, nil, 0) sysctl","title":"\u53cd\u8c03\u8bd5\u6280\u672f"},{"location":"iOS/reverse/#_7","text":"\u52a8\u6001\u5e93\u7684\u597d\u5904\u662f\uff0c\u53ef\u4ee5\u88ab\u591a\u4e2a\u7a0b\u5e8f\u5171\u7528\uff0c\u800c\u4e0d\u9700\u8981\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u4fdd\u7559\u4e00\u4efd\uff0c\u4e5f\u65b9\u4fbf\u5e93\u7684\u5347\u7ea7\u548c\u66f4\u65b0 \u52a8\u6001\u5e93\u662f\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u52a0\u8f7d\u7684\uff0c\u901a\u8fc7 dyld \uff0c\u5373 dynamic loader \u52a8\u6001\u5e93\u53c8\u5206\u4e3a\uff1a\u5fc5\u8981\u52a8\u6001\u5e93\u548c\u53ef\u9009\u52a8\u6001\u5e93\uff0c\u5fc5\u8981\u52a8\u6001\u5e93\u52a0\u8f7d\u5931\u8d25\u4f1a\u9000\u51fa\u7a0b\u5e8f\uff0c\u53ef\u9009\u52a8\u6001\u5e93\u5bf9\u7a0b\u5e8f\u6765\u8bf4\u53ef\u6709\u53ef\u65e0\uff0c\u4e0d\u4f1a\u9020\u6210\u9000\u51fa","title":"\u52a8\u6001\u5e93\u548c\u9759\u6001\u5e93"},{"location":"iOS/reverse/#lldb_2","text":"breakpoint continue script po(print object) p(print value) expression image lookup -rvn help apropos target settings \bthread backtrace frame info frame select command alias -- \u5728.lldbinit\u4e2d\u5b9a\u4e49\u5feb\u6377\u547d\u4ee4 command regex register read -f d \u4ee510\u8fdb\u5236\u683c\u5f0f\u663e\u793a\u5bc4\u5b58\u5668\u5185\u5bb9 thread step-inst","title":"LLDB\u5e38\u7528\u547d\u4ee4"},{"location":"iOS/review/","text":"\u6574\u4e2a\u62db\u8058\u6d41\u7a0b http://www.woshipm.com/zhichang/526302.html \u9762\u8bd5\u524d \u9762\u8bd5\u4e2d MRC\u548cARC\u4e0b\u7684\u5c5e\u6027\u548cgetter/setter\u5199\u6cd5 MRC 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #import ViewController.h @interface ViewController () @property ( nonatomic , strong ) NSString * name ; @end @implementation ViewController @synthesize name = _name ; -( void ) setName: ( NSString * ) name { if ( _name != name ){ [ _name release ]; _name = [ name retain ]; } } -( NSString * ) name { return _name ; } @end ARC 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #import ViewController.h @interface ViewController () @property ( nonatomic , strong ) NSString * name ; @end @implementation ViewController @synthesize name = _name ; -( void ) setName: ( NSString * ) name { _name = name ; } -( NSString * ) name { return _name ; } @end \u5c5e\u6027\u5217\u8868\u548c\u6210\u5458\u53d8\u91cf KVC KVC\u672c\u8d28\u4e0a\u662f\u64cd\u4f5c\u65b9\u6cd5\u5217\u8868\u4ee5\u53ca\u5728\u5185\u5b58\u4e2d\u67e5\u627e\u5b9e\u4f8b\u53d8\u91cf\uff0c\u53ef\u4ee5\u7528\u6765\u8bbf\u95ee\u79c1\u7528\u53d8\u91cf \b\u5229\u7528\u53cd\u5c04:NSStringFromSelector(@selector())\u53ef\u4ee5\u51cf\u5c11KVC\u5b57\u7b26\u4e32\u5199\u9519 KVO \u4e3b\u8981\u4e09\u4e2a\u65b9\u6cd5: - addObserver - removeObserver - observeValueForKeyPath \b\u4e3b\u8981\u6dfb\u52a0\u548c\u79fb\u9664\uff0c\u4e0d\u8981\u91cd\u590d\u6dfb\u52a0\uff0c\u53ca\u65f6\u79fb\u9664 \u7c7b\u88ab\u7b2c\u4e00\u89c2\u5bdf\u65f6\uff0c\u4f1a\u4ea7\u751f\u4e00\u4e2a\u5b50\u7c7b\uff0c\u5b50\u7c7b\u79cd\u91cd\u5199\u5c5e\u6027\u7684setter\u65b9\u6cd5\uff0c\u5e76\u628aisa\u6307\u9488\u6307\u5411\u8be5\u5b50\u7c7b\u3002\u91cd\u5199\u7684setter\u65b9\u6cd5\u5b9e\u73b0\u901a\u77e5\u673a\u5236 Notification post\u548c\u8f6c\u53d1\u5728\u540c\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u8fdb\u884c\uff0c\u4e0e\u6ce8\u518c\u89c2\u5bdf\u8005\u6240\u5728\u7684\u7ebf\u7a0b\u65e0\u5173\uff0c\u5fc5\u8981\u65f6\u9700\u8981\u8f6c\u53d1\u5230\u4e0d\u540c\u7ebf\u7a0b Runtime Class \u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u6307\u5411objc_class\u7684\u7ed3\u6784\u4f53\u6307\u9488\uff0c\u8868\u793a\u4e00\u4e2a\u7c7b\u7684\u7c7b\u7ed3\u6784\u3002 Method\u662fRuntime\u5185\u90e8\u5b9a\u4e49\u7684\u65b9\u6cd5,Class\u4e2d\u5b9a\u4e49\u6709\u4e00\u4e2aobjc_method_list,\u94fe\u8868\u90fd\u662fobjc_method\u7c7b\u578b\u7684 SEL\u6807\u793a\u65b9\u6cd5\u7684\u540d\u5b57/\u7b7e\u540d IMP \u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u8fd9\u4e2a\u88ab\u6307\u5411\u7684\u51fd\u6570\u5305\u542b\u4e00\u4e2a\u63a5\u6536\u6d88\u606f\u7684\u5bf9\u8c61id, \u8c03\u7528\u65b9\u6cd5\u7684\u9009\u6807 SEL\uff0c\u4ee5\u53ca\u4e0d\u5b9a\u4e2a\u6570\u7684\u65b9\u6cd5\u53c2\u6570\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2aid\u3002\u4e5f\u5c31\u662f\u8bf4IMP\u662f\u6d88\u606f\u6700\u7ec8\u8c03\u7528\u7684\u6267\u884c\u4ee3\u7801\uff0c\u662f\u65b9\u6cd5\u771f\u6b63\u7684\u5b9e\u73b0\u4ee3\u7801 \u3002\u6211\u4eec\u53ef\u4ee5\u50cf\u5728\uff23\u8bed\u8a00\u91cc\u9762\u4e00\u6837\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570\u6307\u9488\u3002 +load\u5148\u4e8emain()\u88ab\u8c03\u7528, dyld\u52a0\u8f7d\u955c\u50cf\u65f6\u8c03\u7528\u6240\u6709\u7c7b\u7684+load\u65b9\u6cd5\uff0c+initialize\u662f\u61d2\u52a0\u8f7d\u7684\uff0c\u53ea\u6709\u7c7b\u88ab\u4f7f\u7528\u65f6\u624d\u4f1a\u88ab\u8c03\u7528\u3002 https://www.jianshu.com/p/eac6ed137e06 \u5185\u5b58\u7ba1\u7406 http://www.cocoachina.com/ios/20160303/15498.html \u6df1\u6d45\u62f7\u8d1d http://www.jb51.net/article/89676.htm \u6df1\u62f7\u8d1d\u4e2d\u590d\u5236\u4e00\u5c42 \u5b8c\u5168\u590d\u5236\u9700\u8981\u4f7f\u7528\u5f52\u6863\u548c\u63a5\u6863 OC\u5bf9\u8c61\u5185\u5b58\u5e03\u5c40 http://blog.csdn.net/xiaolinyeyi/article/details/51393383 \u8fd0\u884c\u65f6\u548c\u6d88\u606f\u8f6c\u53d1 https://www.jianshu.com/p/ea61895be31f \u7c7b\u548c\u5143\u7c7b\u7684\u533a\u522b https://www.jianshu.com/p/249b705d4fbb JS\u4e0eNative\u4ea4\u4e92 \u4f7f\u7528webView:shouldStartLoadWithRequest\u65b9\u6cd5\u5bf9\u8bf7\u6c42\u8fdb\u884c\u62e6\u622a\u5e76\u5206\u60c5\u51b5\u8c03\u7528NativeCode\uff0c\u9700\u8981\u4e0d\u65ad\u62e6\u622a\u8fc7\u6ee4 \u4f7f\u7528JS\u6846\u67b6\u5982javascriptcore,\u6bd4\u8f83\u7075\u6d3b stringByEvaluatingJavaScriptFromString\u5e94\u8be5\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u6267\u884c \u7d22\u5f15\u7684\u7f3a\u70b9 1 2 3 1. \u9700\u8981\u7a7a\u95f4\u50a8\u5b58\u7d22\u5f15 2. \u521b\u5efa\u548c\u7ef4\u62a4\u7d22\u5f15\u9700\u8981\u8017\u8d39\u65f6\u95f4 3. \u5f53\u5220\u9664\uff0c\u63d2\u5165\u548c\u66f4\u65b0\u6570\u636e\u662f\uff0c\u7d22\u5f15\u4e5f\u9700\u8981\u8fdb\u884c\u66f4\u65b0\uff0c\u8fd9\u6837\u964d\u4f4e\u4e86\u5199\u6570\u636e\u7684\u901f\u5ea6\u3002 NSString \u5e38\u91cf\u7684\u5b57\u7b26\u4e32\u76f4\u63a5\u5b58\u5728\u5e38\u91cf\u91cc\uff0c\u4e14\u5185\u5bb9\u76f8\u7b49\u7684\u90fd\u6307\u5411\u540c\u4e00\u5757\u5e38\u91cf\u533a \u7528\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u751f\u6210\u7684NSString\u4e0e\u6e90\u5b57\u7b26\u4e32\u540c\u5730\u5740 \u7528copy\u662f\u4e3a\u4e86\u5b89\u5168,\u9632\u6b62NSMutableString\u8d4b\u503c\u7ed9NSString\u65f6,\u524d\u8005\u4fee\u6539\u5f15\u8d77\u540e\u8005\u503c\u53d8\u5316\u800c\u7528\u7684 GCD https://www.jianshu.com/p/77c5051aede2 http://www.cocoachina.com/cms/wap.php?action=article id=22573 http://www.cocoachina.com/ios/20160804/17291.html pthread\u3001NSThread\u3001NSOperationQueue NSOperationQueue\u53ef\u4ee5\u5f80\u91cc\u9762\u6dfb\u52a0Operation\u4efb\u52a1\uff0c\u53ef\u4ee5\u9650\u5236\u6700\u5927\u5e76\u53d1\u4e2a\u6570 \u4fe1\u53f7\u91cf dispatch_semaphore_create(Init Count)/dispatch_semaphore_wait(-1)/dispatch_semaphore_signal(+1) \u4fe1\u53f7\u91cf\u4e3a0\u65f6\uff0c\u7ebf\u7a0b\u963b\u585e\u76f4\u5230\u4fe1\u53f7\u91cf\u5927\u4e8e0 \u9501\u673a\u5236 \u4e8b\u4ef6\u3001\u54cd\u5e94\u94fe\u3001\u4e8b\u4ef6\u4f20\u9012\u3001\u4e8b\u4ef6\u62e6\u622a \u6d88\u606f\u9996\u5148\u4f1a\u987a\u7740\u7ee7\u627f\u7ed3\u6784\u54cd\u5e94 \u7ee7\u627f\u7ed3\u6784\u4e2d\u6ca1\u6709\u88ab\u54cd\u5e94\u4f1a\u8fdb\u5165resolveInstanceMethod\u65b9\u6cd5\uff0c\u4ece\u52a8\u6001\u6dfb\u52a0\u7684\u65b9\u6cd5\u91cc\u54cd\u5e94 \u4ee5\u4e0a\u90fd\u6ca1\u6709\u54cd\u5e94\u4f7f\u7528forwardingTargetForSelector\uff0c\u8f6c\u4ea4\u54cd\u5e94\u76ee\u6807 \u8fd8\u4e0d\u884c\u8c03\u7528methodSignatureForSelector\u83b7\u5f97\u65b9\u6cd5\u7b7e\u540d\uff0c\u8c03\u7528forwardInvocation \u5173\u4e8e\u751f\u6210\u7b7e\u540d\u7684\u7c7b\u578b\"v@:\"\u89e3\u91ca\u4e00\u4e0b\u3002\u6bcf\u4e00\u4e2a\u65b9\u6cd5\u4f1a\u9ed8\u8ba4\u9690\u85cf\u4e24\u4e2a\u53c2\u6570\uff0cself\u3001_cmd\uff0cself\u4ee3\u8868\u65b9\u6cd5\u8c03\u7528\u8005\uff0c_cmd\u4ee3\u8868\u8fd9\u4e2a\u65b9\u6cd5\u7684SEL\uff0c\u7b7e\u540d\u7c7b\u578b\u5c31\u662f\u7528\u6765\u63cf\u8ff0\u8fd9\u4e2a\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u3001\u53c2\u6570\u7684\uff0cv\u4ee3\u8868\u8fd4\u56de\u503c\u4e3avoid\uff0c@\u8868\u793aself\uff0c:\u8868\u793a_cmd\u3002 \u54cd\u5e94\u94fe https://www.cnblogs.com/Xylophone/p/7148037.html \u53d8\u91cf\u7c7b\u578b \u7a0b\u5e8f\u5185\u5b58\u6a21\u578b \u81ea\u52a8\u53d8\u91cf \u51fd\u6570\u53c2\u6570 \u9759\u6001\u53d8\u91cf \u9759\u6001\u5168\u5c40\u53d8\u91cf \u5168\u5c40\u53d8\u91cf block\u91cc\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539\u7684\u662f\u9759\u6001\u53d8\u91cf\u3001\u9759\u6001\u5168\u5c40\u53d8\u91cf\u548c\u5168\u5c40\u53d8\u91cf\uff0c\u9ed8\u8ba4\u5bf9\u81ea\u52a8\u53d8\u91cf\u4ec5\u6355\u83b7\u5176\u503c\uff0c \u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u4fee\u6539\uff0c\u9759\u6001\u53d8\u91cf\u662f\u4ee5\u5730\u5740\u88ab\u6355\u83b7\uff0c\u6240\u4ee5\u53ef\u4ee5\u4fee\u6539\uff0c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u662f\u56e0\u4e3a\u5728\u516c\u5171\u533a\uff0c\u6240\u4ee5\u53ef\u4ee5\u88abblock\u76f4\u63a5\u8bbf\u95ee block \u6709\u4e09\u79cd\uff0c\u5168\u5c40block\uff0c\u6808block\u548c\u5806block\uff0c\u53ea\u6709\u5806block\u4f1a\u6301\u6709\u5bf9\u8c61 \u5faa\u73af\u5f15\u7528\u95ee\u9898 https://www.cnblogs.com/wengzilin/p/4347974.html KVC\u3001KVO\u4e0eruntime \u7ebf\u7a0b\u5b89\u5168 \u65b9\u5f0f @synchronized(lock) \u4e92\u65a5\u9501\u7528\u4e8e\u7ebf\u7a0b\u540c\u6b65(\u56fe\u65b9\u4fbf) NSLock\u6709trylock/lock\u548cunlock\u8fd9\u51e0\u4e2a\u64cd\u4f5c NSRecursiveLock\u5b9e\u9645\u4e0a\u5b9a\u4e49\u7684\u662f\u4e00\u4e2a\u9012\u5f52\u9501\uff0c\u8fd9\u4e2a\u9501\u53ef\u4ee5\u88ab\u540c\u4e00\u7ebf\u7a0b\u591a\u6b21\u8bf7\u6c42\uff0c\u800c\u4e0d\u4f1a\u5f15\u8d77\u6b7b\u9501\u3002\u8fd9\u4e3b\u8981\u662f\u7528\u5728\u5faa\u73af\u6216\u9012\u5f52\u64cd\u4f5c\u4e2d\u3002 NSConditionLock\u6761\u4ef6\u9501lock\u3001unlock\u3001lockWhenCondition\u3001unlockWhenCondition dispatch_semaphore\u5c31\u662f\u4fe1\u53f7\u91cfcreate\\wait\\signal(\u4f18\u5148\u9009\u62e9) NSCondition\u540c\u65f6\u5177\u5907\u4e92\u65a5\u9501\u548c\u4fe1\u53f7\u91cf\u7684\u529f\u80fdlock/unlock/wait/signal pthread_mutex\u662fC\u8bed\u8a00\u9501\u63a5\u53e3\uff0c\u4e0d\u592a\u5bb9\u6613\u4f7f\u7528 OSSpinLock NSTimer https://blog.csdn.net/a2331046/article/details/50240635 NSTimer\u4e0d\u7cbe\u786e\uff0c\u4f1a\u88ab\u7ebf\u7a0b\u963b\u585e\u5f71\u54cd\uff0c\u4e3b\u7a0b\u7684RunLoop\u9ed8\u8ba4\u5f00\u542f\uff0c\u5176\u5b83\u7ebf\u7a0b\u7684runLoop\u9700\u8981\u624b\u52a8\u5f00\u542f\u4f7fTimer\u5de5\u4f5c\uff0c\u54ea\u91cc\u5f00\u542f\uff0c\u54ea\u91cc\u7ed3\u675f\u3002 \u5faa\u73af\u5f15\u7528\u95ee\u9898 \u76f8\u5173\u95ee\u9898 timer\u4f1aretain\u6307\u5b9atimer\u56de\u8c03\u65b9\u6cd5\u7684\u63a5\u6536\u8005\uff0c\u4e5f\u5c31\u662ftarget\u5bf9\u8c61\uff0c\u4ee5\u6b64\u4fdd\u8bc1\u5b9a\u65f6\u4efb\u52a1\u80fd\u591f\u5b8c\u6210 \u4e00\u6b21\u6027timer\u5728\u4efb\u52a1\u6267\u884c\u5b8c\u6210\u540e\u4f1a\u81ea\u52a8invalidate,\u800c\u65e0\u9650\u91cd\u590d\u6027\u7684timer\u7531\u4e8e\u4e00\u76f4\u6709\u6548\uff0c\u6240\u4ee5\u9700\u8981\u624b\u52a8\u8c03\u7528invalidate dealloc\u4e2d\u8c03\u7528[timer invalidate]\u4e0d\u884c\uff0c\u56e0\u4e3atimer\u6ca1\u6709\u5931\u6548\u524d\uff0ctarget\u5bf9\u8c61\u5f15\u7528\u8ba1\u6570\u4e0d\u4e3a0\uff0c dealloc\u4e0d\u4f1a\u88ab\u8c03\u52a8 timer\u4e0d\u662f\u5b9e\u65f6\u7684\uff0c\u5ef6\u8fdf\u7a0b\u5e8f\u4e0e\u5f53\u524d\u7ebf\u7a0b\u7684\u6267\u884c\u60c5\u51b5\u76f8\u5173\uff0c\u5982\u679c\u4e0a\u4e00\u6b21\u5b9a\u65f6\u4efb\u52a1\u88ab\u5ef6\u8fdf\uff0c\u53ef\u80fd\u4f1a\u548c\u4e4b\u540e\u7684\u5b9a\u65f6\u4e8b\u4ef6\u5408\u5e76\u4e3a\u4e00\u4e2a timer\u8981\u6dfb\u52a0\u5230runloop\u4e2d\u624d\u4f1a\u751f\u6548\uff0c\u81ea\u5df1alloc\u548cinit\u7684timer\u9700\u8981\u52a0\u5230runloop\u91cc\u9762\uff0c\u540c\u65f6\u542f\u52a8runloop\u624d\u80fd\u751f\u6548(\u8fd8\u8981\u6ce8\u610frunloop\u7684\u8fd0\u884c\u6a21\u5f0f\u662f\u5426\u6b63\u786e)\u3002\u6240\u6709\u7684source\u90fd\u8981\u52a0\u5165\u5230runloop\u4e2d\u624d\u80fd\u4f7f\u7528\uff0ctimer\u662f\u4e00\u79cdsource Runloop\u673a\u5236 \u8bbe\u8ba1\u6a21\u5f0f MVC MVP \u6a21\u578b\u548c\u89c6\u56fe\u5b8c\u5168\u9694\u79bb\u5f00\uff0c\u903b\u8f91\u90fd\u653e\u5728Presenter\u91cc\u9762 MVVM ViewModel\u662f\u8f38\u5165\u8f38\u51fa\u7684\u8f6c\u6362,\u4e0e\u7ed1\u5b9a\u673a\u5236\u8054\u5408\u5a01\u529b\u66f4\u5927, \u517c\u5bb9MVC\uff0c\u4fbf\u4e8e\u6d4b\u8bd5\u3002OSX+CocoaBinding, iOS + ReactiveCocoa/RxSwift VIPER View/Interactor/Presenter/Entity/Router \u6613\u6d4b\u8bd5\u3001\u7406\u89e3\u3001\u7ef4\u62a4\uff0c\u53ef\u4e0eCoreData\u8054\u5408\u4f7f\u7528 DLNA\u534f\u8bae - UPnP\u534f\u8bae\u53d1\u73b0\u7f51\u7edc\u4e2d\u7684\u8bbe\u5907(\u670d\u52a1\u3001\u8bbe\u5907(UUID\u8bbe\u5907\u6807\u8bc6)\u3001\u63a7\u5236\u70b9) \u7ec4\u4ef6\u5316\u65b9\u5f0f category \u548c runtime category \u548c \u4e3b\u7c7b\u4e2d\u90fd\u6709+load\u65b9\u6cd5\u65f6\uff0c\u4f1a\u5148\u8c03\u7528\u4e3b\u7c7b\u7684+load\u540e\u8c03\u7528category\u7684+load\uff0c\u591a\u4e2acategory\u4e4b\u95f4\u662f\u6309\u7167\u7f16\u8bd1\u987a\u5e8f\u8c03\u7528+load category \u4e2d\u4e0d\u80fd\u6dfb\u52a0\u5b9e\u4f8b\u53d8\u91cf\uff0c\u53ea\u80fd\u6dfb\u4e2d\u65b9\u6cd5 category \u4e2d\u52a8\u6001\u6dfb\u52a0\u5173\u8054\u5bf9\u8c61\u662f\u653e\u5728\u4e00\u4e2a\u5168\u5c40\u54c8\u5e0c\u8868\u4e2d\uff0c\u4ee5\u5173\u8054\u5185\u5b58\u5730\u5740\u4e3a\u952e\uff0c\u5bf9\u8c61\u9500\u6bc1\u65f6\u4f1a\u68c0\u67e5\u81ea\u5df1\u6709\u6ca1\u6709\u5173\u8054\u5bf9\u8c61\uff0c\u6709\u5c31\u9664\u53bb\u54c8\u5e0c\u8868\u4e2d\u7684\u6761\u76ee \u6027\u80fd\u4f18\u5316 \u4f7f\u7528ARC View\u5c3d\u91cf\u4e0d\u900f\u660e \u907f\u514d\u5728UIImageView\u4e2d\u8c03\u6574\u56fe\u7247\u5927\u5c0f(\u672c\u5730\u56fe\u7247)\uff0c\u56fe\u7edc\u56fe\u7247\u80cc\u666f\u7ebf\u7a0b\u8c03\u6574\u5927\u5c0f \u61d2\u52a0\u8f7d \u7f13\u5b58\u6570\u636e \u9002\u5f53\u4f7f\u7528autoreleasepool \u5c3d\u91cf\u907f\u514d\u65f6\u671f\u683c\u5f0f\u8f6c\u6362\uff0c\u521b\u5efa NSDateFormatter \u5f88\u8d39\u65f6\u95f4 \u7b97\u6cd5\u76f8\u5173 https://www.zhihu.com/question/24964987 topK \u95ee\u9898 \u5d29\u6e83\u7387\u6807\u51c6 \u7ebf\u7a0b\u5b89\u5168 atomic\u6240\u8bf4\u7684\u7ebf\u7a0b\u5b89\u5168\u53ea\u662f\u4fdd\u8bc1\u4e86getter\u548csetter\u5b58\u53d6\u65b9\u6cd5\u7684\u7ebf\u7a0b\u5b89\u5168\uff0c\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u6574\u4e2a\u5bf9\u8c61\u662f\u7ebf\u7a0b\u5b89\u5168\u7684 \u817e\u8baf\u9762\u8bd5 \u51c6\u5907\u8d44\u6599: http://www.cocoachina.com/bbs/read.php?tid=460991 \u5468\u516d 2018.03.17 17:30 \u77e5\u6625\u8def\u5e0c\u683c\u739b\u5927\u53a6B1\u7bee\u7403\u573a \u53f6\u5973\u58eb 17801077277 \u817e\u8baf \u9762\u8bd5\u9898 \u95ee\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u5e94\u8be5\u600e\u4e48\u4fee\u6539\uff1f ViewController.h 1 2 3 4 5 #import UIKit/UIKit.h @interface ViewController : UIViewController @end ViewController.m 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #import ViewController.h @interface ViewController () //will crash if not set to atomic, because the setter will be called in concurrent thread, and member will be release incorrect @property ( nonatomic , strong ) NSString * target ; @end @implementation ViewController - ( void ) viewDidLoad { [ super viewDidLoad ]; // Do any additional setup after loading the view, typically from a nib. dispatch_queue_t queue = dispatch_queue_create ( com.joker.concurrent , DISPATCH_QUEUE_CONCURRENT ); for ( int i = 0 ; i 100000 ; i ++ ) { dispatch_async ( queue , ^ { self . target = [ NSString stringWithFormat : @ A Mock String ]; }); } } @end \u6240\u4ee5\uff0c\u5e76\u53d1\u65f6\uff0c\u8c03\u7528\u4e0d\u5f53\uff0c\u4f1a\u591a\u6b21\u8c03\u7528target\u5c5e\u6027setter\u65b9\u6cd5\u4e2d\u7684[_target release]\uff0c\u9020\u6210\u591a\u6b21\u91ca\u653e\uff0c\u8fdb\u800c\u5d29\u6e83\u3002\u6539\u6210atomic\u5c5e\u6027\u3002 \u603b\u7ed3 DLNA\u7684\u534f\u8bae\u6ca1\u6709\u6df1\u523b\u7406\u89e3 \u64ad\u653e\u5668\u53bb\u8026\u5408\u90e8\u5206\u4ecb\u7ecd\u6709\u70b9\u82cd\u767d \u7248\u672c\u5c55\u73b0\u7edf\u8ba1\u4ecb\u7ecd\u6709\u70b9\u7b3c\u7edf \u7b54\u9898\u65f6\u8868\u73b0\u7684\u4e0d\u591f\u6c89\u7a33 \u77e5\u4e4e \u51c6\u5907\u8d44\u6599\uff1a \u5468\u4e00 2018.03.19 10:00 \u6d77\u6dc0\u533a\u5b66\u9662\u8def\u7532 5 \u53f7 768 \u521b\u610f\u56ed A \u5ea7\u897f\u533a\u4e8c\u901a\u9053 1002 \u5ba4 \u738b\u6167 17611252710 \u77e5\u4e4e \u51c6\u5907\u8d44\u6599 - \u7528\u9012\u5f52\u548c\u975e\u9012\u5f52\u9006\u5e8f\u5355\u5411\u94fe\u8868 \u9012\u5f52 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 node * reverseList ( node * head , node ** h ) { if ( head - next == NULL ){ * h = head ; return head ; } node * end = reverseList ( head - next , h ); end - next = head ; head - next = NULL ; return head ; } void reverseList ( node ** head ) { node * h = NULL ; node * subListEnd = reverseList (( * head ) - next , h ); subListEnd - next = * head ; ( * head ) - next = NULL ; * head = h ; } \u975e\u9012\u5f52 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 void reverseNocur ( node ** head ) { node * pre = * head ; node * cur = ( * head ) - next ; if ( cur == NULL ){ * head = pre ; } else { ( * head ) - next = NULL ; } node * next = cur - next ; cur - next = pre ; while ( next != NULL ) { pre = cur ; cur = next ; next = cur - next ; cur - next = pre ; } * head = cur ; } \u603b\u7ed3 \u95ee\u4e86\u5f88\u591a\u9879\u76ee\u7684\u4e8b\u60c5\uff0c\u90fd\u662f\u987a\u7740\u9879\u76ee\u8003\u67e5\u57fa\u7840\u77e5\u8bc6\u70b9\uff0c\u95ee\u4e86\u7ec4\u4ef6\u5316\uff0c\u521d\u59cb\u5316\u7ec4\u4ef6\u5e94\u8be5\u600e\u4e48\u5b9e\u73b0\u3002 \u5982\u4f55\u5224\u65ad\u591a\u4e2a\u5e76\u53d1\u4efb\u52a1\u5168\u90e8\u5b8c\u6210\uff0c\u53ca\u5b9e\u73b0\u539f\u7406 swift\u7684Optional\u539f\u7406 MVC\u3001MVVM\u3001MVP\u3001VIPER \u600e\u6837\u6d4b\u8bd5\u4e00\u4e2aModel \u963f\u91cc\u6587\u5b66 \u5468\u4e8c 2018.03.20 10:30 \u4e94\u9053\u53e3\u4f18\u76db\u5927\u53a6D\u5ea716\u5c42A \u738b\u6708\u7426 15732636310 \u963f\u91cc\u6587\u5b66 \u51c6\u5907\u8d44\u6599 \u5199\u4e86\u4e00\u4e2a\u6c42\u4e8c\u53c9\u6811\u6700\u5927\u6df1\u5ea6\u7684\u7b97\u6cd5\uff0c\u9012\u5f52\u8c03\u7528 \u4eca\u65e5\u5934\u6761 \u5468\u4e09 2018.03.21 18:45 \u5317\u4eac\u5e02\u6d77\u6dc0\u533a\u77e5\u6625\u8def63\u53f7\u4e2d\u56fd\u536b\u661f\u901a\u4fe1\u5927\u53a6A\u5ea77\u5c42 \u5f20\u8f69\u60a6 18708100119 \u4eca\u65e5\u5934\u6761 \u9762\u8bd5\u95ee\u9898 \u5168\u5c40\u65ad\u70b9\u5c31\u662f\u5f02\u5e38\u629b\u51fa\u65ad\u70b9 \u753b\u9879\u76ee\u7ed3\u6784\u56fe \u7ed9\u5b9a\u4e00\u4e2a\u89c6\u56fe\uff0c\u89c6\u56fe\u4e0a\u6709\u82e5\u5e72UIImageView,\u5199\u4e00\u4e2a\u7edf\u8ba1\u6240\u6709UImageView\u4e2a\u6570\u7684\u7b97\u6cd5(\u9012\u5f52\u5199\u5b8c\u4e86\u518d\u7528\u5faa\u73af\u5b9e\u73b0) \u5feb\u901f\u6392\u5e8f\u7684\u539f\u7406\u548c\u65f6\u95f4\b\u590d\u6742\u5ea6 \bARC\u65f6\uff0c\u5c5e\u6027delegate\u7528\u4ec0\u4e48\u5173\u952e\u8bcd\u4fee\u9970(nonatomic,weak)\uff0cweak\u4f1a\u81ea\u52a8\u7f6enil, \u53ca\b\u81ea\u52a8\u7f6enil\u7684\u5de5\u4f5c\u539f\u7406 \b\u5982\u679c\b\u67e5\u627e\u5185\u5b58\b\u6cc4\u9732\uff0cinstrument\u5de5\u5177leaks ARC\u4e0b\uff0c\u5982\u4f55\u5904\u7406\u5faa\u73af\u5f15\u7528\u95ee\u9898(block \u6355\u83b7\u4e86self\u7684\u60c5\u51b5) block\u53d8\u91cf\u6355\u83b7\u7684\u539f\u7406\u662f\u4ec0\u4e48\uff1f [NS\bArray addObject:nil]\u4f1a\u5d29\u6e83\u5417\uff0c\u4e3a\u4ec0\u4e48\uff1f [nil message]\u8fd9\u79cd\u8c03\u7528\u65b9\u5f0f\u4f1a\u5d29\u6e83\u5417\uff1f\u4e3a\u4ec0\u4e48\uff1f \u6d88\u606f\u8c03\u7528\u7684\u539f\u7406\u662f\b\u600e\u6837\u7684\uff0c\b\b\u6216\u8005[obj message]\u8fd9\u4e2a\u8c03\u7528\u7684\b\u6574\u4e2a\u8fc7\u7a0b\u662f\u600e\u6837\u7684\uff1f \u4fe1\u53f7\u91cf\u673a\u5236\u4f7f\u7528 \u54c8\u5e0c\u8868\u751f\u6210\u539f\u7406 dispatch_group\u591a\u4e2a\u4efb\u52a1\u540c\u6b65\uff0c\u6bcf\u4e2a\u4efb\u52a1\u4e5f\u662f\u5f02\u6b65\u65f6\u600e\u4e48\u5904\u7406(\u5f00\u59cb\u7ed3\u675f\u65f6\u4f7f\u7528dispatch_group_enter()\u548cdispatch_group_leave()\u6210\u5bf9\uff0c\u8868\u793a\u4e00\u4e2a\u4efb\u52a1\u7684\u8d77\u6b62)\uff0cgroup\u662f\u5728\u7ebf\u7a0b\u4e2d \u6709\u6ca1\u6709\u770b\u8fc7\u7b2c\u4e09\u65b9\u5e93,\u8bf4\u8bf4\u539f\u7406 SDWebImageCache\u540c\u65f6\u4e0b\u8f7d\u4e24\u4e2a\u76f8\u540c\u7684URl\u65f6\u4f1a\u91cd\u590d\u4e0b\u8f7d\u5417\uff1f\u4e0d\u4f1a\uff0c\u4f1a\u5728Operations\u4e2d\u67e5\u627e\u662f\u5426\u5df2\u7ecf\u6709\u76f8\u540c\u7684\u4e0b\b\u8f7d\u64cd\u4f5c\u4e86 \u7231\u5947\u827a \u5468\u56db 2018.03.22 14:00 \u4e2d\u5173\u6751\u9f0e\u597d\u5927\u53a6A\u5ea77\u5c42 \u9762\u8bd5\u8054\u7cfb\u4eba\uff1a\u5218\u6b27\u4e91\uff08HRBP\uff09\uff0c\u7535\u8bdd\uff1a18511988412 \u7231\u5947\u827a \u8fc7\u7a0b \u4e00\u4e2a\u627e\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u4e2a\u53ea\u51fa\u73b0\u8fc7\u4e00\u6b21\u7684\u5b57\u7b26(\u54c8\u5e0c\u8868+\u4e24\u6b21\u904d\u5386) \u4e00\u4e2a\u4e1a\u52a1\u573a\u666f\uff0c\u8bf4\u660e\u5b9e\u73b0\u601d\u8def \u95ee\u4e00\u4e9b\u6027\u80fd\u4f18\u5316\u65b9\u9762\u7684\u4e1c\u897f \u542f\u52a8\u65f6\u957f\u4f18\u5316 \u5d29\u6e83\u7387\u5408\u7406\u533a\u95f4 \u964c\u964c \u5468\u4e94 2018.03.23 10:00 \u5317\u4eac\u5e02\u671d\u9633\u533a\u961c\u901a\u4e1c\u5927\u88571\u53f7\u671b\u4eacsoho T2 B\u5ea720\u5c42 Amy 15210035422 \u964c\u964c \u9762\u8bd5\u5185\u5bb9 dispatch_sync/dispatch_async\u548c\u540c\u6b65\u961f\u5217\u3001\u5f02\u6b65\u961f\u5217\u7684\u4e0d\u540c\u7ec4\u5408\u65f6\uff0c\u7cfb\u7edf\u5206\u914d\u7ebf\u7a0b\u7684\u5404\u79cd\u60c5\u51b5 NSTimer\u7684\u673a\u5236\u548c\u91ca\u653e\u65f6\u673a\uff0c\u5982\u679c\u88abretain\u4f1a\u600e\u6837 dispatch_barrier/dispatch_group\u7684\u5e94\u7528\u65b9\u5f0f \u6ef4\u6ef4 \u5468\u4e00 2018.03.26 10:00 \u5317\u4eac\u5e02\u6d77\u6dc0\u533a\u897f\u5317\u65fa\u8def\u6587\u601d\u6d77\u8f89 \u6c88\u60a6 15094656466 \u6ef4\u6ef4 \u9762\u8bd5\u7ecf\u8fc7 KVO\u600e\u6837\u4fdd\u8bc1addObserver\u548cremoveObserver\u6210\u5bf9\u513f\u8c03\u7528(\u4f7f\u7528\u65b9\u6cd5\u4e2d\u7684context\u53c2\u6570\u4f5c\u4e3a\u6807\u8bc6\uff0c\u9632\u6b62\u91cd\u590d\u6dfb\u52a0\u548c\u91cd\u590d\u79fb\u9664) https://blog.csdn.net/klabcxy36897/article/details/51680423 \u5e38\u7528\u7684\u96c6\u5408\u7c7b\u5bf9\u8c61NSArray/NSDictionary/NSSet/NSCountSet/NSOrderSet KVC\u4f7f\u7528\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b \u5982\u4f55\u8ba9\u4e00\u4e2arunloop\u4e00\u76f4\u4fdd\u6301\u8fd0\u884c\u800c\u4e0d\u7a7a\u95f2 associated\u5bf9\u8c61\u662f\u4e2a\u4ec0\u4e48\u60c5\u51b5\uff0cstrong\u548cweak\u5f15\u7528\u4f1a\u4e0d\u4f1a\u51fa\u95ee\u9898 1 2 3 objc_setAssociatedObject() objc_getAssociatedObject() objc_removeAssociatedObjects() //\u91ca\u653e\u6240\u6709\u7684\u5173\u8054\u5bf9\u8c61 \u5b9e\u73b0\u66ff\u6362\b\u653e\u5728+load\u91cc\u8fd8\u662f+initialize\u4e2d 1 2 3 4 5 6 7 +(void)initialize(\u5f53\u7c7b\u7b2c\u4e00\u6b21\u88ab\u8c03\u7528\u7684\u65f6\u5019\u5c31\u4f1a\u8c03\u7528\u8be5\u65b9\u6cd5,\u6574\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u4e2d\u53ea\u4f1a\u8c03\u7528\u4e00\u6b21) +(void)load(\u5f53\u7a0b\u5e8f\u542f\u52a8\u7684\u65f6\u5019\u5c31\u4f1a\u8c03\u7528\u8be5\u65b9\u6cd5,\u6362\u53e5\u8bdd\u8bf4,\u53ea\u8981\u7a0b\u5e8f\u4e00\u542f\u52a8\u5c31\u4f1a\u8c03\u7528load\u65b9\u6cd5,\u6574\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u4e2d\u53ea\u4f1a\u8c03\u7528\u4e00\u6b21) 1. \u5728\u52a0\u8f7d\u9636\u6bb5\uff0c\u5982\u679c\u7c7b\u5b9e\u73b0\u4e86load\u65b9\u6cd5\uff0c\u7cfb\u7edf\u5c31\u4f1a\u8c03\u7528\u5b83\uff0cload\u65b9\u6cd5\u4e0d\u53c2\u4e0e\u8986\u5199\u673a\u5236 2. \u5728\u9996\u6b21\u4f7f\u7528\u67d0\u4e2a\u7c7b\u4e4b\u524d\uff0c\u7cfb\u7edf\u4f1a\u5411\u5176\u53d1\u9001initialize\u6d88\u606f\uff0c\u901a\u5e38\u5e94\u8be5\u5728\u91cc\u9762\u5224\u65ad\u5f53\u524d\u8981\u521d\u59cb\u5316\u7684\u7c7b\uff0c\u9632\u6b62\u5b50\u7c7b\u672a\u8986\u5199initialize\u7684\u60c5\u51b5\u4e0b\u8c03\u7528\u4e24\u6b21 3. load\u4e0einitialize\u65b9\u6cd5\u90fd\u5e94\u8be5\u5b9e\u73b0\u5f97\u7cbe\u7b80\u4e00\u4e9b\uff0c\u6709\u52a9\u4e8e\u4fdd\u6301\u5e94\u7528\u7a0b\u5e8f\u7684\u54cd\u5e94\u80fd\u529b\uff0c\u4e5f\u80fd\u51cf\u5c11\u5f15\u5165\u201c\u4f9d\u8d56\u73af\u201d\uff08interdependency cycle\uff09\u7684\u51e0\u7387 4. \u65e0\u6cd5\u5728\u7f16\u8bd1\u671f\u8bbe\u5b9a\u7684\u5168\u5c40\u5e38\u91cf\uff0c\u53ef\u4ee5\u653e\u5728initialize\u65b9\u6cd5\u91cc\u521d\u59cb\u5316 Notification\u4e2dpost\u548creceive\u662f\u5728\u540c\u4e00\u4e2a\u73b0\u7a0b\u4e2d\u53d1\u751f\u7684 \u873b\u8713FM \u5468\u4e8c 2018.03.27 15:00 \u5317\u4eac\u5e02 \u671d\u9633\u533a \u671d\u5916SOHO\uff0cD\u5ea7\uff0c1122\u5ba4 \u5e38\u5915\u9732 18610363605 \u873b\u8713FM \u8fc7\u7a0b \u95ee\u4e86\u4e00\u4e0b\u9879\u76ee \u5199\u4e00\u4e2a\u65cb\u8f6c\u6570\u7ec4\u67e5\u627e\u7b97\u6cd5 \u5199quickSort\u3001BFS\u3001DFS, \u9012\u5f52\u8f6c\u5faa\u73af https://www.cnblogs.com/coderkian/p/3758068.html \u65b0\u6d6a\u5fae\u535a \u5468\u4e09 2018.03.28 14:00 \u5317\u4eac\u5e02\u6d77\u6dc0\u533a\u897f\u5317\u65fa\u4e1c\u8def10\u53f7\u9662\u897f\u533a8\u53f7\u697c\u65b0\u6d6a\u603b\u90e8\u5927\u53a6\u5317\u95e8 \u738b\u695a 18813016799 \u65b0\u6d6a\u5fae\u535a \u8fc7\u7a0b \u5148\u4f5c\u7b14\u8bd5\u9898 NSRunloop\u4fdd\u6d3b,\u7ed9runloop\u6dfb\u52a0\u4e00\u4e0bNSMachPort TableView\u4f18\u5316\u7684\u65b9\u6cd5:\u7f13\u5b58\u9ad8\u5ea6\u3001\u5f02\u6b65\u7ed8\u5236\u3001\u6309\u9700\u52a0\u8f7d\u56fe\u7247 \u5982\u4f55\u63d0\u524d\u52a0\u8f7d\u56fe\u7247 \u5224\u65ad\u56fe\u7247\u7c7b\u578b\uff0c\u56fe\u7247\u6570\u636e\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\u4f1a\u6807\u8bc6\u51fa\u8fd9\u4e2a\u56fe\u7247\u7684\u7c7b\u578b imageName\u548cimageWithContentOfFile\u3001imageWithData\u7684\u533a\u522b: imageName\u52a0\u8f7d\u7684\u56fe\u7247\u4f1a\u5728\u5185\u5b58\u4e2d\u7f13\u5b58\uff0c\u540e\u4e24\u8005\u4e0d\u4f1a\u7f13\u5b58 \u6d77\u91cf\u6570\u636e\u5904\u7406\uff0c\u5185\u5b58\u5927\u5c0f\u9650\u5236\u65f6\u7684\u603b\u9898 topK\u95ee\u9898 crash\u6536\u96c6 NSOperation\u81ea\u5b9a\u4e49\u5b50\u7c7b https://www.jianshu.com/p/4b1d77054b35 \u7f8e\u56e2 \u5468\u56db 2018.03.29 10:30 \u5317\u4eac\u5e02\u671d\u9633\u533a\u671b\u4eac\u4e1c\u8def6\u53f7\u671b\u4eac\u56fd\u9645\u7814\u53d1\u56edFG\u5ea7 \u6768\u5586 15600243362 \u81ea\u5e26\u7b80\u5386 \u7f8e\u56e2 \u4e09\u9762\u95ee\u9898\u51c6\u5907 topK\u95ee\u9898 \u7ea2\u7eff\u706f\u8def\u53e3\u4f18\u5316\u95ee\u9898 O(1)\u65f6\u95f4\u590d\u6742\u5ea6\u5220\u94fe\u8868\u8282\u70b9 \u548c\u6700\u5927\u5b50\u6570\u7ec4 KVO\u6d3e\u751f\u5b50\u7c7b\u540e\uff0c\u539f\u5bf9\u8c61\u8fd8\u80fd\u5224\u65ad\u7c7b\u578b\u76f8\u7b49\u5417 \u7c7b\u7c07\u6a21\u5f0f\u3001\u6784\u5efa\u8005\u6a21\u5f0f\u3001\u5de5\u5382\u6a21\u5f0f \u6392\u5e8f\u7b97\u6cd5\u54ea\u4e9b\u662f\u7a33\u5b9a\u7684\u54ea\u4e9b\u662f\u4e0d\u7a33\u5b9a\u7684\uff0c\u7b97\u6cd5\u590d\u6742\u5ea6\uff0c\u7a33\u5b9a\u6392\u5e8f\u6709\u4ec0\u4e48\u7528 \u6574\u7406\u4e00\u4e0b\u9879\u76ee\u4e2d\u7684\u5173\u952e\u6280\u672f\u70b9 https://blog.csdn.net/u010742414/article/details/78260938 NSOperation\u7684main\u65b9\u6cd5\u8c03\u7528\u540eOperation\u4f1a\u88ab\u79fb\u9664\uff0cstart\u65b9\u6cd5\u5728\u8c03\u7528\u540e\uff0coperation\u9700\u8981\u624b\u52a8\u7ba1\u7406\u5176\u91ca\u653e \u767e\u5ea6\u89c6\u9891 \u5468\u56db 2018.03.29 14:00 \u6d77\u6dc0\u533a\u897f\u5317\u65fa\u4e1c\u8def \u6587\u601d\u6d77\u8f89\u5927\u53a6 -\u767e\u5ea6\u89c6\u9891\u529e\u516c\u533a \u9b4f\u535a 13891924500 \u767e\u5ea6\u89c6\u9891 \u767e\u5ea6\u89c6\u9891\u7ed9Offer\u4e0d\u6253\u7b97\u53bb\u4e86 \u63a2\u63a2 \u5468\u4e94 2018.03.30 14:30 \u671d\u9633\u533a\u5149\u534e\u8defSOHO\u4e8c\u671fD\u5ea75-11 (1\u53f7\u7ebf\u6c38\u5b89\u91cc\u5730\u94c1\u7ad9B\u51fa\u53e3\uff09cherry 18600536159 \u63a2\u63a2 \u8fc7\u7a0b \u5199\u4e00\u4e2aLRUCache \u5feb\u624b \u5468\u4e8c 2018.04.03 14:00 \u5317\u4eac\u5e02 \u6d77\u6dc0\u533a \u6e05\u534e\u540c\u65b9\u79d1\u6280\u5927\u53a6B\u5ea712\u5c42 \u5feb\u624b \u5b57\u7b26\u4e32\u65cb\u8f6c(\u5de6/\u53f3) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include iostream #include vector #include cstring using namespace std ; string rotateString ( string input , int index ) { reverse ( input . begin (), input . begin () + index ); reverse ( input . begin () + index , input . end ()); reverse ( input . begin (), input . end ()); return input ; } int main ( int argc , const char * argv []) { // insert code here... string input = abcdefg ; cout rotateString ( input , 2 ) endl ; return 0 ; } - \u6c42\u96c6\u5408\u7684\u6240\u6709\u5b50\u96c6\uff0c\u96c6\u5408\u672c\u8eab\u5143\u7d20\u6ca1\u6709\u91cd\u590d\u7684\uff0c\u6240\u6709\u5143\u7d20\u653e\u5728\u6570\u7ec4\u4e2d 1 - \u6c42\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u516c\u5171\u5143\u7d20 \u733f\b\u8f85\u5bfc \u65cb\u8f6c\u6253\u5370\u77e9\u9635 \u62c6\u5206\u5947\u5076\u6570\u53cc\u5411\u94fe\u8868\u7ed3\u70b9\u4e3a\u4e24\u4e2a\u5b50\u94fe\u8868 \u627e\u4e00\u4e2a\u94fe\u8868\u7684\u4e2d\u95f4\u7ed3\u70b9 \u4e00\u4e2a\b\u6574\u578b\u6570\u7ec4\uff0c\u76f8\u90bb\u4e24\u4e2a\u5143\u7d20\u4e0d\u80fd\u540c\u65f6\u53d6\u51fa\uff0c\u6c42\u6240\u6709\u5b50\u5e8f\u5217\u548c\u7684\u6700\u5927\u503c \u767e\u5ea6\u591a\u6a21\u641c\u7d22\u90e8 \u5468\u4e00 2018.04.09 14:00 \u767e\u5ea6\u79d1\u6280\u56ed1\u53f7\u697c(\u5317\u4eac\u6d77\u6dc0\u533a\u897f\u5317\u65fa\u767e\u5ea6\u79d1\u6280\u56ed1\u53f7\u697c) \u4faf\u4e16\u6770 18600393412 \u5feb\u770b\u6f2b\u753b \u5468\u4e8c 2018.08.10 14:30 \u5317\u4eac\u5e02\u671d\u9633\u533a\u671b\u4eac\u878d\u79d1\u4e2d\u5fc3B\u5ea7703 \u738b\u71d5\u98de 15010353996","title":"\u9762\u8bd5"},{"location":"iOS/review/#_1","text":"http://www.woshipm.com/zhichang/526302.html","title":"\u6574\u4e2a\u62db\u8058\u6d41\u7a0b"},{"location":"iOS/review/#_2","text":"","title":"\u9762\u8bd5\u524d"},{"location":"iOS/review/#_3","text":"","title":"\u9762\u8bd5\u4e2d"},{"location":"iOS/review/#mrcarcgettersetter","text":"","title":"MRC\u548cARC\u4e0b\u7684\u5c5e\u6027\u548cgetter/setter\u5199\u6cd5"},{"location":"iOS/review/#mrc","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #import ViewController.h @interface ViewController () @property ( nonatomic , strong ) NSString * name ; @end @implementation ViewController @synthesize name = _name ; -( void ) setName: ( NSString * ) name { if ( _name != name ){ [ _name release ]; _name = [ name retain ]; } } -( NSString * ) name { return _name ; } @end","title":"MRC"},{"location":"iOS/review/#arc","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #import ViewController.h @interface ViewController () @property ( nonatomic , strong ) NSString * name ; @end @implementation ViewController @synthesize name = _name ; -( void ) setName: ( NSString * ) name { _name = name ; } -( NSString * ) name { return _name ; } @end","title":"ARC"},{"location":"iOS/review/#_4","text":"","title":"\u5c5e\u6027\u5217\u8868\u548c\u6210\u5458\u53d8\u91cf"},{"location":"iOS/review/#kvc","text":"KVC\u672c\u8d28\u4e0a\u662f\u64cd\u4f5c\u65b9\u6cd5\u5217\u8868\u4ee5\u53ca\u5728\u5185\u5b58\u4e2d\u67e5\u627e\u5b9e\u4f8b\u53d8\u91cf\uff0c\u53ef\u4ee5\u7528\u6765\u8bbf\u95ee\u79c1\u7528\u53d8\u91cf \b\u5229\u7528\u53cd\u5c04:NSStringFromSelector(@selector())\u53ef\u4ee5\u51cf\u5c11KVC\u5b57\u7b26\u4e32\u5199\u9519","title":"KVC"},{"location":"iOS/review/#kvo","text":"\u4e3b\u8981\u4e09\u4e2a\u65b9\u6cd5: - addObserver - removeObserver - observeValueForKeyPath \b\u4e3b\u8981\u6dfb\u52a0\u548c\u79fb\u9664\uff0c\u4e0d\u8981\u91cd\u590d\u6dfb\u52a0\uff0c\u53ca\u65f6\u79fb\u9664 \u7c7b\u88ab\u7b2c\u4e00\u89c2\u5bdf\u65f6\uff0c\u4f1a\u4ea7\u751f\u4e00\u4e2a\u5b50\u7c7b\uff0c\u5b50\u7c7b\u79cd\u91cd\u5199\u5c5e\u6027\u7684setter\u65b9\u6cd5\uff0c\u5e76\u628aisa\u6307\u9488\u6307\u5411\u8be5\u5b50\u7c7b\u3002\u91cd\u5199\u7684setter\u65b9\u6cd5\u5b9e\u73b0\u901a\u77e5\u673a\u5236","title":"KVO"},{"location":"iOS/review/#notification","text":"post\u548c\u8f6c\u53d1\u5728\u540c\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u8fdb\u884c\uff0c\u4e0e\u6ce8\u518c\u89c2\u5bdf\u8005\u6240\u5728\u7684\u7ebf\u7a0b\u65e0\u5173\uff0c\u5fc5\u8981\u65f6\u9700\u8981\u8f6c\u53d1\u5230\u4e0d\u540c\u7ebf\u7a0b","title":"Notification"},{"location":"iOS/review/#runtime","text":"Class \u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u6307\u5411objc_class\u7684\u7ed3\u6784\u4f53\u6307\u9488\uff0c\u8868\u793a\u4e00\u4e2a\u7c7b\u7684\u7c7b\u7ed3\u6784\u3002 Method\u662fRuntime\u5185\u90e8\u5b9a\u4e49\u7684\u65b9\u6cd5,Class\u4e2d\u5b9a\u4e49\u6709\u4e00\u4e2aobjc_method_list,\u94fe\u8868\u90fd\u662fobjc_method\u7c7b\u578b\u7684 SEL\u6807\u793a\u65b9\u6cd5\u7684\u540d\u5b57/\u7b7e\u540d IMP \u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u8fd9\u4e2a\u88ab\u6307\u5411\u7684\u51fd\u6570\u5305\u542b\u4e00\u4e2a\u63a5\u6536\u6d88\u606f\u7684\u5bf9\u8c61id, \u8c03\u7528\u65b9\u6cd5\u7684\u9009\u6807 SEL\uff0c\u4ee5\u53ca\u4e0d\u5b9a\u4e2a\u6570\u7684\u65b9\u6cd5\u53c2\u6570\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2aid\u3002\u4e5f\u5c31\u662f\u8bf4IMP\u662f\u6d88\u606f\u6700\u7ec8\u8c03\u7528\u7684\u6267\u884c\u4ee3\u7801\uff0c\u662f\u65b9\u6cd5\u771f\u6b63\u7684\u5b9e\u73b0\u4ee3\u7801 \u3002\u6211\u4eec\u53ef\u4ee5\u50cf\u5728\uff23\u8bed\u8a00\u91cc\u9762\u4e00\u6837\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570\u6307\u9488\u3002 +load\u5148\u4e8emain()\u88ab\u8c03\u7528, dyld\u52a0\u8f7d\u955c\u50cf\u65f6\u8c03\u7528\u6240\u6709\u7c7b\u7684+load\u65b9\u6cd5\uff0c+initialize\u662f\u61d2\u52a0\u8f7d\u7684\uff0c\u53ea\u6709\u7c7b\u88ab\u4f7f\u7528\u65f6\u624d\u4f1a\u88ab\u8c03\u7528\u3002 https://www.jianshu.com/p/eac6ed137e06","title":"Runtime"},{"location":"iOS/review/#_5","text":"http://www.cocoachina.com/ios/20160303/15498.html","title":"\u5185\u5b58\u7ba1\u7406"},{"location":"iOS/review/#_6","text":"http://www.jb51.net/article/89676.htm \u6df1\u62f7\u8d1d\u4e2d\u590d\u5236\u4e00\u5c42 \u5b8c\u5168\u590d\u5236\u9700\u8981\u4f7f\u7528\u5f52\u6863\u548c\u63a5\u6863","title":"\u6df1\u6d45\u62f7\u8d1d"},{"location":"iOS/review/#oc","text":"http://blog.csdn.net/xiaolinyeyi/article/details/51393383","title":"OC\u5bf9\u8c61\u5185\u5b58\u5e03\u5c40"},{"location":"iOS/review/#_7","text":"https://www.jianshu.com/p/ea61895be31f","title":"\u8fd0\u884c\u65f6\u548c\u6d88\u606f\u8f6c\u53d1"},{"location":"iOS/review/#_8","text":"https://www.jianshu.com/p/249b705d4fbb","title":"\u7c7b\u548c\u5143\u7c7b\u7684\u533a\u522b"},{"location":"iOS/review/#jsnative","text":"\u4f7f\u7528webView:shouldStartLoadWithRequest\u65b9\u6cd5\u5bf9\u8bf7\u6c42\u8fdb\u884c\u62e6\u622a\u5e76\u5206\u60c5\u51b5\u8c03\u7528NativeCode\uff0c\u9700\u8981\u4e0d\u65ad\u62e6\u622a\u8fc7\u6ee4 \u4f7f\u7528JS\u6846\u67b6\u5982javascriptcore,\u6bd4\u8f83\u7075\u6d3b stringByEvaluatingJavaScriptFromString\u5e94\u8be5\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u6267\u884c","title":"JS\u4e0eNative\u4ea4\u4e92"},{"location":"iOS/review/#_9","text":"1 2 3 1. \u9700\u8981\u7a7a\u95f4\u50a8\u5b58\u7d22\u5f15 2. \u521b\u5efa\u548c\u7ef4\u62a4\u7d22\u5f15\u9700\u8981\u8017\u8d39\u65f6\u95f4 3. \u5f53\u5220\u9664\uff0c\u63d2\u5165\u548c\u66f4\u65b0\u6570\u636e\u662f\uff0c\u7d22\u5f15\u4e5f\u9700\u8981\u8fdb\u884c\u66f4\u65b0\uff0c\u8fd9\u6837\u964d\u4f4e\u4e86\u5199\u6570\u636e\u7684\u901f\u5ea6\u3002","title":"\u7d22\u5f15\u7684\u7f3a\u70b9"},{"location":"iOS/review/#nsstring","text":"\u5e38\u91cf\u7684\u5b57\u7b26\u4e32\u76f4\u63a5\u5b58\u5728\u5e38\u91cf\u91cc\uff0c\u4e14\u5185\u5bb9\u76f8\u7b49\u7684\u90fd\u6307\u5411\u540c\u4e00\u5757\u5e38\u91cf\u533a \u7528\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u751f\u6210\u7684NSString\u4e0e\u6e90\u5b57\u7b26\u4e32\u540c\u5730\u5740 \u7528copy\u662f\u4e3a\u4e86\u5b89\u5168,\u9632\u6b62NSMutableString\u8d4b\u503c\u7ed9NSString\u65f6,\u524d\u8005\u4fee\u6539\u5f15\u8d77\u540e\u8005\u503c\u53d8\u5316\u800c\u7528\u7684","title":"NSString"},{"location":"iOS/review/#gcd","text":"https://www.jianshu.com/p/77c5051aede2 http://www.cocoachina.com/cms/wap.php?action=article id=22573 http://www.cocoachina.com/ios/20160804/17291.html","title":"GCD"},{"location":"iOS/review/#pthreadnsthreadnsoperationqueue","text":"NSOperationQueue\u53ef\u4ee5\u5f80\u91cc\u9762\u6dfb\u52a0Operation\u4efb\u52a1\uff0c\u53ef\u4ee5\u9650\u5236\u6700\u5927\u5e76\u53d1\u4e2a\u6570","title":"pthread\u3001NSThread\u3001NSOperationQueue"},{"location":"iOS/review/#_10","text":"dispatch_semaphore_create(Init Count)/dispatch_semaphore_wait(-1)/dispatch_semaphore_signal(+1) \u4fe1\u53f7\u91cf\u4e3a0\u65f6\uff0c\u7ebf\u7a0b\u963b\u585e\u76f4\u5230\u4fe1\u53f7\u91cf\u5927\u4e8e0","title":"\u4fe1\u53f7\u91cf"},{"location":"iOS/review/#_11","text":"","title":"\u9501\u673a\u5236"},{"location":"iOS/review/#_12","text":"\u6d88\u606f\u9996\u5148\u4f1a\u987a\u7740\u7ee7\u627f\u7ed3\u6784\u54cd\u5e94 \u7ee7\u627f\u7ed3\u6784\u4e2d\u6ca1\u6709\u88ab\u54cd\u5e94\u4f1a\u8fdb\u5165resolveInstanceMethod\u65b9\u6cd5\uff0c\u4ece\u52a8\u6001\u6dfb\u52a0\u7684\u65b9\u6cd5\u91cc\u54cd\u5e94 \u4ee5\u4e0a\u90fd\u6ca1\u6709\u54cd\u5e94\u4f7f\u7528forwardingTargetForSelector\uff0c\u8f6c\u4ea4\u54cd\u5e94\u76ee\u6807 \u8fd8\u4e0d\u884c\u8c03\u7528methodSignatureForSelector\u83b7\u5f97\u65b9\u6cd5\u7b7e\u540d\uff0c\u8c03\u7528forwardInvocation \u5173\u4e8e\u751f\u6210\u7b7e\u540d\u7684\u7c7b\u578b\"v@:\"\u89e3\u91ca\u4e00\u4e0b\u3002\u6bcf\u4e00\u4e2a\u65b9\u6cd5\u4f1a\u9ed8\u8ba4\u9690\u85cf\u4e24\u4e2a\u53c2\u6570\uff0cself\u3001_cmd\uff0cself\u4ee3\u8868\u65b9\u6cd5\u8c03\u7528\u8005\uff0c_cmd\u4ee3\u8868\u8fd9\u4e2a\u65b9\u6cd5\u7684SEL\uff0c\u7b7e\u540d\u7c7b\u578b\u5c31\u662f\u7528\u6765\u63cf\u8ff0\u8fd9\u4e2a\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u3001\u53c2\u6570\u7684\uff0cv\u4ee3\u8868\u8fd4\u56de\u503c\u4e3avoid\uff0c@\u8868\u793aself\uff0c:\u8868\u793a_cmd\u3002","title":"\u4e8b\u4ef6\u3001\u54cd\u5e94\u94fe\u3001\u4e8b\u4ef6\u4f20\u9012\u3001\u4e8b\u4ef6\u62e6\u622a"},{"location":"iOS/review/#_13","text":"https://www.cnblogs.com/Xylophone/p/7148037.html","title":"\u54cd\u5e94\u94fe"},{"location":"iOS/review/#_14","text":"","title":"\u53d8\u91cf\u7c7b\u578b"},{"location":"iOS/review/#_15","text":"\u81ea\u52a8\u53d8\u91cf \u51fd\u6570\u53c2\u6570 \u9759\u6001\u53d8\u91cf \u9759\u6001\u5168\u5c40\u53d8\u91cf \u5168\u5c40\u53d8\u91cf block\u91cc\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539\u7684\u662f\u9759\u6001\u53d8\u91cf\u3001\u9759\u6001\u5168\u5c40\u53d8\u91cf\u548c\u5168\u5c40\u53d8\u91cf\uff0c\u9ed8\u8ba4\u5bf9\u81ea\u52a8\u53d8\u91cf\u4ec5\u6355\u83b7\u5176\u503c\uff0c \u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u4fee\u6539\uff0c\u9759\u6001\u53d8\u91cf\u662f\u4ee5\u5730\u5740\u88ab\u6355\u83b7\uff0c\u6240\u4ee5\u53ef\u4ee5\u4fee\u6539\uff0c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u662f\u56e0\u4e3a\u5728\u516c\u5171\u533a\uff0c\u6240\u4ee5\u53ef\u4ee5\u88abblock\u76f4\u63a5\u8bbf\u95ee block \u6709\u4e09\u79cd\uff0c\u5168\u5c40block\uff0c\u6808block\u548c\u5806block\uff0c\u53ea\u6709\u5806block\u4f1a\u6301\u6709\u5bf9\u8c61","title":"\u7a0b\u5e8f\u5185\u5b58\u6a21\u578b"},{"location":"iOS/review/#_16","text":"https://www.cnblogs.com/wengzilin/p/4347974.html","title":"\u5faa\u73af\u5f15\u7528\u95ee\u9898"},{"location":"iOS/review/#kvckvoruntime","text":"","title":"KVC\u3001KVO\u4e0eruntime"},{"location":"iOS/review/#_17","text":"","title":"\u7ebf\u7a0b\u5b89\u5168"},{"location":"iOS/review/#_18","text":"@synchronized(lock) \u4e92\u65a5\u9501\u7528\u4e8e\u7ebf\u7a0b\u540c\u6b65(\u56fe\u65b9\u4fbf) NSLock\u6709trylock/lock\u548cunlock\u8fd9\u51e0\u4e2a\u64cd\u4f5c NSRecursiveLock\u5b9e\u9645\u4e0a\u5b9a\u4e49\u7684\u662f\u4e00\u4e2a\u9012\u5f52\u9501\uff0c\u8fd9\u4e2a\u9501\u53ef\u4ee5\u88ab\u540c\u4e00\u7ebf\u7a0b\u591a\u6b21\u8bf7\u6c42\uff0c\u800c\u4e0d\u4f1a\u5f15\u8d77\u6b7b\u9501\u3002\u8fd9\u4e3b\u8981\u662f\u7528\u5728\u5faa\u73af\u6216\u9012\u5f52\u64cd\u4f5c\u4e2d\u3002 NSConditionLock\u6761\u4ef6\u9501lock\u3001unlock\u3001lockWhenCondition\u3001unlockWhenCondition dispatch_semaphore\u5c31\u662f\u4fe1\u53f7\u91cfcreate\\wait\\signal(\u4f18\u5148\u9009\u62e9) NSCondition\u540c\u65f6\u5177\u5907\u4e92\u65a5\u9501\u548c\u4fe1\u53f7\u91cf\u7684\u529f\u80fdlock/unlock/wait/signal pthread_mutex\u662fC\u8bed\u8a00\u9501\u63a5\u53e3\uff0c\u4e0d\u592a\u5bb9\u6613\u4f7f\u7528 OSSpinLock","title":"\u65b9\u5f0f"},{"location":"iOS/review/#nstimer","text":"https://blog.csdn.net/a2331046/article/details/50240635 NSTimer\u4e0d\u7cbe\u786e\uff0c\u4f1a\u88ab\u7ebf\u7a0b\u963b\u585e\u5f71\u54cd\uff0c\u4e3b\u7a0b\u7684RunLoop\u9ed8\u8ba4\u5f00\u542f\uff0c\u5176\u5b83\u7ebf\u7a0b\u7684runLoop\u9700\u8981\u624b\u52a8\u5f00\u542f\u4f7fTimer\u5de5\u4f5c\uff0c\u54ea\u91cc\u5f00\u542f\uff0c\u54ea\u91cc\u7ed3\u675f\u3002 \u5faa\u73af\u5f15\u7528\u95ee\u9898","title":"NSTimer"},{"location":"iOS/review/#_19","text":"timer\u4f1aretain\u6307\u5b9atimer\u56de\u8c03\u65b9\u6cd5\u7684\u63a5\u6536\u8005\uff0c\u4e5f\u5c31\u662ftarget\u5bf9\u8c61\uff0c\u4ee5\u6b64\u4fdd\u8bc1\u5b9a\u65f6\u4efb\u52a1\u80fd\u591f\u5b8c\u6210 \u4e00\u6b21\u6027timer\u5728\u4efb\u52a1\u6267\u884c\u5b8c\u6210\u540e\u4f1a\u81ea\u52a8invalidate,\u800c\u65e0\u9650\u91cd\u590d\u6027\u7684timer\u7531\u4e8e\u4e00\u76f4\u6709\u6548\uff0c\u6240\u4ee5\u9700\u8981\u624b\u52a8\u8c03\u7528invalidate dealloc\u4e2d\u8c03\u7528[timer invalidate]\u4e0d\u884c\uff0c\u56e0\u4e3atimer\u6ca1\u6709\u5931\u6548\u524d\uff0ctarget\u5bf9\u8c61\u5f15\u7528\u8ba1\u6570\u4e0d\u4e3a0\uff0c dealloc\u4e0d\u4f1a\u88ab\u8c03\u52a8 timer\u4e0d\u662f\u5b9e\u65f6\u7684\uff0c\u5ef6\u8fdf\u7a0b\u5e8f\u4e0e\u5f53\u524d\u7ebf\u7a0b\u7684\u6267\u884c\u60c5\u51b5\u76f8\u5173\uff0c\u5982\u679c\u4e0a\u4e00\u6b21\u5b9a\u65f6\u4efb\u52a1\u88ab\u5ef6\u8fdf\uff0c\u53ef\u80fd\u4f1a\u548c\u4e4b\u540e\u7684\u5b9a\u65f6\u4e8b\u4ef6\u5408\u5e76\u4e3a\u4e00\u4e2a timer\u8981\u6dfb\u52a0\u5230runloop\u4e2d\u624d\u4f1a\u751f\u6548\uff0c\u81ea\u5df1alloc\u548cinit\u7684timer\u9700\u8981\u52a0\u5230runloop\u91cc\u9762\uff0c\u540c\u65f6\u542f\u52a8runloop\u624d\u80fd\u751f\u6548(\u8fd8\u8981\u6ce8\u610frunloop\u7684\u8fd0\u884c\u6a21\u5f0f\u662f\u5426\u6b63\u786e)\u3002\u6240\u6709\u7684source\u90fd\u8981\u52a0\u5165\u5230runloop\u4e2d\u624d\u80fd\u4f7f\u7528\uff0ctimer\u662f\u4e00\u79cdsource","title":"\u76f8\u5173\u95ee\u9898"},{"location":"iOS/review/#runloop","text":"","title":"Runloop\u673a\u5236"},{"location":"iOS/review/#_20","text":"","title":"\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"iOS/review/#mvc","text":"","title":"MVC"},{"location":"iOS/review/#mvp","text":"\u6a21\u578b\u548c\u89c6\u56fe\u5b8c\u5168\u9694\u79bb\u5f00\uff0c\u903b\u8f91\u90fd\u653e\u5728Presenter\u91cc\u9762","title":"MVP"},{"location":"iOS/review/#mvvm","text":"ViewModel\u662f\u8f38\u5165\u8f38\u51fa\u7684\u8f6c\u6362,\u4e0e\u7ed1\u5b9a\u673a\u5236\u8054\u5408\u5a01\u529b\u66f4\u5927, \u517c\u5bb9MVC\uff0c\u4fbf\u4e8e\u6d4b\u8bd5\u3002OSX+CocoaBinding, iOS + ReactiveCocoa/RxSwift","title":"MVVM"},{"location":"iOS/review/#viper","text":"View/Interactor/Presenter/Entity/Router \u6613\u6d4b\u8bd5\u3001\u7406\u89e3\u3001\u7ef4\u62a4\uff0c\u53ef\u4e0eCoreData\u8054\u5408\u4f7f\u7528","title":"VIPER"},{"location":"iOS/review/#dlna","text":"","title":"DLNA\u534f\u8bae"},{"location":"iOS/review/#-upnpuuid","text":"","title":"- UPnP\u534f\u8bae\u53d1\u73b0\u7f51\u7edc\u4e2d\u7684\u8bbe\u5907(\u670d\u52a1\u3001\u8bbe\u5907(UUID\u8bbe\u5907\u6807\u8bc6)\u3001\u63a7\u5236\u70b9)"},{"location":"iOS/review/#_21","text":"","title":"\u7ec4\u4ef6\u5316\u65b9\u5f0f"},{"location":"iOS/review/#category-runtime","text":"category \u548c \u4e3b\u7c7b\u4e2d\u90fd\u6709+load\u65b9\u6cd5\u65f6\uff0c\u4f1a\u5148\u8c03\u7528\u4e3b\u7c7b\u7684+load\u540e\u8c03\u7528category\u7684+load\uff0c\u591a\u4e2acategory\u4e4b\u95f4\u662f\u6309\u7167\u7f16\u8bd1\u987a\u5e8f\u8c03\u7528+load category \u4e2d\u4e0d\u80fd\u6dfb\u52a0\u5b9e\u4f8b\u53d8\u91cf\uff0c\u53ea\u80fd\u6dfb\u4e2d\u65b9\u6cd5 category \u4e2d\u52a8\u6001\u6dfb\u52a0\u5173\u8054\u5bf9\u8c61\u662f\u653e\u5728\u4e00\u4e2a\u5168\u5c40\u54c8\u5e0c\u8868\u4e2d\uff0c\u4ee5\u5173\u8054\u5185\u5b58\u5730\u5740\u4e3a\u952e\uff0c\u5bf9\u8c61\u9500\u6bc1\u65f6\u4f1a\u68c0\u67e5\u81ea\u5df1\u6709\u6ca1\u6709\u5173\u8054\u5bf9\u8c61\uff0c\u6709\u5c31\u9664\u53bb\u54c8\u5e0c\u8868\u4e2d\u7684\u6761\u76ee","title":"category \u548c runtime"},{"location":"iOS/review/#_22","text":"\u4f7f\u7528ARC View\u5c3d\u91cf\u4e0d\u900f\u660e \u907f\u514d\u5728UIImageView\u4e2d\u8c03\u6574\u56fe\u7247\u5927\u5c0f(\u672c\u5730\u56fe\u7247)\uff0c\u56fe\u7edc\u56fe\u7247\u80cc\u666f\u7ebf\u7a0b\u8c03\u6574\u5927\u5c0f \u61d2\u52a0\u8f7d \u7f13\u5b58\u6570\u636e \u9002\u5f53\u4f7f\u7528autoreleasepool \u5c3d\u91cf\u907f\u514d\u65f6\u671f\u683c\u5f0f\u8f6c\u6362\uff0c\u521b\u5efa NSDateFormatter \u5f88\u8d39\u65f6\u95f4","title":"\u6027\u80fd\u4f18\u5316"},{"location":"iOS/review/#_23","text":"https://www.zhihu.com/question/24964987 topK \u95ee\u9898","title":"\u7b97\u6cd5\u76f8\u5173"},{"location":"iOS/review/#_24","text":"","title":"\u5d29\u6e83\u7387\u6807\u51c6"},{"location":"iOS/review/#_25","text":"atomic\u6240\u8bf4\u7684\u7ebf\u7a0b\u5b89\u5168\u53ea\u662f\u4fdd\u8bc1\u4e86getter\u548csetter\u5b58\u53d6\u65b9\u6cd5\u7684\u7ebf\u7a0b\u5b89\u5168\uff0c\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u6574\u4e2a\u5bf9\u8c61\u662f\u7ebf\u7a0b\u5b89\u5168\u7684","title":"\u7ebf\u7a0b\u5b89\u5168"},{"location":"iOS/review/#_26","text":"\u51c6\u5907\u8d44\u6599: http://www.cocoachina.com/bbs/read.php?tid=460991 \u5468\u516d 2018.03.17 17:30 \u77e5\u6625\u8def\u5e0c\u683c\u739b\u5927\u53a6B1\u7bee\u7403\u573a \u53f6\u5973\u58eb 17801077277 \u817e\u8baf","title":"\u817e\u8baf\u9762\u8bd5"},{"location":"iOS/review/#_27","text":"\u95ee\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u5e94\u8be5\u600e\u4e48\u4fee\u6539\uff1f ViewController.h 1 2 3 4 5 #import UIKit/UIKit.h @interface ViewController : UIViewController @end ViewController.m 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #import ViewController.h @interface ViewController () //will crash if not set to atomic, because the setter will be called in concurrent thread, and member will be release incorrect @property ( nonatomic , strong ) NSString * target ; @end @implementation ViewController - ( void ) viewDidLoad { [ super viewDidLoad ]; // Do any additional setup after loading the view, typically from a nib. dispatch_queue_t queue = dispatch_queue_create ( com.joker.concurrent , DISPATCH_QUEUE_CONCURRENT ); for ( int i = 0 ; i 100000 ; i ++ ) { dispatch_async ( queue , ^ { self . target = [ NSString stringWithFormat : @ A Mock String ]; }); } } @end \u6240\u4ee5\uff0c\u5e76\u53d1\u65f6\uff0c\u8c03\u7528\u4e0d\u5f53\uff0c\u4f1a\u591a\u6b21\u8c03\u7528target\u5c5e\u6027setter\u65b9\u6cd5\u4e2d\u7684[_target release]\uff0c\u9020\u6210\u591a\u6b21\u91ca\u653e\uff0c\u8fdb\u800c\u5d29\u6e83\u3002\u6539\u6210atomic\u5c5e\u6027\u3002","title":"\u9762\u8bd5\u9898"},{"location":"iOS/review/#_28","text":"DLNA\u7684\u534f\u8bae\u6ca1\u6709\u6df1\u523b\u7406\u89e3 \u64ad\u653e\u5668\u53bb\u8026\u5408\u90e8\u5206\u4ecb\u7ecd\u6709\u70b9\u82cd\u767d \u7248\u672c\u5c55\u73b0\u7edf\u8ba1\u4ecb\u7ecd\u6709\u70b9\u7b3c\u7edf \u7b54\u9898\u65f6\u8868\u73b0\u7684\u4e0d\u591f\u6c89\u7a33","title":"\u603b\u7ed3"},{"location":"iOS/review/#_29","text":"\u51c6\u5907\u8d44\u6599\uff1a \u5468\u4e00 2018.03.19 10:00 \u6d77\u6dc0\u533a\u5b66\u9662\u8def\u7532 5 \u53f7 768 \u521b\u610f\u56ed A \u5ea7\u897f\u533a\u4e8c\u901a\u9053 1002 \u5ba4 \u738b\u6167 17611252710 \u77e5\u4e4e","title":"\u77e5\u4e4e"},{"location":"iOS/review/#-","text":"\u9012\u5f52 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 node * reverseList ( node * head , node ** h ) { if ( head - next == NULL ){ * h = head ; return head ; } node * end = reverseList ( head - next , h ); end - next = head ; head - next = NULL ; return head ; } void reverseList ( node ** head ) { node * h = NULL ; node * subListEnd = reverseList (( * head ) - next , h ); subListEnd - next = * head ; ( * head ) - next = NULL ; * head = h ; } \u975e\u9012\u5f52 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 void reverseNocur ( node ** head ) { node * pre = * head ; node * cur = ( * head ) - next ; if ( cur == NULL ){ * head = pre ; } else { ( * head ) - next = NULL ; } node * next = cur - next ; cur - next = pre ; while ( next != NULL ) { pre = cur ; cur = next ; next = cur - next ; cur - next = pre ; } * head = cur ; }","title":"\u51c6\u5907\u8d44\u6599 - \u7528\u9012\u5f52\u548c\u975e\u9012\u5f52\u9006\u5e8f\u5355\u5411\u94fe\u8868"},{"location":"iOS/review/#_30","text":"\u95ee\u4e86\u5f88\u591a\u9879\u76ee\u7684\u4e8b\u60c5\uff0c\u90fd\u662f\u987a\u7740\u9879\u76ee\u8003\u67e5\u57fa\u7840\u77e5\u8bc6\u70b9\uff0c\u95ee\u4e86\u7ec4\u4ef6\u5316\uff0c\u521d\u59cb\u5316\u7ec4\u4ef6\u5e94\u8be5\u600e\u4e48\u5b9e\u73b0\u3002 \u5982\u4f55\u5224\u65ad\u591a\u4e2a\u5e76\u53d1\u4efb\u52a1\u5168\u90e8\u5b8c\u6210\uff0c\u53ca\u5b9e\u73b0\u539f\u7406 swift\u7684Optional\u539f\u7406 MVC\u3001MVVM\u3001MVP\u3001VIPER \u600e\u6837\u6d4b\u8bd5\u4e00\u4e2aModel","title":"\u603b\u7ed3"},{"location":"iOS/review/#_31","text":"\u5468\u4e8c 2018.03.20 10:30 \u4e94\u9053\u53e3\u4f18\u76db\u5927\u53a6D\u5ea716\u5c42A \u738b\u6708\u7426 15732636310 \u963f\u91cc\u6587\u5b66","title":"\u963f\u91cc\u6587\u5b66"},{"location":"iOS/review/#_32","text":"\u5199\u4e86\u4e00\u4e2a\u6c42\u4e8c\u53c9\u6811\u6700\u5927\u6df1\u5ea6\u7684\u7b97\u6cd5\uff0c\u9012\u5f52\u8c03\u7528","title":"\u51c6\u5907\u8d44\u6599"},{"location":"iOS/review/#_33","text":"\u5468\u4e09 2018.03.21 18:45 \u5317\u4eac\u5e02\u6d77\u6dc0\u533a\u77e5\u6625\u8def63\u53f7\u4e2d\u56fd\u536b\u661f\u901a\u4fe1\u5927\u53a6A\u5ea77\u5c42 \u5f20\u8f69\u60a6 18708100119 \u4eca\u65e5\u5934\u6761","title":"\u4eca\u65e5\u5934\u6761"},{"location":"iOS/review/#_34","text":"\u5168\u5c40\u65ad\u70b9\u5c31\u662f\u5f02\u5e38\u629b\u51fa\u65ad\u70b9 \u753b\u9879\u76ee\u7ed3\u6784\u56fe \u7ed9\u5b9a\u4e00\u4e2a\u89c6\u56fe\uff0c\u89c6\u56fe\u4e0a\u6709\u82e5\u5e72UIImageView,\u5199\u4e00\u4e2a\u7edf\u8ba1\u6240\u6709UImageView\u4e2a\u6570\u7684\u7b97\u6cd5(\u9012\u5f52\u5199\u5b8c\u4e86\u518d\u7528\u5faa\u73af\u5b9e\u73b0) \u5feb\u901f\u6392\u5e8f\u7684\u539f\u7406\u548c\u65f6\u95f4\b\u590d\u6742\u5ea6 \bARC\u65f6\uff0c\u5c5e\u6027delegate\u7528\u4ec0\u4e48\u5173\u952e\u8bcd\u4fee\u9970(nonatomic,weak)\uff0cweak\u4f1a\u81ea\u52a8\u7f6enil, \u53ca\b\u81ea\u52a8\u7f6enil\u7684\u5de5\u4f5c\u539f\u7406 \b\u5982\u679c\b\u67e5\u627e\u5185\u5b58\b\u6cc4\u9732\uff0cinstrument\u5de5\u5177leaks ARC\u4e0b\uff0c\u5982\u4f55\u5904\u7406\u5faa\u73af\u5f15\u7528\u95ee\u9898(block \u6355\u83b7\u4e86self\u7684\u60c5\u51b5) block\u53d8\u91cf\u6355\u83b7\u7684\u539f\u7406\u662f\u4ec0\u4e48\uff1f [NS\bArray addObject:nil]\u4f1a\u5d29\u6e83\u5417\uff0c\u4e3a\u4ec0\u4e48\uff1f [nil message]\u8fd9\u79cd\u8c03\u7528\u65b9\u5f0f\u4f1a\u5d29\u6e83\u5417\uff1f\u4e3a\u4ec0\u4e48\uff1f \u6d88\u606f\u8c03\u7528\u7684\u539f\u7406\u662f\b\u600e\u6837\u7684\uff0c\b\b\u6216\u8005[obj message]\u8fd9\u4e2a\u8c03\u7528\u7684\b\u6574\u4e2a\u8fc7\u7a0b\u662f\u600e\u6837\u7684\uff1f \u4fe1\u53f7\u91cf\u673a\u5236\u4f7f\u7528 \u54c8\u5e0c\u8868\u751f\u6210\u539f\u7406 dispatch_group\u591a\u4e2a\u4efb\u52a1\u540c\u6b65\uff0c\u6bcf\u4e2a\u4efb\u52a1\u4e5f\u662f\u5f02\u6b65\u65f6\u600e\u4e48\u5904\u7406(\u5f00\u59cb\u7ed3\u675f\u65f6\u4f7f\u7528dispatch_group_enter()\u548cdispatch_group_leave()\u6210\u5bf9\uff0c\u8868\u793a\u4e00\u4e2a\u4efb\u52a1\u7684\u8d77\u6b62)\uff0cgroup\u662f\u5728\u7ebf\u7a0b\u4e2d \u6709\u6ca1\u6709\u770b\u8fc7\u7b2c\u4e09\u65b9\u5e93,\u8bf4\u8bf4\u539f\u7406 SDWebImageCache\u540c\u65f6\u4e0b\u8f7d\u4e24\u4e2a\u76f8\u540c\u7684URl\u65f6\u4f1a\u91cd\u590d\u4e0b\u8f7d\u5417\uff1f\u4e0d\u4f1a\uff0c\u4f1a\u5728Operations\u4e2d\u67e5\u627e\u662f\u5426\u5df2\u7ecf\u6709\u76f8\u540c\u7684\u4e0b\b\u8f7d\u64cd\u4f5c\u4e86","title":"\u9762\u8bd5\u95ee\u9898"},{"location":"iOS/review/#_35","text":"\u5468\u56db 2018.03.22 14:00 \u4e2d\u5173\u6751\u9f0e\u597d\u5927\u53a6A\u5ea77\u5c42 \u9762\u8bd5\u8054\u7cfb\u4eba\uff1a\u5218\u6b27\u4e91\uff08HRBP\uff09\uff0c\u7535\u8bdd\uff1a18511988412 \u7231\u5947\u827a","title":"\u7231\u5947\u827a"},{"location":"iOS/review/#_36","text":"\u4e00\u4e2a\u627e\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u4e2a\u53ea\u51fa\u73b0\u8fc7\u4e00\u6b21\u7684\u5b57\u7b26(\u54c8\u5e0c\u8868+\u4e24\u6b21\u904d\u5386) \u4e00\u4e2a\u4e1a\u52a1\u573a\u666f\uff0c\u8bf4\u660e\u5b9e\u73b0\u601d\u8def \u95ee\u4e00\u4e9b\u6027\u80fd\u4f18\u5316\u65b9\u9762\u7684\u4e1c\u897f \u542f\u52a8\u65f6\u957f\u4f18\u5316 \u5d29\u6e83\u7387\u5408\u7406\u533a\u95f4","title":"\u8fc7\u7a0b"},{"location":"iOS/review/#_37","text":"\u5468\u4e94 2018.03.23 10:00 \u5317\u4eac\u5e02\u671d\u9633\u533a\u961c\u901a\u4e1c\u5927\u88571\u53f7\u671b\u4eacsoho T2 B\u5ea720\u5c42 Amy 15210035422 \u964c\u964c","title":"\u964c\u964c"},{"location":"iOS/review/#_38","text":"dispatch_sync/dispatch_async\u548c\u540c\u6b65\u961f\u5217\u3001\u5f02\u6b65\u961f\u5217\u7684\u4e0d\u540c\u7ec4\u5408\u65f6\uff0c\u7cfb\u7edf\u5206\u914d\u7ebf\u7a0b\u7684\u5404\u79cd\u60c5\u51b5 NSTimer\u7684\u673a\u5236\u548c\u91ca\u653e\u65f6\u673a\uff0c\u5982\u679c\u88abretain\u4f1a\u600e\u6837 dispatch_barrier/dispatch_group\u7684\u5e94\u7528\u65b9\u5f0f","title":"\u9762\u8bd5\u5185\u5bb9"},{"location":"iOS/review/#_39","text":"\u5468\u4e00 2018.03.26 10:00 \u5317\u4eac\u5e02\u6d77\u6dc0\u533a\u897f\u5317\u65fa\u8def\u6587\u601d\u6d77\u8f89 \u6c88\u60a6 15094656466 \u6ef4\u6ef4","title":"\u6ef4\u6ef4"},{"location":"iOS/review/#_40","text":"KVO\u600e\u6837\u4fdd\u8bc1addObserver\u548cremoveObserver\u6210\u5bf9\u513f\u8c03\u7528(\u4f7f\u7528\u65b9\u6cd5\u4e2d\u7684context\u53c2\u6570\u4f5c\u4e3a\u6807\u8bc6\uff0c\u9632\u6b62\u91cd\u590d\u6dfb\u52a0\u548c\u91cd\u590d\u79fb\u9664) https://blog.csdn.net/klabcxy36897/article/details/51680423 \u5e38\u7528\u7684\u96c6\u5408\u7c7b\u5bf9\u8c61NSArray/NSDictionary/NSSet/NSCountSet/NSOrderSet KVC\u4f7f\u7528\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b \u5982\u4f55\u8ba9\u4e00\u4e2arunloop\u4e00\u76f4\u4fdd\u6301\u8fd0\u884c\u800c\u4e0d\u7a7a\u95f2 associated\u5bf9\u8c61\u662f\u4e2a\u4ec0\u4e48\u60c5\u51b5\uff0cstrong\u548cweak\u5f15\u7528\u4f1a\u4e0d\u4f1a\u51fa\u95ee\u9898 1 2 3 objc_setAssociatedObject() objc_getAssociatedObject() objc_removeAssociatedObjects() //\u91ca\u653e\u6240\u6709\u7684\u5173\u8054\u5bf9\u8c61 \u5b9e\u73b0\u66ff\u6362\b\u653e\u5728+load\u91cc\u8fd8\u662f+initialize\u4e2d 1 2 3 4 5 6 7 +(void)initialize(\u5f53\u7c7b\u7b2c\u4e00\u6b21\u88ab\u8c03\u7528\u7684\u65f6\u5019\u5c31\u4f1a\u8c03\u7528\u8be5\u65b9\u6cd5,\u6574\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u4e2d\u53ea\u4f1a\u8c03\u7528\u4e00\u6b21) +(void)load(\u5f53\u7a0b\u5e8f\u542f\u52a8\u7684\u65f6\u5019\u5c31\u4f1a\u8c03\u7528\u8be5\u65b9\u6cd5,\u6362\u53e5\u8bdd\u8bf4,\u53ea\u8981\u7a0b\u5e8f\u4e00\u542f\u52a8\u5c31\u4f1a\u8c03\u7528load\u65b9\u6cd5,\u6574\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u4e2d\u53ea\u4f1a\u8c03\u7528\u4e00\u6b21) 1. \u5728\u52a0\u8f7d\u9636\u6bb5\uff0c\u5982\u679c\u7c7b\u5b9e\u73b0\u4e86load\u65b9\u6cd5\uff0c\u7cfb\u7edf\u5c31\u4f1a\u8c03\u7528\u5b83\uff0cload\u65b9\u6cd5\u4e0d\u53c2\u4e0e\u8986\u5199\u673a\u5236 2. \u5728\u9996\u6b21\u4f7f\u7528\u67d0\u4e2a\u7c7b\u4e4b\u524d\uff0c\u7cfb\u7edf\u4f1a\u5411\u5176\u53d1\u9001initialize\u6d88\u606f\uff0c\u901a\u5e38\u5e94\u8be5\u5728\u91cc\u9762\u5224\u65ad\u5f53\u524d\u8981\u521d\u59cb\u5316\u7684\u7c7b\uff0c\u9632\u6b62\u5b50\u7c7b\u672a\u8986\u5199initialize\u7684\u60c5\u51b5\u4e0b\u8c03\u7528\u4e24\u6b21 3. load\u4e0einitialize\u65b9\u6cd5\u90fd\u5e94\u8be5\u5b9e\u73b0\u5f97\u7cbe\u7b80\u4e00\u4e9b\uff0c\u6709\u52a9\u4e8e\u4fdd\u6301\u5e94\u7528\u7a0b\u5e8f\u7684\u54cd\u5e94\u80fd\u529b\uff0c\u4e5f\u80fd\u51cf\u5c11\u5f15\u5165\u201c\u4f9d\u8d56\u73af\u201d\uff08interdependency cycle\uff09\u7684\u51e0\u7387 4. \u65e0\u6cd5\u5728\u7f16\u8bd1\u671f\u8bbe\u5b9a\u7684\u5168\u5c40\u5e38\u91cf\uff0c\u53ef\u4ee5\u653e\u5728initialize\u65b9\u6cd5\u91cc\u521d\u59cb\u5316 Notification\u4e2dpost\u548creceive\u662f\u5728\u540c\u4e00\u4e2a\u73b0\u7a0b\u4e2d\u53d1\u751f\u7684","title":"\u9762\u8bd5\u7ecf\u8fc7"},{"location":"iOS/review/#fm","text":"\u5468\u4e8c 2018.03.27 15:00 \u5317\u4eac\u5e02 \u671d\u9633\u533a \u671d\u5916SOHO\uff0cD\u5ea7\uff0c1122\u5ba4 \u5e38\u5915\u9732 18610363605 \u873b\u8713FM","title":"\u873b\u8713FM"},{"location":"iOS/review/#_41","text":"\u95ee\u4e86\u4e00\u4e0b\u9879\u76ee \u5199\u4e00\u4e2a\u65cb\u8f6c\u6570\u7ec4\u67e5\u627e\u7b97\u6cd5 \u5199quickSort\u3001BFS\u3001DFS, \u9012\u5f52\u8f6c\u5faa\u73af https://www.cnblogs.com/coderkian/p/3758068.html","title":"\u8fc7\u7a0b"},{"location":"iOS/review/#_42","text":"\u5468\u4e09 2018.03.28 14:00 \u5317\u4eac\u5e02\u6d77\u6dc0\u533a\u897f\u5317\u65fa\u4e1c\u8def10\u53f7\u9662\u897f\u533a8\u53f7\u697c\u65b0\u6d6a\u603b\u90e8\u5927\u53a6\u5317\u95e8 \u738b\u695a 18813016799 \u65b0\u6d6a\u5fae\u535a","title":"\u65b0\u6d6a\u5fae\u535a"},{"location":"iOS/review/#_43","text":"\u5148\u4f5c\u7b14\u8bd5\u9898 NSRunloop\u4fdd\u6d3b,\u7ed9runloop\u6dfb\u52a0\u4e00\u4e0bNSMachPort TableView\u4f18\u5316\u7684\u65b9\u6cd5:\u7f13\u5b58\u9ad8\u5ea6\u3001\u5f02\u6b65\u7ed8\u5236\u3001\u6309\u9700\u52a0\u8f7d\u56fe\u7247 \u5982\u4f55\u63d0\u524d\u52a0\u8f7d\u56fe\u7247 \u5224\u65ad\u56fe\u7247\u7c7b\u578b\uff0c\u56fe\u7247\u6570\u636e\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\u4f1a\u6807\u8bc6\u51fa\u8fd9\u4e2a\u56fe\u7247\u7684\u7c7b\u578b imageName\u548cimageWithContentOfFile\u3001imageWithData\u7684\u533a\u522b: imageName\u52a0\u8f7d\u7684\u56fe\u7247\u4f1a\u5728\u5185\u5b58\u4e2d\u7f13\u5b58\uff0c\u540e\u4e24\u8005\u4e0d\u4f1a\u7f13\u5b58 \u6d77\u91cf\u6570\u636e\u5904\u7406\uff0c\u5185\u5b58\u5927\u5c0f\u9650\u5236\u65f6\u7684\u603b\u9898 topK\u95ee\u9898 crash\u6536\u96c6 NSOperation\u81ea\u5b9a\u4e49\u5b50\u7c7b https://www.jianshu.com/p/4b1d77054b35","title":"\u8fc7\u7a0b"},{"location":"iOS/review/#_44","text":"\u5468\u56db 2018.03.29 10:30 \u5317\u4eac\u5e02\u671d\u9633\u533a\u671b\u4eac\u4e1c\u8def6\u53f7\u671b\u4eac\u56fd\u9645\u7814\u53d1\u56edFG\u5ea7 \u6768\u5586 15600243362 \u81ea\u5e26\u7b80\u5386 \u7f8e\u56e2","title":"\u7f8e\u56e2"},{"location":"iOS/review/#_45","text":"topK\u95ee\u9898 \u7ea2\u7eff\u706f\u8def\u53e3\u4f18\u5316\u95ee\u9898 O(1)\u65f6\u95f4\u590d\u6742\u5ea6\u5220\u94fe\u8868\u8282\u70b9 \u548c\u6700\u5927\u5b50\u6570\u7ec4 KVO\u6d3e\u751f\u5b50\u7c7b\u540e\uff0c\u539f\u5bf9\u8c61\u8fd8\u80fd\u5224\u65ad\u7c7b\u578b\u76f8\u7b49\u5417 \u7c7b\u7c07\u6a21\u5f0f\u3001\u6784\u5efa\u8005\u6a21\u5f0f\u3001\u5de5\u5382\u6a21\u5f0f \u6392\u5e8f\u7b97\u6cd5\u54ea\u4e9b\u662f\u7a33\u5b9a\u7684\u54ea\u4e9b\u662f\u4e0d\u7a33\u5b9a\u7684\uff0c\u7b97\u6cd5\u590d\u6742\u5ea6\uff0c\u7a33\u5b9a\u6392\u5e8f\u6709\u4ec0\u4e48\u7528 \u6574\u7406\u4e00\u4e0b\u9879\u76ee\u4e2d\u7684\u5173\u952e\u6280\u672f\u70b9 https://blog.csdn.net/u010742414/article/details/78260938 NSOperation\u7684main\u65b9\u6cd5\u8c03\u7528\u540eOperation\u4f1a\u88ab\u79fb\u9664\uff0cstart\u65b9\u6cd5\u5728\u8c03\u7528\u540e\uff0coperation\u9700\u8981\u624b\u52a8\u7ba1\u7406\u5176\u91ca\u653e","title":"\u4e09\u9762\u95ee\u9898\u51c6\u5907"},{"location":"iOS/review/#_46","text":"\u5468\u56db 2018.03.29 14:00 \u6d77\u6dc0\u533a\u897f\u5317\u65fa\u4e1c\u8def \u6587\u601d\u6d77\u8f89\u5927\u53a6 -\u767e\u5ea6\u89c6\u9891\u529e\u516c\u533a \u9b4f\u535a 13891924500 \u767e\u5ea6\u89c6\u9891 \u767e\u5ea6\u89c6\u9891\u7ed9Offer\u4e0d\u6253\u7b97\u53bb\u4e86","title":"\u767e\u5ea6\u89c6\u9891"},{"location":"iOS/review/#_47","text":"\u5468\u4e94 2018.03.30 14:30 \u671d\u9633\u533a\u5149\u534e\u8defSOHO\u4e8c\u671fD\u5ea75-11 (1\u53f7\u7ebf\u6c38\u5b89\u91cc\u5730\u94c1\u7ad9B\u51fa\u53e3\uff09cherry 18600536159 \u63a2\u63a2","title":"\u63a2\u63a2"},{"location":"iOS/review/#_48","text":"\u5199\u4e00\u4e2aLRUCache","title":"\u8fc7\u7a0b"},{"location":"iOS/review/#_49","text":"\u5468\u4e8c 2018.04.03 14:00 \u5317\u4eac\u5e02 \u6d77\u6dc0\u533a \u6e05\u534e\u540c\u65b9\u79d1\u6280\u5927\u53a6B\u5ea712\u5c42 \u5feb\u624b \u5b57\u7b26\u4e32\u65cb\u8f6c(\u5de6/\u53f3) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include iostream #include vector #include cstring using namespace std ; string rotateString ( string input , int index ) { reverse ( input . begin (), input . begin () + index ); reverse ( input . begin () + index , input . end ()); reverse ( input . begin (), input . end ()); return input ; } int main ( int argc , const char * argv []) { // insert code here... string input = abcdefg ; cout rotateString ( input , 2 ) endl ; return 0 ; } - \u6c42\u96c6\u5408\u7684\u6240\u6709\u5b50\u96c6\uff0c\u96c6\u5408\u672c\u8eab\u5143\u7d20\u6ca1\u6709\u91cd\u590d\u7684\uff0c\u6240\u6709\u5143\u7d20\u653e\u5728\u6570\u7ec4\u4e2d 1 - \u6c42\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u516c\u5171\u5143\u7d20","title":"\u5feb\u624b"},{"location":"iOS/review/#_50","text":"\u65cb\u8f6c\u6253\u5370\u77e9\u9635 \u62c6\u5206\u5947\u5076\u6570\u53cc\u5411\u94fe\u8868\u7ed3\u70b9\u4e3a\u4e24\u4e2a\u5b50\u94fe\u8868 \u627e\u4e00\u4e2a\u94fe\u8868\u7684\u4e2d\u95f4\u7ed3\u70b9 \u4e00\u4e2a\b\u6574\u578b\u6570\u7ec4\uff0c\u76f8\u90bb\u4e24\u4e2a\u5143\u7d20\u4e0d\u80fd\u540c\u65f6\u53d6\u51fa\uff0c\u6c42\u6240\u6709\u5b50\u5e8f\u5217\u548c\u7684\u6700\u5927\u503c","title":"\u733f\b\u8f85\u5bfc"},{"location":"iOS/review/#_51","text":"\u5468\u4e00 2018.04.09 14:00 \u767e\u5ea6\u79d1\u6280\u56ed1\u53f7\u697c(\u5317\u4eac\u6d77\u6dc0\u533a\u897f\u5317\u65fa\u767e\u5ea6\u79d1\u6280\u56ed1\u53f7\u697c) \u4faf\u4e16\u6770 18600393412","title":"\u767e\u5ea6\u591a\u6a21\u641c\u7d22\u90e8"},{"location":"iOS/review/#_52","text":"\u5468\u4e8c 2018.08.10 14:30 \u5317\u4eac\u5e02\u671d\u9633\u533a\u671b\u4eac\u878d\u79d1\u4e2d\u5fc3B\u5ea7703 \u738b\u71d5\u98de 15010353996","title":"\u5feb\u770b\u6f2b\u753b"},{"location":"iOS/runtime/","text":"\u7f16\u8bd1OC\u8fd0\u884c\u65f6 objc\u5f00\u6e90\u5e93\u5730\u5740: https://opensource.apple.com/source/objc4/ \u76ee\u5f55\u6700\u65b0\u7248\u672c\u662f objc4-723 : https://opensource.apple.com/tarballs/objc4/objc4-723.tar.gz \u53e6\u5916\u9700\u8981\u4e0b\u8f7d\u7684\u6587\u4ef6\u6709: 1 2 3 4 5 6 7 8 9 https://opensource.apple.com/tarballs/Libc/Libc-825.40.1.tar.gz https://opensource.apple.com/tarballs/dyld/dyld-421.1.tar.gz https://opensource.apple.com/tarballs/libauto/libauto-187.tar.gz https://opensource.apple.com/tarballs/libclosure/libclosure-67.tar.gz https://opensource.apple.com/tarballs/libdispatch/libdispatch-913.30.4.tar.gz https://opensource.apple.com/tarballs/libpthread/libpthread-301.30.1.tar.gz https://opensource.apple.com/tarballs/xnu/xnu-4570.41.2.tar.gz https://opensource.apple.com/tarballs/libplatform/libplatform-161.20.1.tar.gz https://opensource.apple.com/tarballs/launchd/launchd-842.92.1.tar.gz /Users/JokerAtBaoFeng/Desktop/objc4-723/runtime/objc-os.h:94:13: 'sys/reason.h' file not found \u8fd9\u4e2a\u6587\u4ef6\u8def\u5f84\u5728 xnu-4570.41.2/bsd/sys/reason.h /Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/runtime/objc-os.h:102:13: 'mach-o/dyld_priv.h' file not found \u8fd9\u4e2a\u6587\u4ef6\u8def\u5f84\u5728 dyld-519.2.2/include/mach-o/dyld_priv.h /Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/runtime/objc-os.h:104:13: 'os/lock_private.h' file not found \u8fd9\u4e2a\u6587\u4ef6\u8def\u5f84\u5728 libplatform-161.20.1/private/os/lock_private.h \u53e6\u5916\u8fd8\u9700\u8981\u4fdd\u7559\u6587\u4ef6 base_private.h /Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/include/os/lock_private.h:439:10: 'pthread/tsd_private.h' file not found \u8fd9\u4e2a\u6587\u4ef6\u8def\u5f84\u5728 libpthread-301.30.1/private/tsd_private.h \u53e6\u5916\u8fd8\u9700\u8981\u4fdd\u7559\u6587\u4ef6 tsd_private.h ,\u5916\u5c42\u76ee\u5f55\u9700\u8981\u4ece private \u6539\u4e3a pthread /Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/include/pthread/tsd_private.h:52:10: 'System/machine/cpu_capabilities.h' file not found \u8fd9\u4e2a\u6587\u4ef6\u8def\u5f84\u5728 xnu-4570.41.2/osfmk/machine/cpu_capabilities.h /Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/include/pthread/tsd_private.h:56:10: 'os/tsd.h' file not found \u8fd9\u4e2a\u6587\u4ef6\u8def\u5f84\u5728 xnu-4570.41.2/libsyscall/os/tsd.h /Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/include/pthread/tsd_private.h:57:10: 'pthread/spinlock_private.h' file not found \u8fd9\u4e2a\u6587\u4ef6\u8def\u5f84\u5728 libpthread-301.30.1/private/spinlock_private.h /Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/runtime/objc-os.h:107:13: 'System/pthread_machdep.h' file not found \u8fd9\u4e2a\u6587\u4ef6\u8def\u5f84\u5728\u5e94\u8be5\u5728Libc\u4e2d\uff0c\u4f46\u662f\u8f83\u65b0\u7248\u672c\u7684Libc\u91cc\u9762\u6ca1\u6709\u8fd9\u4e2a\u6587\u4ef6\uff0c\u6240\u4ee5\u9700\u8981\u627e\u8001\u7248\u672c\uff0c\u8fd9\u91cc\u5728\u8def\u5f84 Libc-825.40.1/pthreads/pthread_machdep.h \u4e2d\u627e\u5230\u4e86 /Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/runtime/objc-os.h:250:13: 'CrashReporterClient.h' file not found \u8fd9\u4e2a\u6587\u4ef6\u7684\u8def\u5f84\u5728 Libc-825.40.1/include/CrashReporterClient.h /Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/include/CrashReporterClient.h:40:15: 'CrashReporterClient.h' file not found 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #ifndef _LIBC_CRASHREPORTERCLIENT_H #define _LIBC_CRASHREPORTERCLIENT_H #ifdef LIBC_NO_LIBCRASHREPORTERCLIENT /* Fake the CrashReporterClient API */ #define CRGetCrashLogMessage() 0 #define CRSetCrashLogMessage(x) /* nothing */ #else /* !LIBC_NO_LIBCRASHREPORTERCLIENT */ /* Include the real CrashReporterClient.h */ #include _next CrashReporterClient.h #endif /* !LIBC_NO_LIBCRASHREPORTERCLIENT */ #endif /* _LIBC_CRASHREPORTERCLIENT_H */ Build Settings- Preprocessor Macros \uff0c\u52a0\u5165\uff1a LIBC_NO_LIBCRASHREPORTERCLIENT /Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/runtime/objc-os.h:984:10: 'pthread/workqueue_private.h' file not found \u8fd9\u4e2a\u6587\u4ef6\u7684\u8def\u5f84\u5728 libpthread-301.30.1/private/workqueue_private.h /Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/include/pthread/workqueue_private.h:34:10: 'pthread/qos_private.h' file not found \u8fd9\u4e2a\u6587\u4ef6\u7684\u8def\u5f84\u5728 libpthread-301.30.1/private/qos_private.h /Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/include/pthread/qos_private.h:29:10: 'sys/qos_private.h' file not found \u8fd9\u4e2a\u6587\u4ef6\u7684\u8def\u5f84\u5728 libpthread-301.30.1/sys/qos_private.h /Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/runtime/objc-private.h:324:10: 'objc-shared-cache.h' file not found \u8fd9\u4e2a\u6587\u4ef6\u7684\u8def\u5f84\u5728 dyld-519.2.2/include/objc-shared-cache.h /Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/include/System/pthread_machdep.h:214:13: Typedef redefinition with different types ('int' vs 'volatile OSSpinLock' (aka 'volatile int')) \u6ce8\u91ca\u4ee3\u5f97\u5b9a\u4e49\u4ee3\u7801\uff1a 1 //typedef int pthread_lock_t; /Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/runtime/objc-os.h:735:19: Use of undeclared identifier '_PTHREAD_PRIORITY_FLAGS_MASK' \u5728 objc-os.h \u4e2d\u6dfb\u52a0\u5934\u6587\u4ef6\u5305\u542b: #include pthread/qos_private.h Static declaration of '_pthread_has_direct_tsd' follows non-static declaration \u6ce8\u91ca pthread_machdep. \u4e2d\u7684\u65b9\u6cd5 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 //__inline__ static int //_pthread_has_direct_tsd(void) //{ //#if TARGET_IPHONE_SIMULATOR // /* Simulator will use the host implementation, so bypass the macro that is in the target code */ // return 0; //#elif defined(__ppc__) // int *caps = (int *)_COMM_PAGE_CPU_CAPABILITIES; // if (*caps kFastThreadLocalStorage) { // return 1; // } else { // return 0; // } //#else // return 1; //#endif //} Static declaration of '_pthread_setspecific_direct' follows non-static declaration \u6ce8\u91ca pthread_machdep. \u4e2d\u7684\u65b9\u6cd5 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 /* To be used with static constant keys only */ // __inline__ static int // _pthread_setspecific_direct ( unsigned long slot , void * val ) // { //#if defined(__i386__) //#if defined(__PIC__) // __asm__( movl %1,%% gs : % 0 : = m (*(void **)(slot * sizeof(void *))) : rn (val)); //#else // __asm__( movl % 1 , %% gs :% 0 : = m (*(void **)(slot * sizeof(void *))) : ri (val)); //#endif //#elif defined(__x86_64__) // /* PIC is free and cannot be disabled, even with: gcc -mdynamic-no-pic ... */ // __asm__( movq % 1 , %% gs :% 0 : = m (*(void **)(slot * sizeof(void *))) : rn (val)); //#elif (defined(__arm__) (defined(_ARM_ARCH_6) || defined(_ARM_ARCH_5))) // void **__pthread_tsd; //#if defined(__arm__) defined(_ARM_ARCH_6) // uintptr_t __pthread_tpid; // __asm__( mrc p15 , 0 , % 0 , c13 , c0 , 3 : = r (__pthread_tpid)); // __pthread_tsd = (void**)(__pthread_tpid ~0x3ul); //#elif defined(__arm__) defined(_ARM_ARCH_5) // register uintptr_t __pthread_tpid asm ( r9 ); // __pthread_tsd = (void**)__pthread_tpid ; //#endif // __pthread_tsd [ slot ] = val ; //#else //#error no _pthread_setspecific_direct implementation for this arch //#endif // return 0 ; // } Static declaration of '_pthread_getspecific_direct' follows non-static declaration \u6ce8\u91ca pthread_machdep. \u4e2d\u7684\u65b9\u6cd5 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // __inline__ static void * // _pthread_getspecific_direct ( unsigned long slot ) // { // void *ret ; //#if defined(__i386__) || defined(__x86_64__) // __asm__( mov %% gs : % 1 , % 0 : = r (ret) : m (*(void **)(slot * sizeof(void *)))); //#elif (defined(__arm__) (defined(_ARM_ARCH_6) || defined(_ARM_ARCH_5))) // void **__pthread_tsd; //#if defined(__arm__) defined(_ARM_ARCH_6) // uintptr_t __pthread_tpid; // __asm__( mrc p15 , 0 , % 0 , c13 , c0 , 3 : = r (__pthread_tpid)); // __pthread_tsd = (void**)(__pthread_tpid ~0x3ul); //#elif defined(__arm__) defined(_ARM_ARCH_5) // register uintptr_t __pthread_tpid asm ( r9 ); // __pthread_tsd = (void**)__pthread_tpid ; //#endif // ret = __pthread_tsd [ slot ] ; //#else //#error no _pthread_getspecific_direct implementation for this arch //#endif // return ret ; // } Non-constant-expression cannot be narrowed from type 'uintptr_t' (aka 'unsigned long') to 'uint32_t' (aka 'unsigned int') in initializer list \u6309\u7f16\u8bd1\u63d0\u793a\u4fee\u590d 1 static_cast uint32_t (mts) /Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/runtime/objc-errors.mm:77:10: '_simple.h' file not found \u8fd9\u4e2a\u6587\u4ef6\u5728\u8def\u5f84 Libc-825.40.1/gen/_simple.h /Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/runtime/objc-runtime-new.mm:2350:46: Use of undeclared identifier 'DYLD_MACOSX_VERSION_10_11' \u9700\u8981\u4f7f\u7528dyld-421.1\u7248\u672c\u4e2d\u7684dyld_priv.h\u6587\u4ef6\uff0c\u5e76\u6dfb\u52a0 1 #define DYLD_MACOSX_VERSION_10_13 0x000A0D00 /Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/runtime/objc-block-trampolines.mm:36:10: 'Block_private.h' file not found \u8fd9\u4e2a\u6587\u4ef6\u7684\u8def\u5f84\u5728\uff1a libclosure-67/Block_private.h ld: can't open order file: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/AppleInternal/OrderFiles/libobjc.order Build Settings- Linking- Order File \uff0c\u628a Debug \u548c Release \u4e0b\u7684 1 $( SDKROOT ) /AppleInternal/OrderFiles/libobjc.order \u6539\u6210 1 libobjc.order clang: error: linker command failed with exit code 1 (use -v to see invocation) \u53ea\u9700\u8981\u53bb Build Settings - Linking - Other Linker Flags \u91cc\u5220\u6389\" -lCrashReporterClient \" \uff08Debug \u548c Release \u90fd\u6709\u7684\u54e6\uff0c\u9700\u8981\u5220\u4e24\u4e2a\u54e6\uff09 \u8fd9\u6837\u7ec8\u4e8e\u7f16\u8bd1\u6210\u529f\u4e86 \u53c2\u8003\u6587\u7ae0 \u9879\u76ee\u5730\u5740","title":"OC\u8fd0\u884c\u65f6\u7f16\u8bd1"},{"location":"iOS/runtime/#oc","text":"objc\u5f00\u6e90\u5e93\u5730\u5740: https://opensource.apple.com/source/objc4/ \u76ee\u5f55\u6700\u65b0\u7248\u672c\u662f objc4-723 : https://opensource.apple.com/tarballs/objc4/objc4-723.tar.gz \u53e6\u5916\u9700\u8981\u4e0b\u8f7d\u7684\u6587\u4ef6\u6709: 1 2 3 4 5 6 7 8 9 https://opensource.apple.com/tarballs/Libc/Libc-825.40.1.tar.gz https://opensource.apple.com/tarballs/dyld/dyld-421.1.tar.gz https://opensource.apple.com/tarballs/libauto/libauto-187.tar.gz https://opensource.apple.com/tarballs/libclosure/libclosure-67.tar.gz https://opensource.apple.com/tarballs/libdispatch/libdispatch-913.30.4.tar.gz https://opensource.apple.com/tarballs/libpthread/libpthread-301.30.1.tar.gz https://opensource.apple.com/tarballs/xnu/xnu-4570.41.2.tar.gz https://opensource.apple.com/tarballs/libplatform/libplatform-161.20.1.tar.gz https://opensource.apple.com/tarballs/launchd/launchd-842.92.1.tar.gz","title":"\u7f16\u8bd1OC\u8fd0\u884c\u65f6"},{"location":"iOS/runtime/#usersjokeratbaofengdesktopobjc4-723runtimeobjc-osh9413-sysreasonh-file-not-found","text":"\u8fd9\u4e2a\u6587\u4ef6\u8def\u5f84\u5728 xnu-4570.41.2/bsd/sys/reason.h","title":"/Users/JokerAtBaoFeng/Desktop/objc4-723/runtime/objc-os.h:94:13: 'sys/reason.h' file not found"},{"location":"iOS/runtime/#usersjokeratbaofengdesktopobjc-runtimeobjc4-723runtimeobjc-osh10213-mach-odyld_privh-file-not-found","text":"\u8fd9\u4e2a\u6587\u4ef6\u8def\u5f84\u5728 dyld-519.2.2/include/mach-o/dyld_priv.h","title":"/Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/runtime/objc-os.h:102:13: 'mach-o/dyld_priv.h' file not found"},{"location":"iOS/runtime/#usersjokeratbaofengdesktopobjc-runtimeobjc4-723runtimeobjc-osh10413-oslock_privateh-file-not-found","text":"\u8fd9\u4e2a\u6587\u4ef6\u8def\u5f84\u5728 libplatform-161.20.1/private/os/lock_private.h \u53e6\u5916\u8fd8\u9700\u8981\u4fdd\u7559\u6587\u4ef6 base_private.h","title":"/Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/runtime/objc-os.h:104:13: 'os/lock_private.h' file not found"},{"location":"iOS/runtime/#usersjokeratbaofengdesktopobjc-runtimeobjc4-723includeoslock_privateh43910-pthreadtsd_privateh-file-not-found","text":"\u8fd9\u4e2a\u6587\u4ef6\u8def\u5f84\u5728 libpthread-301.30.1/private/tsd_private.h \u53e6\u5916\u8fd8\u9700\u8981\u4fdd\u7559\u6587\u4ef6 tsd_private.h ,\u5916\u5c42\u76ee\u5f55\u9700\u8981\u4ece private \u6539\u4e3a pthread","title":"/Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/include/os/lock_private.h:439:10: 'pthread/tsd_private.h' file not found"},{"location":"iOS/runtime/#usersjokeratbaofengdesktopobjc-runtimeobjc4-723includepthreadtsd_privateh5210-systemmachinecpu_capabilitiesh-file-not-found","text":"\u8fd9\u4e2a\u6587\u4ef6\u8def\u5f84\u5728 xnu-4570.41.2/osfmk/machine/cpu_capabilities.h","title":"/Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/include/pthread/tsd_private.h:52:10: 'System/machine/cpu_capabilities.h' file not found"},{"location":"iOS/runtime/#usersjokeratbaofengdesktopobjc-runtimeobjc4-723includepthreadtsd_privateh5610-ostsdh-file-not-found","text":"\u8fd9\u4e2a\u6587\u4ef6\u8def\u5f84\u5728 xnu-4570.41.2/libsyscall/os/tsd.h","title":"/Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/include/pthread/tsd_private.h:56:10: 'os/tsd.h' file not found"},{"location":"iOS/runtime/#usersjokeratbaofengdesktopobjc-runtimeobjc4-723includepthreadtsd_privateh5710-pthreadspinlock_privateh-file-not-found","text":"\u8fd9\u4e2a\u6587\u4ef6\u8def\u5f84\u5728 libpthread-301.30.1/private/spinlock_private.h","title":"/Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/include/pthread/tsd_private.h:57:10: 'pthread/spinlock_private.h' file not found"},{"location":"iOS/runtime/#usersjokeratbaofengdesktopobjc-runtimeobjc4-723runtimeobjc-osh10713-systempthread_machdeph-file-not-found","text":"\u8fd9\u4e2a\u6587\u4ef6\u8def\u5f84\u5728\u5e94\u8be5\u5728Libc\u4e2d\uff0c\u4f46\u662f\u8f83\u65b0\u7248\u672c\u7684Libc\u91cc\u9762\u6ca1\u6709\u8fd9\u4e2a\u6587\u4ef6\uff0c\u6240\u4ee5\u9700\u8981\u627e\u8001\u7248\u672c\uff0c\u8fd9\u91cc\u5728\u8def\u5f84 Libc-825.40.1/pthreads/pthread_machdep.h \u4e2d\u627e\u5230\u4e86","title":"/Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/runtime/objc-os.h:107:13: 'System/pthread_machdep.h' file not found"},{"location":"iOS/runtime/#usersjokeratbaofengdesktopobjc-runtimeobjc4-723runtimeobjc-osh25013-crashreporterclienth-file-not-found","text":"\u8fd9\u4e2a\u6587\u4ef6\u7684\u8def\u5f84\u5728 Libc-825.40.1/include/CrashReporterClient.h","title":"/Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/runtime/objc-os.h:250:13: 'CrashReporterClient.h' file not found"},{"location":"iOS/runtime/#usersjokeratbaofengdesktopobjc-runtimeobjc4-723includecrashreporterclienth4015-crashreporterclienth-file-not-found","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #ifndef _LIBC_CRASHREPORTERCLIENT_H #define _LIBC_CRASHREPORTERCLIENT_H #ifdef LIBC_NO_LIBCRASHREPORTERCLIENT /* Fake the CrashReporterClient API */ #define CRGetCrashLogMessage() 0 #define CRSetCrashLogMessage(x) /* nothing */ #else /* !LIBC_NO_LIBCRASHREPORTERCLIENT */ /* Include the real CrashReporterClient.h */ #include _next CrashReporterClient.h #endif /* !LIBC_NO_LIBCRASHREPORTERCLIENT */ #endif /* _LIBC_CRASHREPORTERCLIENT_H */ Build Settings- Preprocessor Macros \uff0c\u52a0\u5165\uff1a LIBC_NO_LIBCRASHREPORTERCLIENT","title":"/Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/include/CrashReporterClient.h:40:15: 'CrashReporterClient.h' file not found"},{"location":"iOS/runtime/#usersjokeratbaofengdesktopobjc-runtimeobjc4-723runtimeobjc-osh98410-pthreadworkqueue_privateh-file-not-found","text":"\u8fd9\u4e2a\u6587\u4ef6\u7684\u8def\u5f84\u5728 libpthread-301.30.1/private/workqueue_private.h","title":"/Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/runtime/objc-os.h:984:10: 'pthread/workqueue_private.h' file not found"},{"location":"iOS/runtime/#usersjokeratbaofengdesktopobjc-runtimeobjc4-723includepthreadworkqueue_privateh3410-pthreadqos_privateh-file-not-found","text":"\u8fd9\u4e2a\u6587\u4ef6\u7684\u8def\u5f84\u5728 libpthread-301.30.1/private/qos_private.h","title":"/Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/include/pthread/workqueue_private.h:34:10: 'pthread/qos_private.h' file not found"},{"location":"iOS/runtime/#usersjokeratbaofengdesktopobjc-runtimeobjc4-723includepthreadqos_privateh2910-sysqos_privateh-file-not-found","text":"\u8fd9\u4e2a\u6587\u4ef6\u7684\u8def\u5f84\u5728 libpthread-301.30.1/sys/qos_private.h","title":"/Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/include/pthread/qos_private.h:29:10: 'sys/qos_private.h' file not found"},{"location":"iOS/runtime/#usersjokeratbaofengdesktopobjc-runtimeobjc4-723runtimeobjc-privateh32410-objc-shared-cacheh-file-not-found","text":"\u8fd9\u4e2a\u6587\u4ef6\u7684\u8def\u5f84\u5728 dyld-519.2.2/include/objc-shared-cache.h","title":"/Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/runtime/objc-private.h:324:10: 'objc-shared-cache.h' file not found"},{"location":"iOS/runtime/#usersjokeratbaofengdesktopobjc-runtimeobjc4-723includesystempthread_machdeph21413-typedef-redefinition-with-different-types-int-vs-volatile-osspinlock-aka-volatile-int","text":"\u6ce8\u91ca\u4ee3\u5f97\u5b9a\u4e49\u4ee3\u7801\uff1a 1 //typedef int pthread_lock_t;","title":"/Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/include/System/pthread_machdep.h:214:13: Typedef redefinition with different types ('int' vs 'volatile OSSpinLock' (aka 'volatile int'))"},{"location":"iOS/runtime/#usersjokeratbaofengdesktopobjc-runtimeobjc4-723runtimeobjc-osh73519-use-of-undeclared-identifier-_pthread_priority_flags_mask","text":"\u5728 objc-os.h \u4e2d\u6dfb\u52a0\u5934\u6587\u4ef6\u5305\u542b: #include pthread/qos_private.h","title":"/Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/runtime/objc-os.h:735:19: Use of undeclared identifier '_PTHREAD_PRIORITY_FLAGS_MASK'"},{"location":"iOS/runtime/#static-declaration-of-_pthread_has_direct_tsd-follows-non-static-declaration","text":"\u6ce8\u91ca pthread_machdep. \u4e2d\u7684\u65b9\u6cd5 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 //__inline__ static int //_pthread_has_direct_tsd(void) //{ //#if TARGET_IPHONE_SIMULATOR // /* Simulator will use the host implementation, so bypass the macro that is in the target code */ // return 0; //#elif defined(__ppc__) // int *caps = (int *)_COMM_PAGE_CPU_CAPABILITIES; // if (*caps kFastThreadLocalStorage) { // return 1; // } else { // return 0; // } //#else // return 1; //#endif //}","title":"Static declaration of '_pthread_has_direct_tsd' follows non-static declaration"},{"location":"iOS/runtime/#static-declaration-of-_pthread_setspecific_direct-follows-non-static-declaration","text":"\u6ce8\u91ca pthread_machdep. \u4e2d\u7684\u65b9\u6cd5 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 /* To be used with static constant keys only */ // __inline__ static int // _pthread_setspecific_direct ( unsigned long slot , void * val ) // { //#if defined(__i386__) //#if defined(__PIC__) // __asm__( movl %1,%% gs : % 0 : = m (*(void **)(slot * sizeof(void *))) : rn (val)); //#else // __asm__( movl % 1 , %% gs :% 0 : = m (*(void **)(slot * sizeof(void *))) : ri (val)); //#endif //#elif defined(__x86_64__) // /* PIC is free and cannot be disabled, even with: gcc -mdynamic-no-pic ... */ // __asm__( movq % 1 , %% gs :% 0 : = m (*(void **)(slot * sizeof(void *))) : rn (val)); //#elif (defined(__arm__) (defined(_ARM_ARCH_6) || defined(_ARM_ARCH_5))) // void **__pthread_tsd; //#if defined(__arm__) defined(_ARM_ARCH_6) // uintptr_t __pthread_tpid; // __asm__( mrc p15 , 0 , % 0 , c13 , c0 , 3 : = r (__pthread_tpid)); // __pthread_tsd = (void**)(__pthread_tpid ~0x3ul); //#elif defined(__arm__) defined(_ARM_ARCH_5) // register uintptr_t __pthread_tpid asm ( r9 ); // __pthread_tsd = (void**)__pthread_tpid ; //#endif // __pthread_tsd [ slot ] = val ; //#else //#error no _pthread_setspecific_direct implementation for this arch //#endif // return 0 ; // }","title":"Static declaration of '_pthread_setspecific_direct' follows non-static declaration"},{"location":"iOS/runtime/#static-declaration-of-_pthread_getspecific_direct-follows-non-static-declaration","text":"\u6ce8\u91ca pthread_machdep. \u4e2d\u7684\u65b9\u6cd5 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // __inline__ static void * // _pthread_getspecific_direct ( unsigned long slot ) // { // void *ret ; //#if defined(__i386__) || defined(__x86_64__) // __asm__( mov %% gs : % 1 , % 0 : = r (ret) : m (*(void **)(slot * sizeof(void *)))); //#elif (defined(__arm__) (defined(_ARM_ARCH_6) || defined(_ARM_ARCH_5))) // void **__pthread_tsd; //#if defined(__arm__) defined(_ARM_ARCH_6) // uintptr_t __pthread_tpid; // __asm__( mrc p15 , 0 , % 0 , c13 , c0 , 3 : = r (__pthread_tpid)); // __pthread_tsd = (void**)(__pthread_tpid ~0x3ul); //#elif defined(__arm__) defined(_ARM_ARCH_5) // register uintptr_t __pthread_tpid asm ( r9 ); // __pthread_tsd = (void**)__pthread_tpid ; //#endif // ret = __pthread_tsd [ slot ] ; //#else //#error no _pthread_getspecific_direct implementation for this arch //#endif // return ret ; // }","title":"Static declaration of '_pthread_getspecific_direct' follows non-static declaration"},{"location":"iOS/runtime/#non-constant-expression-cannot-be-narrowed-from-type-uintptr_t-aka-unsigned-long-to-uint32_t-aka-unsigned-int-in-initializer-list","text":"\u6309\u7f16\u8bd1\u63d0\u793a\u4fee\u590d 1 static_cast uint32_t (mts)","title":"Non-constant-expression cannot be narrowed from type 'uintptr_t' (aka 'unsigned long') to 'uint32_t' (aka 'unsigned int') in initializer list"},{"location":"iOS/runtime/#usersjokeratbaofengdesktopobjc-runtimeobjc4-723runtimeobjc-errorsmm7710-_simpleh-file-not-found","text":"\u8fd9\u4e2a\u6587\u4ef6\u5728\u8def\u5f84 Libc-825.40.1/gen/_simple.h","title":"/Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/runtime/objc-errors.mm:77:10: '_simple.h' file not found"},{"location":"iOS/runtime/#usersjokeratbaofengdesktopobjc-runtimeobjc4-723runtimeobjc-runtime-newmm235046-use-of-undeclared-identifier-dyld_macosx_version_10_11","text":"\u9700\u8981\u4f7f\u7528dyld-421.1\u7248\u672c\u4e2d\u7684dyld_priv.h\u6587\u4ef6\uff0c\u5e76\u6dfb\u52a0 1 #define DYLD_MACOSX_VERSION_10_13 0x000A0D00","title":"/Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/runtime/objc-runtime-new.mm:2350:46: Use of undeclared identifier 'DYLD_MACOSX_VERSION_10_11'"},{"location":"iOS/runtime/#usersjokeratbaofengdesktopobjc-runtimeobjc4-723runtimeobjc-block-trampolinesmm3610-block_privateh-file-not-found","text":"\u8fd9\u4e2a\u6587\u4ef6\u7684\u8def\u5f84\u5728\uff1a libclosure-67/Block_private.h","title":"/Users/JokerAtBaoFeng/Desktop/objc-runtime/objc4-723/runtime/objc-block-trampolines.mm:36:10: 'Block_private.h' file not found"},{"location":"iOS/runtime/#ld-cant-open-order-file-applicationsxcodeappcontentsdeveloperplatformsmacosxplatformdevelopersdksmacosx1013sdkappleinternalorderfileslibobjcorder","text":"Build Settings- Linking- Order File \uff0c\u628a Debug \u548c Release \u4e0b\u7684 1 $( SDKROOT ) /AppleInternal/OrderFiles/libobjc.order \u6539\u6210 1 libobjc.order","title":"ld: can't open order file: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/AppleInternal/OrderFiles/libobjc.order"},{"location":"iOS/runtime/#clang-error-linker-command-failed-with-exit-code-1-use-v-to-see-invocation","text":"\u53ea\u9700\u8981\u53bb Build Settings - Linking - Other Linker Flags \u91cc\u5220\u6389\" -lCrashReporterClient \" \uff08Debug \u548c Release \u90fd\u6709\u7684\u54e6\uff0c\u9700\u8981\u5220\u4e24\u4e2a\u54e6\uff09","title":"clang: error: linker command failed with exit code 1 (use -v to see invocation)"},{"location":"iOS/runtime/#_1","text":"\u53c2\u8003\u6587\u7ae0 \u9879\u76ee\u5730\u5740","title":"\u8fd9\u6837\u7ec8\u4e8e\u7f16\u8bd1\u6210\u529f\u4e86"},{"location":"iOS/sort/","text":"\u5341\u5927\u7ecf\u5178\u6392\u5e8f\u7b97\u6cd5 \u6392\u5e8f: \u4f7f\u4e00\u4e32\u8bb0\u5f55\uff0c\u6309\u7167\u5176\u4e2d\u7684\u67d0\u4e2a\u6216\u67d0\u4e9b\u5173\u952e\u5b57\u7684\u5927\u5c0f\uff0c\u9012\u589e\u6216\u9012\u51cf\u7684\u6392\u5217\u8d77\u6765\u7684\u64cd\u4f5c \u7a33\u5b9a: \u5982\u679ca\u539f\u672c\u5728b\u524d\u9762\uff0c\u800ca=b, \u6392\u5e8f\u540ea\u4ecd\u7136\u5728b\u524d\u9762 \u4e0d\u7a33\u5b9a: \u5982\u679ca\u539f\u672c\u5728b\u524d\u9762\uff0c\u800ca=b, \u6392\u5e8f\u540ea\u53ef\u80fd\u5728b\u540e\u9762 \u5185\u6392\u5e8f: \u6240\u6709\u6392\u5e8f\u64cd\u4f5c\u90fd\u5728\u5185\u5b58\u4e2d\u5b8c\u6210 \u5916\u6392\u5e8f: \u7531\u4e8e\u6570\u636e\u592a\u5927\u653e\u5728\u78c1\u76d8\u4e2d\uff0c\u6392\u5e8f\u901a\u8fc7\u5185\u5b58\u548c\u78c1\u76d8\u7684\u4f20\u8f93\u624d\u80fd\u8fdb\u884c \u65f6\u95f4\u590d\u6742\u5ea6: \u7b97\u6cd5\u6267\u884c\u6240\u8017\u8d39\u7684\u65f6\u95f4 \u7a7a\u95f4\u590d\u6742\u5ea6: \u8fd0\u884c\u5b8c\u4e00\u4e2a\u7a0b\u5e8f\u6240\u9700\u5185\u5b58\u7684\u5927\u5c0f \u5404\u7c7b\u6392\u5e8f\u7b97\u6cd5\u7684\u603b\u7ed3 n: \u6570\u636e\u89c4\u6a21 k: \"\u6876\"\u7684\u4e2a\u6570 in-place : \u6392\u5e8f\u8fc7\u7a0b\u5360\u7528\u5e38\u6570\u5185\u5b58\uff0c\u4e0d\u7533\u8bf7\u989d\u5916\u8f85\u52a9\u5b58\u50a8\u7a7a\u95f4\uff0c\b\u8f93\u5165\u6570\u636e\u5728\u5904\u7406\u8fc7\u7a0b\u4e2d\u4f1a\u88ab\u6539\u5199\uff0c\u901a\u5e38\u6d89\u53ca\b\u4ea4\u6362\u548c\u66ff\u6362 out-place: \u6392\u5e8f\u8fc7\u7a0b\u9700\u8981\u7533\u8bf7\u4e0d\u5b9a\u91cf\u8f85\u52a9\b\u5b58\u50a8\u7a7a\u95f4\b\b\u8fdb\u884c\u8ba1\u7b97\u548c\u64cd\u4f5c \u5206\u7c7b \u4e0b\u9762\u662f\u5177\u4f53\u7684\u5404\u79cd\u7b97\u6cd5\u53caswift\u5b9e\u73b0 \u5192\u6ce1\u6392\u5e8f \u63cf\u8ff0: \u9996\u5148\u904d\u5386\u6574\u4e2a\u5e8f\u5217\uff0c\u904d\u5386\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u6bd4\u8f83\u76f8\u90bb\u4e24\u4e2a\u5143\u7d20\uff0c\u5982\u679c\u9006\u5e8f\u5c31\u4ea4\u6362\u4e24\u5143\u7d20\u7684\u4f4d\u7f6e\uff0c\u4e00\u8d9f\u4e0b\u6765\u5c31\u628a\u6700\u5927\u5143\u7d20\u632a\u5230\u4e86\u6700\u540e\u4f4d\u7f6e\uff0c\u7136\u540e\u628a\u53bb\u6389\u6700\u5927\u5143\u7d20\u7684\b\u5e8f\u5217\u770b\u6210\u4e00\u4e2a\u89c4\u6a21\u66f4\u5c0f\u5b50\b\u5e8f\u5217\u518d\u8fdb\u884c\u76f8\u540c\u904d\u5386\u64cd\u4f5c\uff0c\u76f4\u5230\u5e8f\u5217\u6392\u5e8f\u5b8c\u6210\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import Foundation func bubble_sort ( _ array : inout [ Int ]) - [ Int ] { let count = array . count for i in 0 .. count - 1 { for j in 0 .. count - 1 - i { if array [ j ] array [ j + 1 ] { let temp = array [ j ] array [ j ] = array [ j + 1 ] array [ j + 1 ] = temp } } } return array } \u7b80\u5355\u9009\u62e9\u6392\u5e8f \u63cf\u8ff0: \u9996\u5148\u904d\u5386\u5e8f\u5217\uff0c\u8bb0\u5f55\u6700\u5c0f\u5143\u7d20\u7684\u4e0b\u6807\u6216\u7d22\u5f15\uff0c\u904d\u5386\u5b8c\u6210\u540e\uff0c\u5c06\u6700\u5c0f\u5143\u7d20\u548c\u5e8f\u5217\u7b2c\u4e00\u4e2a\u5143\u7d20\u8fdb\u884c\u4f4d\u7f6e\u4ea4\u6362\uff0c\u518d\u5c06\u6700\u5c0f\u5143\u7d20\u6392\u9664\u540e\u5e8f\u5217\u770b\u6210\u4e00\u4e2a\u89c4\u6a21\u66f4\u5c0f\u7684\u5b50\u5e8f\u5217\u91cd\u590d\u4e4b\u524d\u904d\u5386\u8fc7\u7a0b\uff0c\u76f4\u5230\u6574\u4e2a\u5e8f\u5217\u6709\u5e8f\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import Foundation func select_sort ( _ array : inout [ Int ]) - [ Int ] { let count = array . count for i in 0 .. count - 1 { var minIndex = i for j in ( i + 1 ) .. count { if array [ j ] array [ minIndex ] { minIndex = j } } let temp = array [ i ] array [ i ] = array [ minIndex ] array [ minIndex ] = temp } return array } \u4e3a\u4ec0\u4e48\u7b80\u5355\u9009\u62e9\u6392\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684? \u7ed9\u5b9a\u5e8f\u5217: 3^1, 3^2, 1 3^1, 3^2, 1 <span><span class=\"MathJax_Preview\">3^1, 3^2, 1</span><script type=\"math/tex\">3^1, 3^2, 1 \u6392\u5e8f\u540e\u5c31\u53d8\u6210: 1, 3^2, 3^1 1, 3^2, 3^1 <span><span class=\"MathJax_Preview\">1, 3^2, 3^1</span><script type=\"math/tex\">1, 3^2, 3^1 \u6240\u4ee5\u7b80\u5355\u9009\u62e9\u6392\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684 \u76f4\u63a5\u63d2\u5165\u6392\u5e8f \u63cf\u8ff0: (\u7c7b\u6bd4\u4e8e\u6251\u514b\u724c\u6574\u724c)\u9996\u5148\u628a\u7b2c\u4e00\u4e2a\u5143\u7d20\u770b\u6210\u662f\u4e00\u4e2a\u6709\u5e8f\u5e8f\u5217\uff0c\u628a\u7b2c\u4e8c\u5143\u7d20\u63d2\u5165\u8fd9\u4e2a\u6709\u5e8f\u5e8f\u5217\uff0c\u63d2\u5165\u8fc7\u7a0b\u4ece\u6709\u5e8f\u5e8f\u5217\u7684\u5c3e\u90e8\u5143\u7d20\u5f00\u59cb\uff0c\u9010\u4e2a\u5411\u524d\u6bd4\u8f83\uff0c\u5982\u679c\u63d2\u5165\u5143\u7d20\u5927\u4e8e\u6216\u7b49\u4e8e\u6700\u540e\u4e00\u4e2a\u5143\u7d20,\u5c31\u63d2\u5165\u6709\u5e8f\u5e8f\u5217\u5c3e\u90e8\uff0c\u90a3\u4e48\u6709\u5e8f\u5e8f\u5217\u5c31\u6269\u5927\u4e3a2\u4e2a\u5143\u7d20\uff0c\u5982\u679c\u63d2\u5165\u5143\u7d20\u6bd4\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5c0f\uff0c\u7ee7\u7eed\u5411\u524d\u67e5\u627e\u6bd4\u8f83\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u5c0f\u4e8e\u6216\u8005\u7b49\u4e8e\u63d2\u5165\u5143\u7d20\u7684\u5143\u7d20\uff0c\u5e76\u5c06\u8be5\u5143\u7d20\u540e\u9762\u6240\u6709\u5305\u542b\u5728\u6709\u5e8f\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u4f9d\u6b21\u5411\u540e\u632a\u4e00\u4f4d\u7ed9\u63d2\u5165\u5143\u7d20\u7a7a\u51fa\u4f4d\u7f6e(\u5982\u679c\u8981\u63d2\u5165\u7684\u5143\u7d20\u6bd4\u6709\u5e8f\u5e8f\u5217\u4e2d\u7684\u6240\u6709\u5143\u7d20\u90fd\u5c0f\uff0c\u5c31\u628a\u6574\u4e2a\u6709\u5e8f\u5e8f\u5217\u5f80\u540e\u632a\u4e00\u4e2a\u4f4d\u7f6e)\uff0c\u5e76\u653e\u5165\u6240\u63d2\u5165\u7684\u5143\u7d20\uff0c\u4ece\u800c\u6269\u5927\u6709\u5e8f\u5e8f\u5217\u7684\u4e2a\u6570\uff0c\u5982\u5f15\u5faa\u73af\uff0c\u76f4\u5230\u6574\u4e2a\u539f\u59cb\u5e8f\u5217\u6709\u5e8f\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import Foundation func insert_sort ( _ array : inout [ Int ]) - [ Int ] { let count = array . count for i in 1 .. count { var insertIndex = i for j in ( 0 ... i - 1 ). reversed () { if array [ j ] array [ i ] { array [ j + 1 ] = array [ j ] insertIndex = j } } array [ insertIndex ] = array [ i ] } return array } \u5e0c\u5c14\u6392\u5e8f \u7b2c\u4e00\u4e2a\u7a81\u7834\\(O(n^2)\\)\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u662f\u7b80\u5355\u63d2\u5165\u6392\u5e8f\u7684\u6539\u8fdb\u7248\uff0c\u53c8\u53eb\u4f5c\u7f29\u5c0f\b\u589e\u91cf\u6392\u5e8f\u3002\u5173\u952e\u5728\u4e8e\u589e\u91cf\u5e8f\u5217\u7684\u9009\u62e9\uff0c\u589e\u91cf\u5e8f\u5217\u662f\u9012\u51cf\u7684\uff0c\u6700\u540e\u7684\u589e\u91cf\u4e3a1\u56de\u5f52\u5230\u6574\u4e2a\u5e8f\u5217\u3002 \u63cf\u8ff0: \u5c06\u6574\u4e2a\u5f85\u6392\u5e8f\u5e8f\u5217\u6309\u589e\u91cf\u5e8f\u5217\u591a\u6b21\u5206\u5272\u6210\u82e5\u5e72\u5b50\u5e8f\u5217\u8fdb\u884c\u76f4\u63a5\u63d2\u5165\u6392\u5e8f\uff0c\u76f4\u5230\u5e8f\u5217\u6709\u5e8f \u7b97\u6cd5\u6f14\u793a \u5f85\u6392\u5e8f\u5e8f\u5217: [ 83 , 1 , 67 , 0 , 84 , 56 , 9 , 94 , 22 , 84 ] \u5b9a\u4e49\u7d22\u5f15\u589e\u91cf(\u6b65\u957f)\u5e8f\u5217: 5 \uff0c 3 \uff0c 1 \u7d22\u5f15\u589e\u91cf(\u6b65\u957f)\u4e3a ** 5 **\u65f6\uff0c\u5e8f\u5217\u62c6\u5206\u4e3a5\u4e2a\u5b50\u5e8f\u5217\uff0c\u6982\u5ff5\u4e0a\u5982\u4e0b\u56fe\u6240\u793a: 1 2 3 4 5 [83, 56 ] [ 1, 9 ] [ 67, 94 ] [ 0, 22 ] [ 84 84] \u5206\u522b\u5bf9\u5b50\u5e8f\u5217\u4f7f\u7528\u63d2\u5165\u6392\u5e8f\u540e\u7684\u7ed3\u679c: 1 2 3 4 5 [56, 83 ] [ 1, 9 ] [ 67, 94 ] [ 0, 22 ] [ 84 84] \u7b2c\u4e00\u8f6e\u7ed3\u675f\u5e8f\u5217\u4e3a\uff1a [ 56 \uff0c 1 \uff0c 67 \uff0c 0 \uff0c 84 \uff0c 83 \uff0c 9 \uff0c 94 \uff0c 22 \uff0c 84 ] \u589e\u91cf(\u6b65\u957f)\u4e3a ** 3 **\u65f6\uff0c\u518d\u5c06\u4e0a\u4e00\u6b65\u7684\u7ed3\u679c\u5e8f\u5217\u62c6\u5206\u4e3a3\u4e2a\u5b50\u5e8f\u5217\uff0c\u5982\u4e0b: 1 2 3 [56, 0, 9, 84 ] [ 1, 84, 94 ] [ 67, 83, 22 ] \u5206\u522b\u5bf9\u5b50\u5e8f\u5217\u4f7f\u7528\u63d2\u5165\u6392\u5e8f\u540e\u7684\u7ed3\u679c: 1 2 3 [0, 9, 56, 84 ] [ 1, 84, 94 ] [ 22, 67, 83 ] \u7b2c\u4e8c\u8f6e\u7ed3\u675f\u5e8f\u5217\u4e3a\uff1a [ 0 \uff0c 1 \uff0c 22 \uff0c 9 \uff0c 84 \uff0c 67 \uff0c 56 \uff0c 94 \uff0c 83 \uff0c 84 ] \u589e\u91cf(\u6b65\u957f)\u4e3a ** 1 **\u65f6\uff0c\u518d\u5c06\u4e0a\u4e00\u6b65\u7684\u7ed3\u679c\u5e8f\u5217\u62c6\u5206\u4e3a1\u4e2a\u5b50\u5e8f\u5217\uff0c\u5982\u4e0b: \u5bf9\u5b50\u5e8f\u5217\u4f7f\u7528\u63d2\u5165\u6392\u5e8f\u540e\u7684\u7ed3\u679c: 1 [0\uff0c1\uff0c9\uff0c22\uff0c56\uff0c67\uff0c83\uff0c84\uff0c84\uff0c94] \u6392\u5e8f\u5b8c\u6210\uff1a [ 0 \uff0c 1 \uff0c 9 \uff0c 22 \uff0c 56 \uff0c 67 \uff0c 83 \uff0c 84 \uff0c 84 \uff0c 94 ] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 import Foundation func shell_sort ( _ array : inout [ Int ]) - [ Int ] { let count = array . count var gaps = [ 1 ] while ( gaps . last ! count / 3 ) { gaps . append ( gaps . last ! * 3 ) } for gap in gaps . reversed () { for i in 0 .. gap { for j in stride ( from : i + gap , to : count , by : gap ) { var insertIndex = j let temp = array [ j ] while ( insertIndex = gap temp array [ insertIndex - gap ]){ array [ insertIndex ] = array [ insertIndex - gap ] insertIndex = insertIndex - gap } array [ insertIndex ] = temp } } } return array } \u4e3a\u4ec0\u4e48\u5e0c\u5c14\u6392\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684? \u7ed9\u5b9a\u5e8f\u5217: 3^1, 3^2, 3^3, 1 3^1, 3^2, 3^3, 1 <span><span class=\"MathJax_Preview\">3^1, 3^2, 3^3, 1</span><script type=\"math/tex\">3^1, 3^2, 3^3, 1 \u589e\u91cf\u5e8f\u5217\u5b9a\u4e49\u4e3a\uff1a 2 , 1 \u589e\u91cf\u4e3a** 2 **\u65f6,\u62c6\u5206\u6210\u4e24\u4e2a\u5e8f\u5217\u4e3a: [3^1,\\quad,3^3,\\quad]$$ $$[\\,\\quad,3^2,\\quad,1\\ ] [3^1,\\quad,3^3,\\quad]$$ $$[\\,\\quad,3^2,\\quad,1\\ ] \u5206\u522b\u5bf9\u5b50\u5e8f\u5217\u8fdb\u884c\u63d2\u5165\u6392\u5e8f: [3^1,\\quad,3^3,\\quad]$$ $$[\\,\\quad,1\\ ,\\quad,3^2] [3^1,\\quad,3^3,\\quad]$$ $$[\\,\\quad,1\\ ,\\quad,3^2] \u6392\u5e8f\u540e\u5c31\u53d8\u6210: [3^1, 1, 3^3, 3^2] [3^1, 1, 3^3, 3^2] <span><span class=\"MathJax_Preview\">[3^1, 1, 3^3, 3^2]</span><script type=\"math/tex\">[3^1, 1, 3^3, 3^2] \u589e\u91cf\u4e3a** 1 **\u65f6\uff0c\u53ea\u6709\u4e00\u4e2a\u5e8f\u5217\uff0c\u63d2\u5165\u6392\u5e8f\u540e: [1, 3^1, 3^3, 3^2] [1, 3^1, 3^3, 3^2] <span><span class=\"MathJax_Preview\">[1, 3^1, 3^3, 3^2]</span><script type=\"math/tex\">[1, 3^1, 3^3, 3^2] \u6240\u4ee5\u5e0c\u5c14\u6392\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684 \u5f52\u5e76\u6392\u5e8f \u548c\u9009\u62e9\u6392\u5e8f\u4e00\u6837\uff0c\u4e0d\u8fc7\u8868\u73b0\u66f4\u597d\uff0c\u9700\u8981\u989d\u5916\u7a7a\u95f4(Out-Place)\uff0c\u5f52\u5e76\u64cd\u4f5c\u662f\u4e00\u79cd\u6709\u6548\u7684\u6392\u5e8f\u65b9\u6cd5\uff0c\u4e5f\u662f\u4e00\u79cd\u7a33\u5b9a\u7684\u6392\u5e8f\u65b9\u6cd5\uff0c\u91c7\u7528\u5206\u6cbb\u7684\u601d\u60f3\uff0c\u5c06\u5b50\u5e8f\u5217\u5206\u522b\u8fdb\u884c\u5f52\u5e76\u6392\u5e8f\uff0c\u518d\u5c06\u6709\u5e8f\u7684\u5b50\u5e8f\u5217\u5408\u5e76\u4e3a\u6574\u4f53\u6709\u5e8f\u5e8f\u5217\uff0c\u5b8c\u6210\u6392\u5e8f\u4efb\u52a1 \u63cf\u8ff0: \u628a\u5f85\u6392\u5e8f\u5e8f\u5217\u5206\u6210\u4e24\u4e2a\u957f\u5ea6\u4e3a\\(n/2\\)\u7684\u5b50\u5e8f\u5217\uff0c\u5bf9\u4e24\u4e2a\u5b50\u5e8f\u5217\u5206\u522b\u8fdb\u884c\u5f52\u5e76\u6392\u5e8f(\u7528\u5230\u9012\u5f52\u7684\u601d\u60f3)\uff0c\u518d\u5c06\u4e24\u4e2a\u6709\u5e8f\u7684\u5b50\u5e8f\u5217\u5408\u5e76\u6210\u6700\u7ec8\u7684\u6574\u4f53\u6709\u5e8f\u5e8f\u5217\uff0c\u5173\u952e\u662f\u5f52\u5e76\u64cd\u4f5c\u7684\u5b9e\u73b0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 import Foundation func merge_sort ( _ array : inout [ Int ]) - [ Int ] { let count = array . count guard count = 2 else { return array } let mid = count / 2 var left = Array ( array [ 0 .. mid ]) var right = Array ( array [ mid .. count ]) return merge ( left : merge_sort ( left ), right : merge_sort ( right )) } func merge ( left : [ Int ], right : [ Int ]) - [ Int ] { var array = [ Int ]() var leftIndex = 0 ; var rightIndex = 0 ; while leftIndex left . count rightIndex right . count { if left [ leftIndex ] right [ rightIndex ] { array . append ( left [ leftIndex ]) leftIndex = leftIndex + 1 } else { array . append ( right [ rightIndex ]) rightIndex = rightIndex + 1 } } while leftIndex left . count { array . append ( left [ leftIndex ]) leftIndex = leftIndex + 1 } while rightIndex right . count { array . append ( right [ rightIndex ]) rightIndex = rightIndex + 1 } return array } \u4e3a\u4ec0\u4e48\u5f52\u5e76\u6392\u5e8f\u662fOut-Place\u7684? \u5728\u62c6\u5206\u5b50\u5e8f\u5217\u65f6\uff0c\u989d\u5916\u7533\u8bf7\u4e86\u5b58\u50a8\u7a7a\u95f4\uff0c\u4e14\u5728\u6bcf\u4e2a\u6df1\u5ea6\u7684\u9012\u5f52\u7ea7\u522b\u90fd\u7533\u8bf7\u4e86\u989d\u5916\u5b58\u50a8\u7528\u6765\u8f85\u52a9\u8ba1\u7b97\uff0c\u4e0d\u662f\u76f4\u63a5\u5728\u539f\u8f93\u5165\u5e8f\u5217\u4e0a\u64cd\u4f5c \u5feb\u901f\u6392\u5e8f \u5c06\u5f85\u6392\u5e8f\u5e8f\u5217\u6309\u4e00\u4e2a\u57fa\u51c6\u503c\u5206\u6210\u4e24\u4e2a\u5b50\u5e8f\u5217\uff0c\u5176\u4e2d\u4e00\u4e2a\u5b50\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u5168\u90e8\u5c0f\u4e8e\u57fa\u51c6\u503c\uff0c\u53e6\u4e00\u4e2a\u5b50\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u5168\u90e8\u5927\u4e8e\u7b49\u4e8e\u57fa\u51c6\u503c\uff0c\u7136\u540e\u5bf9\u4e24\u4e2a\u5b50\u5e8f\u5217\u5206\u522b\u5e94\u7528\u5feb\u901f\u6392\u5e8f(\u9012\u5f52\u7684\u601d\u60f3)\uff0c\u5b8c\u6210\u6392\u5e8f\u4efb\u52a1 \u63cf\u8ff0: \u4ece\u5f85\u6392\u5e8f\u5e8f\u5217\u4e2d\u6311\u4e00\u4e2a\u5143\u7d20\u4f5c\u4e3a\u57fa\u51c6\u503c\uff0c\u5c06\u5e8f\u5217\u4e2d\u6240\u6709\u6bd4\u57fa\u51c6\u503c\u5c0f\u7684\u5143\u7d20\u653e\u5728\u524d\u534a\u90e8\u5206\uff0c\u5927\u4e8e\u6216\u7b49\u4e8e\u57fa\u51c6\u503c\u7684\u653e\u5728\u540e\u534a\u90e8\u5206\uff0c\u57fa\u51c6\u503c\u653e\u5728\u4e2d\u95f4\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53eb\u4f5c\u4ee5\u57fa\u51c6\u503c\u5bf9\u5e8f\u5217\u8fdb\u884c\u5206\u533a\uff0c\u5206\u533a\u540e\uff0c\u524d\u540e\u4e24\u90e8\u4efd\u5b50\u5e8f\u5217\u518d\u5206\u522b\u8fdb\u884c\u5feb\u901f\u6392\u5e8f\uff0c\u9012\u5f52\u7684\u5b8c\u6210\u6392\u5e8f\u4efb\u52a1\u3002\u6392\u5e8f\u7684\u5173\u952e\u90e8\u5206\u662f\u5206\u533a\u51fd\u6570\u7684\u5b9e\u73b0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 import Foundation func quick_sort ( _ array : inout [ Int ]) - [ Int ] { quick_sort ( array , left : 0 , right : array . count - 1 ) return array } func quick_sort ( _ array : inout [ Int ], left : Int , right : Int ) { if left right { let partionIndex = partition ( array , left : left , right : right ) quick_sort ( array , left : left , right : partionIndex - 1 ) quick_sort ( array , left : partionIndex + 1 , right : right ) } } func partition ( _ array : inout [ Int ], left : Int , right : Int ) - Int { let pivot = left var index = pivot + 1 for i in index ... right { if array [ i ] array [ pivot ] { array . swapAt ( i , index ) index = index + 1 } } array . swapAt ( left , index - 1 ) return index - 1 } \u4e3a\u4ec0\u4e48\u5feb\u901f\u6392\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684? \u8fd8\u662f\u7ed9\u5b9a\u5e8f\u5217: 3^1, 3^2, 3^3, 1 3^1, 3^2, 3^3, 1 <span><span class=\"MathJax_Preview\">3^1, 3^2, 3^3, 1</span><script type=\"math/tex\">3^1, 3^2, 3^3, 1 \u9009\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a\u57fa\u51c6\u503c\uff0c\u8fdb\u884c\u4e00\u6b21\u5206\u533a\u540e\u4f1a\u53d8\u6210: 1, 3^1, 3^3, 3^2 1, 3^1, 3^3, 3^2 <span><span class=\"MathJax_Preview\">1, 3^1, 3^3, 3^2</span><script type=\"math/tex\">1, 3^1, 3^3, 3^2 \u5806\u6392\u5e8f \u5229\u7528\u5806\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u8bbe\u8ba1\u7684\u6392\u5e8f\u7b97\u6cd5 \u63cf\u8ff0: \u5c06\u521d\u59cb\u5f85\u6392\u5e8f\u5e8f\u5217\u6784\u5efa\u6210\u5927\u9876\u5806(\u9876\u90e8\u7684\u5143\u7d20\u662f\u6574\u4e2a\u5806\u4e2d\u6700\u5927\u7684\u4e00\u4e2a)\uff0c\u6b64\u5806\u4e3a\u521d\u59cb\u7684\u65e0\u5e8f\u533a\uff1b\u5c06\u5806\u9876\u5143\u7d20(\u5373\u6700\u5927\u503c)\u4e0e\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362\uff0c\u6b64\u65f6\u5f97\u5230\u65b0\u7684\u65e0\u5e8f\u533a(\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e4b\u5916\u7684\u5176\u5b83\u6240\u6709\u5143\u7d20)\u548c\u65b0\u7684\u6709\u5e8f\u533a(\u6700\u540e\u4e00\u4e2a\uff0c\u4e5f\u5c31\u662f\u6700\u5927\u7684\u90a3\u4e2a\u5143\u7d20)\u3002\u7531\u4e8e\u4ea4\u6362\u540e\u65b0\u7684\u5806\u9876\u53ef\u80fd\u8fdd\u53cd\u5927\u9876\u5806\u7684\u6027\u8d28\uff0c\u56e0\u6b64\u9700\u8981\u5bf9\u5f53\u524d\u65e0\u5e8f\u533a\u91cd\u65b0\u8c03\u6574\u4e3a\u6700\u5927\u5806\uff0c\u7136\u540e\u518d\u6b21\u5c06\u5806\u9876\u5143\u7d20\u4e0e\u65e0\u5e8f\u533a\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362\uff0c\u5f97\u5230\u65b0\u7684\u65e0\u5e8f\u533a\u548c\u65b0\u7684\u6709\u5e8f\u533a(\u6700\u5927\u7684\u4e24\u4e2a\u5143\u7d20)\u3002\u4e0d\u65ad\u91cd\u590d\u6b64\u8fc7\u7a0b\u76f4\u5230\u65e0\u5e8f\u533a\u5143\u7d20\u4e2a\u6570\u4e3a1\uff0c\u5219\u6574\u4e2a\u6392\u5e8f\u8fc7\u7a0b\u5b8c\u6210\u3002 \u7528\u6570\u7ec4\u6a21\u62df\u5806\u7ed3\u6784(\u5b8c\u5168\u4e8c\u53c9\u6811\u7ed3\u6784):**\u4ee5\u4e0b\u6807 0 **\u4f5c\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811\u6839\u7ed3\u70b9\uff0c\u53ef\u4ee5\u53d1\u73b0\u5b50\u7ed3\u70b9\u7684\u4e0b\u6807\u6ee1\u8db3\u5173\u7cfb: \u5de6\u5b50\u7ed3\u70b9\u4e0b\u6807 = 2 * root + 1 \u5de6\u5b50\u7ed3\u70b9\u4e0b\u6807 = 2 * root + 1 <span><span class=\"MathJax_Preview\">\u5de6\u5b50\u7ed3\u70b9\u4e0b\u6807 = 2 * root + 1</span><script type=\"math/tex\">\u5de6\u5b50\u7ed3\u70b9\u4e0b\u6807 = 2 * root + 1 \u53f3\u5b50\u7ed3\u70b9\u4e0b\u6807 = 2 * root + 2 \u53f3\u5b50\u7ed3\u70b9\u4e0b\u6807 = 2 * root + 2 <span><span class=\"MathJax_Preview\">\u53f3\u5b50\u7ed3\u70b9\u4e0b\u6807 = 2 * root + 2</span><script type=\"math/tex\">\u53f3\u5b50\u7ed3\u70b9\u4e0b\u6807 = 2 * root + 2 \u6240\u4ee5\u5c31\u53ef\u4ee5\u901a\u8fc7\u6570\u7ec4\u4e0b\u6807\u6765\u6a21\u62df\u4e8c\u53c9\u6811\u7ed3\u70b9\u64cd\u4f5c\uff0c\u8fdb\u884c\u6a21\u62df\u51fa\u5806\u7684\u76f8\u5173\u64cd\u4f5c\uff0c\u5b8c\u5168\u4e8c\u53c9\u6811\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u7ed3\u70b9\u7684\u4e0b\u6807: floor(arr.count / 2) - 1 floor(arr.count / 2) - 1 <span><span class=\"MathJax_Preview\">floor(arr.count / 2) - 1</span><script type=\"math/tex\">floor(arr.count / 2) - 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 import Foundation func heap_sort ( _ array : inout [ Int ]) - [ Int ] { buildMaxHeap ( array ) for i in ( 1 .. array . count ). reversed () { array . swapAt ( 0 , i ) heapify ( array , index : 0 , length : i ) } return array } func buildMaxHeap ( _ array : inout [ Int ]) { for i in ( 0 .. array . count / 2 ). reversed () { heapify ( array , index : i , length : array . count ) } } func heapify ( _ array : inout [ Int ], index : Int , length : Int ) { let leftChild = index * 2 + 1 ; let rightChild = index * 2 + 2 ; var largest = index if leftChild length array [ largest ] array [ leftChild ] { largest = leftChild } if rightChild length array [ largest ] array [ rightChild ] { largest = rightChild } if largest != index { array . swapAt ( largest , index ) heapify ( array , index : largest , length : length ) } } \u4e3a\u4ec0\u4e48\u5806\u6392\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684? \u8fd8\u662f\u7ed9\u5b9a\u5e8f\u5217: 3^1, 3^2, 3^3, 1 3^1, 3^2, 3^3, 1 <span><span class=\"MathJax_Preview\">3^1, 3^2, 3^3, 1</span><script type=\"math/tex\">3^1, 3^2, 3^3, 1 \u8fdb\u884c\u5806\u6392\u5e8f\u540e\u4e3a\u53d8\u6210: [1, 3^3, 3^2, 3^1] [1, 3^3, 3^2, 3^1] <span><span class=\"MathJax_Preview\">[1, 3^3, 3^2, 3^1]</span><script type=\"math/tex\">[1, 3^3, 3^2, 3^1] \u8ba1\u6570\u6392\u5e8f \u5c06\u5e8f\u5217\u5143\u7d20\u4f5c\u4e3a\u952e\u5b58\u5165\u5f00\u8f9f\u7684\u6570\u7ec4\u7a7a\u95f4(Out-Place)\u4e2d\uff0c\u662f\u4e00\u79cd\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u7b97\u6cd5\uff0c\u8981\u6c42\u6570\u636e\u7684\u53d6\u503c\u6709\u4e00\u5b9a\u7684\u8303\u56f4\uff0c\u662f\u4e00\u79cd\u7a33\u5b9a\u7684\u7b97\u6cd5 \u63cf\u8ff0: \u83b7\u5f97\u5e8f\u5217\u7684\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\uff0c\u7edf\u8ba1\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5b58\u5165\u6570\u7ec4\uff0c\u6570\u7ec4\u7684\u4e0b\u6807\u5bf9\u5e94\u5e8f\u5217\u5143\u7d20\u7684\u503c\uff0c\u5bf9\u6240\u6709\u8ba1\u6570\u7d2f\u52a0\uff0c\u4ee5\u7d2f\u52a0\u503c\u4f5c\u4e3a\u5e8f\u5217\u7684\u4e0b\u6807\u7d22\u5f15\uff0c\u53cd\u5411\u586b\u5145\u5e8f\u5217\uff0c\u5b8c\u6210\u6392\u5e8f\u4efb\u52a1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 import Foundation func count_sort ( _ array : inout [ Int ]) - [ Int ] { if let max = array . max () { var bucket = Array ( repeating : 0 , count : max + 1 ) for e in array { bucket [ e ] = bucket [ e ] + 1 } var index = 0 for k in 0 ... max { while bucket [ k ] 0 { array [ index ] = k index = index + 1 bucket [ k ] = bucket [ k ] - 1 } } } return array } \u6876\u6392\u5e8f \u63cf\u8ff0: \u5728\u8ba1\u6570\u6392\u5e8f\u7684\u57fa\u7840\u4e0a\u7684\u6539\u8fdb\u7248\uff0c\u5148\u628a\u5e8f\u5217\u5206\u6210\u82e5\u5e72\u6876\uff0c\u5bf9\u6bcf\u4e00\u6876\u53ef\u4ee5\u91c7\u7528\u4e4b\u524d\u7684\u5404\u79cd\u6392\u5e8f\u65b9\u6cd5\uff0c\u5bf9\u6240\u6709\u6876\u6392\u5e8f\u5b8c\u6210\u540e\uff0c\u518d\u628a\u6240\u6709\u6876\u5408\u5e76\u8d77\u6765\u5f62\u6210\u7ed3\u679c\u3002\u7531\u4e8e\u7528\u5230\u4e86\u8f85\u52a9\u5b58\u50a8\u6876\uff0c\u6240\u4ee5\u662fOut-Place\u7684 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 import Foundation func bucket_sort_test ( _ array : inout [ Int ]) - [ Int ] { return bucket_sort ( array ) } func bucket_sort ( _ array : inout [ Int ], bucketSize : Int = 5 ) - [ Int ] { guard array . count 0 else { return array } let min = array . min () ! let max = array . max () ! let bucketCount = ( max - min + 1 ) / bucketSize + 1 var bucket = Array ( repeating : [ Int ](), count : bucketCount ) array . forEach { ( e ) in bucket [( e - min + 1 ) / bucketSize ]. append ( e ) } var ret = [ Int ]() for var b in bucket { if b . count 0 { ret . append ( contentsOf : count_sort ( b )) } } return ret } \u57fa\u6570\u6392\u5e8f \u9002\u5408\u5c0f\u8303\u56f4\u4f18\u5148\u7ea7\u76f8\u5173\u7684\u6392\u5e8f\u573a\u666f \u63cf\u8ff0: \u57fa\u6570\u6392\u5e8f\u662f\u6309\u7167\u4f4e\u4f4d\u5148\u6392\u5e8f\uff0c\u7136\u540e\u6536\u96c6\uff1b\u518d\u6309\u7167\u9ad8\u4f4d\u6392\u5e8f\uff0c\u7136\u540e\u518d\u6536\u96c6\uff1b\u4f9d\u6b21\u7c7b\u63a8\uff0c\u76f4\u5230\u6700\u9ad8\u4f4d\u3002\u6709\u65f6\u5019\u6709\u4e9b\u5c5e\u6027\u662f\u6709\u4f18\u5148\u7ea7\u987a\u5e8f\u7684\uff0c\u5148\u6309\u4f4e\u4f18\u5148\u7ea7\u6392\u5e8f\uff0c\u518d\u6309\u9ad8\u4f18\u5148\u7ea7\u6392\u5e8f\u3002\u6700\u540e\u7684\u6b21\u5e8f\u5c31\u662f\u9ad8\u4f18\u5148\u7ea7\u9ad8\u7684\u5728\u524d\uff0c\u9ad8\u4f18\u5148\u7ea7\u76f8\u540c\u7684\u4f4e\u4f18\u5148\u7ea7\u9ad8\u7684\u5728\u524d\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 import Foundation func radix_sort_test ( _ array : inout [ Int ]) - [ Int ] { return radix_sort ( array ) } func radix_sort ( _ array : inout [ Int ], maxDigitCount : Int = 2 ) - [ Int ] { let radix = 10 ; var dev = 1 for i in 0 .. maxDigitCount { var decimalBuckets = Array ( repeating : [ Int ](), count : radix ) dev *= ( i == 0 ) ? 1 : 10 for e in array { let digit = ( e / dev ) % radix decimalBuckets [ digit ]. append ( e ) } var i = 0 decimalBuckets . forEach { ( bucket ) in for e in bucket { array [ i ] = e i += 1 } } } return array } \u603b\u7ed3 \u4ece\u89c4\u5f8b\u4e0a\u770b\uff0cOut-Place\u7c7b\u7684\u6392\u5e8f\u90fd\u662f\u7a33\u5b9a\u7684\u6392\u5e8f \u4e0d\u7a33\u5b9a\u7684\u6392\u5e8f\u53ea\u6709\uff1a\u9009\u62e9\u6392\u5e8f\u3001\u5e0c\u5c14\u6392\u5e8f\u3001\u5feb\u901f\u6392\u5e8f\u548c\u5806\u6392\u5e8f","title":"\u5341\u5927\u6392\u5e8f\u7b97\u6cd5"},{"location":"iOS/sort/#_1","text":"\u6392\u5e8f: \u4f7f\u4e00\u4e32\u8bb0\u5f55\uff0c\u6309\u7167\u5176\u4e2d\u7684\u67d0\u4e2a\u6216\u67d0\u4e9b\u5173\u952e\u5b57\u7684\u5927\u5c0f\uff0c\u9012\u589e\u6216\u9012\u51cf\u7684\u6392\u5217\u8d77\u6765\u7684\u64cd\u4f5c \u7a33\u5b9a: \u5982\u679ca\u539f\u672c\u5728b\u524d\u9762\uff0c\u800ca=b, \u6392\u5e8f\u540ea\u4ecd\u7136\u5728b\u524d\u9762 \u4e0d\u7a33\u5b9a: \u5982\u679ca\u539f\u672c\u5728b\u524d\u9762\uff0c\u800ca=b, \u6392\u5e8f\u540ea\u53ef\u80fd\u5728b\u540e\u9762 \u5185\u6392\u5e8f: \u6240\u6709\u6392\u5e8f\u64cd\u4f5c\u90fd\u5728\u5185\u5b58\u4e2d\u5b8c\u6210 \u5916\u6392\u5e8f: \u7531\u4e8e\u6570\u636e\u592a\u5927\u653e\u5728\u78c1\u76d8\u4e2d\uff0c\u6392\u5e8f\u901a\u8fc7\u5185\u5b58\u548c\u78c1\u76d8\u7684\u4f20\u8f93\u624d\u80fd\u8fdb\u884c \u65f6\u95f4\u590d\u6742\u5ea6: \u7b97\u6cd5\u6267\u884c\u6240\u8017\u8d39\u7684\u65f6\u95f4 \u7a7a\u95f4\u590d\u6742\u5ea6: \u8fd0\u884c\u5b8c\u4e00\u4e2a\u7a0b\u5e8f\u6240\u9700\u5185\u5b58\u7684\u5927\u5c0f","title":"\u5341\u5927\u7ecf\u5178\u6392\u5e8f\u7b97\u6cd5"},{"location":"iOS/sort/#_2","text":"n: \u6570\u636e\u89c4\u6a21 k: \"\u6876\"\u7684\u4e2a\u6570 in-place : \u6392\u5e8f\u8fc7\u7a0b\u5360\u7528\u5e38\u6570\u5185\u5b58\uff0c\u4e0d\u7533\u8bf7\u989d\u5916\u8f85\u52a9\u5b58\u50a8\u7a7a\u95f4\uff0c\b\u8f93\u5165\u6570\u636e\u5728\u5904\u7406\u8fc7\u7a0b\u4e2d\u4f1a\u88ab\u6539\u5199\uff0c\u901a\u5e38\u6d89\u53ca\b\u4ea4\u6362\u548c\u66ff\u6362 out-place: \u6392\u5e8f\u8fc7\u7a0b\u9700\u8981\u7533\u8bf7\u4e0d\u5b9a\u91cf\u8f85\u52a9\b\u5b58\u50a8\u7a7a\u95f4\b\b\u8fdb\u884c\u8ba1\u7b97\u548c\u64cd\u4f5c","title":"\u5404\u7c7b\u6392\u5e8f\u7b97\u6cd5\u7684\u603b\u7ed3"},{"location":"iOS/sort/#_3","text":"","title":"\u5206\u7c7b"},{"location":"iOS/sort/#swift","text":"","title":"\u4e0b\u9762\u662f\u5177\u4f53\u7684\u5404\u79cd\u7b97\u6cd5\u53caswift\u5b9e\u73b0"},{"location":"iOS/sort/#_4","text":"\u63cf\u8ff0: \u9996\u5148\u904d\u5386\u6574\u4e2a\u5e8f\u5217\uff0c\u904d\u5386\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u6bd4\u8f83\u76f8\u90bb\u4e24\u4e2a\u5143\u7d20\uff0c\u5982\u679c\u9006\u5e8f\u5c31\u4ea4\u6362\u4e24\u5143\u7d20\u7684\u4f4d\u7f6e\uff0c\u4e00\u8d9f\u4e0b\u6765\u5c31\u628a\u6700\u5927\u5143\u7d20\u632a\u5230\u4e86\u6700\u540e\u4f4d\u7f6e\uff0c\u7136\u540e\u628a\u53bb\u6389\u6700\u5927\u5143\u7d20\u7684\b\u5e8f\u5217\u770b\u6210\u4e00\u4e2a\u89c4\u6a21\u66f4\u5c0f\u5b50\b\u5e8f\u5217\u518d\u8fdb\u884c\u76f8\u540c\u904d\u5386\u64cd\u4f5c\uff0c\u76f4\u5230\u5e8f\u5217\u6392\u5e8f\u5b8c\u6210\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import Foundation func bubble_sort ( _ array : inout [ Int ]) - [ Int ] { let count = array . count for i in 0 .. count - 1 { for j in 0 .. count - 1 - i { if array [ j ] array [ j + 1 ] { let temp = array [ j ] array [ j ] = array [ j + 1 ] array [ j + 1 ] = temp } } } return array }","title":"\u5192\u6ce1\u6392\u5e8f"},{"location":"iOS/sort/#_5","text":"\u63cf\u8ff0: \u9996\u5148\u904d\u5386\u5e8f\u5217\uff0c\u8bb0\u5f55\u6700\u5c0f\u5143\u7d20\u7684\u4e0b\u6807\u6216\u7d22\u5f15\uff0c\u904d\u5386\u5b8c\u6210\u540e\uff0c\u5c06\u6700\u5c0f\u5143\u7d20\u548c\u5e8f\u5217\u7b2c\u4e00\u4e2a\u5143\u7d20\u8fdb\u884c\u4f4d\u7f6e\u4ea4\u6362\uff0c\u518d\u5c06\u6700\u5c0f\u5143\u7d20\u6392\u9664\u540e\u5e8f\u5217\u770b\u6210\u4e00\u4e2a\u89c4\u6a21\u66f4\u5c0f\u7684\u5b50\u5e8f\u5217\u91cd\u590d\u4e4b\u524d\u904d\u5386\u8fc7\u7a0b\uff0c\u76f4\u5230\u6574\u4e2a\u5e8f\u5217\u6709\u5e8f\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import Foundation func select_sort ( _ array : inout [ Int ]) - [ Int ] { let count = array . count for i in 0 .. count - 1 { var minIndex = i for j in ( i + 1 ) .. count { if array [ j ] array [ minIndex ] { minIndex = j } } let temp = array [ i ] array [ i ] = array [ minIndex ] array [ minIndex ] = temp } return array }","title":"\u7b80\u5355\u9009\u62e9\u6392\u5e8f"},{"location":"iOS/sort/#_6","text":"\u7ed9\u5b9a\u5e8f\u5217: 3^1, 3^2, 1 3^1, 3^2, 1 <span><span class=\"MathJax_Preview\">3^1, 3^2, 1</span><script type=\"math/tex\">3^1, 3^2, 1 \u6392\u5e8f\u540e\u5c31\u53d8\u6210: 1, 3^2, 3^1 1, 3^2, 3^1 <span><span class=\"MathJax_Preview\">1, 3^2, 3^1</span><script type=\"math/tex\">1, 3^2, 3^1 \u6240\u4ee5\u7b80\u5355\u9009\u62e9\u6392\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684","title":"\u4e3a\u4ec0\u4e48\u7b80\u5355\u9009\u62e9\u6392\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684?"},{"location":"iOS/sort/#_7","text":"\u63cf\u8ff0: (\u7c7b\u6bd4\u4e8e\u6251\u514b\u724c\u6574\u724c)\u9996\u5148\u628a\u7b2c\u4e00\u4e2a\u5143\u7d20\u770b\u6210\u662f\u4e00\u4e2a\u6709\u5e8f\u5e8f\u5217\uff0c\u628a\u7b2c\u4e8c\u5143\u7d20\u63d2\u5165\u8fd9\u4e2a\u6709\u5e8f\u5e8f\u5217\uff0c\u63d2\u5165\u8fc7\u7a0b\u4ece\u6709\u5e8f\u5e8f\u5217\u7684\u5c3e\u90e8\u5143\u7d20\u5f00\u59cb\uff0c\u9010\u4e2a\u5411\u524d\u6bd4\u8f83\uff0c\u5982\u679c\u63d2\u5165\u5143\u7d20\u5927\u4e8e\u6216\u7b49\u4e8e\u6700\u540e\u4e00\u4e2a\u5143\u7d20,\u5c31\u63d2\u5165\u6709\u5e8f\u5e8f\u5217\u5c3e\u90e8\uff0c\u90a3\u4e48\u6709\u5e8f\u5e8f\u5217\u5c31\u6269\u5927\u4e3a2\u4e2a\u5143\u7d20\uff0c\u5982\u679c\u63d2\u5165\u5143\u7d20\u6bd4\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5c0f\uff0c\u7ee7\u7eed\u5411\u524d\u67e5\u627e\u6bd4\u8f83\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u5c0f\u4e8e\u6216\u8005\u7b49\u4e8e\u63d2\u5165\u5143\u7d20\u7684\u5143\u7d20\uff0c\u5e76\u5c06\u8be5\u5143\u7d20\u540e\u9762\u6240\u6709\u5305\u542b\u5728\u6709\u5e8f\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u4f9d\u6b21\u5411\u540e\u632a\u4e00\u4f4d\u7ed9\u63d2\u5165\u5143\u7d20\u7a7a\u51fa\u4f4d\u7f6e(\u5982\u679c\u8981\u63d2\u5165\u7684\u5143\u7d20\u6bd4\u6709\u5e8f\u5e8f\u5217\u4e2d\u7684\u6240\u6709\u5143\u7d20\u90fd\u5c0f\uff0c\u5c31\u628a\u6574\u4e2a\u6709\u5e8f\u5e8f\u5217\u5f80\u540e\u632a\u4e00\u4e2a\u4f4d\u7f6e)\uff0c\u5e76\u653e\u5165\u6240\u63d2\u5165\u7684\u5143\u7d20\uff0c\u4ece\u800c\u6269\u5927\u6709\u5e8f\u5e8f\u5217\u7684\u4e2a\u6570\uff0c\u5982\u5f15\u5faa\u73af\uff0c\u76f4\u5230\u6574\u4e2a\u539f\u59cb\u5e8f\u5217\u6709\u5e8f\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import Foundation func insert_sort ( _ array : inout [ Int ]) - [ Int ] { let count = array . count for i in 1 .. count { var insertIndex = i for j in ( 0 ... i - 1 ). reversed () { if array [ j ] array [ i ] { array [ j + 1 ] = array [ j ] insertIndex = j } } array [ insertIndex ] = array [ i ] } return array }","title":"\u76f4\u63a5\u63d2\u5165\u6392\u5e8f"},{"location":"iOS/sort/#_8","text":"\u7b2c\u4e00\u4e2a\u7a81\u7834\\(O(n^2)\\)\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u662f\u7b80\u5355\u63d2\u5165\u6392\u5e8f\u7684\u6539\u8fdb\u7248\uff0c\u53c8\u53eb\u4f5c\u7f29\u5c0f\b\u589e\u91cf\u6392\u5e8f\u3002\u5173\u952e\u5728\u4e8e\u589e\u91cf\u5e8f\u5217\u7684\u9009\u62e9\uff0c\u589e\u91cf\u5e8f\u5217\u662f\u9012\u51cf\u7684\uff0c\u6700\u540e\u7684\u589e\u91cf\u4e3a1\u56de\u5f52\u5230\u6574\u4e2a\u5e8f\u5217\u3002 \u63cf\u8ff0: \u5c06\u6574\u4e2a\u5f85\u6392\u5e8f\u5e8f\u5217\u6309\u589e\u91cf\u5e8f\u5217\u591a\u6b21\u5206\u5272\u6210\u82e5\u5e72\u5b50\u5e8f\u5217\u8fdb\u884c\u76f4\u63a5\u63d2\u5165\u6392\u5e8f\uff0c\u76f4\u5230\u5e8f\u5217\u6709\u5e8f","title":"\u5e0c\u5c14\u6392\u5e8f"},{"location":"iOS/sort/#_9","text":"\u5f85\u6392\u5e8f\u5e8f\u5217: [ 83 , 1 , 67 , 0 , 84 , 56 , 9 , 94 , 22 , 84 ] \u5b9a\u4e49\u7d22\u5f15\u589e\u91cf(\u6b65\u957f)\u5e8f\u5217: 5 \uff0c 3 \uff0c 1 \u7d22\u5f15\u589e\u91cf(\u6b65\u957f)\u4e3a ** 5 **\u65f6\uff0c\u5e8f\u5217\u62c6\u5206\u4e3a5\u4e2a\u5b50\u5e8f\u5217\uff0c\u6982\u5ff5\u4e0a\u5982\u4e0b\u56fe\u6240\u793a: 1 2 3 4 5 [83, 56 ] [ 1, 9 ] [ 67, 94 ] [ 0, 22 ] [ 84 84] \u5206\u522b\u5bf9\u5b50\u5e8f\u5217\u4f7f\u7528\u63d2\u5165\u6392\u5e8f\u540e\u7684\u7ed3\u679c: 1 2 3 4 5 [56, 83 ] [ 1, 9 ] [ 67, 94 ] [ 0, 22 ] [ 84 84] \u7b2c\u4e00\u8f6e\u7ed3\u675f\u5e8f\u5217\u4e3a\uff1a [ 56 \uff0c 1 \uff0c 67 \uff0c 0 \uff0c 84 \uff0c 83 \uff0c 9 \uff0c 94 \uff0c 22 \uff0c 84 ] \u589e\u91cf(\u6b65\u957f)\u4e3a ** 3 **\u65f6\uff0c\u518d\u5c06\u4e0a\u4e00\u6b65\u7684\u7ed3\u679c\u5e8f\u5217\u62c6\u5206\u4e3a3\u4e2a\u5b50\u5e8f\u5217\uff0c\u5982\u4e0b: 1 2 3 [56, 0, 9, 84 ] [ 1, 84, 94 ] [ 67, 83, 22 ] \u5206\u522b\u5bf9\u5b50\u5e8f\u5217\u4f7f\u7528\u63d2\u5165\u6392\u5e8f\u540e\u7684\u7ed3\u679c: 1 2 3 [0, 9, 56, 84 ] [ 1, 84, 94 ] [ 22, 67, 83 ] \u7b2c\u4e8c\u8f6e\u7ed3\u675f\u5e8f\u5217\u4e3a\uff1a [ 0 \uff0c 1 \uff0c 22 \uff0c 9 \uff0c 84 \uff0c 67 \uff0c 56 \uff0c 94 \uff0c 83 \uff0c 84 ] \u589e\u91cf(\u6b65\u957f)\u4e3a ** 1 **\u65f6\uff0c\u518d\u5c06\u4e0a\u4e00\u6b65\u7684\u7ed3\u679c\u5e8f\u5217\u62c6\u5206\u4e3a1\u4e2a\u5b50\u5e8f\u5217\uff0c\u5982\u4e0b: \u5bf9\u5b50\u5e8f\u5217\u4f7f\u7528\u63d2\u5165\u6392\u5e8f\u540e\u7684\u7ed3\u679c: 1 [0\uff0c1\uff0c9\uff0c22\uff0c56\uff0c67\uff0c83\uff0c84\uff0c84\uff0c94] \u6392\u5e8f\u5b8c\u6210\uff1a [ 0 \uff0c 1 \uff0c 9 \uff0c 22 \uff0c 56 \uff0c 67 \uff0c 83 \uff0c 84 \uff0c 84 \uff0c 94 ] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 import Foundation func shell_sort ( _ array : inout [ Int ]) - [ Int ] { let count = array . count var gaps = [ 1 ] while ( gaps . last ! count / 3 ) { gaps . append ( gaps . last ! * 3 ) } for gap in gaps . reversed () { for i in 0 .. gap { for j in stride ( from : i + gap , to : count , by : gap ) { var insertIndex = j let temp = array [ j ] while ( insertIndex = gap temp array [ insertIndex - gap ]){ array [ insertIndex ] = array [ insertIndex - gap ] insertIndex = insertIndex - gap } array [ insertIndex ] = temp } } } return array }","title":"\u7b97\u6cd5\u6f14\u793a"},{"location":"iOS/sort/#_10","text":"\u7ed9\u5b9a\u5e8f\u5217: 3^1, 3^2, 3^3, 1 3^1, 3^2, 3^3, 1 <span><span class=\"MathJax_Preview\">3^1, 3^2, 3^3, 1</span><script type=\"math/tex\">3^1, 3^2, 3^3, 1 \u589e\u91cf\u5e8f\u5217\u5b9a\u4e49\u4e3a\uff1a 2 , 1 \u589e\u91cf\u4e3a** 2 **\u65f6,\u62c6\u5206\u6210\u4e24\u4e2a\u5e8f\u5217\u4e3a: [3^1,\\quad,3^3,\\quad]$$ $$[\\,\\quad,3^2,\\quad,1\\ ] [3^1,\\quad,3^3,\\quad]$$ $$[\\,\\quad,3^2,\\quad,1\\ ] \u5206\u522b\u5bf9\u5b50\u5e8f\u5217\u8fdb\u884c\u63d2\u5165\u6392\u5e8f: [3^1,\\quad,3^3,\\quad]$$ $$[\\,\\quad,1\\ ,\\quad,3^2] [3^1,\\quad,3^3,\\quad]$$ $$[\\,\\quad,1\\ ,\\quad,3^2] \u6392\u5e8f\u540e\u5c31\u53d8\u6210: [3^1, 1, 3^3, 3^2] [3^1, 1, 3^3, 3^2] <span><span class=\"MathJax_Preview\">[3^1, 1, 3^3, 3^2]</span><script type=\"math/tex\">[3^1, 1, 3^3, 3^2] \u589e\u91cf\u4e3a** 1 **\u65f6\uff0c\u53ea\u6709\u4e00\u4e2a\u5e8f\u5217\uff0c\u63d2\u5165\u6392\u5e8f\u540e: [1, 3^1, 3^3, 3^2] [1, 3^1, 3^3, 3^2] <span><span class=\"MathJax_Preview\">[1, 3^1, 3^3, 3^2]</span><script type=\"math/tex\">[1, 3^1, 3^3, 3^2] \u6240\u4ee5\u5e0c\u5c14\u6392\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684","title":"\u4e3a\u4ec0\u4e48\u5e0c\u5c14\u6392\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684?"},{"location":"iOS/sort/#_11","text":"\u548c\u9009\u62e9\u6392\u5e8f\u4e00\u6837\uff0c\u4e0d\u8fc7\u8868\u73b0\u66f4\u597d\uff0c\u9700\u8981\u989d\u5916\u7a7a\u95f4(Out-Place)\uff0c\u5f52\u5e76\u64cd\u4f5c\u662f\u4e00\u79cd\u6709\u6548\u7684\u6392\u5e8f\u65b9\u6cd5\uff0c\u4e5f\u662f\u4e00\u79cd\u7a33\u5b9a\u7684\u6392\u5e8f\u65b9\u6cd5\uff0c\u91c7\u7528\u5206\u6cbb\u7684\u601d\u60f3\uff0c\u5c06\u5b50\u5e8f\u5217\u5206\u522b\u8fdb\u884c\u5f52\u5e76\u6392\u5e8f\uff0c\u518d\u5c06\u6709\u5e8f\u7684\u5b50\u5e8f\u5217\u5408\u5e76\u4e3a\u6574\u4f53\u6709\u5e8f\u5e8f\u5217\uff0c\u5b8c\u6210\u6392\u5e8f\u4efb\u52a1 \u63cf\u8ff0: \u628a\u5f85\u6392\u5e8f\u5e8f\u5217\u5206\u6210\u4e24\u4e2a\u957f\u5ea6\u4e3a\\(n/2\\)\u7684\u5b50\u5e8f\u5217\uff0c\u5bf9\u4e24\u4e2a\u5b50\u5e8f\u5217\u5206\u522b\u8fdb\u884c\u5f52\u5e76\u6392\u5e8f(\u7528\u5230\u9012\u5f52\u7684\u601d\u60f3)\uff0c\u518d\u5c06\u4e24\u4e2a\u6709\u5e8f\u7684\u5b50\u5e8f\u5217\u5408\u5e76\u6210\u6700\u7ec8\u7684\u6574\u4f53\u6709\u5e8f\u5e8f\u5217\uff0c\u5173\u952e\u662f\u5f52\u5e76\u64cd\u4f5c\u7684\u5b9e\u73b0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 import Foundation func merge_sort ( _ array : inout [ Int ]) - [ Int ] { let count = array . count guard count = 2 else { return array } let mid = count / 2 var left = Array ( array [ 0 .. mid ]) var right = Array ( array [ mid .. count ]) return merge ( left : merge_sort ( left ), right : merge_sort ( right )) } func merge ( left : [ Int ], right : [ Int ]) - [ Int ] { var array = [ Int ]() var leftIndex = 0 ; var rightIndex = 0 ; while leftIndex left . count rightIndex right . count { if left [ leftIndex ] right [ rightIndex ] { array . append ( left [ leftIndex ]) leftIndex = leftIndex + 1 } else { array . append ( right [ rightIndex ]) rightIndex = rightIndex + 1 } } while leftIndex left . count { array . append ( left [ leftIndex ]) leftIndex = leftIndex + 1 } while rightIndex right . count { array . append ( right [ rightIndex ]) rightIndex = rightIndex + 1 } return array }","title":"\u5f52\u5e76\u6392\u5e8f"},{"location":"iOS/sort/#out-place","text":"\u5728\u62c6\u5206\u5b50\u5e8f\u5217\u65f6\uff0c\u989d\u5916\u7533\u8bf7\u4e86\u5b58\u50a8\u7a7a\u95f4\uff0c\u4e14\u5728\u6bcf\u4e2a\u6df1\u5ea6\u7684\u9012\u5f52\u7ea7\u522b\u90fd\u7533\u8bf7\u4e86\u989d\u5916\u5b58\u50a8\u7528\u6765\u8f85\u52a9\u8ba1\u7b97\uff0c\u4e0d\u662f\u76f4\u63a5\u5728\u539f\u8f93\u5165\u5e8f\u5217\u4e0a\u64cd\u4f5c","title":"\u4e3a\u4ec0\u4e48\u5f52\u5e76\u6392\u5e8f\u662fOut-Place\u7684?"},{"location":"iOS/sort/#_12","text":"\u5c06\u5f85\u6392\u5e8f\u5e8f\u5217\u6309\u4e00\u4e2a\u57fa\u51c6\u503c\u5206\u6210\u4e24\u4e2a\u5b50\u5e8f\u5217\uff0c\u5176\u4e2d\u4e00\u4e2a\u5b50\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u5168\u90e8\u5c0f\u4e8e\u57fa\u51c6\u503c\uff0c\u53e6\u4e00\u4e2a\u5b50\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u5168\u90e8\u5927\u4e8e\u7b49\u4e8e\u57fa\u51c6\u503c\uff0c\u7136\u540e\u5bf9\u4e24\u4e2a\u5b50\u5e8f\u5217\u5206\u522b\u5e94\u7528\u5feb\u901f\u6392\u5e8f(\u9012\u5f52\u7684\u601d\u60f3)\uff0c\u5b8c\u6210\u6392\u5e8f\u4efb\u52a1 \u63cf\u8ff0: \u4ece\u5f85\u6392\u5e8f\u5e8f\u5217\u4e2d\u6311\u4e00\u4e2a\u5143\u7d20\u4f5c\u4e3a\u57fa\u51c6\u503c\uff0c\u5c06\u5e8f\u5217\u4e2d\u6240\u6709\u6bd4\u57fa\u51c6\u503c\u5c0f\u7684\u5143\u7d20\u653e\u5728\u524d\u534a\u90e8\u5206\uff0c\u5927\u4e8e\u6216\u7b49\u4e8e\u57fa\u51c6\u503c\u7684\u653e\u5728\u540e\u534a\u90e8\u5206\uff0c\u57fa\u51c6\u503c\u653e\u5728\u4e2d\u95f4\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53eb\u4f5c\u4ee5\u57fa\u51c6\u503c\u5bf9\u5e8f\u5217\u8fdb\u884c\u5206\u533a\uff0c\u5206\u533a\u540e\uff0c\u524d\u540e\u4e24\u90e8\u4efd\u5b50\u5e8f\u5217\u518d\u5206\u522b\u8fdb\u884c\u5feb\u901f\u6392\u5e8f\uff0c\u9012\u5f52\u7684\u5b8c\u6210\u6392\u5e8f\u4efb\u52a1\u3002\u6392\u5e8f\u7684\u5173\u952e\u90e8\u5206\u662f\u5206\u533a\u51fd\u6570\u7684\u5b9e\u73b0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 import Foundation func quick_sort ( _ array : inout [ Int ]) - [ Int ] { quick_sort ( array , left : 0 , right : array . count - 1 ) return array } func quick_sort ( _ array : inout [ Int ], left : Int , right : Int ) { if left right { let partionIndex = partition ( array , left : left , right : right ) quick_sort ( array , left : left , right : partionIndex - 1 ) quick_sort ( array , left : partionIndex + 1 , right : right ) } } func partition ( _ array : inout [ Int ], left : Int , right : Int ) - Int { let pivot = left var index = pivot + 1 for i in index ... right { if array [ i ] array [ pivot ] { array . swapAt ( i , index ) index = index + 1 } } array . swapAt ( left , index - 1 ) return index - 1 }","title":"\u5feb\u901f\u6392\u5e8f"},{"location":"iOS/sort/#_13","text":"\u8fd8\u662f\u7ed9\u5b9a\u5e8f\u5217: 3^1, 3^2, 3^3, 1 3^1, 3^2, 3^3, 1 <span><span class=\"MathJax_Preview\">3^1, 3^2, 3^3, 1</span><script type=\"math/tex\">3^1, 3^2, 3^3, 1 \u9009\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a\u57fa\u51c6\u503c\uff0c\u8fdb\u884c\u4e00\u6b21\u5206\u533a\u540e\u4f1a\u53d8\u6210: 1, 3^1, 3^3, 3^2 1, 3^1, 3^3, 3^2 <span><span class=\"MathJax_Preview\">1, 3^1, 3^3, 3^2</span><script type=\"math/tex\">1, 3^1, 3^3, 3^2","title":"\u4e3a\u4ec0\u4e48\u5feb\u901f\u6392\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684?"},{"location":"iOS/sort/#_14","text":"\u5229\u7528\u5806\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u8bbe\u8ba1\u7684\u6392\u5e8f\u7b97\u6cd5 \u63cf\u8ff0: \u5c06\u521d\u59cb\u5f85\u6392\u5e8f\u5e8f\u5217\u6784\u5efa\u6210\u5927\u9876\u5806(\u9876\u90e8\u7684\u5143\u7d20\u662f\u6574\u4e2a\u5806\u4e2d\u6700\u5927\u7684\u4e00\u4e2a)\uff0c\u6b64\u5806\u4e3a\u521d\u59cb\u7684\u65e0\u5e8f\u533a\uff1b\u5c06\u5806\u9876\u5143\u7d20(\u5373\u6700\u5927\u503c)\u4e0e\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362\uff0c\u6b64\u65f6\u5f97\u5230\u65b0\u7684\u65e0\u5e8f\u533a(\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e4b\u5916\u7684\u5176\u5b83\u6240\u6709\u5143\u7d20)\u548c\u65b0\u7684\u6709\u5e8f\u533a(\u6700\u540e\u4e00\u4e2a\uff0c\u4e5f\u5c31\u662f\u6700\u5927\u7684\u90a3\u4e2a\u5143\u7d20)\u3002\u7531\u4e8e\u4ea4\u6362\u540e\u65b0\u7684\u5806\u9876\u53ef\u80fd\u8fdd\u53cd\u5927\u9876\u5806\u7684\u6027\u8d28\uff0c\u56e0\u6b64\u9700\u8981\u5bf9\u5f53\u524d\u65e0\u5e8f\u533a\u91cd\u65b0\u8c03\u6574\u4e3a\u6700\u5927\u5806\uff0c\u7136\u540e\u518d\u6b21\u5c06\u5806\u9876\u5143\u7d20\u4e0e\u65e0\u5e8f\u533a\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362\uff0c\u5f97\u5230\u65b0\u7684\u65e0\u5e8f\u533a\u548c\u65b0\u7684\u6709\u5e8f\u533a(\u6700\u5927\u7684\u4e24\u4e2a\u5143\u7d20)\u3002\u4e0d\u65ad\u91cd\u590d\u6b64\u8fc7\u7a0b\u76f4\u5230\u65e0\u5e8f\u533a\u5143\u7d20\u4e2a\u6570\u4e3a1\uff0c\u5219\u6574\u4e2a\u6392\u5e8f\u8fc7\u7a0b\u5b8c\u6210\u3002 \u7528\u6570\u7ec4\u6a21\u62df\u5806\u7ed3\u6784(\u5b8c\u5168\u4e8c\u53c9\u6811\u7ed3\u6784):**\u4ee5\u4e0b\u6807 0 **\u4f5c\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811\u6839\u7ed3\u70b9\uff0c\u53ef\u4ee5\u53d1\u73b0\u5b50\u7ed3\u70b9\u7684\u4e0b\u6807\u6ee1\u8db3\u5173\u7cfb: \u5de6\u5b50\u7ed3\u70b9\u4e0b\u6807 = 2 * root + 1 \u5de6\u5b50\u7ed3\u70b9\u4e0b\u6807 = 2 * root + 1 <span><span class=\"MathJax_Preview\">\u5de6\u5b50\u7ed3\u70b9\u4e0b\u6807 = 2 * root + 1</span><script type=\"math/tex\">\u5de6\u5b50\u7ed3\u70b9\u4e0b\u6807 = 2 * root + 1 \u53f3\u5b50\u7ed3\u70b9\u4e0b\u6807 = 2 * root + 2 \u53f3\u5b50\u7ed3\u70b9\u4e0b\u6807 = 2 * root + 2 <span><span class=\"MathJax_Preview\">\u53f3\u5b50\u7ed3\u70b9\u4e0b\u6807 = 2 * root + 2</span><script type=\"math/tex\">\u53f3\u5b50\u7ed3\u70b9\u4e0b\u6807 = 2 * root + 2 \u6240\u4ee5\u5c31\u53ef\u4ee5\u901a\u8fc7\u6570\u7ec4\u4e0b\u6807\u6765\u6a21\u62df\u4e8c\u53c9\u6811\u7ed3\u70b9\u64cd\u4f5c\uff0c\u8fdb\u884c\u6a21\u62df\u51fa\u5806\u7684\u76f8\u5173\u64cd\u4f5c\uff0c\u5b8c\u5168\u4e8c\u53c9\u6811\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u7ed3\u70b9\u7684\u4e0b\u6807: floor(arr.count / 2) - 1 floor(arr.count / 2) - 1 <span><span class=\"MathJax_Preview\">floor(arr.count / 2) - 1</span><script type=\"math/tex\">floor(arr.count / 2) - 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 import Foundation func heap_sort ( _ array : inout [ Int ]) - [ Int ] { buildMaxHeap ( array ) for i in ( 1 .. array . count ). reversed () { array . swapAt ( 0 , i ) heapify ( array , index : 0 , length : i ) } return array } func buildMaxHeap ( _ array : inout [ Int ]) { for i in ( 0 .. array . count / 2 ). reversed () { heapify ( array , index : i , length : array . count ) } } func heapify ( _ array : inout [ Int ], index : Int , length : Int ) { let leftChild = index * 2 + 1 ; let rightChild = index * 2 + 2 ; var largest = index if leftChild length array [ largest ] array [ leftChild ] { largest = leftChild } if rightChild length array [ largest ] array [ rightChild ] { largest = rightChild } if largest != index { array . swapAt ( largest , index ) heapify ( array , index : largest , length : length ) } }","title":"\u5806\u6392\u5e8f"},{"location":"iOS/sort/#_15","text":"\u8fd8\u662f\u7ed9\u5b9a\u5e8f\u5217: 3^1, 3^2, 3^3, 1 3^1, 3^2, 3^3, 1 <span><span class=\"MathJax_Preview\">3^1, 3^2, 3^3, 1</span><script type=\"math/tex\">3^1, 3^2, 3^3, 1 \u8fdb\u884c\u5806\u6392\u5e8f\u540e\u4e3a\u53d8\u6210: [1, 3^3, 3^2, 3^1] [1, 3^3, 3^2, 3^1] <span><span class=\"MathJax_Preview\">[1, 3^3, 3^2, 3^1]</span><script type=\"math/tex\">[1, 3^3, 3^2, 3^1]","title":"\u4e3a\u4ec0\u4e48\u5806\u6392\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684?"},{"location":"iOS/sort/#_16","text":"\u5c06\u5e8f\u5217\u5143\u7d20\u4f5c\u4e3a\u952e\u5b58\u5165\u5f00\u8f9f\u7684\u6570\u7ec4\u7a7a\u95f4(Out-Place)\u4e2d\uff0c\u662f\u4e00\u79cd\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u7b97\u6cd5\uff0c\u8981\u6c42\u6570\u636e\u7684\u53d6\u503c\u6709\u4e00\u5b9a\u7684\u8303\u56f4\uff0c\u662f\u4e00\u79cd\u7a33\u5b9a\u7684\u7b97\u6cd5 \u63cf\u8ff0: \u83b7\u5f97\u5e8f\u5217\u7684\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\uff0c\u7edf\u8ba1\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5b58\u5165\u6570\u7ec4\uff0c\u6570\u7ec4\u7684\u4e0b\u6807\u5bf9\u5e94\u5e8f\u5217\u5143\u7d20\u7684\u503c\uff0c\u5bf9\u6240\u6709\u8ba1\u6570\u7d2f\u52a0\uff0c\u4ee5\u7d2f\u52a0\u503c\u4f5c\u4e3a\u5e8f\u5217\u7684\u4e0b\u6807\u7d22\u5f15\uff0c\u53cd\u5411\u586b\u5145\u5e8f\u5217\uff0c\u5b8c\u6210\u6392\u5e8f\u4efb\u52a1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 import Foundation func count_sort ( _ array : inout [ Int ]) - [ Int ] { if let max = array . max () { var bucket = Array ( repeating : 0 , count : max + 1 ) for e in array { bucket [ e ] = bucket [ e ] + 1 } var index = 0 for k in 0 ... max { while bucket [ k ] 0 { array [ index ] = k index = index + 1 bucket [ k ] = bucket [ k ] - 1 } } } return array }","title":"\u8ba1\u6570\u6392\u5e8f"},{"location":"iOS/sort/#_17","text":"\u63cf\u8ff0: \u5728\u8ba1\u6570\u6392\u5e8f\u7684\u57fa\u7840\u4e0a\u7684\u6539\u8fdb\u7248\uff0c\u5148\u628a\u5e8f\u5217\u5206\u6210\u82e5\u5e72\u6876\uff0c\u5bf9\u6bcf\u4e00\u6876\u53ef\u4ee5\u91c7\u7528\u4e4b\u524d\u7684\u5404\u79cd\u6392\u5e8f\u65b9\u6cd5\uff0c\u5bf9\u6240\u6709\u6876\u6392\u5e8f\u5b8c\u6210\u540e\uff0c\u518d\u628a\u6240\u6709\u6876\u5408\u5e76\u8d77\u6765\u5f62\u6210\u7ed3\u679c\u3002\u7531\u4e8e\u7528\u5230\u4e86\u8f85\u52a9\u5b58\u50a8\u6876\uff0c\u6240\u4ee5\u662fOut-Place\u7684 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 import Foundation func bucket_sort_test ( _ array : inout [ Int ]) - [ Int ] { return bucket_sort ( array ) } func bucket_sort ( _ array : inout [ Int ], bucketSize : Int = 5 ) - [ Int ] { guard array . count 0 else { return array } let min = array . min () ! let max = array . max () ! let bucketCount = ( max - min + 1 ) / bucketSize + 1 var bucket = Array ( repeating : [ Int ](), count : bucketCount ) array . forEach { ( e ) in bucket [( e - min + 1 ) / bucketSize ]. append ( e ) } var ret = [ Int ]() for var b in bucket { if b . count 0 { ret . append ( contentsOf : count_sort ( b )) } } return ret }","title":"\u6876\u6392\u5e8f"},{"location":"iOS/sort/#_18","text":"\u9002\u5408\u5c0f\u8303\u56f4\u4f18\u5148\u7ea7\u76f8\u5173\u7684\u6392\u5e8f\u573a\u666f \u63cf\u8ff0: \u57fa\u6570\u6392\u5e8f\u662f\u6309\u7167\u4f4e\u4f4d\u5148\u6392\u5e8f\uff0c\u7136\u540e\u6536\u96c6\uff1b\u518d\u6309\u7167\u9ad8\u4f4d\u6392\u5e8f\uff0c\u7136\u540e\u518d\u6536\u96c6\uff1b\u4f9d\u6b21\u7c7b\u63a8\uff0c\u76f4\u5230\u6700\u9ad8\u4f4d\u3002\u6709\u65f6\u5019\u6709\u4e9b\u5c5e\u6027\u662f\u6709\u4f18\u5148\u7ea7\u987a\u5e8f\u7684\uff0c\u5148\u6309\u4f4e\u4f18\u5148\u7ea7\u6392\u5e8f\uff0c\u518d\u6309\u9ad8\u4f18\u5148\u7ea7\u6392\u5e8f\u3002\u6700\u540e\u7684\u6b21\u5e8f\u5c31\u662f\u9ad8\u4f18\u5148\u7ea7\u9ad8\u7684\u5728\u524d\uff0c\u9ad8\u4f18\u5148\u7ea7\u76f8\u540c\u7684\u4f4e\u4f18\u5148\u7ea7\u9ad8\u7684\u5728\u524d\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 import Foundation func radix_sort_test ( _ array : inout [ Int ]) - [ Int ] { return radix_sort ( array ) } func radix_sort ( _ array : inout [ Int ], maxDigitCount : Int = 2 ) - [ Int ] { let radix = 10 ; var dev = 1 for i in 0 .. maxDigitCount { var decimalBuckets = Array ( repeating : [ Int ](), count : radix ) dev *= ( i == 0 ) ? 1 : 10 for e in array { let digit = ( e / dev ) % radix decimalBuckets [ digit ]. append ( e ) } var i = 0 decimalBuckets . forEach { ( bucket ) in for e in bucket { array [ i ] = e i += 1 } } } return array }","title":"\u57fa\u6570\u6392\u5e8f"},{"location":"iOS/sort/#_19","text":"\u4ece\u89c4\u5f8b\u4e0a\u770b\uff0cOut-Place\u7c7b\u7684\u6392\u5e8f\u90fd\u662f\u7a33\u5b9a\u7684\u6392\u5e8f \u4e0d\u7a33\u5b9a\u7684\u6392\u5e8f\u53ea\u6709\uff1a\u9009\u62e9\u6392\u5e8f\u3001\u5e0c\u5c14\u6392\u5e8f\u3001\u5feb\u901f\u6392\u5e8f\u548c\u5806\u6392\u5e8f","title":"\u603b\u7ed3"},{"location":"iOS/swift4-notes/","text":"Swift 4 \u8bed\u8a00\u7b14\u8bb0 \u5feb\u901f\u5f00\u59cb \u7248\u672c\u5224\u65ad 1 2 3 4 5 #if swift( =3.2) print( =3.2 ) #else print( 3 ) #endif \u5e38\u91cf let \u58f0\u660e\uff1a \u663e\u5f0f/\u9690\u5f0f\uff0c\u7c7b\u578b\u8f6c\u6362\u5fc5\u987b\u663e\u5f0f \u53d8\u91cf var \u58f0\u660e \u5b57\u7b26\u4e32\u683c\u5f0f\u5316\u6a21\u677f\uff1a I have \\(apples + oranges) pieces of fruit. \u591a\u884c\b\u5b57\u7b26\u4e32\u4f7f\u7528 \uff1a 1 2 3 4 5 6 7 8 9 let quotation = I am joker. And She is a girl. We are family. print(quotation) \u6570\u7ec4\u548c\u5b57\u7b26\u5141\u8bb8\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5e26 , \u53f7\uff0c\u5982\u679c\u7c7b\u578b\u4fe1\u606f\u80fd\u63a8\u65ad\uff0c\u53ef\u80fd\u4f7f\u7528 [] \u3001 [:] \u6765\u5b9a\u4e49\u7a7a\u6570\u7ec4\u548c\b\u5b57\u5178\uff0c\u5426\u5219\u4f7f\u7528\u521d\u59cb\u5316\u5668: [String]() \u3001 [String:String]() if \u3001 switch \u3001 for-in \u3001 while \u3001 repeat-while \u7684\u6761\u4ef6\u90e8\u5206\u53ef\u4ee5\u4e0d\u5e26\u62ec\u53f7\uff0c\u4f46\u6267\u884c\u4f53\u5fc5\u987b\u7528\u82b1\u62ec\u53f7\u5305\u4f4f \u6b63\u5e38\u7c7b\u578b\u540e\u9762\u8ddf\u4e2a ? \u53f7\u5c31\u662f Optional \u7c7b\u578b\uff0c\u4f7f\u7528 if let local = optional {} \u662f\u4f7f\u7528 optional \u7c7b\u578b\u7684\u4e00\u79cd\u5e38\u7528\u65b9\u5f0f, local \u53d8\u91cf\u53ea\u5728 if - let \u6267\u884c\u4f53\b\u5185\u90e8\u6709\u6548 ?? \u662f\u7ed9 Optional \u7c7b\u578b\u53d8\u91cf\u53d6\u9ed8\u8ba4\u503c\u7684\u65b9\u6cd5 switch \u652f\u6301\u5404\u79cd\u7c7b\u578b, \bcase \u9ed8\u8ba4\u4e0d\u9700\u8981\u52a0 break \uff0c\u4f7f\u7528 fallthrough \u53ef\u4ee5\u6f0f\u5230\u4e0b\u4e00\u4e2a case 1 2 3 4 5 6 7 8 9 10 11 12 let v = raff switch v { case red : print( red ) case let x where x.hasPrefix( r ): print( r prefix ) fallthrough case let r : print( fallthrough ) default: print( default ) } \u5b57\u5178\u679a\u4e3e\u65f6\u662f\u65e0\u5e8f\u7684: for (key, value) in dict {} \b\u5faa\u73af\uff1a 1 2 3 4 5 var n = 2 while n 100 { n *= 2 } print(n) \u6700\u5c11\u6267\u884c\u4e00\u6b21\u7684\u5faa\u73af 1 2 3 4 5 var m = 2 repeat { m *= 2 }while m 100 print(m) .. \u548c ... \u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u5e8f\u5217\uff0c\u53f3\u8fb9\u754c\u4e0d\u540c \b\u5b9a\u4e49\u51fd\u6570 func , - \u6307\u660e\u8fd4\u56de\u503c\u7c7b\u578b, \u9ed8\u8ba4\u53c2\u6570\u6807\u7b7e\u548c\u53c2\u6570\u540d\u76f8\u540c 1 2 3 4 func greet(person: String, day: String) - String { return Hello, \\(person), today is \\(day). } greet(person: joker , day: Thursday ) \u53ef\u4ee5\u4f7f\u7528 tuple \u6765\u8fd4\u56de\u591a\u503c\uff0c\u53ef\b\u6839\u636e\u4f4d\u7f6e\u7d22\u5f15\u53d6 tuple \u5404\u5143\u7d20\u503c\uff0c\u4e5f\u53ef\u4ee5\u547d\u540d\u53ef\u5143\u7d20\u6807\u7b7e \u51fd\u6570\u53ef\u4ee5\b\u5d4c\u5957\uff0c\u53ef\u8bbf\u95ee\u5916\u5c42\u53d8\u91cf \u95ed\u5305 { \u53c2\u6570\u53ca\u8fd4\u56de\u4f1a\b in \u4f53 } \uff0c $0 \uff0c\u95ed\u5305\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c \u95ed\u5305\u4f5c\u4e3a\u51fd\u6570\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u65f6\u53ef\u4ee5\u653e\u5728\u6700\u540e\uff0c\u5373 trailing closure class \u58f0\u660e\u7c7b\uff0c : \u8868\b\u793a\u7ee7\u627f\uff0c init \u3001 deinit \u521d\u59cb\u5316\u548c\u53cd\u521d\u59cb\u5316\u5668 override \u8986\u76d6\u7236\u7c7b\u65b9\u6cd5\u5fc5\u987b\u662f\u663e\u5f0f\u6307\u5b9a getter\u548csetter, newValue \u548c 1 2 3 4 5 6 7 8 9 10 11 12 13 var Name: Type { get { } willSet { } set(newValue) { } } \u94fe\u5f0f\u64cd\u4f5c\u4e2d\u7ecf\u5e38\u4f7f\u7528 ? \u7b26\u53f7 enum \u5b9a\u4e49\u679a\u4e3e\uff0c rawValue \u53ef\u4ee5\u6307\u5b9a\uff0c\u4e0d\u4ec5\u9650\u5b9a\u4e8eInt struct \u5b9a\u4e49\u7ed3\u6784\u4f53\uff0c\u548c\u7c7b\u7684\u4e3b\u8981\u533a\u522b\u662f\u7ed3\u6784\u4f53\u662f\u503c\u7c7b\u578b protocol \u5b9a\u4e49\b\u534f\u8bae\uff0c\u7c7b\u3001\u7ed3\u6784\u4f53\u548c\u679a\u4e3e\u90fd\u53ef\u4ee5\u4f7f\u7528\b\u534f\u8bae\uff0c mutating \u4fee\u9970\u7ed3\u6784\u4f53\u548c\u679a\u4e3e\u4e2d\u7684\u534f\u8bae\u65b9\u6cd5\u5b9e\u73b0\uff0c\u53ef\u4ee5\u4fee\u6539\u503c\u7c7b\u578b\u6210\u5458 \u53ef\u4ee5\u4f7f\u7528\u6269\u5c55 extension \u6765\u4f7f\u7528\u534f\u8bae\uff0c\u53ef\u4ee5\u628a\u534f\u8bae\u540d\u4f5c\u4e3a\u4e00\u79cd\u7c7b\u578b\u6765\u8c03\u7528\u6240\u6709\u9075\u5faa\u8be5\u534f\u8bae\u7c7b\u578b\u5bf9\u8c61\uff0c\u53ea\u9650\u4e8e\u534f\u8bae\u5b9a\u4e49\u7684\u5185\u5bb9 throw \u53ef\u4ee5\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c throws \u6307\u660e\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u629b\u51fa\u5f02\u5e38\uff0c\u4f7f\u7528 do-try[?]-catch... \u6765\u5904\u7406\u5f02\u5e38, try? \u628a\u7ed3\u679c\u8f6c\u5316\u4e3a Optional \u7c7b\u578b\uff0c\u629b\u51fa\u9519\u8bef\u65f6\u8fd4\u56denil, \u5426\u5219\u8fd4\u56de\u5305\u542b\u7ed3\u679c\u7684 Optional defer \u63cf\u8ff0\u7684\u4ee3\u7801\u5757\u4f1a\u5728\u51fd\u6570\u8fd4\u56de\u524d\u4e00\u523b\u6267\u884c\uff0c\u4e0d\u8bba\u51fd\u6570\u6267\u884c\u662f\u5426\u629b\u51fa\u9519\u8bef \u6cdb\u578b TypeName:TypeProtocol where TypeRequirement \u5728\b\u6267\u884c\u4f53\u524d\u9762\u4f7f\u7528\uff1a T: Equatable \u548c T ... where T: Equatable \u7b49\u4ef7 \u8bed\u8a00\u7ec6\u8282 keyword \u4f7f\u7528swift\u5173\u952e\u5b57\u540c\u540d\u7684\u540d\u5b57\u547d\u540d\u53d8\u91cf // \u5355\u884c\u6ce8\u91ca /* */ \u591a\u884c\u6ce8\u91ca\uff0c \u53ef\u4ee5\u5d4c\u5957\u591a\u884c\u6ce8\u91ca \u53e5\u5c3e\u5206\u53f7\u53ef\u4ee5\u7701\u7565 0b \u3001 0o \u3001 0x \u8868\u793a\u4e8c\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u3001\u5341\u516d\u8fdb\u5236 \u6307\u6570\u8868\u793a\uff1a 1e3 = 10 * 10 * 10 \u3001 1p2 = 2 * 2 \u6613\u8bfb\u6570\u5b57\u683c\u5f0f\uff1a 1_000_000 = 1000000 typealias NewTypeName = existedTypeName \u7c7b\u578b\u522b\u540d\u5b9a\u4e49 \u5143\u7ec4 (name: ele1, ele2, _) ,\u5143\u7ec4\u53ef\u4ee5\u901a\u8fc7\u4e0b\u6807\u6216\u5143\u7d20\u6765\u8bbf\u95ee\u5355\u4e2a\u5143\u7d20\uff0c\u4e0d\u9002\u5408\u590d\u6742\u6570\u636e\u7ed3\u6784 Optionals \u7c7b\u578b\u7684\u53d8\u91cf\u53ef\u4ee5\u6709\u503c\u4e5f\u53ef\u4ee5\u6ca1\u6709\u503c\uff0c\u7edf\u4e00\u53ef\u4ee5\u8868\u793a\u5404\u79cd\u7c7b\u578b\u53d8\u91cf\u6ca1\u6709\u503c\u7684\u60c5\u51b5 nil \u4e0d\u80fd\u7ed9\u975e optionals \u53d8\u91cf\u8d4b\u503c\uff0cOC\u4e2d\u7684nil\u662f\u6307\u5411\u4e00\u4e2a\u4e0d\u5b58\u5728\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u53ea\u5bf9\u5bf9\u8c61\u7c7b\u578b\u6709\u6548\uff0c\u800cswift\u4e2d\u7684nil\u4e0d\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u5b83\u53ea\u662f\u8868\u793a\u4e00\u79cd\u4e0d\u5b58\u5728\u503c\u7684\u72b6\u6001\uff0c\u5bf9\u6240\u6709\u7c7b\u578b\u6709\u6548\u3002 ! \u5f3a\u5236\u89e3\u5305\uff0c\u5982\u679c\u4e00\u4e2a Optional \u53d8\u66f4\u786e\u5b9a\u6709\u503c\uff0c \u5c31\u53ef\u4ee5\u4f7f\u7528 ! \u6765\u4f7f\u7528\u5176\u503c Optionals \u7ed1\u5b9a \uff0c\u7528\u4e8e\u4ece Optional \u53d8\u91cf\u4e2d\u63d0\u53d6\u503c\u5e76\u8d4b\u4e8e\u5c40\u90e8\u53d8\u91cf\u4f7f\u7528\uff0c\u5728\u5355\u4e2aif\u8bed\u53e5\u4e2d\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2aOptional\u7ed1\u5b9a\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u4e3a\u5047\uff0c\u5219\u6574\u4e2a\u5224\u65ad\u4e3a\u5047 \u9690\u5f0f\u89e3\u7ed1 Optional\uff01 \uff0c\u786e\u4fdd\u5b83\u58f0\u660e\u540e\u4e00\u76f4\u6709\u503c\u4e14\u4e0d\u4e3anil, \u4f46\u5b83\u672c\u8eab\u8fd8\u662f\u4e00\u4e2a Optional \uff0c\u53ea\u662f\u5728\u8bbf\u95ee\u65f6\u4f1a\u81ea\u52a8\u89e3\u5305 \u51fd\u6570\u80fd\u629b\u51fa\u9519\u8bef\u7528 throws \u6307\u660e\uff0c\u5f53\u8c03\u7528\u4e00\u4e2a\u53ef\u4ee5\u629b\u51fa\u9519\u8bef\u7684\u51fd\u6570\u65f6\uff0c\u524d\u9762\u8981\u52a0\u4e0a try Assertions \u53ea\u5728\u8c03\u8bd5\u671f\u95f4\u8d77\u4f5c\u7528\uff0c precondition \u53ef\u8c03\u8bd5\u548c\u751f\u4ea7\u73af\u5883\u4e2d\u90fd\u8d77\u4f5c\u7528\u3002 Assertions \u5728\u5355\u5143\u6d4b\u8bd5\u4e2d\u7ecf\u5e38\u7528\u5230,\u5982\u679c\u7f16\u8bd1\u5668\u5f00\u4e86 -Ounchecked \u9009\u9879\uff0c precondition \u4f1a\u88ab\u4e00\u76f4\u8ba4\u4e3a\u6210\u529f\u3002 1 2 3 4 5 6 7 assert(exp, msg) \u5931\u8d25\u65f6\u663e\u793amsg\uff0c\u6210\u529f\u65f6\u7ee7\u7eed\u6267\u884c assertionFailure(msg)\u76f4\u63a5\u8868\u793a\u5931\u8d25\u65f6\u7684msg\u663e\u793a precondition(exp, msg)\u8c03\u8bd5\u548c\u751f\u4ea7\u73af\u5883\u90fd\u8d77\u4f5c\u7528 preconditionFailure(:file:line) fatalError(_:file:line:)\u4e25\u91cd\u9519\u8bef\uff0c\u4e0d\u4f1a\u88ab\u7f16\u8bd1\u5668\u4f18\u5316 swfit\u7684 = \u8d4b\u503c\u4e0d\u4f1a\u6709\u8fd4\u56de\u503c\uff0c\u6570\u503c\u9ed8\u8ba4\u4e0d\u5141\u8bb8\u6ea2\u51fa\uff0c\u4f46\u53ef\u4ee5\u660e\u786e\u6307\u5b9a\u53ef\u4ee5\u6ea2\u51fa \u4e00\u5143\u8fd0\u7b97\u7b26\u7d27\u6328\u8fd0\u7b97\u5b50\uff0c\u6ca1\u6709\u7a7a\u683c\uff1a -a, b! ,\u4e8c\u5143\u8fd0\u7b97: a + b \uff0c\u4e09\u5143\u8fd0\u7b97: a ? b : c \u8d4b\u503c\u8fd0\u7b97\u7684\u53f3\u8fb9\u5982\u679c\u662f\u5143\u7ec4\uff0c\u53ef\u4ee5\u81ea\u52a8\u89e3\u6790\u4e3a\u591a\u4e2a\u5143\u7d20\u8d4b\u7ed9\u5de6\u8fb9\u7684\u53d8\u91cf % \u8fd0\u7b97\u7684\u539f\u7406\uff1a a = (b x some multiplier ) + remainder , \u4e0d\u8003\u8651 b \u7684\u7b26\u53f7 \u6df7\u5408\u8d4b\u503c\u8fd0\u7b97\u4e5f\u4e0d\u4f1a\u8fd4\u56de\u503c\uff0c\u8fd9\u4e00\u70b9\u548c\u8d4b\u503c\u4e00\u81f4 \u5168\u7b49\u8fd0\u7b97 === ,\u4e0d\u5168\u7b49 !== \uff0c\u7528\u6765\u5224\u65ad\u4e24\u4e2a\u5f15\u7528\u662f\u5426\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61 \u5982\u679c\u4e24\u4e2a\u5143\u7ec4\u6709\u76f8\u540c\u7684\u7c7b\u578b\u548c\u5143\u7d20\u4e2a\u6570\uff0c\u5b83\u4eec\u4e5f\u53ef\u4ee5\u8fdb\u884c\u6bd4\u8f83\uff0c\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u6bd4\u8f83\uff0c\u76f4\u5230\u53d1\u73b0\u4e24\u4e2a\u5143\u7d20\u4e0d\u76f8\u7b49\u65f6\u505c\u6b62\u6bd4\u8f83\u540e\u9762\u7684\u5143\u7d20\uff0c\u53ea\u6709\u6240\u6709\u5143\u7d20\u90fd\u652f\u6301\u540c\u4e00\u6bd4\u8f83\u8fd0\u7b97\u65f6\u624d\u53ef\u4ee5\u6bd4\u8f83\u4e24\u4e2a\u5143\u7ec4\uff0c\u6700\u9ad8\u80fd\u6bd4\u8f83\u6709\u516d\u4e2a\u5143\u7d20\u7684\u65e0\u7ec4\uff0c\u518d\u591a\u5143\u7d20\u7684\u6bd4\u8f83\u9700\u8981\u81ea\u5df1\u5b9e\u73b0 \u4e09\u5143\u8fd0\u7b97\u7b26\u4e0d\u8981\u5d4c\u5957\u4f7f\u7528\uff0c\u4f7f\u7a0b\u5e8f\u66f4\u52a0\u53ef\u8bfb a ?? b \uff0c\u5982\u679ca\u6709\u503c\u5c31\u8fd4\u56de\uff0c\u5982\u679ca\u4e3anil\uff0c\u5219\u8fd4\u56deb \u95ed\u533a\u95f4 a...b \uff0c\u534a\u5f00\u533a\u95f4: a.. b \u5355\u7aef\u533a\u95f4\u5728\u6570\u7ec4\u4e0a\u7684\u5e94\u7528 [a...] \u7528\u5728\u6570\u7ec4\u7d22\u5f15\uff0c\u8868\u793a\u4ecea\u5f00\u59cb\u53ca\u5176\u540e\u7684\u6240\u6709\u5143\u7d20\uff0c\u8fd8\u6709 [...a] \uff0c\u8868\u793a\u4ece\u5934\u5f00\u59cb\u5230a\u7d22\u5f15 \u591a\u884c\u5b57\u7b26\u4e32\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528 \\ \u6765\u8f6c\u4e49\u6362\u884c\u7b26\u6765\u7eed\u884c\uff0c\u5728\u95ed\u5408\u7684 \u524d\u9762\u7684\u7a7a\u683c\u6307\u540d\u591a\u884c\u5b57\u7b26\u8981\u5ffd\u7565\u7684\u7f29\u8fdb String \u662f\u503c\u7c7b\u578b \u5b57\u7b26\u4e32\u662f\u5b57\u7b26\u7684\u96c6\u5408\uff0c\u53ef\u4ee5\u88ab\u679a\u4e3e\uff0c\u5143\u7d20\u7684\u7c7b\u578b\u662f Character \\() \u5b57\u7b26\u4e32\u63d2\u5165\u53ef\u4ee5\u7528\u4e8e\u591a\u884c\u5b57\u7b26\u4e32 \\u{n} 1\uff5e8\u4f4d\u7684Unicode\u5b57\u7b26\u6807\u91cf Character \u6bcf\u4e00\u4e2a\u5b9e\u4f8b\u90fd\u662f\u4e00\u4e2a\u6269\u5c55\u56fe\u50cf\u7c07\uff0c\u6bcf\u4e00\u4e2a\u6269\u5c55\u56fe\u50cf\u7c07\u90fd\u53ef\u4ee5\u5305\u542b\u591a\u4e2aUnicode\u6807\u91cf\uff0c\u7528\u6765\u751f\u6210\u5355\u4e2a\u53ef\u8bfb\u5b57\u7b26\uff0c\u53ef\u4ee5\u7528\u6765\u663e\u793a\u4e00\u4e9b\u7ec4\u5408\u5b57\u7b26\uff0c\u4f7f\u7528 count \u53d1\u751f\u83b7\u53d6\u5b57\u7b26\u4e32\u957f\u5ea6\uff0c\u4e5f\u662f\u7531\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0cswift\u7684\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u4e0d\u80fd\u4f7f\u7528\u7d22\u5f15\u6765\u76f4\u63a5\u5f15\u7528\uff0c endIndex \u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u7684\u5b57\u7b26\u7d22\u5f15\uff0cString\u7684 indices \u662f\u6240\u6709\u5b57\u7b26\u5143\u7d20\u7684\u7d22\u5f15\u6570\u7ec4 \u5b50\u5b57\u7b26\u4e32\u7c7b\u578b Substring , \u53ea\u662f\u4e34\u65f6\u4f7f\u7528 Character \u6709 utf8 \u3001 utf16 \u548c unicodeScalars \u4e09\u79cdUnicode\u517c\u5bb9\u7684\u7f16\u7801\u6570\u7ec4 \u96c6\u5408\u7c7b\u578b\uff1a Array \u3001 Set \u3001 Dictionary Array(repeating:count:) \u53ef\u4ee5\u5728\u5b9a\u4e49\u65f6\u521d\u59cb\u5316\uff0c enumerated () \u65b9\u6cd5\u4f1a\u8fd4\u56de\u4ee5(index, emelemt)\u4e3a\u5143\u7d20\u7684\u6570\u7ec4 \u96c6\u5408\u4e2d\u5143\u7d20\u7684\u7c7b\u578b\u5fc5\u987b\u662f\u80fdhash\u7684\uff0c\u4ee5\u786e\u4fdd\u552f\u4e00\u6027\uff0c\u96c6\u5408\u6ca1\u6709\u7b80\u77ed\u5199\u6cd5\uff0c\u58f0\u660e\u96c6\u5408\u5fc5\u987b\u663e\u5f0f\u6307\u660e\u7c7b\u578b\uff0c\u4e0d\u80fd\u7c7b\u578b\u63a8\u65ad switch\u4e2d\u7684case \u540e\u9762\u53ef\u4ee5\u8ddf where \u63a7\u5236\u8f6c\u79fb\u5173\u952e\u5b57: continue \u3001 break \u3001 fallthrough \u3001 return \u3001 throw \u8bed\u53e5\u6807\u7b7e label: \u53ef\u4ee5\u548c break \u3001 continue \u4e00\u8d77\u4f7f\u7528\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4e0eC\u8bed\u8a00\u4e2dgoto\u76f8\u540c\u7684\u6548\u679c guard - else \u5982\u679cguard\u7684\u6761\u4ef6\u4e0d\u6210\u7acb\uff0c\u5c31\u6267\u884celse\u5757\u513f\u7684\u8bed\u53e5 #available(iOS 10, macOS 10.12, *) API\u6709\u6548\u6027\u5224\u65ad \u51fd\u6570\u6709 \u53c2\u6570\u6807\u7b7e \u548c \u53c2\u6570\u540d \uff0c\u9ed8\u8ba4\u53c2\u6570\u6807\u7b7e\u548c\u53c2\u6570\u540d\u4e00\u6837\uff0c\u4e5f\u53ef\u4ee5\u5206\u522b\u6307\u5b9a\uff0c\u53ef\u4ee5\u4f7f\u7528 _ \u5ffd\u7565\u53c2\u6570\u6807\u7b7e \u53ef\u53d8\u53c2\u6570\u7c7b\u578b Double... \uff0c\u4e00\u4e2a\u51fd\u6570\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2a\u53ef\u53d8\u53c2\u6570\uff0c\u53ef\u53d8\u53c2\u6570\u8981\u653e\u5728\u53c2\u6570\u5217\u8868\u7684\u6700\u540e \u51fd\u6570\u7684\u53c2\u6570\u9ed8\u8ba4\u662f\u5e38\u91cf\uff0c inout \u4fee\u6539\u53c2\u6570\u53ef\u4ee5\u5728\u51fd\u6570\u4f53\u5185\u4fee\u6539\u53c2\u6570\u503c\uff0c\u53ea\u80fd\u628a\u53d8\u91cf\u4f20\u7ed9inout\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u5e76\u4e14\u4f20\u53c2\u65f6\u8981\u5728\u524d\u9762\u52a0\u4e00\u4e2a \u53f7\uff0c\u4ee5\u8868\u793a\u8fd9\u4e2a\u53c2\u6570\u53ef\u4ee5\u88ab\u4fee\u6539 \u51fd\u6570\u5c31\u662f\u547d\u540d\u7684\u95ed\u5305\uff0c\u5d4c\u5957\u51fd\u6570\u53ef\u4ee5\u6355\u83b7\u5916\u5c42\u7684\u53d8\u91cf\uff0c\u53ef\u4ee5\u63a8\u65ad\u53d8\u91cf\uff0c\u5355\u8868\u8fbe\u5f0f\u95ed\u5305\u9ed8\u8ba4\u4f1a\u8fd4\u56de\u503c\uff0c\u8fd8\u6709 Trailing Closure \u8bed\u6cd5 \u95ed\u5305\u7684\u8bed\u6cd5\uff1a {(parameters) - return type in statements } , \u95ed\u5305\u4e2d\u53c2\u6570\u7684\u7b80\u5199\uff1a $0 \u5982\u679c\u95ed\u5305\u88ab\u8d4b\u7ed9\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff0c\u5e76\u4e14\u95ed\u5305\u672c\u8eab\u53c8\u5f15\u7528\u4e86\u7c7b\u7684\u6210\u5458\uff0c\u5c31\u4f1a\u9020\u6210\u5faa\u73af\u5f15\u7528\uff0cSwfit\u4f7f\u7528\u6355\u83b7\u5217\u8868\u6765\u89e3\u51b3\u8fd9\u79cd\u5faa\u73af\u5f15\u7528\u95ee\u9898 \u95ed\u5305\u662f\u5f15\u7528\u7c7b\u578b escaping \u95ed\u5305\uff1a\u5f53\u4e00\u4e2a\u95ed\u5305\u88ab\u5f53\u4f5c\u53c2\u6570\u4f20\u5165\u4e00\u4e2a\u51fd\u6570\uff0c\u5374\u5728\u8be5\u51fd\u6570\u8fd4\u56de\u540e\u88ab\u8c03\u7528\u3002\u5173\u952e\u5b57 @escaping \u81ea\u52a8\u95ed\u5305\uff1a\u81ea\u52a8\u521b\u5efa\u6765\u5305\u88f9\u8868\u8fbe\u5f0f\u5e76\u4f20\u7ed9\u5176\u5b83\u51fd\u6570\uff0c\u5173\u952e\u5b57\uff1a @autoclosure \u679a\u4e3e\u53ef\u4ee5\u6709\u7ed3\u5408\u503c\u548c\u9ed8\u8ba4\u503c(rawValue), \u9012\u5f52\u679a\u4e3e\uff1a\u6709\u53e6\u4e00\u4e2a\u679a\u4e3e\u4f5c\u4e3acase\u7ed3\u5408\u503c\u7684\u679a\u4e3e\u7c7b\u578b,\u4f7f\u7528 indirect \u8868\u660e\u5b83\u662f\u4e00\u4e2a\u9012\u5f52\u679a\u4e3e class \u662f\u5f15\u7528\u7c7b\u578b\uff0c\u4f7f\u7528 === \u548c !== \u6765\u5224\u65ad\u4e24\u4e2a\u5f15\u7528\u662f\u5426\u6307\u5411\u540c\u4e00\u4e2a\u5b9e\u4f8b swift\u4e2d\u4e00\u4e9b\u57fa\u672c\u7c7b\u578b\u90fd\u662f\u4f7f\u7528 struct \u6765\u5b9e\u73b0\u7684\uff0c\u50cf String \u3001 Array \u3001 Dictionary \u7b49\uff0c\u4e0d\u50cfFoundation\u4e2d\u7684\u5b9e\u73b0\u662f\u4f7f\u7528\u7c7b Struct \u548c class \u53ef\u4ee5\u58f0\u660e\u5b58\u50a8\u5c5e\u6027\uff0c\u4f46\u662f Struct \u3001 Class \u548c Enumeration \u90fd\u53ef\u4ee5\u58f0\u660e\u8ba1\u7b97\u5c5e\u6027 \u50a8\u5b58\u5c5e\u6027\u53ef\u4ee5\u5b9a\u4e49\u5c5e\u6027\u89c2\u5bdf\u5668 \u5f53\u4e00\u4e2a\u503c\u7c7b\u578b\u7684\u5b9e\u4f8b\u88ab\u58f0\u660e\u4e3a\u5e38\u91cf\uff0c\u5b83\u7684\u6240\u6709\u6210\u5458\u90fd\u4e0d\u53ef\u53d8\uff0c class \u7684\u5b9e\u4f8b\u5982\u679c\u88ab\u58f0\u660e\u4e3a\u5e38\u91cf\uff0c\u5b83\u7684\u6210\u5458\u8fd8\u662f\u53ef\u4ee5\u6539\u53d8\uff0c\u56e0\u4e3a\u5b83\u662f\u5f15\u7528\u7c7b\u578b lazy \u5c5e\u6027\uff0c\u53ea\u5728\u7b2c\u4e00\u6b21\u4f7f\u7528\u65f6\u521b\u5efa\uff0c \u53ea\u80fd\u4f7f\u7528 var \u58f0\u660e\uff0c\u56e0\u4e3a\u5e38\u91cf\u5728\u521d\u59cb\u5316\u5b8c\u6210\u65f6\u5fc5\u987b\u6709\u503c\uff0c \u800c lazy \u53d8\u91cf\u53ef\u80fd\u5728\u521d\u59cb\u5316\u5b8c\u6210\u65f6\u6ca1\u6709\u88ab\u521b\u5efa\uff0c \u591a\u7ebf\u7a0b\u540c\u65f6\u8c03\u7528 lazy \u53d8\u91cf\u65f6\uff0c\u5982\u679c\u5b83\u8fd8\u6ca1\u6709\u88ab\u521b\u5efa\uff0c\u5219\u5b83\u4e0d\u80fd\u4fdd\u8bc1\u53ea\u88ab\u521b\u5efa\u4e00\u6b21 \u8ba1\u7b97\u5c5e\u6027\u4e5f\u5fc5\u987b\u4f7f\u7528 var \u6765\u58f0\u660e\uff0c\u5c5e\u6027\u89c2\u5bdf\u5668 willSet(newValue) \u3001 didSet(newValue/oldValue) \u5168\u5c40\u5e38\u91cf\u548c\u53d8\u91cf\u90fd\u662f\u8ba1\u7b97\u61d2\u60f0\u7684\uff0c\u53ea\u662f\u4e0d\u9700\u8981 lazy \u4fee\u9970 \u4f7f\u7528 static \u5173\u952e\u5b57\u5b9a\u4e49\u7c7b\u578b\u5c5e\u6027\uff0c\u4f7f\u7528 class \u4fee\u9970\u7684\u8ba1\u7b97\u5c5e\u6027\u53ef\u4ee5\u88ab\u5b50\u7c7b\u91cd\u65b0\u5b9e\u73b0 Struct \u548c Enumeration \u662f\u503c\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4e0d\u80fd\u4ece\u8fd9\u4eec\u7684\u5b9e\u4f8b\u65b9\u6cd5\u4fee\u6539\u5c5e\u6027 \uff0c\u5982\u679c\u4fee\u6539\u4fee\u6539\uff0c\u9700\u8981\u5728\u5b9e\u4f8b\u65b9\u6cd5\u524d\u9762\u52a0 mutaing \u5173\u952e\u5b57\uff0c\u751a\u81f3\u53ef\u4ee5\u4fee\u6539self\u4e3a\u53e6\u4e00\u4e2a\u5b9e\u4f8b \u7c7b\u578b\u65b9\u6cd5\u4f7f\u7528 static \u5173\u952e\u8bcd\u653e\u5728\u51fd\u6570\u524d\u9762\u5b9a\u4e49\uff0c\u4f7f\u7528 class \u5b9a\u4e49\u7684\u7c7b\u578b\u65b9\u6cd5\u5141\u8bb8\u5b50\u7c7b\u8986\u76d6\u5176\u5b9e\u73b0 @discardableResult \u5c5e\u6027\u4fee\u6539\u6307\u65f6\u65f6\u6570\u8c03\u7528\u65f6\u53ef\u4ee5\u5ffd\u7565\u8003\u8651\u8fd4\u56de\u503c \u7c7b\u3001\u7ed3\u6784\u4f53\u3001\u679a\u4e3e\u90fd\u53ef\u4ee5\u5b9a\u4e49\u4e0b\u6807\u64cd\u4f5c\uff0c\u4f7f\u7528\u5173\u952e\u5b57 subscript \u5b9a\u4e49 1 2 3 4 5 6 7 8 9 subscript(index: Int) - { get { // return an appropriate subscript value here } set(newValue){ // perform a suitable setting action here } } Dictionry \u7684\u5143\u7d20\u8d4b nil \u76f8\u5f53\u4e8e\u5220\u9664\u8fd9\u4e2a\u952e\u503c\u5bf9 subscript \u4e0d\u80fd\u4f7f\u7528 inout \u4fee\u6539\u53c2\u6570\uff0c\u4e5f\u4e0d\u80fd\u7ed9\u53c2\u6570\u63d0\u4f9b\u9ed8\u8ba4\u503c \u7ee7\u627f\u8fc7\u6765\u7684\u5c5e\u6027\u4e0d\u7ba1\u662f\u5b58\u50a8\u8fd8\u662f\u8ba1\u7b97\u7c7b\u578b\u7684\u90fd\u53ef\u4ee5\u6dfb\u52a0\u5c5e\u6027\u89c2\u5bdf\u5668 \u4f7f\u7528\u5173\u952e\u5b57 final \u6765\u963b\u6b62\u5c5e\u6027\u3001\u7c7b\u578b\u3001\u4e0b\u6807\u6216\u65b9\u6cd5\u88ab\u5b50\u7c7b\u8986\u76d6\u6216\u7ee7\u627f \u7ed3\u6784\u4f53\u6216\u7c7b\u578b\u5728\u5b9e\u4f8b\u521b\u5efa\u65f6\u4e00\u5b9a\u8981\u628a\u6240\u6709\u7684\u5b58\u50a8\u5c5e\u6027\u90fd\u521d\u59cb\u5316\uff0c\u53ef\u4ee5\u5728\u521d\u59cb\u5316\u5668\u91cc\u8bbe\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u5728\u5c5e\u6027\u5b9a\u4e49\u65f6\u8bbe\u7f6e\u9ed8\u8ba4\u503c\uff0c\u8fd9\u4e24\u79cd\u65b9\u5f0f\u90fd\u662f\u76f4\u63a5\u8bbe\u7f6e\u5c5e\u6027\u503c\uff0c\u4e0d\u4f1a\u8c03\u7528\u5c5e\u6027\u89c2\u5bdf\u5668 \u5b9a\u5236\u521d\u59cb\u5316\u5668\uff1a\u6ca1\u6709\u51fd\u6570\u540d\uff0c\u4f7f\u7528\u5173\u952e\u5b57 init \u6307\u5b9a\uff0c\u53ef\u4ee5\u6709\u53c2\u6570\u6807\u7b7e\u548c\u53c2\u6570\u540d\u79f0 \u5982\u679c\u5c5e\u6027\u5728\u521d\u59cb\u5316\u65f6\u6ca1\u6709\u503c\u6216\u8005\u4e4b\u540e\u53ef\u80fd\u6ca1\u6709\u503c\uff0c\u8fd9\u6837\u7684\u5c5e\u6027\u5e94\u8be5\u5b9a\u4e49\u4e3a Optional \u521d\u59cb\u5316\u65f6\u53ef\u4ee5\u8d4b\u503c\u5e38\u91cf\u6210\u5458\uff0c\u7c7b\u548c\u7ed3\u6784\u4f53\u9ed8\u8ba4\u4f1a\u63d0\u4f9b\u521d\u59cb\u5316\u5668 \u521d\u59cb\u5316\u5668\u53ef\u4ee5\u8c03\u7528\u5176\u5b83\b\u521d\u59cb\u5316\u5668\u6765\u5b8c\u6210\u521d\u59cb\u5316\u8fc7\u7a0b\uff0c\u8fd9\u79cd\u8c03\u7528\u53eb\u4f5c\u521d\u59cb\u5316\u4ee3\u7406\uff0c\u503c\u7c7b\u578b\u548c Class \u7c7b\u578b\u7684\u521d\u59cb\u5316\u4ee3\u7406\u65b9\u5f0f\u6709\u4e9b\u533a\u522b \u503c\u7c7b\u578b\u4e0d\u652f\u6301\u7ee7\u627f\uff0c\u5b83\u4eec\u7684\u521d\u59cb\u5316\u4ee3\u7406\u8fc7\u7a0b\u6bd4\u8f83\u7b80\u5355\uff0c\u53ea\u4f7f\u7528\u81ea\u8eab\u63d0\u4f9b\u7684\u521d\u59cb\u5316\u5668\u4f5c\u4ee3\u7406 \u5982\u679c\u8981\u81ea\u5b9a\u4e49\u521d\u59cb\u5316\u5668\uff0c\u5728\u503c\u7c7b\u578b\u4e2d\u5c31\u4e0d\u4f1a\u81ea\u52a8\u751f\u6210\u7684\u521d\u59cb\u5316\u5668\u4e86\u9700\u8981\u81ea\u5df1\b\u663e\u5f0f\u7684\u5199\u51fa\u6765\uff0c\u5982\u679c\u8981\u4fdd\u7559\u81ea\u52a8\u751f\u6210\u7684\u521d\u59cb\u5316\u5668\uff0c\u81ea\u5b9a\u4e49\u7684\u521d\u59cb\u5316\u5668\u8981\u5199\u5728\u6269\u5c55\u91cc\u9762 \u6240\u4ee5\u7c7b\u7684\u5b58\u50a8\u5c5e\u6027\u5305\u62ec\u7ee7\u627f\u800c\u6765\u7684\u90fd\u5fc5\u987b\u5728\u521d\u59cb\u5316\u8d4b\u4e88\u521d\u503c class \u5b9a\u4e49\u4e24\u7c7b\u521d\u59cb\u5316\u5668\uff1a\u6307\u5b9a\u521d\u59cb\u5316\u5668\u548c\u4fbf\u5229\u521d\u59cb\u5316\u5668\uff0c\u7528\u6765\u786e\u4fdd\u6240\u6709\u7684\u5b58\u50a8\u5c5e\u6027\u90fd\u80fd\u88ab\u521d\u59cb\u5316 \u6307\u5b9a\u521d\u59cb\u5316\u5668\u662f\u4e00\u4e2a\u7c7b\u7684\u4e3b\u8981\u521d\u59cb\u5316\u5668\uff0c\u5b83\u8d1f\u8d23\u521d\u59cb\u5316\u672c\u7c7b\u7684\u6240\u6709\u5c5e\u6027\u5e76\u8c03\u7528\u5408\b\u9002\u7684\u7236\u7c7b\u6307\u5b9a\u521d\u59cb\u5316\u5668\u521d\u59cb\u5316\u7236\u7c7b \u6bcf\u4e2a\u7c7b\u81f3\u5c11\u8981\u6709\u4e00\u4e2a\u6307\u5b9a\u521d\u59cb\u5316\u5668\uff0c\u4fbf\u5229\u521d\u59cb\u5316\u5668\u901a\u8fc7\u8c03\u7528\u540c\u7c7b\u7684\u6307\u5b9a\u521d\u59cb\u5316\u5668\u6765\u4f5c\u4e00\u4e9b\u521d\u59cb\u5316\u5b9e\u4f8b\u7684\u5de5\u4f5c\uff0c\u50cf\u5b83\u7684\u540d\u5b57\u4e00\u6837\uff0c\u4fbf\u5229\u521d\u59cb\u5316\u5668\u53ea\u662f\u4e3a\u4e86\u65b9\u4fbf\u521d\u59cb\u5316\u6d41\u7a0b\u800c\u8bbe\u8ba1\u7684 \u4fbf\u5229\u521d\u59cb\u5316\u5668\u4f7f\u7528 convenience \u5173\u952e\u8bcd\u6807\u793a\uff0c\u6307\u5b9a\u521d\u59cb\u5316\u5668\u4e0d\u7528 \u521d\u59cb\u5316\u4ee3\u7406\u7684\u8fc7\u7a0b\u6709\u4e09\u4e2a\u89c4\u5219\uff1a \u5b50\u7c7b\u6307\u5b9a\u521d\u59cb\u5316\u5668\u5fc5\u987b\u8c03\u7528\u7236\u7c7b\u6307\u5b9a\u521d\u59cb\u5316\u5668(\u7eb5\u5411) \u4fbf\u5229\u521d\u59cb\u5316\u5668\u5fc5\u987b\u8c03\u7528\u540c\u7c7b\u7684\u521d\u59cb\u5316\u5668\uff08\u6a2a\u5411\uff09 \u4fbf\u5229\u521d\u59cb\u5316\u5668\u6700\u7ec8\u9700\u8981\u8c03\u7528\u540c\u7c7b\u7684\u6307\u5b9a\u521d\u59cb\u5316\u5668\u5b8c\u6210\u521d\u59cb\u5316\u5de5\u4f5c \u4e24\u9636\u6bb5\u521d\u59cb\u5316\uff0c\u4fdd\u8bc1\u5c5e\u6027\u5728\u521d\u59cb\u5316\u524d\u4e0d\u88ab\u8bbf\u95ee\u3002\u7b2c\u4e00\u9636\u6bb5\uff1a\u7c7b\u5148\u628a\u81ea\u5df1\u7684\u5c5e\u6027\u521d\u59cb\u5316 \u7b2c\u4e8c\u9636\u6bb5\uff1a\u6309\u9700\u8d4b\u503c\u521d\u59cb\u5316\u8fc7\u7684\u5c5e\u6027 \u521d\u59cb\u5316\u5b89\u5168\u68c0\u67e5\uff1a \u5728\u6307\u5b9a\u521d\u59cb\u5316\u5668\u8c03\u7528\u7236\u7c7b\u6307\u5b9a\u521d\u59cb\u5316\u5668\u4e4b\u524d\uff0c\u8981\u786e\u4fdd\u672c\u7c7b\u7684\u6240\u6709\u5b58\u50a8\u5c5e\u6027\u90fd\u5148\u88ab\u521d\u59cb\u5316 \u4fee\u6539\u7236\u7c7b\u5c5e\u6027\u503c\u524d\u5fc5\u987b\u5148\u8c03\u7528\u7236\u7c7b\u7684\u6307\u5b9a\u521d\u59cb\u5316\u5668\uff0c\u5426\u5219\u65b0\u8d4b\u7684\u503c\u5c31\u4f1a\u5728\u7236\u7c7b\u6307\u5b9a\u521d\u59cb\u5316\u5668\u88ab\u8c03\u7528\u540e\u800c\u6539\u53d8 \u4fbf\u5229\u521d\u59cb\u5316\u5668\u5728\u6539\u53d8\u5c5e\u6027\u503c\u524d\u8981\u8c03\u7528\u53e6\u4e00\u4e2a\u521d\u59cb\u5316\u5668 \u5728\u7b2c\u4e00\u9636\u6bb5\u521d\u59cb\u5316\u5b8c\u6210\u524d\uff0c\u521d\u59cb\u5316\u5668\u4e0d\u53ef\u4ee5\u8c03\u7528\u5b9e\u4f8b\u65b9\u6cd5\u6216\u8bfb\u4efb\u610f\u5c5e\u6027\u503c\u6216\u5f15\u7528 self \u521d\u59cb\u5316\u9636\u6bb51\uff1a \u521d\u59cb\u5316\u5668\u88ab\u8c03\u7528 \u5b9e\u4f8b\u5185\u5b58\u88ab\u5206\u914d\uff0c\u4f46\u8fd8\u6ca1\u6709\u521d\u59cb\u5316 \u672c\u7c7b\u7684\u6307\u5b9a\u521d\u59cb\u5316\u5668\u8c03\u7528\u6765\u521d\u59cb\u5316\u6240\u6709\u7684\u672c\u7c7b\u5b58\u50a8\u53d8\u91cf \u7236\u7c7b\u7684\u6307\u5b9a\u521d\u59cb\u5316\u5668\u88ab\u8c03\u7528\u6765\u521d\u59cb\u5316\u6240\u6709\u7236\u7c7b\u7684\u5b58\u50a8\u53d8\u91cf\uff0c\u76f4\u5230\u6240\u6709\u7684\u7236\u7c7b\u5b58\u50a8\u53d8\u91cf\u90fd\u88ab\u521d\u59cb\u5316\u4e3a\u6b62 \u8fd9\u65f6\u6240\u6709\u7684\u5b58\u50a8\u53d8\u91cf\u90fd\u88ab\u521d\u59cb\u5316\uff0c\u7b2c\u4e00\u9636\u6bb5\u5b8c\u6210 \u521d\u59cb\u5316\u9636\u6bb52\uff1a\u4ece\u6700\u9ad8\u7236\u7c7b\u5411\u4e0b\u7684\u8fc7\u7a0b\u4e2d\u5c31\u53ef\u4ee5\u8fdb\u4e00\u6b65\u914d\u7f6e\u5c5e\u6027\u503c\u4e86\uff0c\u8fd9\u4e00\u9636\u6bb5\u5b9e\u4f8b\u5df2\u7ecf\u53ef\u4ee5\u88ab\u6b63\u5e38\u4f7f\u7528\u4e86 failable \u521d\u59cb\u5316\u5668 init? \u6807\u8bc6\uff0c return nil \u6307\u660e\u521d\u59cb\u5316\u5931\u8d25 \u5e26 rawValue \u7684\u679a\u4e3e\u7c7b\u578b\u4f1a\u81ea\u52a8\u751f\u6210 failable \u521d\u59cb\u5316\u5668 init! \u521b\u5efa\u81ea\u52a8\u89e3\u5305\u7684\u521d\u59cb\u5316\u5668 \u7528 required \u4fee\u9970\u7684\u521d\u59cb\u5316\u5668\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0 \u53ef\u4ee5\u4f7f\u7528\u95ed\u5305\u6765\u521d\u59cb\u5316\u4e00\u4e2a\u53d8\u91cf 1 var a = { return 0 }() \u53cd\u521d\u59cb\u5316 deinit \u53ea\u4f5c\u7528\u4e8e class \uff0c\u4e00\u4e2a\u7c7b\u6700\u591a\u53ea\u6709\u4e00\u4e2a deinit {} , \u53ef\u4ee5\u7528\u6765\u91ca\u653e\u8d44\u6e90 Optional \u94fe\u5f0f\u8c03\u7528 ?. try \u3001 try? \u3001 try! \u4e09\u79cd\u9519\u8bef\u5904\u7406\u7684\u533a\u522b try! \u6291\u5236\u9519\u8bef try? \u5982\u679c\u53d1\u751f\u9519\u8bef\u65f6\u8fd4\u56denil try defer \u5757\u7684\u4ee3\u7801\u4f1a\u548c\u6b63\u5e38\u7684\u4ee3\u7801\u6267\u884c\u987a\u5e8f\u4e0d\u540c\uff0c\u5199\u5728\u7b2c\u4e00\u540d\u7684\u6700\u540e\u6267\u884c is \u548c as \u5224\u65ad\u7c7b\u578b\u548c\u7c7b\u578b\u8f6c\u6362\uff0c as? \u5c1d\u8bd5\u7c7b\u578b\u8f6c\u6362\uff0c as! \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c Any \u53ef\u4ee5\u8868\u793a\u6240\u6709\u7c7b\u578b\u7684\u5b9e\u4f8b\uff0c\u751a\u81f3\u662f\u51fd\u6570\u7c7b\u578b AnyObject \u53ef\u4ee5\u8868\u793a\u4efb\u4f55\u7c7b\u5b9e\u4f8b \u6269\u5c55\u53ef\u4ee5\u7ed9\u7c7b\u3001\u7ed3\u6784\u4f53\u3001\u679a\u4e3e\u548c\u534f\u8bae\u6dfb\u52a0\u529f\u80fd\uff1a \u53ef\u4ee5\u6dfb\u52a0\u8ba1\u7b97\u5b9e\u4f8b\u5c5e\u6027\u548c\u8ba1\u7b97\u7c7b\u5c5e\u6027 \u53ef\u4ee5\u5b9a\u4e49\u5b9e\u4f8b\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5 \u63d0\u4f9b\u65b0\u521d\u59cb\u5316\u5668 \u5b9a\u4e49\u4e0b\u6807 \u5b9a\u4e49\u5d4c\u5957\u7c7b\u578b \u9075\u5faa\u534f\u8bae \u4e0d\u80fd\u8986\u76d6\u5df2\u5b58\u5728\u51fd\u6570 \u4e0d\u80fd\u6dfb\u52a0\u5b58\u50a8\u5c5e\u6027\uff0c\u4e0d\u80fd\u6dfb\u52a0\u5c5e\u6027\u89c2\u5bdf\u5668 \u53ea\u80fd\u6dfb\u52a0\u4fbf\u5229\u521d\u59cb\u5316\u5668\uff0c\u4e0d\u80fd\u6dfb\u52a0\u6307\u5b9a\u521d\u59cb\u5316\u5668 \u4e0d\u80fd\u6dfb\u52a0 deinit \u534f\u8bae\u5982\u679c\u7ee7\u627f\u4e86 AnyObject \u534f\u8bae\u5c31\u53ea\u80fd\u7531 Class \u7c7b\u578b\u7ee7\u627f\u5b83 \u7ec4\u5408\u7c7b\u578b protocol antoherProtocol \u8868\u793a\u4efb\u4f55\u540c\u65f6\u9075\u5faa\u4e24\u4e2a\u534f\u8bae\u7684\u7c7b\u578b is \u3001 as \u3001 as? \uff0c\u53ef\u4ee5\u7528\u6765\u68c0\u67e5\u534f\u8bae\u9075\u5faa \u534f\u8bae\u90e8\u5206\u524d\u6709 optional \u4fee\u9970\u7684\u88ab\u9075\u5faa\u540e\u53ef\u4ee5\u4e0d\u5fc5\u5b9e\u73b0\uff0c @objc \u4fee\u9970\u7684\u534f\u8bae\u90e8\u5206\u53ea\u80fd\u88ab\u7ee7\u627f\u81eaObjective-C\u7684\u7c7b\u9075\u5faa \u534f\u8bae\u6269\u5c55\u53ef\u4ee5\u5b9a\u4e49\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u53ef\u4ee5\u4f7f\u7528 where \u5b9a\u4e49\u7ea6\u675f \u6cdb\u578b\u7c7b\u578b\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u7ea6\u675f \u534f\u8bae\u53ef\u4ee5\u5b9a\u4e49 associatedtype \u7c7b\u578b\uff0c\u4f7f\u7528\u65f6\u53ef\u4ee5 typealias associatedType = Int \uff0c\u4e5f\u53ef\u4ee5\u7ed9\u9644\u52a0\u7c7b\u578b\u52a0\u7ea6\u675f weak \u548c unowned \u4fee\u6539\u53d8\u91cf\u6216\u5c5e\u6027\u53ef\u4ee5\u7528\u6765\u89e3\u51b3\u5faa\u73af\u5f15\u7528\u95ee\u9898\uff0c weak \u4fee\u6539\u7684\u4e00\u5b9a\u662f optional \u7684\u53d8\u91cf\uff0c\u56e0\u4e3a\u5b83\u4f1a\u5728\u8fd0\u884c\u65f6\u53d8\u4e3anil unowned \u4fee\u6539\u7684\u53d8\u91cf\u4e00\u5b9a\u8981\u6709\u503c\uff0c\u5b83\u4e0d\u4f1a\u662fnil, unowned(unsafe) \u9700\u8981\u81ea\u5df1\u786e\u4fdd\u8fd0\u884c\u65f6\u5b89\u5168 \u95ed\u5305\u5f15\u8d77\u7684\u5faa\u73af\u5f15\u7528\u53ef\u4ee5\u4f7f\u7528\u6355\u83b7\u5217\u8868(capture list)\u89e3\u51b3\uff1a [weak self, unowned delegate] \u653e\u5728\u95ed\u6211\u7684\u53c2\u6570\u5217\u8868\u524d\u9762 \u91cd\u53e0\u8bbf\u95ee\u53ef\u80fd\u4f1a\u9020\u6210\u4e0d\u4e00\u81f4\u95ee\u9898\uff0c\u901a\u5e38\u4e0e inout \u548c mutating \u6709\u5173\uff0c\u9020\u6210\u8bbf\u95ee\u51b2\u7a81\uff0c\u5982\u679c\u7f16\u8bd1\u5668\u4e0d\u80fd\u4fdd\u8bc1\u5b89\u5168\u8bbf\u95ee\uff0c\u5c31\u4e0d\u4f1a\u5141\u8bb8\u8bbf\u95ee swift\u8bbf\u95ee\u63a7\u5236\u6a21\u578b\u57fa\u4e8e\u6a21\u5757\u548c\u6e90\u6587\u4ef6\uff0c\u6a21\u5757\u662f\u4ee3\u7801\u5206\u53d1\u5355\u4f4d\uff0c\u53ef\u4ee5\u662f\u6846\u67b6\u6216\u8005\u5e94\u7528\uff0c\u6bcf\u4e00\u4e2a target \u90fd\u662f\u4e00\u4e2a\u6a21\u5757 open \u548c public \u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u6a21\u5757\u7684\u4efb\u4f55\u6e90\u6587\u4ef6\u4e2d\u8bbf\u95ee\uff0c\u4e5f\u53ef\u4ee5\u5728\u88ab\u5bfc\u5165\u7684\u53e6\u4e00\u4e2a\u6a21\u5757\u7684\u6e90\u6587\u4ef6\u4e2d\u88ab\u8bbf\u95ee, open \u7684\u8303\u56f4\u6bd4 public \u66f4\u5927\u70b9\uff0c\u5305\u62ec\u4e86\u88ab\u5bfc\u5165\u7684\u53e6\u4e00\u4e2a\u6a21\u5757\u7684\u8303\u56f4 internel \u53ea\u80fd\u5728\u672c\u6a21\u5757\u4e2d\u7684\u6e90\u6587\u4ef6\u4e2d\u88ab\u8bbf\u95ee fileprivate \u53ea\u5728\u6587\u4ef6\u5185\u90e8\u53ef\u88ab\u8bbf\u95ee private \u53ea\u5728\u4e00\u4e2a\u58f0\u660e\u7684\u8303\u56f4\u5185\u90e8\u8bbf\u95ee - @testable \u4fee\u9970\u5bfc\u5165\u58f0\u660e\u65f6\uff0c\u5355\u5143\u6d4b\u8bd5\u5c31\u53ef\u4ee5\u8bbf\u95ee\u6a21\u5757\u7684\u5185\u90e8\u5b9e\u4f53\u4e86 swfit\u9ed8\u8ba4\u8fd0\u7b97\u4e0d\u5141\u8bb8\u6ea2\u51fa\uff0c + \u3001 - \u3001 * \u663e\u5f0f\u7684\u6307\u5b9a\u5141\u8bb8\u6ea2\u51fa \u81ea\u5b9a\u4e49\u8fd0\u7b97\u548c\u8fd0\u7b97\u7b26: 1 2 3 prefix|infix|postfix operator +++: precedence static prefix|infix|postfix func indirect \u53ef\u4ee5\u7528\u6765\u5b9a\u4e49\u9012\u5f52\u679a\u4e3e ~= \u662f\u679a\u4e3e\u4e2d\u8868\u8fbe\u5f0f\u5339\u914d\u65f6\u4f7f\u7528\u7684\u8fd0\u7b97\u7b26 \u8bed\u8a00\u53c2\u8003 - \u8868\u793a\u7531\u540e\u9762\u7684\u6784\u6210 | \u8868\u793a\u6216\u8005 opt \u4e0b\u6807\uff0c\u8868\u793a\u53ef\u6709\u53ef\u65e0","title":"Swift4"},{"location":"iOS/swift4-notes/#swift-4","text":"","title":"Swift 4 \u8bed\u8a00\u7b14\u8bb0"},{"location":"iOS/swift4-notes/#_1","text":"\u7248\u672c\u5224\u65ad 1 2 3 4 5 #if swift( =3.2) print( =3.2 ) #else print( 3 ) #endif \u5e38\u91cf let \u58f0\u660e\uff1a \u663e\u5f0f/\u9690\u5f0f\uff0c\u7c7b\u578b\u8f6c\u6362\u5fc5\u987b\u663e\u5f0f \u53d8\u91cf var \u58f0\u660e \u5b57\u7b26\u4e32\u683c\u5f0f\u5316\u6a21\u677f\uff1a I have \\(apples + oranges) pieces of fruit. \u591a\u884c\b\u5b57\u7b26\u4e32\u4f7f\u7528 \uff1a 1 2 3 4 5 6 7 8 9 let quotation = I am joker. And She is a girl. We are family. print(quotation) \u6570\u7ec4\u548c\u5b57\u7b26\u5141\u8bb8\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5e26 , \u53f7\uff0c\u5982\u679c\u7c7b\u578b\u4fe1\u606f\u80fd\u63a8\u65ad\uff0c\u53ef\u80fd\u4f7f\u7528 [] \u3001 [:] \u6765\u5b9a\u4e49\u7a7a\u6570\u7ec4\u548c\b\u5b57\u5178\uff0c\u5426\u5219\u4f7f\u7528\u521d\u59cb\u5316\u5668: [String]() \u3001 [String:String]() if \u3001 switch \u3001 for-in \u3001 while \u3001 repeat-while \u7684\u6761\u4ef6\u90e8\u5206\u53ef\u4ee5\u4e0d\u5e26\u62ec\u53f7\uff0c\u4f46\u6267\u884c\u4f53\u5fc5\u987b\u7528\u82b1\u62ec\u53f7\u5305\u4f4f \u6b63\u5e38\u7c7b\u578b\u540e\u9762\u8ddf\u4e2a ? \u53f7\u5c31\u662f Optional \u7c7b\u578b\uff0c\u4f7f\u7528 if let local = optional {} \u662f\u4f7f\u7528 optional \u7c7b\u578b\u7684\u4e00\u79cd\u5e38\u7528\u65b9\u5f0f, local \u53d8\u91cf\u53ea\u5728 if - let \u6267\u884c\u4f53\b\u5185\u90e8\u6709\u6548 ?? \u662f\u7ed9 Optional \u7c7b\u578b\u53d8\u91cf\u53d6\u9ed8\u8ba4\u503c\u7684\u65b9\u6cd5 switch \u652f\u6301\u5404\u79cd\u7c7b\u578b, \bcase \u9ed8\u8ba4\u4e0d\u9700\u8981\u52a0 break \uff0c\u4f7f\u7528 fallthrough \u53ef\u4ee5\u6f0f\u5230\u4e0b\u4e00\u4e2a case 1 2 3 4 5 6 7 8 9 10 11 12 let v = raff switch v { case red : print( red ) case let x where x.hasPrefix( r ): print( r prefix ) fallthrough case let r : print( fallthrough ) default: print( default ) } \u5b57\u5178\u679a\u4e3e\u65f6\u662f\u65e0\u5e8f\u7684: for (key, value) in dict {} \b\u5faa\u73af\uff1a 1 2 3 4 5 var n = 2 while n 100 { n *= 2 } print(n) \u6700\u5c11\u6267\u884c\u4e00\u6b21\u7684\u5faa\u73af 1 2 3 4 5 var m = 2 repeat { m *= 2 }while m 100 print(m) .. \u548c ... \u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u5e8f\u5217\uff0c\u53f3\u8fb9\u754c\u4e0d\u540c \b\u5b9a\u4e49\u51fd\u6570 func , - \u6307\u660e\u8fd4\u56de\u503c\u7c7b\u578b, \u9ed8\u8ba4\u53c2\u6570\u6807\u7b7e\u548c\u53c2\u6570\u540d\u76f8\u540c 1 2 3 4 func greet(person: String, day: String) - String { return Hello, \\(person), today is \\(day). } greet(person: joker , day: Thursday ) \u53ef\u4ee5\u4f7f\u7528 tuple \u6765\u8fd4\u56de\u591a\u503c\uff0c\u53ef\b\u6839\u636e\u4f4d\u7f6e\u7d22\u5f15\u53d6 tuple \u5404\u5143\u7d20\u503c\uff0c\u4e5f\u53ef\u4ee5\u547d\u540d\u53ef\u5143\u7d20\u6807\u7b7e \u51fd\u6570\u53ef\u4ee5\b\u5d4c\u5957\uff0c\u53ef\u8bbf\u95ee\u5916\u5c42\u53d8\u91cf \u95ed\u5305 { \u53c2\u6570\u53ca\u8fd4\u56de\u4f1a\b in \u4f53 } \uff0c $0 \uff0c\u95ed\u5305\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c \u95ed\u5305\u4f5c\u4e3a\u51fd\u6570\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u65f6\u53ef\u4ee5\u653e\u5728\u6700\u540e\uff0c\u5373 trailing closure class \u58f0\u660e\u7c7b\uff0c : \u8868\b\u793a\u7ee7\u627f\uff0c init \u3001 deinit \u521d\u59cb\u5316\u548c\u53cd\u521d\u59cb\u5316\u5668 override \u8986\u76d6\u7236\u7c7b\u65b9\u6cd5\u5fc5\u987b\u662f\u663e\u5f0f\u6307\u5b9a getter\u548csetter, newValue \u548c 1 2 3 4 5 6 7 8 9 10 11 12 13 var Name: Type { get { } willSet { } set(newValue) { } } \u94fe\u5f0f\u64cd\u4f5c\u4e2d\u7ecf\u5e38\u4f7f\u7528 ? \u7b26\u53f7 enum \u5b9a\u4e49\u679a\u4e3e\uff0c rawValue \u53ef\u4ee5\u6307\u5b9a\uff0c\u4e0d\u4ec5\u9650\u5b9a\u4e8eInt struct \u5b9a\u4e49\u7ed3\u6784\u4f53\uff0c\u548c\u7c7b\u7684\u4e3b\u8981\u533a\u522b\u662f\u7ed3\u6784\u4f53\u662f\u503c\u7c7b\u578b protocol \u5b9a\u4e49\b\u534f\u8bae\uff0c\u7c7b\u3001\u7ed3\u6784\u4f53\u548c\u679a\u4e3e\u90fd\u53ef\u4ee5\u4f7f\u7528\b\u534f\u8bae\uff0c mutating \u4fee\u9970\u7ed3\u6784\u4f53\u548c\u679a\u4e3e\u4e2d\u7684\u534f\u8bae\u65b9\u6cd5\u5b9e\u73b0\uff0c\u53ef\u4ee5\u4fee\u6539\u503c\u7c7b\u578b\u6210\u5458 \u53ef\u4ee5\u4f7f\u7528\u6269\u5c55 extension \u6765\u4f7f\u7528\u534f\u8bae\uff0c\u53ef\u4ee5\u628a\u534f\u8bae\u540d\u4f5c\u4e3a\u4e00\u79cd\u7c7b\u578b\u6765\u8c03\u7528\u6240\u6709\u9075\u5faa\u8be5\u534f\u8bae\u7c7b\u578b\u5bf9\u8c61\uff0c\u53ea\u9650\u4e8e\u534f\u8bae\u5b9a\u4e49\u7684\u5185\u5bb9 throw \u53ef\u4ee5\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c throws \u6307\u660e\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u629b\u51fa\u5f02\u5e38\uff0c\u4f7f\u7528 do-try[?]-catch... \u6765\u5904\u7406\u5f02\u5e38, try? \u628a\u7ed3\u679c\u8f6c\u5316\u4e3a Optional \u7c7b\u578b\uff0c\u629b\u51fa\u9519\u8bef\u65f6\u8fd4\u56denil, \u5426\u5219\u8fd4\u56de\u5305\u542b\u7ed3\u679c\u7684 Optional defer \u63cf\u8ff0\u7684\u4ee3\u7801\u5757\u4f1a\u5728\u51fd\u6570\u8fd4\u56de\u524d\u4e00\u523b\u6267\u884c\uff0c\u4e0d\u8bba\u51fd\u6570\u6267\u884c\u662f\u5426\u629b\u51fa\u9519\u8bef \u6cdb\u578b TypeName:TypeProtocol where TypeRequirement \u5728\b\u6267\u884c\u4f53\u524d\u9762\u4f7f\u7528\uff1a T: Equatable \u548c T ... where T: Equatable \u7b49\u4ef7","title":"\u5feb\u901f\u5f00\u59cb"},{"location":"iOS/swift4-notes/#_2","text":"keyword \u4f7f\u7528swift\u5173\u952e\u5b57\u540c\u540d\u7684\u540d\u5b57\u547d\u540d\u53d8\u91cf // \u5355\u884c\u6ce8\u91ca /* */ \u591a\u884c\u6ce8\u91ca\uff0c \u53ef\u4ee5\u5d4c\u5957\u591a\u884c\u6ce8\u91ca \u53e5\u5c3e\u5206\u53f7\u53ef\u4ee5\u7701\u7565 0b \u3001 0o \u3001 0x \u8868\u793a\u4e8c\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u3001\u5341\u516d\u8fdb\u5236 \u6307\u6570\u8868\u793a\uff1a 1e3 = 10 * 10 * 10 \u3001 1p2 = 2 * 2 \u6613\u8bfb\u6570\u5b57\u683c\u5f0f\uff1a 1_000_000 = 1000000 typealias NewTypeName = existedTypeName \u7c7b\u578b\u522b\u540d\u5b9a\u4e49 \u5143\u7ec4 (name: ele1, ele2, _) ,\u5143\u7ec4\u53ef\u4ee5\u901a\u8fc7\u4e0b\u6807\u6216\u5143\u7d20\u6765\u8bbf\u95ee\u5355\u4e2a\u5143\u7d20\uff0c\u4e0d\u9002\u5408\u590d\u6742\u6570\u636e\u7ed3\u6784 Optionals \u7c7b\u578b\u7684\u53d8\u91cf\u53ef\u4ee5\u6709\u503c\u4e5f\u53ef\u4ee5\u6ca1\u6709\u503c\uff0c\u7edf\u4e00\u53ef\u4ee5\u8868\u793a\u5404\u79cd\u7c7b\u578b\u53d8\u91cf\u6ca1\u6709\u503c\u7684\u60c5\u51b5 nil \u4e0d\u80fd\u7ed9\u975e optionals \u53d8\u91cf\u8d4b\u503c\uff0cOC\u4e2d\u7684nil\u662f\u6307\u5411\u4e00\u4e2a\u4e0d\u5b58\u5728\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u53ea\u5bf9\u5bf9\u8c61\u7c7b\u578b\u6709\u6548\uff0c\u800cswift\u4e2d\u7684nil\u4e0d\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u5b83\u53ea\u662f\u8868\u793a\u4e00\u79cd\u4e0d\u5b58\u5728\u503c\u7684\u72b6\u6001\uff0c\u5bf9\u6240\u6709\u7c7b\u578b\u6709\u6548\u3002 ! \u5f3a\u5236\u89e3\u5305\uff0c\u5982\u679c\u4e00\u4e2a Optional \u53d8\u66f4\u786e\u5b9a\u6709\u503c\uff0c \u5c31\u53ef\u4ee5\u4f7f\u7528 ! \u6765\u4f7f\u7528\u5176\u503c Optionals \u7ed1\u5b9a \uff0c\u7528\u4e8e\u4ece Optional \u53d8\u91cf\u4e2d\u63d0\u53d6\u503c\u5e76\u8d4b\u4e8e\u5c40\u90e8\u53d8\u91cf\u4f7f\u7528\uff0c\u5728\u5355\u4e2aif\u8bed\u53e5\u4e2d\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2aOptional\u7ed1\u5b9a\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u4e3a\u5047\uff0c\u5219\u6574\u4e2a\u5224\u65ad\u4e3a\u5047 \u9690\u5f0f\u89e3\u7ed1 Optional\uff01 \uff0c\u786e\u4fdd\u5b83\u58f0\u660e\u540e\u4e00\u76f4\u6709\u503c\u4e14\u4e0d\u4e3anil, \u4f46\u5b83\u672c\u8eab\u8fd8\u662f\u4e00\u4e2a Optional \uff0c\u53ea\u662f\u5728\u8bbf\u95ee\u65f6\u4f1a\u81ea\u52a8\u89e3\u5305 \u51fd\u6570\u80fd\u629b\u51fa\u9519\u8bef\u7528 throws \u6307\u660e\uff0c\u5f53\u8c03\u7528\u4e00\u4e2a\u53ef\u4ee5\u629b\u51fa\u9519\u8bef\u7684\u51fd\u6570\u65f6\uff0c\u524d\u9762\u8981\u52a0\u4e0a try Assertions \u53ea\u5728\u8c03\u8bd5\u671f\u95f4\u8d77\u4f5c\u7528\uff0c precondition \u53ef\u8c03\u8bd5\u548c\u751f\u4ea7\u73af\u5883\u4e2d\u90fd\u8d77\u4f5c\u7528\u3002 Assertions \u5728\u5355\u5143\u6d4b\u8bd5\u4e2d\u7ecf\u5e38\u7528\u5230,\u5982\u679c\u7f16\u8bd1\u5668\u5f00\u4e86 -Ounchecked \u9009\u9879\uff0c precondition \u4f1a\u88ab\u4e00\u76f4\u8ba4\u4e3a\u6210\u529f\u3002 1 2 3 4 5 6 7 assert(exp, msg) \u5931\u8d25\u65f6\u663e\u793amsg\uff0c\u6210\u529f\u65f6\u7ee7\u7eed\u6267\u884c assertionFailure(msg)\u76f4\u63a5\u8868\u793a\u5931\u8d25\u65f6\u7684msg\u663e\u793a precondition(exp, msg)\u8c03\u8bd5\u548c\u751f\u4ea7\u73af\u5883\u90fd\u8d77\u4f5c\u7528 preconditionFailure(:file:line) fatalError(_:file:line:)\u4e25\u91cd\u9519\u8bef\uff0c\u4e0d\u4f1a\u88ab\u7f16\u8bd1\u5668\u4f18\u5316 swfit\u7684 = \u8d4b\u503c\u4e0d\u4f1a\u6709\u8fd4\u56de\u503c\uff0c\u6570\u503c\u9ed8\u8ba4\u4e0d\u5141\u8bb8\u6ea2\u51fa\uff0c\u4f46\u53ef\u4ee5\u660e\u786e\u6307\u5b9a\u53ef\u4ee5\u6ea2\u51fa \u4e00\u5143\u8fd0\u7b97\u7b26\u7d27\u6328\u8fd0\u7b97\u5b50\uff0c\u6ca1\u6709\u7a7a\u683c\uff1a -a, b! ,\u4e8c\u5143\u8fd0\u7b97: a + b \uff0c\u4e09\u5143\u8fd0\u7b97: a ? b : c \u8d4b\u503c\u8fd0\u7b97\u7684\u53f3\u8fb9\u5982\u679c\u662f\u5143\u7ec4\uff0c\u53ef\u4ee5\u81ea\u52a8\u89e3\u6790\u4e3a\u591a\u4e2a\u5143\u7d20\u8d4b\u7ed9\u5de6\u8fb9\u7684\u53d8\u91cf % \u8fd0\u7b97\u7684\u539f\u7406\uff1a a = (b x some multiplier ) + remainder , \u4e0d\u8003\u8651 b \u7684\u7b26\u53f7 \u6df7\u5408\u8d4b\u503c\u8fd0\u7b97\u4e5f\u4e0d\u4f1a\u8fd4\u56de\u503c\uff0c\u8fd9\u4e00\u70b9\u548c\u8d4b\u503c\u4e00\u81f4 \u5168\u7b49\u8fd0\u7b97 === ,\u4e0d\u5168\u7b49 !== \uff0c\u7528\u6765\u5224\u65ad\u4e24\u4e2a\u5f15\u7528\u662f\u5426\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61 \u5982\u679c\u4e24\u4e2a\u5143\u7ec4\u6709\u76f8\u540c\u7684\u7c7b\u578b\u548c\u5143\u7d20\u4e2a\u6570\uff0c\u5b83\u4eec\u4e5f\u53ef\u4ee5\u8fdb\u884c\u6bd4\u8f83\uff0c\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u6bd4\u8f83\uff0c\u76f4\u5230\u53d1\u73b0\u4e24\u4e2a\u5143\u7d20\u4e0d\u76f8\u7b49\u65f6\u505c\u6b62\u6bd4\u8f83\u540e\u9762\u7684\u5143\u7d20\uff0c\u53ea\u6709\u6240\u6709\u5143\u7d20\u90fd\u652f\u6301\u540c\u4e00\u6bd4\u8f83\u8fd0\u7b97\u65f6\u624d\u53ef\u4ee5\u6bd4\u8f83\u4e24\u4e2a\u5143\u7ec4\uff0c\u6700\u9ad8\u80fd\u6bd4\u8f83\u6709\u516d\u4e2a\u5143\u7d20\u7684\u65e0\u7ec4\uff0c\u518d\u591a\u5143\u7d20\u7684\u6bd4\u8f83\u9700\u8981\u81ea\u5df1\u5b9e\u73b0 \u4e09\u5143\u8fd0\u7b97\u7b26\u4e0d\u8981\u5d4c\u5957\u4f7f\u7528\uff0c\u4f7f\u7a0b\u5e8f\u66f4\u52a0\u53ef\u8bfb a ?? b \uff0c\u5982\u679ca\u6709\u503c\u5c31\u8fd4\u56de\uff0c\u5982\u679ca\u4e3anil\uff0c\u5219\u8fd4\u56deb \u95ed\u533a\u95f4 a...b \uff0c\u534a\u5f00\u533a\u95f4: a.. b \u5355\u7aef\u533a\u95f4\u5728\u6570\u7ec4\u4e0a\u7684\u5e94\u7528 [a...] \u7528\u5728\u6570\u7ec4\u7d22\u5f15\uff0c\u8868\u793a\u4ecea\u5f00\u59cb\u53ca\u5176\u540e\u7684\u6240\u6709\u5143\u7d20\uff0c\u8fd8\u6709 [...a] \uff0c\u8868\u793a\u4ece\u5934\u5f00\u59cb\u5230a\u7d22\u5f15 \u591a\u884c\u5b57\u7b26\u4e32\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528 \\ \u6765\u8f6c\u4e49\u6362\u884c\u7b26\u6765\u7eed\u884c\uff0c\u5728\u95ed\u5408\u7684 \u524d\u9762\u7684\u7a7a\u683c\u6307\u540d\u591a\u884c\u5b57\u7b26\u8981\u5ffd\u7565\u7684\u7f29\u8fdb String \u662f\u503c\u7c7b\u578b \u5b57\u7b26\u4e32\u662f\u5b57\u7b26\u7684\u96c6\u5408\uff0c\u53ef\u4ee5\u88ab\u679a\u4e3e\uff0c\u5143\u7d20\u7684\u7c7b\u578b\u662f Character \\() \u5b57\u7b26\u4e32\u63d2\u5165\u53ef\u4ee5\u7528\u4e8e\u591a\u884c\u5b57\u7b26\u4e32 \\u{n} 1\uff5e8\u4f4d\u7684Unicode\u5b57\u7b26\u6807\u91cf Character \u6bcf\u4e00\u4e2a\u5b9e\u4f8b\u90fd\u662f\u4e00\u4e2a\u6269\u5c55\u56fe\u50cf\u7c07\uff0c\u6bcf\u4e00\u4e2a\u6269\u5c55\u56fe\u50cf\u7c07\u90fd\u53ef\u4ee5\u5305\u542b\u591a\u4e2aUnicode\u6807\u91cf\uff0c\u7528\u6765\u751f\u6210\u5355\u4e2a\u53ef\u8bfb\u5b57\u7b26\uff0c\u53ef\u4ee5\u7528\u6765\u663e\u793a\u4e00\u4e9b\u7ec4\u5408\u5b57\u7b26\uff0c\u4f7f\u7528 count \u53d1\u751f\u83b7\u53d6\u5b57\u7b26\u4e32\u957f\u5ea6\uff0c\u4e5f\u662f\u7531\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0cswift\u7684\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u4e0d\u80fd\u4f7f\u7528\u7d22\u5f15\u6765\u76f4\u63a5\u5f15\u7528\uff0c endIndex \u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u7684\u5b57\u7b26\u7d22\u5f15\uff0cString\u7684 indices \u662f\u6240\u6709\u5b57\u7b26\u5143\u7d20\u7684\u7d22\u5f15\u6570\u7ec4 \u5b50\u5b57\u7b26\u4e32\u7c7b\u578b Substring , \u53ea\u662f\u4e34\u65f6\u4f7f\u7528 Character \u6709 utf8 \u3001 utf16 \u548c unicodeScalars \u4e09\u79cdUnicode\u517c\u5bb9\u7684\u7f16\u7801\u6570\u7ec4 \u96c6\u5408\u7c7b\u578b\uff1a Array \u3001 Set \u3001 Dictionary Array(repeating:count:) \u53ef\u4ee5\u5728\u5b9a\u4e49\u65f6\u521d\u59cb\u5316\uff0c enumerated () \u65b9\u6cd5\u4f1a\u8fd4\u56de\u4ee5(index, emelemt)\u4e3a\u5143\u7d20\u7684\u6570\u7ec4 \u96c6\u5408\u4e2d\u5143\u7d20\u7684\u7c7b\u578b\u5fc5\u987b\u662f\u80fdhash\u7684\uff0c\u4ee5\u786e\u4fdd\u552f\u4e00\u6027\uff0c\u96c6\u5408\u6ca1\u6709\u7b80\u77ed\u5199\u6cd5\uff0c\u58f0\u660e\u96c6\u5408\u5fc5\u987b\u663e\u5f0f\u6307\u660e\u7c7b\u578b\uff0c\u4e0d\u80fd\u7c7b\u578b\u63a8\u65ad switch\u4e2d\u7684case \u540e\u9762\u53ef\u4ee5\u8ddf where \u63a7\u5236\u8f6c\u79fb\u5173\u952e\u5b57: continue \u3001 break \u3001 fallthrough \u3001 return \u3001 throw \u8bed\u53e5\u6807\u7b7e label: \u53ef\u4ee5\u548c break \u3001 continue \u4e00\u8d77\u4f7f\u7528\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4e0eC\u8bed\u8a00\u4e2dgoto\u76f8\u540c\u7684\u6548\u679c guard - else \u5982\u679cguard\u7684\u6761\u4ef6\u4e0d\u6210\u7acb\uff0c\u5c31\u6267\u884celse\u5757\u513f\u7684\u8bed\u53e5 #available(iOS 10, macOS 10.12, *) API\u6709\u6548\u6027\u5224\u65ad \u51fd\u6570\u6709 \u53c2\u6570\u6807\u7b7e \u548c \u53c2\u6570\u540d \uff0c\u9ed8\u8ba4\u53c2\u6570\u6807\u7b7e\u548c\u53c2\u6570\u540d\u4e00\u6837\uff0c\u4e5f\u53ef\u4ee5\u5206\u522b\u6307\u5b9a\uff0c\u53ef\u4ee5\u4f7f\u7528 _ \u5ffd\u7565\u53c2\u6570\u6807\u7b7e \u53ef\u53d8\u53c2\u6570\u7c7b\u578b Double... \uff0c\u4e00\u4e2a\u51fd\u6570\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2a\u53ef\u53d8\u53c2\u6570\uff0c\u53ef\u53d8\u53c2\u6570\u8981\u653e\u5728\u53c2\u6570\u5217\u8868\u7684\u6700\u540e \u51fd\u6570\u7684\u53c2\u6570\u9ed8\u8ba4\u662f\u5e38\u91cf\uff0c inout \u4fee\u6539\u53c2\u6570\u53ef\u4ee5\u5728\u51fd\u6570\u4f53\u5185\u4fee\u6539\u53c2\u6570\u503c\uff0c\u53ea\u80fd\u628a\u53d8\u91cf\u4f20\u7ed9inout\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u5e76\u4e14\u4f20\u53c2\u65f6\u8981\u5728\u524d\u9762\u52a0\u4e00\u4e2a \u53f7\uff0c\u4ee5\u8868\u793a\u8fd9\u4e2a\u53c2\u6570\u53ef\u4ee5\u88ab\u4fee\u6539 \u51fd\u6570\u5c31\u662f\u547d\u540d\u7684\u95ed\u5305\uff0c\u5d4c\u5957\u51fd\u6570\u53ef\u4ee5\u6355\u83b7\u5916\u5c42\u7684\u53d8\u91cf\uff0c\u53ef\u4ee5\u63a8\u65ad\u53d8\u91cf\uff0c\u5355\u8868\u8fbe\u5f0f\u95ed\u5305\u9ed8\u8ba4\u4f1a\u8fd4\u56de\u503c\uff0c\u8fd8\u6709 Trailing Closure \u8bed\u6cd5 \u95ed\u5305\u7684\u8bed\u6cd5\uff1a {(parameters) - return type in statements } , \u95ed\u5305\u4e2d\u53c2\u6570\u7684\u7b80\u5199\uff1a $0 \u5982\u679c\u95ed\u5305\u88ab\u8d4b\u7ed9\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff0c\u5e76\u4e14\u95ed\u5305\u672c\u8eab\u53c8\u5f15\u7528\u4e86\u7c7b\u7684\u6210\u5458\uff0c\u5c31\u4f1a\u9020\u6210\u5faa\u73af\u5f15\u7528\uff0cSwfit\u4f7f\u7528\u6355\u83b7\u5217\u8868\u6765\u89e3\u51b3\u8fd9\u79cd\u5faa\u73af\u5f15\u7528\u95ee\u9898 \u95ed\u5305\u662f\u5f15\u7528\u7c7b\u578b escaping \u95ed\u5305\uff1a\u5f53\u4e00\u4e2a\u95ed\u5305\u88ab\u5f53\u4f5c\u53c2\u6570\u4f20\u5165\u4e00\u4e2a\u51fd\u6570\uff0c\u5374\u5728\u8be5\u51fd\u6570\u8fd4\u56de\u540e\u88ab\u8c03\u7528\u3002\u5173\u952e\u5b57 @escaping \u81ea\u52a8\u95ed\u5305\uff1a\u81ea\u52a8\u521b\u5efa\u6765\u5305\u88f9\u8868\u8fbe\u5f0f\u5e76\u4f20\u7ed9\u5176\u5b83\u51fd\u6570\uff0c\u5173\u952e\u5b57\uff1a @autoclosure \u679a\u4e3e\u53ef\u4ee5\u6709\u7ed3\u5408\u503c\u548c\u9ed8\u8ba4\u503c(rawValue), \u9012\u5f52\u679a\u4e3e\uff1a\u6709\u53e6\u4e00\u4e2a\u679a\u4e3e\u4f5c\u4e3acase\u7ed3\u5408\u503c\u7684\u679a\u4e3e\u7c7b\u578b,\u4f7f\u7528 indirect \u8868\u660e\u5b83\u662f\u4e00\u4e2a\u9012\u5f52\u679a\u4e3e class \u662f\u5f15\u7528\u7c7b\u578b\uff0c\u4f7f\u7528 === \u548c !== \u6765\u5224\u65ad\u4e24\u4e2a\u5f15\u7528\u662f\u5426\u6307\u5411\u540c\u4e00\u4e2a\u5b9e\u4f8b swift\u4e2d\u4e00\u4e9b\u57fa\u672c\u7c7b\u578b\u90fd\u662f\u4f7f\u7528 struct \u6765\u5b9e\u73b0\u7684\uff0c\u50cf String \u3001 Array \u3001 Dictionary \u7b49\uff0c\u4e0d\u50cfFoundation\u4e2d\u7684\u5b9e\u73b0\u662f\u4f7f\u7528\u7c7b Struct \u548c class \u53ef\u4ee5\u58f0\u660e\u5b58\u50a8\u5c5e\u6027\uff0c\u4f46\u662f Struct \u3001 Class \u548c Enumeration \u90fd\u53ef\u4ee5\u58f0\u660e\u8ba1\u7b97\u5c5e\u6027 \u50a8\u5b58\u5c5e\u6027\u53ef\u4ee5\u5b9a\u4e49\u5c5e\u6027\u89c2\u5bdf\u5668 \u5f53\u4e00\u4e2a\u503c\u7c7b\u578b\u7684\u5b9e\u4f8b\u88ab\u58f0\u660e\u4e3a\u5e38\u91cf\uff0c\u5b83\u7684\u6240\u6709\u6210\u5458\u90fd\u4e0d\u53ef\u53d8\uff0c class \u7684\u5b9e\u4f8b\u5982\u679c\u88ab\u58f0\u660e\u4e3a\u5e38\u91cf\uff0c\u5b83\u7684\u6210\u5458\u8fd8\u662f\u53ef\u4ee5\u6539\u53d8\uff0c\u56e0\u4e3a\u5b83\u662f\u5f15\u7528\u7c7b\u578b lazy \u5c5e\u6027\uff0c\u53ea\u5728\u7b2c\u4e00\u6b21\u4f7f\u7528\u65f6\u521b\u5efa\uff0c \u53ea\u80fd\u4f7f\u7528 var \u58f0\u660e\uff0c\u56e0\u4e3a\u5e38\u91cf\u5728\u521d\u59cb\u5316\u5b8c\u6210\u65f6\u5fc5\u987b\u6709\u503c\uff0c \u800c lazy \u53d8\u91cf\u53ef\u80fd\u5728\u521d\u59cb\u5316\u5b8c\u6210\u65f6\u6ca1\u6709\u88ab\u521b\u5efa\uff0c \u591a\u7ebf\u7a0b\u540c\u65f6\u8c03\u7528 lazy \u53d8\u91cf\u65f6\uff0c\u5982\u679c\u5b83\u8fd8\u6ca1\u6709\u88ab\u521b\u5efa\uff0c\u5219\u5b83\u4e0d\u80fd\u4fdd\u8bc1\u53ea\u88ab\u521b\u5efa\u4e00\u6b21 \u8ba1\u7b97\u5c5e\u6027\u4e5f\u5fc5\u987b\u4f7f\u7528 var \u6765\u58f0\u660e\uff0c\u5c5e\u6027\u89c2\u5bdf\u5668 willSet(newValue) \u3001 didSet(newValue/oldValue) \u5168\u5c40\u5e38\u91cf\u548c\u53d8\u91cf\u90fd\u662f\u8ba1\u7b97\u61d2\u60f0\u7684\uff0c\u53ea\u662f\u4e0d\u9700\u8981 lazy \u4fee\u9970 \u4f7f\u7528 static \u5173\u952e\u5b57\u5b9a\u4e49\u7c7b\u578b\u5c5e\u6027\uff0c\u4f7f\u7528 class \u4fee\u9970\u7684\u8ba1\u7b97\u5c5e\u6027\u53ef\u4ee5\u88ab\u5b50\u7c7b\u91cd\u65b0\u5b9e\u73b0 Struct \u548c Enumeration \u662f\u503c\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4e0d\u80fd\u4ece\u8fd9\u4eec\u7684\u5b9e\u4f8b\u65b9\u6cd5\u4fee\u6539\u5c5e\u6027 \uff0c\u5982\u679c\u4fee\u6539\u4fee\u6539\uff0c\u9700\u8981\u5728\u5b9e\u4f8b\u65b9\u6cd5\u524d\u9762\u52a0 mutaing \u5173\u952e\u5b57\uff0c\u751a\u81f3\u53ef\u4ee5\u4fee\u6539self\u4e3a\u53e6\u4e00\u4e2a\u5b9e\u4f8b \u7c7b\u578b\u65b9\u6cd5\u4f7f\u7528 static \u5173\u952e\u8bcd\u653e\u5728\u51fd\u6570\u524d\u9762\u5b9a\u4e49\uff0c\u4f7f\u7528 class \u5b9a\u4e49\u7684\u7c7b\u578b\u65b9\u6cd5\u5141\u8bb8\u5b50\u7c7b\u8986\u76d6\u5176\u5b9e\u73b0 @discardableResult \u5c5e\u6027\u4fee\u6539\u6307\u65f6\u65f6\u6570\u8c03\u7528\u65f6\u53ef\u4ee5\u5ffd\u7565\u8003\u8651\u8fd4\u56de\u503c \u7c7b\u3001\u7ed3\u6784\u4f53\u3001\u679a\u4e3e\u90fd\u53ef\u4ee5\u5b9a\u4e49\u4e0b\u6807\u64cd\u4f5c\uff0c\u4f7f\u7528\u5173\u952e\u5b57 subscript \u5b9a\u4e49 1 2 3 4 5 6 7 8 9 subscript(index: Int) - { get { // return an appropriate subscript value here } set(newValue){ // perform a suitable setting action here } } Dictionry \u7684\u5143\u7d20\u8d4b nil \u76f8\u5f53\u4e8e\u5220\u9664\u8fd9\u4e2a\u952e\u503c\u5bf9 subscript \u4e0d\u80fd\u4f7f\u7528 inout \u4fee\u6539\u53c2\u6570\uff0c\u4e5f\u4e0d\u80fd\u7ed9\u53c2\u6570\u63d0\u4f9b\u9ed8\u8ba4\u503c \u7ee7\u627f\u8fc7\u6765\u7684\u5c5e\u6027\u4e0d\u7ba1\u662f\u5b58\u50a8\u8fd8\u662f\u8ba1\u7b97\u7c7b\u578b\u7684\u90fd\u53ef\u4ee5\u6dfb\u52a0\u5c5e\u6027\u89c2\u5bdf\u5668 \u4f7f\u7528\u5173\u952e\u5b57 final \u6765\u963b\u6b62\u5c5e\u6027\u3001\u7c7b\u578b\u3001\u4e0b\u6807\u6216\u65b9\u6cd5\u88ab\u5b50\u7c7b\u8986\u76d6\u6216\u7ee7\u627f \u7ed3\u6784\u4f53\u6216\u7c7b\u578b\u5728\u5b9e\u4f8b\u521b\u5efa\u65f6\u4e00\u5b9a\u8981\u628a\u6240\u6709\u7684\u5b58\u50a8\u5c5e\u6027\u90fd\u521d\u59cb\u5316\uff0c\u53ef\u4ee5\u5728\u521d\u59cb\u5316\u5668\u91cc\u8bbe\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u5728\u5c5e\u6027\u5b9a\u4e49\u65f6\u8bbe\u7f6e\u9ed8\u8ba4\u503c\uff0c\u8fd9\u4e24\u79cd\u65b9\u5f0f\u90fd\u662f\u76f4\u63a5\u8bbe\u7f6e\u5c5e\u6027\u503c\uff0c\u4e0d\u4f1a\u8c03\u7528\u5c5e\u6027\u89c2\u5bdf\u5668 \u5b9a\u5236\u521d\u59cb\u5316\u5668\uff1a\u6ca1\u6709\u51fd\u6570\u540d\uff0c\u4f7f\u7528\u5173\u952e\u5b57 init \u6307\u5b9a\uff0c\u53ef\u4ee5\u6709\u53c2\u6570\u6807\u7b7e\u548c\u53c2\u6570\u540d\u79f0 \u5982\u679c\u5c5e\u6027\u5728\u521d\u59cb\u5316\u65f6\u6ca1\u6709\u503c\u6216\u8005\u4e4b\u540e\u53ef\u80fd\u6ca1\u6709\u503c\uff0c\u8fd9\u6837\u7684\u5c5e\u6027\u5e94\u8be5\u5b9a\u4e49\u4e3a Optional \u521d\u59cb\u5316\u65f6\u53ef\u4ee5\u8d4b\u503c\u5e38\u91cf\u6210\u5458\uff0c\u7c7b\u548c\u7ed3\u6784\u4f53\u9ed8\u8ba4\u4f1a\u63d0\u4f9b\u521d\u59cb\u5316\u5668 \u521d\u59cb\u5316\u5668\u53ef\u4ee5\u8c03\u7528\u5176\u5b83\b\u521d\u59cb\u5316\u5668\u6765\u5b8c\u6210\u521d\u59cb\u5316\u8fc7\u7a0b\uff0c\u8fd9\u79cd\u8c03\u7528\u53eb\u4f5c\u521d\u59cb\u5316\u4ee3\u7406\uff0c\u503c\u7c7b\u578b\u548c Class \u7c7b\u578b\u7684\u521d\u59cb\u5316\u4ee3\u7406\u65b9\u5f0f\u6709\u4e9b\u533a\u522b \u503c\u7c7b\u578b\u4e0d\u652f\u6301\u7ee7\u627f\uff0c\u5b83\u4eec\u7684\u521d\u59cb\u5316\u4ee3\u7406\u8fc7\u7a0b\u6bd4\u8f83\u7b80\u5355\uff0c\u53ea\u4f7f\u7528\u81ea\u8eab\u63d0\u4f9b\u7684\u521d\u59cb\u5316\u5668\u4f5c\u4ee3\u7406 \u5982\u679c\u8981\u81ea\u5b9a\u4e49\u521d\u59cb\u5316\u5668\uff0c\u5728\u503c\u7c7b\u578b\u4e2d\u5c31\u4e0d\u4f1a\u81ea\u52a8\u751f\u6210\u7684\u521d\u59cb\u5316\u5668\u4e86\u9700\u8981\u81ea\u5df1\b\u663e\u5f0f\u7684\u5199\u51fa\u6765\uff0c\u5982\u679c\u8981\u4fdd\u7559\u81ea\u52a8\u751f\u6210\u7684\u521d\u59cb\u5316\u5668\uff0c\u81ea\u5b9a\u4e49\u7684\u521d\u59cb\u5316\u5668\u8981\u5199\u5728\u6269\u5c55\u91cc\u9762 \u6240\u4ee5\u7c7b\u7684\u5b58\u50a8\u5c5e\u6027\u5305\u62ec\u7ee7\u627f\u800c\u6765\u7684\u90fd\u5fc5\u987b\u5728\u521d\u59cb\u5316\u8d4b\u4e88\u521d\u503c class \u5b9a\u4e49\u4e24\u7c7b\u521d\u59cb\u5316\u5668\uff1a\u6307\u5b9a\u521d\u59cb\u5316\u5668\u548c\u4fbf\u5229\u521d\u59cb\u5316\u5668\uff0c\u7528\u6765\u786e\u4fdd\u6240\u6709\u7684\u5b58\u50a8\u5c5e\u6027\u90fd\u80fd\u88ab\u521d\u59cb\u5316 \u6307\u5b9a\u521d\u59cb\u5316\u5668\u662f\u4e00\u4e2a\u7c7b\u7684\u4e3b\u8981\u521d\u59cb\u5316\u5668\uff0c\u5b83\u8d1f\u8d23\u521d\u59cb\u5316\u672c\u7c7b\u7684\u6240\u6709\u5c5e\u6027\u5e76\u8c03\u7528\u5408\b\u9002\u7684\u7236\u7c7b\u6307\u5b9a\u521d\u59cb\u5316\u5668\u521d\u59cb\u5316\u7236\u7c7b \u6bcf\u4e2a\u7c7b\u81f3\u5c11\u8981\u6709\u4e00\u4e2a\u6307\u5b9a\u521d\u59cb\u5316\u5668\uff0c\u4fbf\u5229\u521d\u59cb\u5316\u5668\u901a\u8fc7\u8c03\u7528\u540c\u7c7b\u7684\u6307\u5b9a\u521d\u59cb\u5316\u5668\u6765\u4f5c\u4e00\u4e9b\u521d\u59cb\u5316\u5b9e\u4f8b\u7684\u5de5\u4f5c\uff0c\u50cf\u5b83\u7684\u540d\u5b57\u4e00\u6837\uff0c\u4fbf\u5229\u521d\u59cb\u5316\u5668\u53ea\u662f\u4e3a\u4e86\u65b9\u4fbf\u521d\u59cb\u5316\u6d41\u7a0b\u800c\u8bbe\u8ba1\u7684 \u4fbf\u5229\u521d\u59cb\u5316\u5668\u4f7f\u7528 convenience \u5173\u952e\u8bcd\u6807\u793a\uff0c\u6307\u5b9a\u521d\u59cb\u5316\u5668\u4e0d\u7528 \u521d\u59cb\u5316\u4ee3\u7406\u7684\u8fc7\u7a0b\u6709\u4e09\u4e2a\u89c4\u5219\uff1a \u5b50\u7c7b\u6307\u5b9a\u521d\u59cb\u5316\u5668\u5fc5\u987b\u8c03\u7528\u7236\u7c7b\u6307\u5b9a\u521d\u59cb\u5316\u5668(\u7eb5\u5411) \u4fbf\u5229\u521d\u59cb\u5316\u5668\u5fc5\u987b\u8c03\u7528\u540c\u7c7b\u7684\u521d\u59cb\u5316\u5668\uff08\u6a2a\u5411\uff09 \u4fbf\u5229\u521d\u59cb\u5316\u5668\u6700\u7ec8\u9700\u8981\u8c03\u7528\u540c\u7c7b\u7684\u6307\u5b9a\u521d\u59cb\u5316\u5668\u5b8c\u6210\u521d\u59cb\u5316\u5de5\u4f5c \u4e24\u9636\u6bb5\u521d\u59cb\u5316\uff0c\u4fdd\u8bc1\u5c5e\u6027\u5728\u521d\u59cb\u5316\u524d\u4e0d\u88ab\u8bbf\u95ee\u3002\u7b2c\u4e00\u9636\u6bb5\uff1a\u7c7b\u5148\u628a\u81ea\u5df1\u7684\u5c5e\u6027\u521d\u59cb\u5316 \u7b2c\u4e8c\u9636\u6bb5\uff1a\u6309\u9700\u8d4b\u503c\u521d\u59cb\u5316\u8fc7\u7684\u5c5e\u6027 \u521d\u59cb\u5316\u5b89\u5168\u68c0\u67e5\uff1a \u5728\u6307\u5b9a\u521d\u59cb\u5316\u5668\u8c03\u7528\u7236\u7c7b\u6307\u5b9a\u521d\u59cb\u5316\u5668\u4e4b\u524d\uff0c\u8981\u786e\u4fdd\u672c\u7c7b\u7684\u6240\u6709\u5b58\u50a8\u5c5e\u6027\u90fd\u5148\u88ab\u521d\u59cb\u5316 \u4fee\u6539\u7236\u7c7b\u5c5e\u6027\u503c\u524d\u5fc5\u987b\u5148\u8c03\u7528\u7236\u7c7b\u7684\u6307\u5b9a\u521d\u59cb\u5316\u5668\uff0c\u5426\u5219\u65b0\u8d4b\u7684\u503c\u5c31\u4f1a\u5728\u7236\u7c7b\u6307\u5b9a\u521d\u59cb\u5316\u5668\u88ab\u8c03\u7528\u540e\u800c\u6539\u53d8 \u4fbf\u5229\u521d\u59cb\u5316\u5668\u5728\u6539\u53d8\u5c5e\u6027\u503c\u524d\u8981\u8c03\u7528\u53e6\u4e00\u4e2a\u521d\u59cb\u5316\u5668 \u5728\u7b2c\u4e00\u9636\u6bb5\u521d\u59cb\u5316\u5b8c\u6210\u524d\uff0c\u521d\u59cb\u5316\u5668\u4e0d\u53ef\u4ee5\u8c03\u7528\u5b9e\u4f8b\u65b9\u6cd5\u6216\u8bfb\u4efb\u610f\u5c5e\u6027\u503c\u6216\u5f15\u7528 self \u521d\u59cb\u5316\u9636\u6bb51\uff1a \u521d\u59cb\u5316\u5668\u88ab\u8c03\u7528 \u5b9e\u4f8b\u5185\u5b58\u88ab\u5206\u914d\uff0c\u4f46\u8fd8\u6ca1\u6709\u521d\u59cb\u5316 \u672c\u7c7b\u7684\u6307\u5b9a\u521d\u59cb\u5316\u5668\u8c03\u7528\u6765\u521d\u59cb\u5316\u6240\u6709\u7684\u672c\u7c7b\u5b58\u50a8\u53d8\u91cf \u7236\u7c7b\u7684\u6307\u5b9a\u521d\u59cb\u5316\u5668\u88ab\u8c03\u7528\u6765\u521d\u59cb\u5316\u6240\u6709\u7236\u7c7b\u7684\u5b58\u50a8\u53d8\u91cf\uff0c\u76f4\u5230\u6240\u6709\u7684\u7236\u7c7b\u5b58\u50a8\u53d8\u91cf\u90fd\u88ab\u521d\u59cb\u5316\u4e3a\u6b62 \u8fd9\u65f6\u6240\u6709\u7684\u5b58\u50a8\u53d8\u91cf\u90fd\u88ab\u521d\u59cb\u5316\uff0c\u7b2c\u4e00\u9636\u6bb5\u5b8c\u6210 \u521d\u59cb\u5316\u9636\u6bb52\uff1a\u4ece\u6700\u9ad8\u7236\u7c7b\u5411\u4e0b\u7684\u8fc7\u7a0b\u4e2d\u5c31\u53ef\u4ee5\u8fdb\u4e00\u6b65\u914d\u7f6e\u5c5e\u6027\u503c\u4e86\uff0c\u8fd9\u4e00\u9636\u6bb5\u5b9e\u4f8b\u5df2\u7ecf\u53ef\u4ee5\u88ab\u6b63\u5e38\u4f7f\u7528\u4e86 failable \u521d\u59cb\u5316\u5668 init? \u6807\u8bc6\uff0c return nil \u6307\u660e\u521d\u59cb\u5316\u5931\u8d25 \u5e26 rawValue \u7684\u679a\u4e3e\u7c7b\u578b\u4f1a\u81ea\u52a8\u751f\u6210 failable \u521d\u59cb\u5316\u5668 init! \u521b\u5efa\u81ea\u52a8\u89e3\u5305\u7684\u521d\u59cb\u5316\u5668 \u7528 required \u4fee\u9970\u7684\u521d\u59cb\u5316\u5668\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0 \u53ef\u4ee5\u4f7f\u7528\u95ed\u5305\u6765\u521d\u59cb\u5316\u4e00\u4e2a\u53d8\u91cf 1 var a = { return 0 }() \u53cd\u521d\u59cb\u5316 deinit \u53ea\u4f5c\u7528\u4e8e class \uff0c\u4e00\u4e2a\u7c7b\u6700\u591a\u53ea\u6709\u4e00\u4e2a deinit {} , \u53ef\u4ee5\u7528\u6765\u91ca\u653e\u8d44\u6e90 Optional \u94fe\u5f0f\u8c03\u7528 ?. try \u3001 try? \u3001 try! \u4e09\u79cd\u9519\u8bef\u5904\u7406\u7684\u533a\u522b try! \u6291\u5236\u9519\u8bef try? \u5982\u679c\u53d1\u751f\u9519\u8bef\u65f6\u8fd4\u56denil try defer \u5757\u7684\u4ee3\u7801\u4f1a\u548c\u6b63\u5e38\u7684\u4ee3\u7801\u6267\u884c\u987a\u5e8f\u4e0d\u540c\uff0c\u5199\u5728\u7b2c\u4e00\u540d\u7684\u6700\u540e\u6267\u884c is \u548c as \u5224\u65ad\u7c7b\u578b\u548c\u7c7b\u578b\u8f6c\u6362\uff0c as? \u5c1d\u8bd5\u7c7b\u578b\u8f6c\u6362\uff0c as! \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c Any \u53ef\u4ee5\u8868\u793a\u6240\u6709\u7c7b\u578b\u7684\u5b9e\u4f8b\uff0c\u751a\u81f3\u662f\u51fd\u6570\u7c7b\u578b AnyObject \u53ef\u4ee5\u8868\u793a\u4efb\u4f55\u7c7b\u5b9e\u4f8b \u6269\u5c55\u53ef\u4ee5\u7ed9\u7c7b\u3001\u7ed3\u6784\u4f53\u3001\u679a\u4e3e\u548c\u534f\u8bae\u6dfb\u52a0\u529f\u80fd\uff1a \u53ef\u4ee5\u6dfb\u52a0\u8ba1\u7b97\u5b9e\u4f8b\u5c5e\u6027\u548c\u8ba1\u7b97\u7c7b\u5c5e\u6027 \u53ef\u4ee5\u5b9a\u4e49\u5b9e\u4f8b\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5 \u63d0\u4f9b\u65b0\u521d\u59cb\u5316\u5668 \u5b9a\u4e49\u4e0b\u6807 \u5b9a\u4e49\u5d4c\u5957\u7c7b\u578b \u9075\u5faa\u534f\u8bae \u4e0d\u80fd\u8986\u76d6\u5df2\u5b58\u5728\u51fd\u6570 \u4e0d\u80fd\u6dfb\u52a0\u5b58\u50a8\u5c5e\u6027\uff0c\u4e0d\u80fd\u6dfb\u52a0\u5c5e\u6027\u89c2\u5bdf\u5668 \u53ea\u80fd\u6dfb\u52a0\u4fbf\u5229\u521d\u59cb\u5316\u5668\uff0c\u4e0d\u80fd\u6dfb\u52a0\u6307\u5b9a\u521d\u59cb\u5316\u5668 \u4e0d\u80fd\u6dfb\u52a0 deinit \u534f\u8bae\u5982\u679c\u7ee7\u627f\u4e86 AnyObject \u534f\u8bae\u5c31\u53ea\u80fd\u7531 Class \u7c7b\u578b\u7ee7\u627f\u5b83 \u7ec4\u5408\u7c7b\u578b protocol antoherProtocol \u8868\u793a\u4efb\u4f55\u540c\u65f6\u9075\u5faa\u4e24\u4e2a\u534f\u8bae\u7684\u7c7b\u578b is \u3001 as \u3001 as? \uff0c\u53ef\u4ee5\u7528\u6765\u68c0\u67e5\u534f\u8bae\u9075\u5faa \u534f\u8bae\u90e8\u5206\u524d\u6709 optional \u4fee\u9970\u7684\u88ab\u9075\u5faa\u540e\u53ef\u4ee5\u4e0d\u5fc5\u5b9e\u73b0\uff0c @objc \u4fee\u9970\u7684\u534f\u8bae\u90e8\u5206\u53ea\u80fd\u88ab\u7ee7\u627f\u81eaObjective-C\u7684\u7c7b\u9075\u5faa \u534f\u8bae\u6269\u5c55\u53ef\u4ee5\u5b9a\u4e49\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u53ef\u4ee5\u4f7f\u7528 where \u5b9a\u4e49\u7ea6\u675f \u6cdb\u578b\u7c7b\u578b\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u7ea6\u675f \u534f\u8bae\u53ef\u4ee5\u5b9a\u4e49 associatedtype \u7c7b\u578b\uff0c\u4f7f\u7528\u65f6\u53ef\u4ee5 typealias associatedType = Int \uff0c\u4e5f\u53ef\u4ee5\u7ed9\u9644\u52a0\u7c7b\u578b\u52a0\u7ea6\u675f weak \u548c unowned \u4fee\u6539\u53d8\u91cf\u6216\u5c5e\u6027\u53ef\u4ee5\u7528\u6765\u89e3\u51b3\u5faa\u73af\u5f15\u7528\u95ee\u9898\uff0c weak \u4fee\u6539\u7684\u4e00\u5b9a\u662f optional \u7684\u53d8\u91cf\uff0c\u56e0\u4e3a\u5b83\u4f1a\u5728\u8fd0\u884c\u65f6\u53d8\u4e3anil unowned \u4fee\u6539\u7684\u53d8\u91cf\u4e00\u5b9a\u8981\u6709\u503c\uff0c\u5b83\u4e0d\u4f1a\u662fnil, unowned(unsafe) \u9700\u8981\u81ea\u5df1\u786e\u4fdd\u8fd0\u884c\u65f6\u5b89\u5168 \u95ed\u5305\u5f15\u8d77\u7684\u5faa\u73af\u5f15\u7528\u53ef\u4ee5\u4f7f\u7528\u6355\u83b7\u5217\u8868(capture list)\u89e3\u51b3\uff1a [weak self, unowned delegate] \u653e\u5728\u95ed\u6211\u7684\u53c2\u6570\u5217\u8868\u524d\u9762 \u91cd\u53e0\u8bbf\u95ee\u53ef\u80fd\u4f1a\u9020\u6210\u4e0d\u4e00\u81f4\u95ee\u9898\uff0c\u901a\u5e38\u4e0e inout \u548c mutating \u6709\u5173\uff0c\u9020\u6210\u8bbf\u95ee\u51b2\u7a81\uff0c\u5982\u679c\u7f16\u8bd1\u5668\u4e0d\u80fd\u4fdd\u8bc1\u5b89\u5168\u8bbf\u95ee\uff0c\u5c31\u4e0d\u4f1a\u5141\u8bb8\u8bbf\u95ee swift\u8bbf\u95ee\u63a7\u5236\u6a21\u578b\u57fa\u4e8e\u6a21\u5757\u548c\u6e90\u6587\u4ef6\uff0c\u6a21\u5757\u662f\u4ee3\u7801\u5206\u53d1\u5355\u4f4d\uff0c\u53ef\u4ee5\u662f\u6846\u67b6\u6216\u8005\u5e94\u7528\uff0c\u6bcf\u4e00\u4e2a target \u90fd\u662f\u4e00\u4e2a\u6a21\u5757 open \u548c public \u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u6a21\u5757\u7684\u4efb\u4f55\u6e90\u6587\u4ef6\u4e2d\u8bbf\u95ee\uff0c\u4e5f\u53ef\u4ee5\u5728\u88ab\u5bfc\u5165\u7684\u53e6\u4e00\u4e2a\u6a21\u5757\u7684\u6e90\u6587\u4ef6\u4e2d\u88ab\u8bbf\u95ee, open \u7684\u8303\u56f4\u6bd4 public \u66f4\u5927\u70b9\uff0c\u5305\u62ec\u4e86\u88ab\u5bfc\u5165\u7684\u53e6\u4e00\u4e2a\u6a21\u5757\u7684\u8303\u56f4 internel \u53ea\u80fd\u5728\u672c\u6a21\u5757\u4e2d\u7684\u6e90\u6587\u4ef6\u4e2d\u88ab\u8bbf\u95ee fileprivate \u53ea\u5728\u6587\u4ef6\u5185\u90e8\u53ef\u88ab\u8bbf\u95ee private \u53ea\u5728\u4e00\u4e2a\u58f0\u660e\u7684\u8303\u56f4\u5185\u90e8\u8bbf\u95ee - @testable \u4fee\u9970\u5bfc\u5165\u58f0\u660e\u65f6\uff0c\u5355\u5143\u6d4b\u8bd5\u5c31\u53ef\u4ee5\u8bbf\u95ee\u6a21\u5757\u7684\u5185\u90e8\u5b9e\u4f53\u4e86 swfit\u9ed8\u8ba4\u8fd0\u7b97\u4e0d\u5141\u8bb8\u6ea2\u51fa\uff0c + \u3001 - \u3001 * \u663e\u5f0f\u7684\u6307\u5b9a\u5141\u8bb8\u6ea2\u51fa \u81ea\u5b9a\u4e49\u8fd0\u7b97\u548c\u8fd0\u7b97\u7b26: 1 2 3 prefix|infix|postfix operator +++: precedence static prefix|infix|postfix func indirect \u53ef\u4ee5\u7528\u6765\u5b9a\u4e49\u9012\u5f52\u679a\u4e3e ~= \u662f\u679a\u4e3e\u4e2d\u8868\u8fbe\u5f0f\u5339\u914d\u65f6\u4f7f\u7528\u7684\u8fd0\u7b97\u7b26","title":"\u8bed\u8a00\u7ec6\u8282"},{"location":"iOS/swift4-notes/#_3","text":"- \u8868\u793a\u7531\u540e\u9762\u7684\u6784\u6210 | \u8868\u793a\u6216\u8005 opt \u4e0b\u6807\uff0c\u8868\u793a\u53ef\u6709\u53ef\u65e0","title":"\u8bed\u8a00\u53c2\u8003"},{"location":"iOS/workflow/","text":"Jenkins + GitHub/Gogs \u6301\u7eed\u96c6\u6210\u73af\u5883 Xcode Server Jenkins GitHub / Gogs Swift\u5ba2\u6237\u670d\u52a1\u7aef\u7edf\u4e00\u7f16\u7a0b\u73af\u5883 \u7f16\u7a0b\u8bed\u8a00 Swift \u7f16\u7a0b\u8bed\u8a00 \u670d\u52a1\u7aef\u6846\u67b6 Perfect Kitura Web\u5f00\u53d1\u6846\u67b6 Vapor \u5305\u7ba1\u7406 Homebrew CocoaPods Carthage IBM SwiftPM \u81ea\u52a8\u6d4b\u8bd5 Python Docker\u5316Web\u670d\u52a1 Docker bug\u7ba1\u7406\u7cfb\u7edf Redmine \u6587\u6863\u64b0\u5199 MkDocs \u5176\u5b83 Flask Wireshark Nmap OpenVPN Nginx","title":"\u5de5\u4f5c\u6d41"},{"location":"iOS/workflow/#jenkins-githubgogs","text":"Xcode Server Jenkins GitHub / Gogs","title":"Jenkins + GitHub/Gogs \u6301\u7eed\u96c6\u6210\u73af\u5883"},{"location":"iOS/workflow/#swift","text":"","title":"Swift\u5ba2\u6237\u670d\u52a1\u7aef\u7edf\u4e00\u7f16\u7a0b\u73af\u5883"},{"location":"iOS/workflow/#_1","text":"Swift \u7f16\u7a0b\u8bed\u8a00","title":"\u7f16\u7a0b\u8bed\u8a00"},{"location":"iOS/workflow/#_2","text":"Perfect Kitura Web\u5f00\u53d1\u6846\u67b6 Vapor","title":"\u670d\u52a1\u7aef\u6846\u67b6"},{"location":"iOS/workflow/#_3","text":"Homebrew CocoaPods Carthage IBM SwiftPM","title":"\u5305\u7ba1\u7406"},{"location":"iOS/workflow/#_4","text":"Python","title":"\u81ea\u52a8\u6d4b\u8bd5"},{"location":"iOS/workflow/#dockerweb","text":"Docker","title":"Docker\u5316Web\u670d\u52a1"},{"location":"iOS/workflow/#bug","text":"Redmine","title":"bug\u7ba1\u7406\u7cfb\u7edf"},{"location":"iOS/workflow/#_5","text":"MkDocs","title":"\u6587\u6863\u64b0\u5199"},{"location":"iOS/workflow/#_6","text":"Flask Wireshark Nmap OpenVPN Nginx","title":"\u5176\u5b83"},{"location":"iOS/swift-on-server/[4]Swift-Package-Manager/","text":"Swift \u5305\u7ba1\u7406(Swift 3.x) \u91cd\u590d\u9020\u8f6e\u5b50\u5f88\u6d6a\u8d39\u65f6\u95f4\u548c\u7cbe\u529b\u3002\u5982\u679c\u4f7f\u7528\u4e00\u4e2a\u5176\u5b83\u5f00\u53d1\u8005\u5df2\u7ecf\u5f00\u53d1\u51fa\u6765\u5e76\u4e14\u4e45\u7ecf\u8003\u9a8c\u7684\u5e93\u6765\u5b9e\u73b0\u81ea\u5df1\u5e94\u7528\u7684\u529f\u80fd\uff0c\u4f1a\u8282\u7701\u5f88\u591a\u65f6\u95f4\u3002Swift\u8fdb\u5316\u901f\u5ea6\u5f88\u5feb\uff0c\u4f1a\u6709\u5f88\u591a\u76f8\u4f3c\u7684\u5e93\u88ab\u8bbe\u8ba1\u51fa\u6765\u7528\u4e8e\u89e3\u51b3\u540c\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u4f60\u7684\u9879\u76ee\u4f7f\u7528 Swift \uff0c\u4f60\u53ef\u4ee5\u5728 GitHub \u6216\u8005 IBM Swift Package Catalog \u4e0a\u627e\u5230\u5f88\u591aSwift\u5305, \u8fd9\u4e9b\u5305\u53ef\u4ee5\u901a\u8fc7 Swift Package Manager(SwiftPM) \u65b9\u4fbf\u7684\u96c6\u6210\u8fdb\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\u3002\u65e0\u8bba\u662f\u4f60\u8981\u5b58\u6570\u636e\u5230\u6570\u636e\u5e93\u3001\u89e3\u6790JSON\u6216\u8005\u4f7f\u7528 Reactive \u7f16\u7a0b\u6a21\u5f0f\uff0c\u4f60\u90fd\u53ef\u4ee5\u901a\u8fc7 Swift \u5305\u7ba1\u7406\u6765\u8fdb\u884c\u3002 \u4f5c\u4e3a\u5f00\u53d1\u8005\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 SwiftPM \u6765\u96c6\u6210\u4e00\u4e9b\u5e93\u5230\u9879\u76ee\u4e2d\u3002\u5982\u679c\u4f60\u5df2\u7ecf\u4f7f\u7528\u8fc7\u4e00\u4e9b\u5176\u5b83\u7684\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u5982\uff1a Rust \u7684 Cargo \u3001 NodeJS \u7684 npm \u3001 Java \u7684 Maven \u6216\u8005 Ruby \u7684 Gem \uff0c\u90a3\u4e48\u4f60\u4e0d\u4f1a\u5bf9 swiftPM \u611f\u5230\u964c\u751f\uff0c\u5b83\u4eec\u7684\u529f\u80fd\u662f\u76f8\u4f3c\u7684\uff1a\u901a\u8fc7\u4e0b\u8f7d\u5339\u914d\u7248\u672c\u7684\u6e90\u5e76\u6267\u884c\u7f16\u8bd1\u3002 SwiftPM \u53ef\u4ee5\u5728\u591a\u5e73\u53f0\u4e0b\u5de5\u4f5c\uff0c\u4f60\u53ef\u80fd\u4f7f\u7528Shell\u547d\u4ee4\u6765\u6267\u884c\u7f16\u8bd1\u3001\u6d4b\u8bd5\u6216\u83b7\u53d6\u4f9d\u8d56\u9879\u76ee\uff0c\u8fd8\u53ef\u4ee5\u7528\u6765\u751f\u6210 XCode \u9879\u76ee\u3002 \u5305\u7248\u672c\u5339\u914d \u5f53 SwiftPM \u83b7\u53d6\u5305\u65f6\uff0c\u4f1a\u8fdb\u884c\u7248\u672c\u5339\u914d\u3002\u6bcf\u4e2a\u5305\u90fd\u5bf9\u5e94\u4e00\u4e2a\u4e09\u7ea7\u7248\u672c\u53f7\uff1a \u4e3b\u7248\u672c\u53f7 - \u526f\u7248\u672c\u53f7 - \u8865\u4e01\u7248\u672c\u53f7 \u3002 \u4e3b\u7248\u672c\u53f7 - \u5305\u7684API\u6709\u91cd\u8981\u53d8\u5316\u5e76\u5f71\u54cd\u4f9d\u8d56\u5b83\u7684\u5176\u5b83\u9879\u76ee\u65f6\u53d8\u66f4\u3002 \u526f\u7248\u672c\u53f7 - \u4e0d\u5f71\u54cd\u8001\u7248\u672c\u7684\u60c5\u51b5\u4e0b\u589e\u52a0\u65b0\u7279\u6027\u65f6\u53d8\u66f4\u3002 \u8865\u4e01\u7248\u672c\u53f7 - \u5728bug\u4fee\u590d\u5e76\u4e0d\u5f71\u54cd\u540e\u5411\u517c\u5bb9\u6027\u7684\u60c5\u51b5\u4e0b\u53d8\u66f4\u3002 SwiftPM \u53ea\u4f1a\u83b7\u53d6\u90a3\u4e9b\u7531\u5f00\u53d1\u8005\u6253\u4e86tag\u6807\u5fd7\u70b9\u7684\u4f9d\u8d56\u6e90\u7248\u672c\uff0c\u4f46\u4e0d\u80fd\u83b7\u53d6\u4f9d\u8d56\u6e90\u7684\u6700\u65b0\u63d0\u4ea4\uff0c\u8fd9\u6837\u53ef\u4ee5\u8ba9\u90a3\u4e9b\u4f9d\u8d56\u9879\u76ee\u4e0d\u81f3\u4e8e\u88ab\u6b63\u5728\u5f00\u53d1\u7684\u4f9d\u8d56\u6e90\u4e2d\u6240\u505a\u7684\u4e00\u4e9b\u53d8\u66f4\u5f71\u54cd\u5230\u3002\u4fdd\u8bc1\u4f9d\u8d56\u9879\u76ee\u4e00\u76f4\u662f\u4f7f\u7528\u6bd4\u8f83\u7a33\u5b9a\u7684\u4f9d\u8d56\u6e90\u3002 \u521b\u5efa\u5e94\u7528 \u4e0b\u9762\u4f7f\u7528 SwiftPM \u6765\u521b\u5efa\u65b0\u5de5\u7a0b\uff0c\u83b7\u53d6\u4e00\u4e2a\u4f9d\u8d56\u6e90\u96c6\u6210\u8fdb\u9879\u76ee\u4e2d\u5e76\u7f16\u8bd1\u3002 1 2 3 4 5 6 7 8 9 $ mkdir MyProject $ cd MyProject/ $ swift package init --type executable Creating executable package: MyProject Creating Package.swift Creating .gitignore Creating Sources/ Creating Sources/main.swift Creating Tests/ \u6240\u6709excutable\u9879\u76ee\u6216\u8005Targets\u90fd\u4f1a\u5728 Sources \u76ee\u5f55\u4e0b\u5305\u542b\u4e00\u4e2a\u540d\u4e3a main.swift \u7684main\u5165\u53e3\u6587\u4ef6\u3002 1 2 $ cat Sources/main.swift print ( Hello, world! ) .gitignore \u6587\u4ef6\u5185\u6307\u5b9a\u4e86\u4e0d\u52a0\u5165git\u7248\u672c\u63a7\u5236\u7684\u6587\u4ef6\u6216\u7c7b\u578b\u6216\u76ee\u5f55\u3002 1 2 3 4 5 $ cat .gitignore .DS_Store /.build /Packages /*.xcodeproj Package.swift \u6587\u4ef6\u662f\u9879\u76ee\u7684\u4fe1\u606f\u7ec4\u7ec7\u6587\u4ef6\uff0c\u91cc\u9762\u5305\u542b\u5305\u540d\u548c\u4e00\u4e9b\u4f9d\u8d56\u6e90\u4fe1\u606f\u3002 1 2 3 4 5 6 7 8 $ cat Package . swift // swift - tools - version : 3.1 import PackageDescription let package = Package ( name : MyProject ) \u4e0b\u9762\u6211\u4eec\u6765\u7f16\u8bd1\u8fd9\u4e2a\u65b0\u751f\u6210\u7684\u539f\u59cb\u9879\u76ee: 1 2 3 $ swift build Compile Swift Module MyProject ( 1 sources ) Linking ./.build/debug/MyProject swift build \u547d\u4ee4\u8bfb\u53d6 Package.swift \u6587\u4ef6\uff0c\u68c0\u67e5\u88ab\u83b7\u53d6\u6307\u5b9a\u7684\u4f9d\u8d56\u6e90\uff0c\u7136\u540e\u4f7f\u7528 swiftc \u7f16\u8bd1\u6bcf\u4e00\u4e2a .swift \u6587\u4ef6\uff0c\u628a\u5b83\u4eec\u8f6c\u5316\u6210\u4e3a\u6a21\u5757\u3002\u6700\u540e\u4f7f\u7528\u94fe\u63a5\u5668\u628a\u7f16\u8bd1\u7684\u5404\u4e2a .swiftmodule \u6a21\u5757\u6587\u4ef6\u94fe\u63a5\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5e76\u5b58\u653e\u5728\u76ee\u5f55 .build / debug / \u76ee\u5f55\u4e0b\u9762\u3002\u4e0b\u9762\u6211\u4eec\u8fd0\u884c\u4e00\u4e0b\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff1a 1 2 $ .build/debug/MyProject Hello, world! \u4e0a\u9762\u7684\u7f16\u8bd1\u8fc7\u7a0b\u6211\u4eec\u4f7f\u7528\u7684 Debug \u6a21\u5f0f\uff0c\u8fd9\u662f\u9ed8\u8ba4\u884c\u4e3a\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 Release \u6a21\u5f0f\u6765\u8fdb\u884c\u7f16\u8bd1\uff0c\u4f18\u5316\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6267\u884c\u6027\u80fd\uff1a 1 2 3 $ swift build --configuration release Compile Swift Module MyProject ( 1 sources ) Linking ./.build/release/MyProject Package.swift \u6587\u4ef6\u63cf\u8ff0\u4e86\u6574\u4e2a\u9879\u76ee\u4ee5\u53ca\u600e\u4e48\u6784\u5efa\u5b83\u3002\u6ce8\u610f\uff0c\u8fd9\u91cc\u5e76\u4e0d\u6709\u50cf Gradle \u4e00\u6837\u4f7f\u7528\u53e6\u4e00\u79cd\u8bed\u8a00\u6765\u63cf\u8ff0\u7f16\u8bd1\u8fc7\u7a0b\uff0c\u800c\u662f\u7edf\u4e00\u4f7f\u7528 swift \u6765\u63cf\u8ff0\u3002\u4f60\u8fd8\u53ef\u4ee5\u4f7f\u7528 if \u8bed\u53e5\u6765\u6839\u636e\u4e0d\u540c\u7684\u5e73\u53f0\u83b7\u53d6\u4e0d\u540c\u7684\u4f9d\u8d56\u6e90\uff1a 1 2 3 4 5 #if os(macOS) || os(iOS) || os(tvOS) || os(watchOS) import Darwin #elseif os(Linux) import Glibc #endif \u7cfb\u7edf\u7684\u73af\u5883\u53d8\u91cf\u4e5f\u4f1a\u5f71\u54cd\u5230\u7f16\u8bd1\u8fc7\u7a0b\uff0c\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u5728\u6267\u884c\u4ee3\u7801\u5757\u524d\u5148\u68c0\u67e5\u73b0\u6709\u7684\u73af\u5883\u53d8\u91cf\uff1a 1 2 3 import Foundation let env = ProcessInfo . processInfo . environment if env [ MY_SYSTEM_ENV ] == true { ... } \u7ed9\u9879\u76ee\u5bfc\u5165\u5e93 \u4e00\u4e9b Swift \u9879\u76ee\u7684\u6837\u677f\u5efa\u7acb\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5f80\u91cc\u9762\u6dfb\u52a0\u4e00\u4e9b\u65b0\u7684\u4f9d\u8d56\u4e86\u3002\u4f8b\u5982\u6dfb\u52a0\u4e00\u4e2a\u8fd0\u7b97\u7b26( | )\u652f\u6301\uff0c\u8fd9\u53ef\u4ee5\u5728 IBM Swift Package Catalog \u4e0a\u53bb\u67e5\u627e\u3002 \u7f16\u8f91\u540e\u7684 Package.swift \u6587\u4ef6\u5185\u5bb9\u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 // swift - tools - version : 3.1 #if os(macOS) || os(iOS) || os(tvOS) || os(watchOS) import Darwin #elseif os(Linux) import Glibc #endif import PackageDescription let package = Package ( name : MyProject , dependencies : [ . Package ( url : https://github.com/IBM-Swift/Pipes , majorVersion : 0 , minor : 1 ), ] ) import Foundation let env = ProcessInfo . processInfo . environment if env [ MY_SYSTEM_ENV ] == true { } \u7f16\u8bd1\u540e\uff1a 1 2 3 4 5 6 7 $ swift build Fetching https://github.com/IBM-Swift/Pipes Cloning https://github.com/IBM-Swift/Pipes Resolving https://github.com/IBM-Swift/Pipes at 0 .1.2 Compile Swift Module Pipes ( 1 sources ) Compile Swift Module MyProject ( 1 sources ) Linking ./.build/x86_64-apple-macosx10.10/debug/MyProject \u53ef\u4ee5\u770b\u5230\uff0c\u4f9d\u8d56\u6e90\u5df2\u7ecf\u88ab\u4e0b\u8f7d\u5e76\u80fd\u6b63\u5e38\u53c2\u52a0\u7f16\u8bd1\u8fc7\u7a0b\u3002 Package.swift \u7684\u4f9d\u8d56\u5b9a\u4e49\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55Git\u4ed3\u5e93\uff0c\u53ef\u4ee5\u662f\u672c\u5730\u4ed3\u5e93\u3001\u79c1\u6709\u4ed3\u5e93\u6216\u8005GitHub\u4e0a\u6258\u7ba1\u7684\u4ed3\u5e93\u3002\u53ef\u4ee5\u4f7f\u7528 file \u3001 https \u6216\u8005 ssh \u534f\u8bae\u6765\u6307\u5b9a\u4ed3\u5e93\u94fe\u63a5\u3002 \u7248\u672c\u53f7\u7684\u6307\u5b9a\u4e5f\u6709\u591a\u79cd\u65b9\u5f0f\u53ef\u9009\uff0c\u6574\u7406\u5982\u4e0b\uff1a \u6307\u5b9a\u7248\u672c\u65b9\u5f0f \u4ee3\u7801 \u7248\u672c\u8303\u56f4 Version(0, 1, 0) .. Version(0, 2, 0) \u53ea\u6307\u5b9a\u4e3b\u7248\u672c\u53f7 majorVersion: 0 \u4e3b\u526f\u7248\u672c\u53f7 majorVersion: 0, minor: 1 \u6307\u5b9a\u4e09\u7ea7\u7248\u672c\u53f7 Version(0, 1, 0) \u7248\u672c\u5b57\u7b26\u4e32 0.1.0 \u5728\u9879\u76ee\u5f00\u53d1\u4e2d\uff0c\u5efa\u8bae\u9501\u5b9a\u4f9d\u8d56\u6e90\u7684\u4e3b\u526f\u7248\u672c\u53f7\uff0c\u867d\u7136\uff0c\u7406\u8bba\u4e0a\u8bb2\uff0c\u526f\u7248\u672c\u53f7\u4e0d\u540c\uff0c\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5230\u7f16\u8bd1\uff0c\u4f46\u4e3a\u4e86\u786e\u4fdd\u7f16\u8bd1\uff0c\u8fd8\u662f\u4e0d\u8981\u53ea\u9501\u5b9a\u4e3b\u7248\u672c\u53f7\u3002 \u65e2\u7136\u5df2\u7ecf\u6210\u529f\u6dfb\u52a0\u4e86\u4f9d\u8d56\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5199\u4ee3\u7801\u4f7f\u7528\u5b83\u4e86\u3002\u4fee\u6539 main.swift : 1 2 3 4 5 6 7 import Pipes func sayHello ( str : String ) - String { print ( Hello, \\(str) ) return ( Hello, \\(str) ) } Alice | sayHello 1 2 3 $ swift build $ .build/debug/MyProject Hello, Alice \u5173\u4e8e\u5305\u7ba1\u7406\u7684\u5176\u5b83\u6709\u7528\u547d\u4ee4: \u547d\u4ee4 \u4f5c\u7528 swift package fetch \u53ea\u83b7\u53d6\u5305\u4f9d\u8d56 swift package update \u53ea\u66f4\u65b0\u5305\u4f9d\u8d56 \u7528XCode\u5f00\u53d1 \u5f53\u7136\u4f60\u53ef\u4ee5\u4f7f\u7528\u559c\u6b22\u7684\u7f16\u8f91\u5668\u5728Shell\u4e0b\u8fdb\u884cSwift\u5f00\u53d1\uff0c\u4f46\u5728macOS\u4e0a\uff0c\u8fd8\u662f\u4f7f\u7528XCode\u8fdb\u884c\u5f00\u53d1\u6bd4\u8f83\u8212\u670d\u3002 \u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u751f\u6210XCode\u5de5\u7a0b\uff0c\u7136\u540e\u4f7f\u7528XCode\u6253\u5f00\uff1a 1 2 3 $ swift package generate-xcodeproj generated: ./MyProject.xcodeproj $ open -a Xcode MyProject.xcodeproj/ \u6ce8\u610f \u4f7f\u7528\u547d\u4ee4\u751f\u6210\u7684xcode\u5de5\u7a0b\u6587\u4ef6\uff0c\u5728\u4e0b\u6b21\u91cd\u65b0\u751f\u6210\u65f6\uff0c\u6240\u6709\u5bf9\u5de5\u7a0b\u6587\u4ef6\u4f5c\u8fc7\u7684\u624b\u52a8\u4fee\u6539\u90fd\u4e0d\u4f1a\u88ab\u4fdd\u7559\u3002 \u5728XCode\u4e2d\u8fd0\u884c\u524d\uff0c\u8981\u4fee\u6539\u4e00\u4e0b\u8fd0\u884c\u65b9\u6848\uff1a \u521b\u5efa\u81ea\u5df1\u7684\u5e93 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 $ mkdir Pipes $ cd Pipes/ $ swift package init --type library Creating library package: Pipes Creating Package.swift Creating README.md Creating .gitignore Creating Sources/ Creating Sources/Pipes/Pipes.swift Creating Tests/ Creating Tests/LinuxMain.swift Creating Tests/PipesTests/ Creating Tests/PipesTests/PipesTests.swift $ tree . . \u251c\u2500\u2500 Package.swift \u251c\u2500\u2500 README.md \u251c\u2500\u2500 Sources \u2502 \u2514\u2500\u2500 Pipes \u2502 \u2514\u2500\u2500 Pipes.swift \u2514\u2500\u2500 Tests \u251c\u2500\u2500 LinuxMain.swift \u2514\u2500\u2500 PipesTests \u2514\u2500\u2500 PipesTests.swift 4 directories, 5 files \u8fd9\u6b21\uff0c\u5b83\u6ca1\u6709\u751f\u6210 main.swift \u6587\u4ef6\uff0c\u800c\u662f\u751f\u5728\u4e86 Pipes.swift \u6587\u4ef6\u4f5c\u4e3a\u6a21\u5757\u3002\u8fd9\u6b21\u751f\u6210\u7684 Tests/ \u76ee\u5f55\u4e0b\u9762\u6709\u4e00\u4e9b\u57fa\u672c\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002 \u4fee\u6539 Sources/Pipes/Pipes.swift \u6587\u4ef6\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 precedencegroup LeftFunctionalApply { associativity: left higherThan: AssignmentPrecedence lowerThan: TernaryPrecedence } // pipe val into monadic fn infix operator | : LeftFunctionalApply // pipe val into monadic fn @discardableResult public func | A, B ( x: A, f: (A) throws - B ) rethrows - B { return try f(x) } \u6ca1\u6709\u7ecf\u8fc7\u6d4b\u8bd5\u7684\u5e93\u662f\u5408\u683c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u6dfb\u52a0\u4e00\u4e9b\u6d4b\u8bd5\u4ee3\u7801\uff0c\u4fee\u6539\u6587\u4ef6 Tests/PipesTests/PipesTests.swift : 1 2 3 4 5 6 7 8 9 10 11 12 13 import XCTest @testable import Pipes func double ( a : Int ) - Int { return 2 * a } class PipesTests : XCTestCase { func testDouble () { XCTAssertEqual ( 6 | double , 12 ) } static var allTests = [ ( testDouble , testDouble ), ] } \u8fd9\u91cc\u7684 allTests \u53d8\u66f4\u5728XCode\u4e2d\u6267\u884c\u6d4b\u8bd5\u65f6\u662f\u4e0d\u9700\u8981\u7684\uff0c\u4f46\u4f7f\u7528\u547d\u4ee4\u884c\u6267\u884c\u6d4b\u8bd5\u65f6\u662f\u5fc5\u9700\u7684\u3002 \u6211\u4eec\u4f7f\u7528\u547d\u4ee4\u884c\u6765\u6267\u884c\u6d4b\u8bd5: 1 2 3 4 5 6 7 8 9 10 11 12 13 $ swift build $ swift test Test Suite All tests started at 2017 -09-07 15 :46:37.139 Test Suite PipesPackageTests.xctest started at 2017 -09-07 15 :46:37.139 Test Suite PipesTests started at 2017 -09-07 15 :46:37.139 Test Case -[PipesTests.PipesTests testDouble] started. Test Case -[PipesTests.PipesTests testDouble] passed ( 0 .086 seconds ) . Test Suite PipesTests passed at 2017 -09-07 15 :46:37.226. Executed 1 test, with 0 failures ( 0 unexpected ) in 0 .086 ( 0 .087 ) seconds Test Suite PipesPackageTests.xctest passed at 2017 -09-07 15 :46:37.226. Executed 1 test, with 0 failures ( 0 unexpected ) in 0 .086 ( 0 .087 ) seconds Test Suite All tests passed at 2017 -09-07 15 :46:37.226. Executed 1 test, with 0 failures ( 0 unexpected ) in 0 .086 ( 0 .087 ) seconds \u8fd9\u53ea\u662f\u4e00\u4e2a\u4f8b\u5b50\uff0c\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u81ea\u5df1\u7684\u5e93\uff0c\u4f46\u662f\u6211\u4eec\u53ea\u662f\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u7535\u8111\u4e0a\u4f7f\u7528\uff0c\u5982\u4f55\u5206\u4eab\u7ed9\u5176\u5b83\u4eba\u7528\u5462\uff1f \u5171\u4eab\u4f60\u7684\u5e93\u7ed9swift\u793e\u533a \u73b0\u5728\u4f60\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u5e93\uff0c\u5e76\u505a\u4e86\u5fc5\u8981\u7684\u6d4b\u8bd5\uff0c\u4e0b\u4e00\u6b65\u5c31\u662f\u521b\u5efa\u4e00\u4e2agit\u4ed3\u5e93\u5e76\u628a\u5b83\u6258\u7ba1\u3002\u53ef\u4ee5\u4f7f\u7528 GitHub \u7684\u670d\u52a1 \u5148\u521d\u59cb\u5316\u672c\u5730\u4ed3\u5e93 1 2 $ git init Initialized empty Git repository in /Users/JokerAtBaoFeng/Desktop/playgound/Pipes/.git/ \u5e76\u521b\u5efa\u9996\u6b21\u63d0\u4ea4\uff1a 1 2 3 4 5 6 7 8 9 10 $ git add . $ git commit -m Init release [ master ( root-commit ) fc2df1d ] Init release 6 files changed, 68 insertions ( + ) create mode 100644 .gitignore create mode 100644 Package.swift create mode 100644 README.md create mode 100644 Sources/Pipes/Pipes.swift create mode 100644 Tests/LinuxMain.swift create mode 100644 Tests/PipesTests/PipesTests.swift \u6dfb\u52a0\u672c\u5730\u4ed3\u5e93\u548c\u8fdc\u7a0b\u4ed3\u5e93\u7684\u8054\u7cfb\uff0c\u8fd9\u4e00\u6b65\u9700\u8981\u4f60\u81ea\u5df1\u5148\u5728GitHub\u4e0a\u7533\u8bf7\u5e10\u53f7\u5e76\u521b\u5efa\u4e00\u4e2a\u7a7a\u4ed3\u5e93\uff1a 1 $ git remote add origin https://github.com/ your-account /Pipes.git \u4e0b\u4e00\u6b65\u5c31\u6253\u4e00\u4e2atag\u7248\u672c\uff0c\u8ba9\u5176\u5b83\u4eba\u4f7f\u7528\u7248\u672c\u53f7\u5728\u5b83\u4eec\u9879\u76ee\u7684 Package.swift \u4e2d\u6307\u5b9a\u4f9d\u8d56\u6e90\uff1a 1 $ git tag 0 .1.0 \u6700\u540e\u628a\u672c\u5730\u7684\u4ed3\u5e93\u63a8\u5230\u8fdc\u7a0b\u6258\u7ba1\u7684\u4ed3\u5e93\u4e2d\u4f9b\u522b\u4eba\u4f7f\u7528\uff1a 1 $ git push -u origin master --tags \u5206\u4eab\u81ea\u5df1\u7684\u5e93\u65f6\uff0c\u8bb0\u5f97\u5728\u5e93\u4e2d\u5305\u542b\u4e00\u4e9b\u8bb8\u53ef\u8bc1\u6587\u4ef6\uff0c\u6e90\u6587\u4ef6\u5934\u90e8\u53ef\u4ee5\u5305\u542b\u4e00\u4e9b\u7248\u6743\u58f0\u660e\uff0c\u8fd8\u8981\u5305\u542b\u4e00\u4e2a README.md \u6587\u4ef6\uff0c\u7528\u6765\u8bf4\u660e\u5e93\u7684\u4f7f\u7528\u65b9\u5f0f\u548c\u6ce8\u610f\u4e8b\u9879\u3002 \u6ce8\u610f \u5f53\u4e00\u4e2a\u9879\u76ee\u4e2d\u6dfb\u52a0\u4e86\u540c\u4e00\u4e2a\u4f9d\u8d56\u6e90\u7684\u4e0d\u540c\u7248\u672c\u65f6\uff0c\u4f1a\u9020\u6210\u4f9d\u8d56\u51b2\u7a81\u5e76\u4f7f\u94fe\u63a5\u5668\u5931\u8d25\u3002 \u751f\u6210\u66f4\u52a0\u590d\u6742\u7684\u9879\u76ee \u590d\u6742\u7684 Swift \u9879\u76ee\u901a\u5e38\u5305\u542b\u591a\u4e2a\u6a21\u5757\uff0c\u6bcf\u4e2a\u6a21\u5757\u90fd\u53ef\u4ee5\u5305\u542b\u5728 Sources \u76ee\u5f55\u4e0b\u7684\u4e0d\u540c\u5b50\u76ee\u5f55\u4e2d\uff0c\u7531\u4e8e\u6a21\u5757\u5185\u90e8\u8fd8\u53ef\u4ee5\u4f9d\u8d56\u5176\u5b83\u7684\u6a21\u5757\uff0c\u7f16\u8bd1\u8fc7\u7a0b\u5fc5\u987b\u6309\u7167\u4e00\u5b9a\u7684\u903b\u8f91\u987a\u5e8f\u8fdb\u884c\u3002\u5982\u679cA\u4f9d\u8d56B\uff0c\u90a3\u4e48B\u5c31\u9700\u8981\u5148\u88ab\u7f16\u8bd1\uff0c SwiftPM \u4f1a\u8ba1\u7b97\u8fd9\u4e9b\u7f16\u8bd1\u987a\u5e8f\uff0c\u4f46\u4f9d\u8d56\u5173\u7cfb\u9700\u8981\u6211\u4eec\u81ea\u5df1\u6307\u5b9a\u3002 \u8fd9\u4e2a\u8fc7\u7a0b\u548cLinux\u4e0a\u7684 Makefile \u4e2d\u7684\u6307\u5b9a\u4f9d\u8d56\u7684\u65b9\u5f0f\u6709\u70b9\u7c7b\u4f3c\uff0c\u5047\u8bbe\u4f60\u7684 Sources \u76ee\u5f55\u4e0b\u5305\u542b\u4e0b\u9762\u7684\u6a21\u5757\uff1a \u6a21\u5757 \u4f9d\u8d56 Sources/A/main.swift \u4f9d\u8d56B Sources/B/WebController.swift \u4f9d\u8d56C Sources/C/DatabaseConnector.swift \u8fd9\u79cd\u5173\u7cfb\u5728 Package.swift \u6587\u4ef6\u4e2d\u8868\u793a\u4e3a: 1 2 3 4 5 6 7 8 9 10 import PackageDescription let package = Package ( name : MyWebApp , targets : [ Target ( name : A , dependencies : [ . Target ( name : B )]), Target ( name : B , dependencies : [ . Target ( name : C )]), Target ( name : C ) ] ) \u6709\u4e86\u8fd9\u4e9b\u4f9d\u8d56\u63cf\u8ff0\u4fe1\u606f\uff0c SwiftPM \u5c31\u4f1a\u786e\u4fdd\u6a21\u5757C\u88ab\u6700\u5148\u7f16\u8bd1\uff0c\u7136\u540e\u7f16\u8bd1B\uff0c\u6700\u540e\u7f16\u8bd1A\u3002 \u73b0\u5728\u6211\u4eec\u4e00\u4e2a\u9879\u76ee\u91cc\u5305\u542b\u591a\u4e2a\u6a21\u5757\uff0c\u5982\u679c\u8fd9\u4e9b\u6a21\u5757\u53ef\u4ee5\u88ab\u5176\u5b83\u4eba\u590d\u7528\uff0c\u5c31\u628a\u5b83\u4eec\u63d0\u51fa\u6765\u5355\u72ec\u5efa\u4ed3\u5e93\u3002 \u4f7f\u7528C\u52a8\u6001\u5e93 Swift \u5305\u53ef\u4ee5\u4f7f\u7528\u73b0\u5b58\u7684C\u8bed\u8a00\u5e93\u3002\u4f7f\u7528C\u5e93\u524d\u9700\u8981\u521b\u5efa system module \u5305\u6765\u7ed1\u5b9aC\u8bed\u8a00\u52a8\u6001\u5e93\u3002 1 2 3 4 5 6 7 8 $ mkdir cdylib $ cd cdylib $ swift package init --type system-module Creating system-module package: cdylib Creating Package.swift Creating README.md Creating .gitignore Creating module.modulemap \u5728\u751f\u6210\u7684 module . modulemap \u6587\u4ef6\u4e2d\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a\u8981\u4f7f\u7528\u7684C\u8bed\u8a00\u5e93\u7684\u5934\u6587\u4ef6\u548c\u52a8\u6001\u5e93\u6587\u4ef6\u8def\u5f84\u3002\u5934\u6587\u4ef6\u8def\u5f84\u5fc5\u987b\u662f\u7edd\u5bf9\u8def\u5f84\u3002\u94fe\u63a5\u53c2\u6570\u662f\u52a8\u6001\u5e93\u7684\u540d\u5b57\u3002 \u4f8b\u5982\uff1a 1 2 3 4 5 module CSQLite [ system ] { header /usr/local/opt/sqlite/include/sqlite3.h link sqlite3 export * } \u5f53\u628a\u8fd9\u4e2a\u7cfb\u7edf\u6a21\u5757\u5305\u542b\u8fdb\u9879\u76ee\u4e2d\u540e\uff0c Swift \u4f1a\u81ea\u5df1\u8bfb\u53d6\u6307\u5b9a\u7684\u5934\u6587\u4ef6\uff0c\u5e76\u81ea\u52a8\u751f\u6210\u5fc5\u8981\u7684\u4ee3\u7801\uff0c\u7528\u6765\u5728 Swift \u4e2d\u8c03\u7528C\u8bed\u8a00\u4ee3\u7801\u3002 SwiftPM \u4e0d\u4f1a\u81ea\u52a8\u5b89\u88c5C\u8bed\u8a00\u5e93\uff0c\u56e0\u4e3a\u8fd9\u79cd\u64cd\u4f5c\u9700\u8981\u8d85\u7ea7\u7528\u6237\u6743\u9650\u3002\u5f53\u524d SwiftPM \u4ec5\u652f\u6301 Homebrew \u548c APT \u8fd9\u4e24\u7c7b\u5305\u7ba1\u7406\u6307\u5b9a\u3002\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 let package = Package { name: CSQlite , providers: [ .Brew( sqlite ), .Apt( libsqlite3.dev ) ] }","title":"\u7b2c\u56db\u7ae0Swfit\u5305\u7ba1\u7406\u5668"},{"location":"iOS/swift-on-server/[4]Swift-Package-Manager/#swift-swift-3x","text":"\u91cd\u590d\u9020\u8f6e\u5b50\u5f88\u6d6a\u8d39\u65f6\u95f4\u548c\u7cbe\u529b\u3002\u5982\u679c\u4f7f\u7528\u4e00\u4e2a\u5176\u5b83\u5f00\u53d1\u8005\u5df2\u7ecf\u5f00\u53d1\u51fa\u6765\u5e76\u4e14\u4e45\u7ecf\u8003\u9a8c\u7684\u5e93\u6765\u5b9e\u73b0\u81ea\u5df1\u5e94\u7528\u7684\u529f\u80fd\uff0c\u4f1a\u8282\u7701\u5f88\u591a\u65f6\u95f4\u3002Swift\u8fdb\u5316\u901f\u5ea6\u5f88\u5feb\uff0c\u4f1a\u6709\u5f88\u591a\u76f8\u4f3c\u7684\u5e93\u88ab\u8bbe\u8ba1\u51fa\u6765\u7528\u4e8e\u89e3\u51b3\u540c\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u4f60\u7684\u9879\u76ee\u4f7f\u7528 Swift \uff0c\u4f60\u53ef\u4ee5\u5728 GitHub \u6216\u8005 IBM Swift Package Catalog \u4e0a\u627e\u5230\u5f88\u591aSwift\u5305, \u8fd9\u4e9b\u5305\u53ef\u4ee5\u901a\u8fc7 Swift Package Manager(SwiftPM) \u65b9\u4fbf\u7684\u96c6\u6210\u8fdb\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\u3002\u65e0\u8bba\u662f\u4f60\u8981\u5b58\u6570\u636e\u5230\u6570\u636e\u5e93\u3001\u89e3\u6790JSON\u6216\u8005\u4f7f\u7528 Reactive \u7f16\u7a0b\u6a21\u5f0f\uff0c\u4f60\u90fd\u53ef\u4ee5\u901a\u8fc7 Swift \u5305\u7ba1\u7406\u6765\u8fdb\u884c\u3002 \u4f5c\u4e3a\u5f00\u53d1\u8005\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 SwiftPM \u6765\u96c6\u6210\u4e00\u4e9b\u5e93\u5230\u9879\u76ee\u4e2d\u3002\u5982\u679c\u4f60\u5df2\u7ecf\u4f7f\u7528\u8fc7\u4e00\u4e9b\u5176\u5b83\u7684\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u5982\uff1a Rust \u7684 Cargo \u3001 NodeJS \u7684 npm \u3001 Java \u7684 Maven \u6216\u8005 Ruby \u7684 Gem \uff0c\u90a3\u4e48\u4f60\u4e0d\u4f1a\u5bf9 swiftPM \u611f\u5230\u964c\u751f\uff0c\u5b83\u4eec\u7684\u529f\u80fd\u662f\u76f8\u4f3c\u7684\uff1a\u901a\u8fc7\u4e0b\u8f7d\u5339\u914d\u7248\u672c\u7684\u6e90\u5e76\u6267\u884c\u7f16\u8bd1\u3002 SwiftPM \u53ef\u4ee5\u5728\u591a\u5e73\u53f0\u4e0b\u5de5\u4f5c\uff0c\u4f60\u53ef\u80fd\u4f7f\u7528Shell\u547d\u4ee4\u6765\u6267\u884c\u7f16\u8bd1\u3001\u6d4b\u8bd5\u6216\u83b7\u53d6\u4f9d\u8d56\u9879\u76ee\uff0c\u8fd8\u53ef\u4ee5\u7528\u6765\u751f\u6210 XCode \u9879\u76ee\u3002","title":"Swift \u5305\u7ba1\u7406(Swift 3.x)"},{"location":"iOS/swift-on-server/[4]Swift-Package-Manager/#_1","text":"\u5f53 SwiftPM \u83b7\u53d6\u5305\u65f6\uff0c\u4f1a\u8fdb\u884c\u7248\u672c\u5339\u914d\u3002\u6bcf\u4e2a\u5305\u90fd\u5bf9\u5e94\u4e00\u4e2a\u4e09\u7ea7\u7248\u672c\u53f7\uff1a \u4e3b\u7248\u672c\u53f7 - \u526f\u7248\u672c\u53f7 - \u8865\u4e01\u7248\u672c\u53f7 \u3002 \u4e3b\u7248\u672c\u53f7 - \u5305\u7684API\u6709\u91cd\u8981\u53d8\u5316\u5e76\u5f71\u54cd\u4f9d\u8d56\u5b83\u7684\u5176\u5b83\u9879\u76ee\u65f6\u53d8\u66f4\u3002 \u526f\u7248\u672c\u53f7 - \u4e0d\u5f71\u54cd\u8001\u7248\u672c\u7684\u60c5\u51b5\u4e0b\u589e\u52a0\u65b0\u7279\u6027\u65f6\u53d8\u66f4\u3002 \u8865\u4e01\u7248\u672c\u53f7 - \u5728bug\u4fee\u590d\u5e76\u4e0d\u5f71\u54cd\u540e\u5411\u517c\u5bb9\u6027\u7684\u60c5\u51b5\u4e0b\u53d8\u66f4\u3002 SwiftPM \u53ea\u4f1a\u83b7\u53d6\u90a3\u4e9b\u7531\u5f00\u53d1\u8005\u6253\u4e86tag\u6807\u5fd7\u70b9\u7684\u4f9d\u8d56\u6e90\u7248\u672c\uff0c\u4f46\u4e0d\u80fd\u83b7\u53d6\u4f9d\u8d56\u6e90\u7684\u6700\u65b0\u63d0\u4ea4\uff0c\u8fd9\u6837\u53ef\u4ee5\u8ba9\u90a3\u4e9b\u4f9d\u8d56\u9879\u76ee\u4e0d\u81f3\u4e8e\u88ab\u6b63\u5728\u5f00\u53d1\u7684\u4f9d\u8d56\u6e90\u4e2d\u6240\u505a\u7684\u4e00\u4e9b\u53d8\u66f4\u5f71\u54cd\u5230\u3002\u4fdd\u8bc1\u4f9d\u8d56\u9879\u76ee\u4e00\u76f4\u662f\u4f7f\u7528\u6bd4\u8f83\u7a33\u5b9a\u7684\u4f9d\u8d56\u6e90\u3002","title":"\u5305\u7248\u672c\u5339\u914d"},{"location":"iOS/swift-on-server/[4]Swift-Package-Manager/#_2","text":"\u4e0b\u9762\u4f7f\u7528 SwiftPM \u6765\u521b\u5efa\u65b0\u5de5\u7a0b\uff0c\u83b7\u53d6\u4e00\u4e2a\u4f9d\u8d56\u6e90\u96c6\u6210\u8fdb\u9879\u76ee\u4e2d\u5e76\u7f16\u8bd1\u3002 1 2 3 4 5 6 7 8 9 $ mkdir MyProject $ cd MyProject/ $ swift package init --type executable Creating executable package: MyProject Creating Package.swift Creating .gitignore Creating Sources/ Creating Sources/main.swift Creating Tests/ \u6240\u6709excutable\u9879\u76ee\u6216\u8005Targets\u90fd\u4f1a\u5728 Sources \u76ee\u5f55\u4e0b\u5305\u542b\u4e00\u4e2a\u540d\u4e3a main.swift \u7684main\u5165\u53e3\u6587\u4ef6\u3002 1 2 $ cat Sources/main.swift print ( Hello, world! ) .gitignore \u6587\u4ef6\u5185\u6307\u5b9a\u4e86\u4e0d\u52a0\u5165git\u7248\u672c\u63a7\u5236\u7684\u6587\u4ef6\u6216\u7c7b\u578b\u6216\u76ee\u5f55\u3002 1 2 3 4 5 $ cat .gitignore .DS_Store /.build /Packages /*.xcodeproj Package.swift \u6587\u4ef6\u662f\u9879\u76ee\u7684\u4fe1\u606f\u7ec4\u7ec7\u6587\u4ef6\uff0c\u91cc\u9762\u5305\u542b\u5305\u540d\u548c\u4e00\u4e9b\u4f9d\u8d56\u6e90\u4fe1\u606f\u3002 1 2 3 4 5 6 7 8 $ cat Package . swift // swift - tools - version : 3.1 import PackageDescription let package = Package ( name : MyProject ) \u4e0b\u9762\u6211\u4eec\u6765\u7f16\u8bd1\u8fd9\u4e2a\u65b0\u751f\u6210\u7684\u539f\u59cb\u9879\u76ee: 1 2 3 $ swift build Compile Swift Module MyProject ( 1 sources ) Linking ./.build/debug/MyProject swift build \u547d\u4ee4\u8bfb\u53d6 Package.swift \u6587\u4ef6\uff0c\u68c0\u67e5\u88ab\u83b7\u53d6\u6307\u5b9a\u7684\u4f9d\u8d56\u6e90\uff0c\u7136\u540e\u4f7f\u7528 swiftc \u7f16\u8bd1\u6bcf\u4e00\u4e2a .swift \u6587\u4ef6\uff0c\u628a\u5b83\u4eec\u8f6c\u5316\u6210\u4e3a\u6a21\u5757\u3002\u6700\u540e\u4f7f\u7528\u94fe\u63a5\u5668\u628a\u7f16\u8bd1\u7684\u5404\u4e2a .swiftmodule \u6a21\u5757\u6587\u4ef6\u94fe\u63a5\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5e76\u5b58\u653e\u5728\u76ee\u5f55 .build / debug / \u76ee\u5f55\u4e0b\u9762\u3002\u4e0b\u9762\u6211\u4eec\u8fd0\u884c\u4e00\u4e0b\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff1a 1 2 $ .build/debug/MyProject Hello, world! \u4e0a\u9762\u7684\u7f16\u8bd1\u8fc7\u7a0b\u6211\u4eec\u4f7f\u7528\u7684 Debug \u6a21\u5f0f\uff0c\u8fd9\u662f\u9ed8\u8ba4\u884c\u4e3a\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 Release \u6a21\u5f0f\u6765\u8fdb\u884c\u7f16\u8bd1\uff0c\u4f18\u5316\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6267\u884c\u6027\u80fd\uff1a 1 2 3 $ swift build --configuration release Compile Swift Module MyProject ( 1 sources ) Linking ./.build/release/MyProject Package.swift \u6587\u4ef6\u63cf\u8ff0\u4e86\u6574\u4e2a\u9879\u76ee\u4ee5\u53ca\u600e\u4e48\u6784\u5efa\u5b83\u3002\u6ce8\u610f\uff0c\u8fd9\u91cc\u5e76\u4e0d\u6709\u50cf Gradle \u4e00\u6837\u4f7f\u7528\u53e6\u4e00\u79cd\u8bed\u8a00\u6765\u63cf\u8ff0\u7f16\u8bd1\u8fc7\u7a0b\uff0c\u800c\u662f\u7edf\u4e00\u4f7f\u7528 swift \u6765\u63cf\u8ff0\u3002\u4f60\u8fd8\u53ef\u4ee5\u4f7f\u7528 if \u8bed\u53e5\u6765\u6839\u636e\u4e0d\u540c\u7684\u5e73\u53f0\u83b7\u53d6\u4e0d\u540c\u7684\u4f9d\u8d56\u6e90\uff1a 1 2 3 4 5 #if os(macOS) || os(iOS) || os(tvOS) || os(watchOS) import Darwin #elseif os(Linux) import Glibc #endif \u7cfb\u7edf\u7684\u73af\u5883\u53d8\u91cf\u4e5f\u4f1a\u5f71\u54cd\u5230\u7f16\u8bd1\u8fc7\u7a0b\uff0c\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u5728\u6267\u884c\u4ee3\u7801\u5757\u524d\u5148\u68c0\u67e5\u73b0\u6709\u7684\u73af\u5883\u53d8\u91cf\uff1a 1 2 3 import Foundation let env = ProcessInfo . processInfo . environment if env [ MY_SYSTEM_ENV ] == true { ... }","title":"\u521b\u5efa\u5e94\u7528"},{"location":"iOS/swift-on-server/[4]Swift-Package-Manager/#_3","text":"\u4e00\u4e9b Swift \u9879\u76ee\u7684\u6837\u677f\u5efa\u7acb\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5f80\u91cc\u9762\u6dfb\u52a0\u4e00\u4e9b\u65b0\u7684\u4f9d\u8d56\u4e86\u3002\u4f8b\u5982\u6dfb\u52a0\u4e00\u4e2a\u8fd0\u7b97\u7b26( | )\u652f\u6301\uff0c\u8fd9\u53ef\u4ee5\u5728 IBM Swift Package Catalog \u4e0a\u53bb\u67e5\u627e\u3002 \u7f16\u8f91\u540e\u7684 Package.swift \u6587\u4ef6\u5185\u5bb9\u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 // swift - tools - version : 3.1 #if os(macOS) || os(iOS) || os(tvOS) || os(watchOS) import Darwin #elseif os(Linux) import Glibc #endif import PackageDescription let package = Package ( name : MyProject , dependencies : [ . Package ( url : https://github.com/IBM-Swift/Pipes , majorVersion : 0 , minor : 1 ), ] ) import Foundation let env = ProcessInfo . processInfo . environment if env [ MY_SYSTEM_ENV ] == true { } \u7f16\u8bd1\u540e\uff1a 1 2 3 4 5 6 7 $ swift build Fetching https://github.com/IBM-Swift/Pipes Cloning https://github.com/IBM-Swift/Pipes Resolving https://github.com/IBM-Swift/Pipes at 0 .1.2 Compile Swift Module Pipes ( 1 sources ) Compile Swift Module MyProject ( 1 sources ) Linking ./.build/x86_64-apple-macosx10.10/debug/MyProject \u53ef\u4ee5\u770b\u5230\uff0c\u4f9d\u8d56\u6e90\u5df2\u7ecf\u88ab\u4e0b\u8f7d\u5e76\u80fd\u6b63\u5e38\u53c2\u52a0\u7f16\u8bd1\u8fc7\u7a0b\u3002 Package.swift \u7684\u4f9d\u8d56\u5b9a\u4e49\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55Git\u4ed3\u5e93\uff0c\u53ef\u4ee5\u662f\u672c\u5730\u4ed3\u5e93\u3001\u79c1\u6709\u4ed3\u5e93\u6216\u8005GitHub\u4e0a\u6258\u7ba1\u7684\u4ed3\u5e93\u3002\u53ef\u4ee5\u4f7f\u7528 file \u3001 https \u6216\u8005 ssh \u534f\u8bae\u6765\u6307\u5b9a\u4ed3\u5e93\u94fe\u63a5\u3002 \u7248\u672c\u53f7\u7684\u6307\u5b9a\u4e5f\u6709\u591a\u79cd\u65b9\u5f0f\u53ef\u9009\uff0c\u6574\u7406\u5982\u4e0b\uff1a \u6307\u5b9a\u7248\u672c\u65b9\u5f0f \u4ee3\u7801 \u7248\u672c\u8303\u56f4 Version(0, 1, 0) .. Version(0, 2, 0) \u53ea\u6307\u5b9a\u4e3b\u7248\u672c\u53f7 majorVersion: 0 \u4e3b\u526f\u7248\u672c\u53f7 majorVersion: 0, minor: 1 \u6307\u5b9a\u4e09\u7ea7\u7248\u672c\u53f7 Version(0, 1, 0) \u7248\u672c\u5b57\u7b26\u4e32 0.1.0 \u5728\u9879\u76ee\u5f00\u53d1\u4e2d\uff0c\u5efa\u8bae\u9501\u5b9a\u4f9d\u8d56\u6e90\u7684\u4e3b\u526f\u7248\u672c\u53f7\uff0c\u867d\u7136\uff0c\u7406\u8bba\u4e0a\u8bb2\uff0c\u526f\u7248\u672c\u53f7\u4e0d\u540c\uff0c\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5230\u7f16\u8bd1\uff0c\u4f46\u4e3a\u4e86\u786e\u4fdd\u7f16\u8bd1\uff0c\u8fd8\u662f\u4e0d\u8981\u53ea\u9501\u5b9a\u4e3b\u7248\u672c\u53f7\u3002 \u65e2\u7136\u5df2\u7ecf\u6210\u529f\u6dfb\u52a0\u4e86\u4f9d\u8d56\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5199\u4ee3\u7801\u4f7f\u7528\u5b83\u4e86\u3002\u4fee\u6539 main.swift : 1 2 3 4 5 6 7 import Pipes func sayHello ( str : String ) - String { print ( Hello, \\(str) ) return ( Hello, \\(str) ) } Alice | sayHello 1 2 3 $ swift build $ .build/debug/MyProject Hello, Alice \u5173\u4e8e\u5305\u7ba1\u7406\u7684\u5176\u5b83\u6709\u7528\u547d\u4ee4: \u547d\u4ee4 \u4f5c\u7528 swift package fetch \u53ea\u83b7\u53d6\u5305\u4f9d\u8d56 swift package update \u53ea\u66f4\u65b0\u5305\u4f9d\u8d56","title":"\u7ed9\u9879\u76ee\u5bfc\u5165\u5e93"},{"location":"iOS/swift-on-server/[4]Swift-Package-Manager/#xcode","text":"\u5f53\u7136\u4f60\u53ef\u4ee5\u4f7f\u7528\u559c\u6b22\u7684\u7f16\u8f91\u5668\u5728Shell\u4e0b\u8fdb\u884cSwift\u5f00\u53d1\uff0c\u4f46\u5728macOS\u4e0a\uff0c\u8fd8\u662f\u4f7f\u7528XCode\u8fdb\u884c\u5f00\u53d1\u6bd4\u8f83\u8212\u670d\u3002 \u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u751f\u6210XCode\u5de5\u7a0b\uff0c\u7136\u540e\u4f7f\u7528XCode\u6253\u5f00\uff1a 1 2 3 $ swift package generate-xcodeproj generated: ./MyProject.xcodeproj $ open -a Xcode MyProject.xcodeproj/ \u6ce8\u610f \u4f7f\u7528\u547d\u4ee4\u751f\u6210\u7684xcode\u5de5\u7a0b\u6587\u4ef6\uff0c\u5728\u4e0b\u6b21\u91cd\u65b0\u751f\u6210\u65f6\uff0c\u6240\u6709\u5bf9\u5de5\u7a0b\u6587\u4ef6\u4f5c\u8fc7\u7684\u624b\u52a8\u4fee\u6539\u90fd\u4e0d\u4f1a\u88ab\u4fdd\u7559\u3002 \u5728XCode\u4e2d\u8fd0\u884c\u524d\uff0c\u8981\u4fee\u6539\u4e00\u4e0b\u8fd0\u884c\u65b9\u6848\uff1a","title":"\u7528XCode\u5f00\u53d1"},{"location":"iOS/swift-on-server/[4]Swift-Package-Manager/#_4","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 $ mkdir Pipes $ cd Pipes/ $ swift package init --type library Creating library package: Pipes Creating Package.swift Creating README.md Creating .gitignore Creating Sources/ Creating Sources/Pipes/Pipes.swift Creating Tests/ Creating Tests/LinuxMain.swift Creating Tests/PipesTests/ Creating Tests/PipesTests/PipesTests.swift $ tree . . \u251c\u2500\u2500 Package.swift \u251c\u2500\u2500 README.md \u251c\u2500\u2500 Sources \u2502 \u2514\u2500\u2500 Pipes \u2502 \u2514\u2500\u2500 Pipes.swift \u2514\u2500\u2500 Tests \u251c\u2500\u2500 LinuxMain.swift \u2514\u2500\u2500 PipesTests \u2514\u2500\u2500 PipesTests.swift 4 directories, 5 files \u8fd9\u6b21\uff0c\u5b83\u6ca1\u6709\u751f\u6210 main.swift \u6587\u4ef6\uff0c\u800c\u662f\u751f\u5728\u4e86 Pipes.swift \u6587\u4ef6\u4f5c\u4e3a\u6a21\u5757\u3002\u8fd9\u6b21\u751f\u6210\u7684 Tests/ \u76ee\u5f55\u4e0b\u9762\u6709\u4e00\u4e9b\u57fa\u672c\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002 \u4fee\u6539 Sources/Pipes/Pipes.swift \u6587\u4ef6\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 precedencegroup LeftFunctionalApply { associativity: left higherThan: AssignmentPrecedence lowerThan: TernaryPrecedence } // pipe val into monadic fn infix operator | : LeftFunctionalApply // pipe val into monadic fn @discardableResult public func | A, B ( x: A, f: (A) throws - B ) rethrows - B { return try f(x) } \u6ca1\u6709\u7ecf\u8fc7\u6d4b\u8bd5\u7684\u5e93\u662f\u5408\u683c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u6dfb\u52a0\u4e00\u4e9b\u6d4b\u8bd5\u4ee3\u7801\uff0c\u4fee\u6539\u6587\u4ef6 Tests/PipesTests/PipesTests.swift : 1 2 3 4 5 6 7 8 9 10 11 12 13 import XCTest @testable import Pipes func double ( a : Int ) - Int { return 2 * a } class PipesTests : XCTestCase { func testDouble () { XCTAssertEqual ( 6 | double , 12 ) } static var allTests = [ ( testDouble , testDouble ), ] } \u8fd9\u91cc\u7684 allTests \u53d8\u66f4\u5728XCode\u4e2d\u6267\u884c\u6d4b\u8bd5\u65f6\u662f\u4e0d\u9700\u8981\u7684\uff0c\u4f46\u4f7f\u7528\u547d\u4ee4\u884c\u6267\u884c\u6d4b\u8bd5\u65f6\u662f\u5fc5\u9700\u7684\u3002 \u6211\u4eec\u4f7f\u7528\u547d\u4ee4\u884c\u6765\u6267\u884c\u6d4b\u8bd5: 1 2 3 4 5 6 7 8 9 10 11 12 13 $ swift build $ swift test Test Suite All tests started at 2017 -09-07 15 :46:37.139 Test Suite PipesPackageTests.xctest started at 2017 -09-07 15 :46:37.139 Test Suite PipesTests started at 2017 -09-07 15 :46:37.139 Test Case -[PipesTests.PipesTests testDouble] started. Test Case -[PipesTests.PipesTests testDouble] passed ( 0 .086 seconds ) . Test Suite PipesTests passed at 2017 -09-07 15 :46:37.226. Executed 1 test, with 0 failures ( 0 unexpected ) in 0 .086 ( 0 .087 ) seconds Test Suite PipesPackageTests.xctest passed at 2017 -09-07 15 :46:37.226. Executed 1 test, with 0 failures ( 0 unexpected ) in 0 .086 ( 0 .087 ) seconds Test Suite All tests passed at 2017 -09-07 15 :46:37.226. Executed 1 test, with 0 failures ( 0 unexpected ) in 0 .086 ( 0 .087 ) seconds \u8fd9\u53ea\u662f\u4e00\u4e2a\u4f8b\u5b50\uff0c\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u81ea\u5df1\u7684\u5e93\uff0c\u4f46\u662f\u6211\u4eec\u53ea\u662f\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u7535\u8111\u4e0a\u4f7f\u7528\uff0c\u5982\u4f55\u5206\u4eab\u7ed9\u5176\u5b83\u4eba\u7528\u5462\uff1f","title":"\u521b\u5efa\u81ea\u5df1\u7684\u5e93"},{"location":"iOS/swift-on-server/[4]Swift-Package-Manager/#swift","text":"\u73b0\u5728\u4f60\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u5e93\uff0c\u5e76\u505a\u4e86\u5fc5\u8981\u7684\u6d4b\u8bd5\uff0c\u4e0b\u4e00\u6b65\u5c31\u662f\u521b\u5efa\u4e00\u4e2agit\u4ed3\u5e93\u5e76\u628a\u5b83\u6258\u7ba1\u3002\u53ef\u4ee5\u4f7f\u7528 GitHub \u7684\u670d\u52a1 \u5148\u521d\u59cb\u5316\u672c\u5730\u4ed3\u5e93 1 2 $ git init Initialized empty Git repository in /Users/JokerAtBaoFeng/Desktop/playgound/Pipes/.git/ \u5e76\u521b\u5efa\u9996\u6b21\u63d0\u4ea4\uff1a 1 2 3 4 5 6 7 8 9 10 $ git add . $ git commit -m Init release [ master ( root-commit ) fc2df1d ] Init release 6 files changed, 68 insertions ( + ) create mode 100644 .gitignore create mode 100644 Package.swift create mode 100644 README.md create mode 100644 Sources/Pipes/Pipes.swift create mode 100644 Tests/LinuxMain.swift create mode 100644 Tests/PipesTests/PipesTests.swift \u6dfb\u52a0\u672c\u5730\u4ed3\u5e93\u548c\u8fdc\u7a0b\u4ed3\u5e93\u7684\u8054\u7cfb\uff0c\u8fd9\u4e00\u6b65\u9700\u8981\u4f60\u81ea\u5df1\u5148\u5728GitHub\u4e0a\u7533\u8bf7\u5e10\u53f7\u5e76\u521b\u5efa\u4e00\u4e2a\u7a7a\u4ed3\u5e93\uff1a 1 $ git remote add origin https://github.com/ your-account /Pipes.git \u4e0b\u4e00\u6b65\u5c31\u6253\u4e00\u4e2atag\u7248\u672c\uff0c\u8ba9\u5176\u5b83\u4eba\u4f7f\u7528\u7248\u672c\u53f7\u5728\u5b83\u4eec\u9879\u76ee\u7684 Package.swift \u4e2d\u6307\u5b9a\u4f9d\u8d56\u6e90\uff1a 1 $ git tag 0 .1.0 \u6700\u540e\u628a\u672c\u5730\u7684\u4ed3\u5e93\u63a8\u5230\u8fdc\u7a0b\u6258\u7ba1\u7684\u4ed3\u5e93\u4e2d\u4f9b\u522b\u4eba\u4f7f\u7528\uff1a 1 $ git push -u origin master --tags \u5206\u4eab\u81ea\u5df1\u7684\u5e93\u65f6\uff0c\u8bb0\u5f97\u5728\u5e93\u4e2d\u5305\u542b\u4e00\u4e9b\u8bb8\u53ef\u8bc1\u6587\u4ef6\uff0c\u6e90\u6587\u4ef6\u5934\u90e8\u53ef\u4ee5\u5305\u542b\u4e00\u4e9b\u7248\u6743\u58f0\u660e\uff0c\u8fd8\u8981\u5305\u542b\u4e00\u4e2a README.md \u6587\u4ef6\uff0c\u7528\u6765\u8bf4\u660e\u5e93\u7684\u4f7f\u7528\u65b9\u5f0f\u548c\u6ce8\u610f\u4e8b\u9879\u3002 \u6ce8\u610f \u5f53\u4e00\u4e2a\u9879\u76ee\u4e2d\u6dfb\u52a0\u4e86\u540c\u4e00\u4e2a\u4f9d\u8d56\u6e90\u7684\u4e0d\u540c\u7248\u672c\u65f6\uff0c\u4f1a\u9020\u6210\u4f9d\u8d56\u51b2\u7a81\u5e76\u4f7f\u94fe\u63a5\u5668\u5931\u8d25\u3002","title":"\u5171\u4eab\u4f60\u7684\u5e93\u7ed9swift\u793e\u533a"},{"location":"iOS/swift-on-server/[4]Swift-Package-Manager/#_5","text":"\u590d\u6742\u7684 Swift \u9879\u76ee\u901a\u5e38\u5305\u542b\u591a\u4e2a\u6a21\u5757\uff0c\u6bcf\u4e2a\u6a21\u5757\u90fd\u53ef\u4ee5\u5305\u542b\u5728 Sources \u76ee\u5f55\u4e0b\u7684\u4e0d\u540c\u5b50\u76ee\u5f55\u4e2d\uff0c\u7531\u4e8e\u6a21\u5757\u5185\u90e8\u8fd8\u53ef\u4ee5\u4f9d\u8d56\u5176\u5b83\u7684\u6a21\u5757\uff0c\u7f16\u8bd1\u8fc7\u7a0b\u5fc5\u987b\u6309\u7167\u4e00\u5b9a\u7684\u903b\u8f91\u987a\u5e8f\u8fdb\u884c\u3002\u5982\u679cA\u4f9d\u8d56B\uff0c\u90a3\u4e48B\u5c31\u9700\u8981\u5148\u88ab\u7f16\u8bd1\uff0c SwiftPM \u4f1a\u8ba1\u7b97\u8fd9\u4e9b\u7f16\u8bd1\u987a\u5e8f\uff0c\u4f46\u4f9d\u8d56\u5173\u7cfb\u9700\u8981\u6211\u4eec\u81ea\u5df1\u6307\u5b9a\u3002 \u8fd9\u4e2a\u8fc7\u7a0b\u548cLinux\u4e0a\u7684 Makefile \u4e2d\u7684\u6307\u5b9a\u4f9d\u8d56\u7684\u65b9\u5f0f\u6709\u70b9\u7c7b\u4f3c\uff0c\u5047\u8bbe\u4f60\u7684 Sources \u76ee\u5f55\u4e0b\u5305\u542b\u4e0b\u9762\u7684\u6a21\u5757\uff1a \u6a21\u5757 \u4f9d\u8d56 Sources/A/main.swift \u4f9d\u8d56B Sources/B/WebController.swift \u4f9d\u8d56C Sources/C/DatabaseConnector.swift \u8fd9\u79cd\u5173\u7cfb\u5728 Package.swift \u6587\u4ef6\u4e2d\u8868\u793a\u4e3a: 1 2 3 4 5 6 7 8 9 10 import PackageDescription let package = Package ( name : MyWebApp , targets : [ Target ( name : A , dependencies : [ . Target ( name : B )]), Target ( name : B , dependencies : [ . Target ( name : C )]), Target ( name : C ) ] ) \u6709\u4e86\u8fd9\u4e9b\u4f9d\u8d56\u63cf\u8ff0\u4fe1\u606f\uff0c SwiftPM \u5c31\u4f1a\u786e\u4fdd\u6a21\u5757C\u88ab\u6700\u5148\u7f16\u8bd1\uff0c\u7136\u540e\u7f16\u8bd1B\uff0c\u6700\u540e\u7f16\u8bd1A\u3002 \u73b0\u5728\u6211\u4eec\u4e00\u4e2a\u9879\u76ee\u91cc\u5305\u542b\u591a\u4e2a\u6a21\u5757\uff0c\u5982\u679c\u8fd9\u4e9b\u6a21\u5757\u53ef\u4ee5\u88ab\u5176\u5b83\u4eba\u590d\u7528\uff0c\u5c31\u628a\u5b83\u4eec\u63d0\u51fa\u6765\u5355\u72ec\u5efa\u4ed3\u5e93\u3002","title":"\u751f\u6210\u66f4\u52a0\u590d\u6742\u7684\u9879\u76ee"},{"location":"iOS/swift-on-server/[4]Swift-Package-Manager/#c","text":"Swift \u5305\u53ef\u4ee5\u4f7f\u7528\u73b0\u5b58\u7684C\u8bed\u8a00\u5e93\u3002\u4f7f\u7528C\u5e93\u524d\u9700\u8981\u521b\u5efa system module \u5305\u6765\u7ed1\u5b9aC\u8bed\u8a00\u52a8\u6001\u5e93\u3002 1 2 3 4 5 6 7 8 $ mkdir cdylib $ cd cdylib $ swift package init --type system-module Creating system-module package: cdylib Creating Package.swift Creating README.md Creating .gitignore Creating module.modulemap \u5728\u751f\u6210\u7684 module . modulemap \u6587\u4ef6\u4e2d\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a\u8981\u4f7f\u7528\u7684C\u8bed\u8a00\u5e93\u7684\u5934\u6587\u4ef6\u548c\u52a8\u6001\u5e93\u6587\u4ef6\u8def\u5f84\u3002\u5934\u6587\u4ef6\u8def\u5f84\u5fc5\u987b\u662f\u7edd\u5bf9\u8def\u5f84\u3002\u94fe\u63a5\u53c2\u6570\u662f\u52a8\u6001\u5e93\u7684\u540d\u5b57\u3002 \u4f8b\u5982\uff1a 1 2 3 4 5 module CSQLite [ system ] { header /usr/local/opt/sqlite/include/sqlite3.h link sqlite3 export * } \u5f53\u628a\u8fd9\u4e2a\u7cfb\u7edf\u6a21\u5757\u5305\u542b\u8fdb\u9879\u76ee\u4e2d\u540e\uff0c Swift \u4f1a\u81ea\u5df1\u8bfb\u53d6\u6307\u5b9a\u7684\u5934\u6587\u4ef6\uff0c\u5e76\u81ea\u52a8\u751f\u6210\u5fc5\u8981\u7684\u4ee3\u7801\uff0c\u7528\u6765\u5728 Swift \u4e2d\u8c03\u7528C\u8bed\u8a00\u4ee3\u7801\u3002 SwiftPM \u4e0d\u4f1a\u81ea\u52a8\u5b89\u88c5C\u8bed\u8a00\u5e93\uff0c\u56e0\u4e3a\u8fd9\u79cd\u64cd\u4f5c\u9700\u8981\u8d85\u7ea7\u7528\u6237\u6743\u9650\u3002\u5f53\u524d SwiftPM \u4ec5\u652f\u6301 Homebrew \u548c APT \u8fd9\u4e24\u7c7b\u5305\u7ba1\u7406\u6307\u5b9a\u3002\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 let package = Package { name: CSQlite , providers: [ .Brew( sqlite ), .Apt( libsqlite3.dev ) ] }","title":"\u4f7f\u7528C\u52a8\u6001\u5e93"},{"location":"iOS/swift-on-server/[5]Writng-ToDoList-With-Kitura/","text":"\u5f00\u53d1 \u8fd9\u7bc7\u4ecb\u7ecd\u4f7f\u7528 Swfit \u8bed\u8a00\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 Web \u670d\u52a1\uff0c\u5b83\u5728\u6570\u636e\u5e93\u4e2d\u5b58\u653e\u5f85\u529e\u4e8b\u9879\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u901a\u8fc7 RESTful \u63a5\u53e3\u8bbf\u95ee\u3002 \u8fd9\u91cc\u4f7f\u7528 IBM Kitura Web\u5f00\u53d1\u6846\u67b6\uff0c\u5b83\u4e0e\u5df2\u6709\u7684Web\u6846\u67b6\u5982\uff1aRuby\u7684Sinatra\u3001Python\u7684Flask\u4ee5\u53caNodeJS\u7684Express.js\u5f88\u7c7b\u4f3c\u3002 Kitura\u5305\u542b\u4e00\u4e2aHTTP\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u7528\u6765\u4fa6\u542c\u6765\u81ea\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\uff0c\u5e76\u628a\u8fd9\u4e9b\u8bf7\u6c42\u8def\u7531\u7ed9\u5408\u9002\u7684\u5904\u7406\u7a0b\u5e8f\u5904\u7406\u3002 \u8981\u60f3\u5904\u7406\u5ba2\u6237\u8bf7\u6c42\uff0c\u6211\u4eec\u7684\u9879\u76ee\u5728\u4f7f\u7528 SwiftPM \u5bfc\u5165 Kitura \u6a21\u5757\u540e\uff0c\u9700\u8981\u5148\u521b\u5efa\u4e00\u4e2a Router , \u7528\u6765\u63a5\u6536\u5ba2\u6237\u8bf7\u6c42\u5e76\u8def\u7531\u5230\u6307\u5b9a\u7684\u5904\u7406\u7a0b\u5e8f\u4e2d\u3002 1 2 3 import Kitura let router = Router () \u4f46\u662f\u5728\u6211\u4eec\u53ef\u4ee5\u5904\u7406\u5ba2\u6237\u8bf7\u6c42\u4e4b\u524d\uff0c\u9700\u8981\u5148\u542f\u52a8\u4e00\u4e2aHTTP\u670d\u52a1\u5668\u6765\u4fa6\u542c\u5ba2\u6237\u8bf7\u6c42\uff0c\u8fd9\u91cc\u6211\u4eec\u542f\u52a8\u4e86\u4e00\u4e2a\u5728TCP\u001d\u7aef\u53e38000\u4e0a\u4fa6\u542c\u5ba2\u6237\u8bf7\u6c42\u7684HTTP\u670d\u52a1\u5668\uff0c\u5e76\u628a\u5b83\u6ce8\u518c\u7ed9\u4e0a\u9762\u6211\u4eec\u521b\u5efa\u7684 router \uff1a 1 2 3 Kitura.addHTTPServer(onPort:8000, with: router) Kitura.run() \u6ce8\u610f - Kitura \u8fd0\u884c\u65f6\u652f\u6301\u540c\u65f6\u5f00\u542f\u591a\u4e2aHTTP\u670d\u52a1\u5668\uff0c\u5b83\u4eec\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u7aef\u53e3\u4e0a\u4fa6\u542c\u5ba2\u6237\u8bf7\u6c42\uff0c\u5f53\u7136\u4e3a\u4e86\u5b89\u5168\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u521b\u5efaHTTPS\u670d\u52a1\u5668\u6765\u4ee3\u66ffHTTP\u670d\u52a1\u5668\u3002 \u5f53\u670d\u52a1\u5668\u63a5\u5230\u4e00\u4e2a\u5ba2\u6237\u8bf7\u6c42\u540e\uff0c Kitura \u4f1a\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u7528\u6765\u6267\u884c\u9488\u5bf9\u8fd9\u4e2a\u5ba2\u6237\u8bf7\u6c42\u7684\u5904\u7406\u7a0b\u5e8f\u3002 \u8bf7\u6c42\u5904\u7406\u7a0b\u5e8f\u53ef\u4ee5\u7528\u4e00\u4e2a\u95ed\u5305\u6765\u5b9a\u4e49\uff0c\u5b83\u6709\u4e09\u4e2a\u7c7b\u578b\u5206\u522b\u4e3a\uff1a RouterRequest \u3001 RouterResponse \u548c () - Void \u7684\u53c2\u6570\u3002 RouterRequest \u5305\u542b\u5ba2\u6237\u7aef\u8bf7\u6c42\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u5176\u4e2d\u53ef\u80fd\u6709\u5305\u542b\u7528\u6237\u8eab\u4efd\u8ba4\u8bc1\u7684\u8bf7\u6c42\u5934\u4fe1\u606f\u6216\u8005\u5305\u542b\u5176\u5b83\u76f8\u5173\u6570\u636e\u3002 RouterResponse \u5305\u542b\u670d\u52a1\u7aef\u8981\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u7684\u76f8\u5173\u4fe1\u606f\u3002 () - Void \u662f\u670d\u52a1\u7aef\u7528\u4e8e\u5904\u7406\u6307\u5b9a\u5ba2\u6237\u8bf7\u6c42\u7684\u5904\u7406\u7a0b\u5e8f\uff0c\u5b83\u4e5f\u662f\u4e00\u4e2a\u95ed\u5305\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u540d\u79f0\u3002 \u4e0b\u9762\u5c31\u521b\u5efa\u4e00\u4e2a\u53ef\u4ee5\u5904\u7406\u6765\u81ea\u4e3b\u673a\u8def\u5f84 /hello \u7684GET\u8bf7\u6c42\uff0c\u5e76\u8fd4\u56de Hello, World \u7ed9\u5ba2\u6237\u7684\u8def\u7531\uff1a 1 2 3 4 router.get( /hello ){ request, response, callNextHandler in response.status(.OK).send( Hello, World! ) callNextHandler() } \u6ce8\u610f - \u8def\u5f84 /hello \u4e2d\u4e5f\u53ef\u4ee5\u6307\u5b9a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u7528\u6765\u5339\u914d\u4e00\u7cfb\u5217\u6307\u5b9a\u7684\u7528\u6237\u8bf7\u6c42\uff0c\u5176\u4e2d\u4ee5 : \u5f00\u59cb\u7684\u6807\u8bc6\u7b26\u53ef\u4ee5\u505a\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u8bf7\u6c42\u5904\u7406\u7a0b\u5e8f\uff0c\u4f8b\u5982\uff1a\u8def\u5f84 /user/:name \u53ef\u4ee5\u5339\u914d\u4e00\u4e2a user/robert \u8fd9\u6837\u7684\u7528\u6237\u8bf7\u6c42\uff0c :name \u8fd9\u4e2a\u6807\u8bc6\u7b26\u5c31\u5339\u914d\u4e86\u5177\u4f53\u7684 robert \uff0c\u5728\u8bf7\u6c42\u5904\u7406\u7a0b\u5e8f\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 request.parameters[ name ] \u6765\u83b7\u5f97 :name \u5339\u914d\u7684\u5177\u4f53\u503c\u3002 \u4e00\u4e2a\u8bf7\u6c42\u5904\u7406\u7a0b\u5e8f\u5728\u5904\u7406\u5b8c\u7528\u6237\u8bb2\u6c42\u65f6\u5fc5\u987b\u8c03\u7528 callNextHandler() \u6216\u8005 response.end() \u6765\u8868\u793a\u8bf7\u6c42\u5904\u7406\u5b8c\u6210\uff0c\u5426\u5219\u5ba2\u6237\u7aef\u4f1a\u4e00\u76f4\u7b49\u5f85\u670d\u52a1\u7aef\u54cd\u5e94\u3002 \u4ee5\u4e0a\u5c31\u662f\u6700\u7b80\u5355\u7684\u4e00\u4e2aWeb\u670d\u52a1\uff0c\u5168\u90e8\u4ee3\u7801\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 import Kitura let router = Router () router . get ( /hello ){ request , response , callNextHandler in response . status ( . OK ) . send ( Hello, World! \\n ) callNextHandler () } Kitura . addHTTPServer ( onPort : 8000 , with : router ) Kitura . run () \u8fd0\u884c\u540e\uff0c\u4f7f\u7528\u547d\u4ee4\u884c\u5de5\u5177 curl \u6765\u6a21\u62df\u5ba2\u6237\u8bf7\u6c42\u6d4b\u8bd5\u670d\u52a1\u662f\u5426\u6b63\u786e\uff1a 1 2 $ curl localhost:8000/hello Hello, World! \u5e03\u7f72 \u5f00\u53d1\u5b8c\u6210\u7684Web\u670d\u52a1\u53ef\u4ee5\u901a\u8fc7 Docker \u6765\u5e03\u7f72\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 IBM Cloud Tools for Swift \u6765\u5e03\u7f72\u5230 IBM Bluemix \u4e0a\u3002 \u56e0\u4e3a\u670d\u52a1\u5668\u4e00\u822c\u9700\u8981\u547d\u4ee4\u884c\u64cd\u4f5c\uff0c\u6240\u4ee5\u8fd9\u91cc\u4ecb\u7ecd\u4f7f\u7528\u670d\u52a1\u884c\u90e8\u7f72\u670d\u52a1\u7684\u8fc7\u7a0b\uff0c\u8fd9\u91cc\u5c06\u4f7f\u7528 IBM Bluemix \u4e91\u670d\u52a1, \u5b83\u53ef\u4ee5\u8bd5\u752830\u5929\uff0c\u9700\u8981\u6ce8\u518c\u4e00\u4e2a\u5e10\u53f7\u5e76\u4e14\u9700\u8981\u5f00\u901a CloudFoundry \u5e94\u7528\u7a0b\u5e8f\u670d\u52a1\u3002 \u53ef\u4ee5\u5728\u76f8\u5173\u754c\u9762\u4e0b\u8f7dCLI\u547d\u4ee4\u884c\u5de5\u5177\u7528\u6765\u5e03\u7f72\u5e94\u7528\u3002 \u4e0b\u8f7d\u5e76\u5b8c\u6210 Bluemix-CLI \u7684\u5b89\u88c5\u3002 \u5e03\u7f72\u524d\u9700\u8981\u521b\u5efa\u51e0\u4e2a\u6587\u4ef6\uff0c\u7528\u6765\u6307\u5b9a\u670d\u52a1\u5728\u90e8\u7f72\u7684\u4e00\u4e9b\u8fd0\u884c\u53c2\u6570\u548c\u4fe1\u606f\u3002 \u521b\u5efa manifest.yml \u6587\u4ef6 manifest.yml 1 2 3 4 5 6 applications: - name: todolist memory: 256M instances: 1 random-route: true buildpack: https://github.com/IBM-Swift/Swift-buildpack.git \u521b\u5efa Procfile \u6587\u4ef6 Procfile 1 web : Server \u9879\u76ee\u4ee3\u7801\u4e2d\u5305\u542b\u90e8\u7f72\u76f8\u5173\u7684\u4ee3\u7801 Package.swift \u6587\u4ef6\u4e2d\u6dfb\u52a0 Swift-cfenv \u5305 Package.swift 1 2 3 4 5 6 7 8 9 10 11 // swift - tools - version : 3.1 import PackageDescription let package = Package ( name : todolist , dependencies : [ . Package ( url : https://github.com/IBM-Swift/Kitura , majorVersion : 1 , minor : 7 ), . Package ( url : https://github.com/IBM-Swift/Swift-cfenv , majorVersion : 4 , minor : 0 ), ] ) \u5e76\u5728\u9879\u76ee\u4ee3\u7801\u4e2d\u5305\u542b\u4e0b\u9762\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 import CloudFoundryEnv do { let appEnv = try CloudFoundryEnv . getAppEnv () let port : Int = appEnv . port Kitura . addHTTPServer ( onPort : port , with : router ) } catch CloudFoundryEnvError . InvalidValue { print ( Oops, something went wrong... Server did not start! ) } \u53c2\u8003\u8d44\u6599 \u8be6\u60c5\u8bf7\u53c2\u8003IBM\u51fa\u53e3\u4e66\u7c4d\u53ca\u76f8\u5173\u4ee3\u7801: Extending Swift Values to the Server \u76f8\u5173\u4ee3\u7801\u4e0b\u8f7d","title":"\u7b2c\u4e94\u7ae0\u4f7f\u7528Kitura\u5199ToDoList"},{"location":"iOS/swift-on-server/[5]Writng-ToDoList-With-Kitura/#_1","text":"\u8fd9\u7bc7\u4ecb\u7ecd\u4f7f\u7528 Swfit \u8bed\u8a00\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 Web \u670d\u52a1\uff0c\u5b83\u5728\u6570\u636e\u5e93\u4e2d\u5b58\u653e\u5f85\u529e\u4e8b\u9879\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u901a\u8fc7 RESTful \u63a5\u53e3\u8bbf\u95ee\u3002 \u8fd9\u91cc\u4f7f\u7528 IBM Kitura Web\u5f00\u53d1\u6846\u67b6\uff0c\u5b83\u4e0e\u5df2\u6709\u7684Web\u6846\u67b6\u5982\uff1aRuby\u7684Sinatra\u3001Python\u7684Flask\u4ee5\u53caNodeJS\u7684Express.js\u5f88\u7c7b\u4f3c\u3002 Kitura\u5305\u542b\u4e00\u4e2aHTTP\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u7528\u6765\u4fa6\u542c\u6765\u81ea\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\uff0c\u5e76\u628a\u8fd9\u4e9b\u8bf7\u6c42\u8def\u7531\u7ed9\u5408\u9002\u7684\u5904\u7406\u7a0b\u5e8f\u5904\u7406\u3002 \u8981\u60f3\u5904\u7406\u5ba2\u6237\u8bf7\u6c42\uff0c\u6211\u4eec\u7684\u9879\u76ee\u5728\u4f7f\u7528 SwiftPM \u5bfc\u5165 Kitura \u6a21\u5757\u540e\uff0c\u9700\u8981\u5148\u521b\u5efa\u4e00\u4e2a Router , \u7528\u6765\u63a5\u6536\u5ba2\u6237\u8bf7\u6c42\u5e76\u8def\u7531\u5230\u6307\u5b9a\u7684\u5904\u7406\u7a0b\u5e8f\u4e2d\u3002 1 2 3 import Kitura let router = Router () \u4f46\u662f\u5728\u6211\u4eec\u53ef\u4ee5\u5904\u7406\u5ba2\u6237\u8bf7\u6c42\u4e4b\u524d\uff0c\u9700\u8981\u5148\u542f\u52a8\u4e00\u4e2aHTTP\u670d\u52a1\u5668\u6765\u4fa6\u542c\u5ba2\u6237\u8bf7\u6c42\uff0c\u8fd9\u91cc\u6211\u4eec\u542f\u52a8\u4e86\u4e00\u4e2a\u5728TCP\u001d\u7aef\u53e38000\u4e0a\u4fa6\u542c\u5ba2\u6237\u8bf7\u6c42\u7684HTTP\u670d\u52a1\u5668\uff0c\u5e76\u628a\u5b83\u6ce8\u518c\u7ed9\u4e0a\u9762\u6211\u4eec\u521b\u5efa\u7684 router \uff1a 1 2 3 Kitura.addHTTPServer(onPort:8000, with: router) Kitura.run() \u6ce8\u610f - Kitura \u8fd0\u884c\u65f6\u652f\u6301\u540c\u65f6\u5f00\u542f\u591a\u4e2aHTTP\u670d\u52a1\u5668\uff0c\u5b83\u4eec\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u7aef\u53e3\u4e0a\u4fa6\u542c\u5ba2\u6237\u8bf7\u6c42\uff0c\u5f53\u7136\u4e3a\u4e86\u5b89\u5168\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u521b\u5efaHTTPS\u670d\u52a1\u5668\u6765\u4ee3\u66ffHTTP\u670d\u52a1\u5668\u3002 \u5f53\u670d\u52a1\u5668\u63a5\u5230\u4e00\u4e2a\u5ba2\u6237\u8bf7\u6c42\u540e\uff0c Kitura \u4f1a\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u7528\u6765\u6267\u884c\u9488\u5bf9\u8fd9\u4e2a\u5ba2\u6237\u8bf7\u6c42\u7684\u5904\u7406\u7a0b\u5e8f\u3002 \u8bf7\u6c42\u5904\u7406\u7a0b\u5e8f\u53ef\u4ee5\u7528\u4e00\u4e2a\u95ed\u5305\u6765\u5b9a\u4e49\uff0c\u5b83\u6709\u4e09\u4e2a\u7c7b\u578b\u5206\u522b\u4e3a\uff1a RouterRequest \u3001 RouterResponse \u548c () - Void \u7684\u53c2\u6570\u3002 RouterRequest \u5305\u542b\u5ba2\u6237\u7aef\u8bf7\u6c42\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u5176\u4e2d\u53ef\u80fd\u6709\u5305\u542b\u7528\u6237\u8eab\u4efd\u8ba4\u8bc1\u7684\u8bf7\u6c42\u5934\u4fe1\u606f\u6216\u8005\u5305\u542b\u5176\u5b83\u76f8\u5173\u6570\u636e\u3002 RouterResponse \u5305\u542b\u670d\u52a1\u7aef\u8981\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u7684\u76f8\u5173\u4fe1\u606f\u3002 () - Void \u662f\u670d\u52a1\u7aef\u7528\u4e8e\u5904\u7406\u6307\u5b9a\u5ba2\u6237\u8bf7\u6c42\u7684\u5904\u7406\u7a0b\u5e8f\uff0c\u5b83\u4e5f\u662f\u4e00\u4e2a\u95ed\u5305\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u540d\u79f0\u3002 \u4e0b\u9762\u5c31\u521b\u5efa\u4e00\u4e2a\u53ef\u4ee5\u5904\u7406\u6765\u81ea\u4e3b\u673a\u8def\u5f84 /hello \u7684GET\u8bf7\u6c42\uff0c\u5e76\u8fd4\u56de Hello, World \u7ed9\u5ba2\u6237\u7684\u8def\u7531\uff1a 1 2 3 4 router.get( /hello ){ request, response, callNextHandler in response.status(.OK).send( Hello, World! ) callNextHandler() } \u6ce8\u610f - \u8def\u5f84 /hello \u4e2d\u4e5f\u53ef\u4ee5\u6307\u5b9a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u7528\u6765\u5339\u914d\u4e00\u7cfb\u5217\u6307\u5b9a\u7684\u7528\u6237\u8bf7\u6c42\uff0c\u5176\u4e2d\u4ee5 : \u5f00\u59cb\u7684\u6807\u8bc6\u7b26\u53ef\u4ee5\u505a\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u8bf7\u6c42\u5904\u7406\u7a0b\u5e8f\uff0c\u4f8b\u5982\uff1a\u8def\u5f84 /user/:name \u53ef\u4ee5\u5339\u914d\u4e00\u4e2a user/robert \u8fd9\u6837\u7684\u7528\u6237\u8bf7\u6c42\uff0c :name \u8fd9\u4e2a\u6807\u8bc6\u7b26\u5c31\u5339\u914d\u4e86\u5177\u4f53\u7684 robert \uff0c\u5728\u8bf7\u6c42\u5904\u7406\u7a0b\u5e8f\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 request.parameters[ name ] \u6765\u83b7\u5f97 :name \u5339\u914d\u7684\u5177\u4f53\u503c\u3002 \u4e00\u4e2a\u8bf7\u6c42\u5904\u7406\u7a0b\u5e8f\u5728\u5904\u7406\u5b8c\u7528\u6237\u8bb2\u6c42\u65f6\u5fc5\u987b\u8c03\u7528 callNextHandler() \u6216\u8005 response.end() \u6765\u8868\u793a\u8bf7\u6c42\u5904\u7406\u5b8c\u6210\uff0c\u5426\u5219\u5ba2\u6237\u7aef\u4f1a\u4e00\u76f4\u7b49\u5f85\u670d\u52a1\u7aef\u54cd\u5e94\u3002 \u4ee5\u4e0a\u5c31\u662f\u6700\u7b80\u5355\u7684\u4e00\u4e2aWeb\u670d\u52a1\uff0c\u5168\u90e8\u4ee3\u7801\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 import Kitura let router = Router () router . get ( /hello ){ request , response , callNextHandler in response . status ( . OK ) . send ( Hello, World! \\n ) callNextHandler () } Kitura . addHTTPServer ( onPort : 8000 , with : router ) Kitura . run () \u8fd0\u884c\u540e\uff0c\u4f7f\u7528\u547d\u4ee4\u884c\u5de5\u5177 curl \u6765\u6a21\u62df\u5ba2\u6237\u8bf7\u6c42\u6d4b\u8bd5\u670d\u52a1\u662f\u5426\u6b63\u786e\uff1a 1 2 $ curl localhost:8000/hello Hello, World!","title":"\u5f00\u53d1"},{"location":"iOS/swift-on-server/[5]Writng-ToDoList-With-Kitura/#_2","text":"\u5f00\u53d1\u5b8c\u6210\u7684Web\u670d\u52a1\u53ef\u4ee5\u901a\u8fc7 Docker \u6765\u5e03\u7f72\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 IBM Cloud Tools for Swift \u6765\u5e03\u7f72\u5230 IBM Bluemix \u4e0a\u3002 \u56e0\u4e3a\u670d\u52a1\u5668\u4e00\u822c\u9700\u8981\u547d\u4ee4\u884c\u64cd\u4f5c\uff0c\u6240\u4ee5\u8fd9\u91cc\u4ecb\u7ecd\u4f7f\u7528\u670d\u52a1\u884c\u90e8\u7f72\u670d\u52a1\u7684\u8fc7\u7a0b\uff0c\u8fd9\u91cc\u5c06\u4f7f\u7528 IBM Bluemix \u4e91\u670d\u52a1, \u5b83\u53ef\u4ee5\u8bd5\u752830\u5929\uff0c\u9700\u8981\u6ce8\u518c\u4e00\u4e2a\u5e10\u53f7\u5e76\u4e14\u9700\u8981\u5f00\u901a CloudFoundry \u5e94\u7528\u7a0b\u5e8f\u670d\u52a1\u3002 \u53ef\u4ee5\u5728\u76f8\u5173\u754c\u9762\u4e0b\u8f7dCLI\u547d\u4ee4\u884c\u5de5\u5177\u7528\u6765\u5e03\u7f72\u5e94\u7528\u3002 \u4e0b\u8f7d\u5e76\u5b8c\u6210 Bluemix-CLI \u7684\u5b89\u88c5\u3002 \u5e03\u7f72\u524d\u9700\u8981\u521b\u5efa\u51e0\u4e2a\u6587\u4ef6\uff0c\u7528\u6765\u6307\u5b9a\u670d\u52a1\u5728\u90e8\u7f72\u7684\u4e00\u4e9b\u8fd0\u884c\u53c2\u6570\u548c\u4fe1\u606f\u3002","title":"\u5e03\u7f72"},{"location":"iOS/swift-on-server/[5]Writng-ToDoList-With-Kitura/#manifestyml","text":"manifest.yml 1 2 3 4 5 6 applications: - name: todolist memory: 256M instances: 1 random-route: true buildpack: https://github.com/IBM-Swift/Swift-buildpack.git","title":"\u521b\u5efamanifest.yml\u6587\u4ef6"},{"location":"iOS/swift-on-server/[5]Writng-ToDoList-With-Kitura/#procfile","text":"Procfile 1 web : Server","title":"\u521b\u5efaProcfile\u6587\u4ef6"},{"location":"iOS/swift-on-server/[5]Writng-ToDoList-With-Kitura/#_3","text":"Package.swift \u6587\u4ef6\u4e2d\u6dfb\u52a0 Swift-cfenv \u5305 Package.swift 1 2 3 4 5 6 7 8 9 10 11 // swift - tools - version : 3.1 import PackageDescription let package = Package ( name : todolist , dependencies : [ . Package ( url : https://github.com/IBM-Swift/Kitura , majorVersion : 1 , minor : 7 ), . Package ( url : https://github.com/IBM-Swift/Swift-cfenv , majorVersion : 4 , minor : 0 ), ] ) \u5e76\u5728\u9879\u76ee\u4ee3\u7801\u4e2d\u5305\u542b\u4e0b\u9762\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 import CloudFoundryEnv do { let appEnv = try CloudFoundryEnv . getAppEnv () let port : Int = appEnv . port Kitura . addHTTPServer ( onPort : port , with : router ) } catch CloudFoundryEnvError . InvalidValue { print ( Oops, something went wrong... Server did not start! ) }","title":"\u9879\u76ee\u4ee3\u7801\u4e2d\u5305\u542b\u90e8\u7f72\u76f8\u5173\u7684\u4ee3\u7801"},{"location":"iOS/swift-on-server/[5]Writng-ToDoList-With-Kitura/#_4","text":"\u8be6\u60c5\u8bf7\u53c2\u8003IBM\u51fa\u53e3\u4e66\u7c4d\u53ca\u76f8\u5173\u4ee3\u7801: Extending Swift Values to the Server \u76f8\u5173\u4ee3\u7801\u4e0b\u8f7d","title":"\u53c2\u8003\u8d44\u6599"},{"location":"jenkins/guide/","text":"Jenkins \u662f\u4e00\u4e2a\u5f00\u6e90\u72ec\u7acb\u7684\u81ea\u52a8\u5316\u670d\u52a1\u5668\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u5b8c\u6210\u8bf8\u5982\u8f6f\u4ef6\u6784\u5efa\u3001\u8f6f\u4ef6\u6d4b\u8bd5\u548c\u8f6f\u4ef6\u90e8\u7f72\u5728\u5185\u7684\u5404\u79cd\u7c7b\u578b\u4efb\u52a1\u7684\u81ea\u52a8\u5316\u3002\u53ef\u4ee5\u901a\u8fc7\u672c\u673a\u7cfb\u7edf\u5305\u6216Docker\u7684\u65b9\u5f0f\u5b89\u88c5\uff0c\u4e5f\u53ef\u4ee5\u72ec\u7acb\u8fd0\u884c\u4e8e\u6240\u6709\u5b89\u88c5\u4e86Java\u8fd0\u884c\u73af\u5883\u7684\u673a\u5668\u4e2d\u3002 \u8fd9\u4efd\u5bfc\u89c8\u4f7f\u7528\u72ec\u7acb\u7248\u672c\u7684 Jenkins \uff0c\u6700\u4f4e\u9700\u8981 java 7 \u5e76\u4e14\u7cfb\u7edf\u81f3\u5c11\u8981\u6709 512MB \u7684\u5185\u5b58\u3002 \u4e0b\u8f7d\u001d Jenkins \u6253\u5f00\u7ec8\u7aef\u5e76\u8fdb\u5165\u4e0b\u8f7d\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\uff0c\u8fd0\u884c\u547d\u4ee4 java -jar jenkins.war \u6d4f\u89c8\u5668\u8fdb\u5165 http://localhost:8080 \u6309\u7167\u63d0\u793a\u5b8c\u6210\u5b89\u88c5\u3002 \u4e00\u4e9b\u7ba1\u9053\u4f7f\u7528\u7684\u793a\u4f8b\u8981\u6c42\u540c\u65f6\u5b89\u88c5 Jenkins \u548c Docker \u3002 \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u51c6\u5907\u5f00\u59cb\u4f7f\u7528 Jenkins \u5e76\u521b\u5efa\u7ba1\u9053\u3002 Jenkins \u7684\u7ba1\u9053\u662f\u4e00\u5957\u63d2\u4ef6\uff0c\u5b83\u4eec\u652f\u6301\u5728 Jenkins \u5185\u90e8\u5b9e\u73b0\u548c\u6574\u5408\u8fde\u7eed\u4ea4\u4ed8\u6d41\u7a0b\u3002\u7ba1\u9053\u662f\u4e00\u4e2a\u6709\u6269\u5c55\u6027\u7684\u5de5\u5177\u96c6\uff0c\u7528\u6765\u628a\u7b80\u5355/\u590d\u6742\u7684\u4ea4\u4ed8\u6d41\u7a0b\u4ee5\u4ee3\u7801\u7684\u65b9\u5f0f\u5efa\u6a21\u51fa\u6765\u3002 Jenkinsfile \u6587\u4ef6\u4e2d\u5305\u542b Jenkins \u7ba1\u9053\u5b9a\u4e49\uff0c\u5e76\u88ab\u52a0\u5165\u5230\u7248\u672c\u63a7\u5236\u4e2d\u3002\u5b83\u662f\u7ba1\u9053\u4ee3\u7801\u5316\u7684\u57fa\u7840\uff0c\u50cf\u5176\u5b83\u4ee3\u7801\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6301\u7eed\u4ea4\u4ed8\u6d41\u7a0b\u770b\u4f5c\u662f\u5e94\u7528\u7684\u4e00\u90e8\u5206\u6765\u8fdb\u884c\u7248\u672c\u63a7\u5236\u548c\u5ba1\u67e5\u3002\u521b\u5efa Jenkinsfile \u6709\u5f88\u591a\u597d\u5904\uff1a \u4e3a\u6240\u6709\u5206\u652f\u548c pull \u8bf7\u6c42\u81ea\u52a8\u521b\u5efa\u7ba1\u9053 \u5728\u7ba1\u9053\u4e0a\u8fdb\u884c\u4ee3\u7801\u5ba1\u67e5\u548c\u8fed\u4ee3 \u4e3a\u7ba1\u9053\u8fdb\u884c\u5ba1\u8ba1\u8ddf\u8e2a \u7edf\u4e00\u7684\u53ef\u4fe1\u4efb\u6e90\u4ee3\u7801\u65b9\u4fbf\u591a\u4e2a\u9879\u76ee\u6210\u5458\u4e4b\u95f4\u5171\u540c\u7f16\u8f91\u3002 \u901a\u8fc7 web UI \u6216\u8005 Jenkinsfile \u90fd\u53ef\u4ee5\u4ee5\u76f8\u540c\u7684\u8bed\u6cd5\u5b9a\u4e49\u7ba1\u9053\u3002\u901a\u5e38\u4ee5 Jenkinsfile \u7684\u65b9\u5f0f\u5b9a\u4e49\u7ba1\u9053\u5e76\u52a0\u5165\u5230\u7248\u672c\u63a7\u5236\u4e2d\u662f\u6700\u597d\u7684\u65b9\u5f0f\u3002","title":"\u5bfc\u89c8"},{"location":"jenkins/guide/cleaning-up-and-notification/","text":"\u7531\u4e8e post \u533a\u662f\u5728\u4e00\u4e2a\u7ba1\u9053\u6267\u884c\u5b8c\u6210\u540e\u88ab\u8c03\u7528\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u6dfb\u52a0\u4e00\u4e9b\u901a\u77e5\u6216\u5176\u5b83\u6b65\u9aa4\u6765\u6267\u884c\u7ba1\u9053\u7ed3\u675f\u540e\u9700\u8981\u6267\u884c\u7684\u76f8\u5173\u4efb\u52a1\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 pipeline { agent any stages { stage( No-op ) { steps { sh ls } } } post { always { echo One way or another, I have finished deleteDir() /* clean up our workspace */ } success { echo I succeeeded! } unstable { echo I am unstable :/ } failure { echo I failed :( } changed { echo Things were different before... } } } \u6709\u5f88\u591a\u79cd\u65b9\u5f0f\u53ef\u4ee5\u53d1\u9001\u901a\u77e5\uff0c\u4e0b\u9762\u662f\u4e00\u4e9b\u53d1\u9001\u901a\u77e5\u7684\u4ee3\u7801\u6bb5\uff0c\u7528\u6765\u8bf4\u660e\u548c\u7ba1\u9053\u76f8\u5173\u7684\u901a\u77e5\u5982\u4f55\u53d1\u9001\u5230 email \u3001 Hipchat room \u3001 Slack channel E-mail 1 2 3 4 5 6 7 post { failure { mail to: team@example.com , subject: Failed Pipeline: ${ currentBuild . fullDisplayName } , body: Something is wrong with ${ env . BUILD_URL } } } Hipchat 1 2 3 4 5 6 post { failure { hipchatSend message: Attention @here ${ env . JOB_NAME } # ${ env . BUILD_NUMBER } has failed. , color: RED } } Slack Channel 1 2 3 4 5 6 7 post { success { slackSend channel: #ops-room , color: good , message: The pipeline ${ currentBuild . fullDisplayName } completed successfully. } } \u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u5728\u7ba1\u9053\u53d1\u751f\uff1a\u5931\u8d25\u3001\u4e0d\u7a33\u5b9a\u6216\u8005\u6210\u529f\u4e8b\u4ef6\u65f6\u901a\u77e5\u56e2\u961f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u6700\u540e\u4e00\u6b65 \u5e03\u7f72 \uff0c\u4ece\u800c\u5b8c\u6210\u6301\u7eed\u5206\u53d1\u7684\u6574\u4e2a\u8fc7\u7a0b\u3002","title":"\u6e05\u7406\u548c\u901a\u77e5"},{"location":"jenkins/guide/cleaning-up-and-notification/#e-mail","text":"1 2 3 4 5 6 7 post { failure { mail to: team@example.com , subject: Failed Pipeline: ${ currentBuild . fullDisplayName } , body: Something is wrong with ${ env . BUILD_URL } } }","title":"E-mail"},{"location":"jenkins/guide/cleaning-up-and-notification/#hipchat","text":"1 2 3 4 5 6 post { failure { hipchatSend message: Attention @here ${ env . JOB_NAME } # ${ env . BUILD_NUMBER } has failed. , color: RED } }","title":"Hipchat"},{"location":"jenkins/guide/cleaning-up-and-notification/#slack-channel","text":"1 2 3 4 5 6 7 post { success { slackSend channel: #ops-room , color: good , message: The pipeline ${ currentBuild . fullDisplayName } completed successfully. } } \u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u5728\u7ba1\u9053\u53d1\u751f\uff1a\u5931\u8d25\u3001\u4e0d\u7a33\u5b9a\u6216\u8005\u6210\u529f\u4e8b\u4ef6\u65f6\u901a\u77e5\u56e2\u961f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u6700\u540e\u4e00\u6b65 \u5e03\u7f72 \uff0c\u4ece\u800c\u5b8c\u6210\u6301\u7eed\u5206\u53d1\u7684\u6574\u4e2a\u8fc7\u7a0b\u3002","title":"Slack Channel"},{"location":"jenkins/guide/define-execution-environments/","text":"\u5728\u524d\u9762\u7684\u51e0\u8282\u4e2d\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u6bcf\u4e2a\u793a\u4f8b\u4e2d\u90fd\u6709 agent \u6307\u4ee4\uff0c\u8fd9\u4e2a agent \u6307\u4ee4\u544a\u8bc9 Jenkins \u6267\u884c\u7ba1\u9053\u7684\u4f4d\u7f6e\u548c\u65f6\u673a\u3002\u6240\u6709\u7684\u7ba1\u9053\u90fd\u5fc5\u987b\u6709 agent \u6307\u4ee4\u3002 agent \u8fd9\u4e2a\u6307\u4ee4\u4f1a\u505a\u4e0b\u9762\u51e0\u4ef6\u4e8b\uff1a \u5757\u4e2d\u7684\u6240\u6709\u6b65\u9aa4\u90fd\u88ab Jenkins \u52a0\u5165\u961f\u5217\uff0c\u4e32\u884c\u6267\u884c\u3002\u53ea\u8981\u6267\u884c\u5668\u53ef\u7528\uff0c\u5c31\u5f00\u59cb\u6309\u6b65\u9aa4\u4e00\u6b65\u6b65\u6267\u884c \u4f1a\u521b\u5efa\u4e00\u4e2a\u5de5\u4f5c\u7a7a\u95f4\uff0c\u7528\u6765\u5b58\u653e\u4ece\u7248\u672c\u63a7\u5236\u4ed3\u5e93\u4e2d\u53d6\u51fa\u7684\u7528\u4e8e\u7ba1\u9053\u6267\u884c\u7684\u76f8\u5173\u6587\u4ef6 \u6709\u5f88\u591a\u79cd\u65b9\u5f0f\u4e3a\u7ba1\u9053\u5b9a\u4e49 agent \uff0c\u4f46\u5728\u8fd9\u4e2a\u6307\u5bfc\u4e2d\uff0c\u6211\u4eec\u4ec5\u4f7f\u7528 Docker \u4f5c\u4e3a agent \u3002 \u7ba1\u9053\u88ab\u8bbe\u8ba1\u4e3a\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u5728\u5185\u90e8\u4f7f\u7528 Docker \u955c\u50cf\u548c\u5bb9\u5668\uff0c\u8fd9\u4f7f\u7684\u7ba1\u9053\u4e0d\u9700\u8981\u624b\u52a8\u914d\u7f6e\u989d\u5916\u7684\u7cfb\u7edf\u5de5\u5177\u548c\u76f8\u5173\u4f9d\u8d56\u5c31\u53ef\u4ee5\u5b9a\u4e49\u6240\u9700\u7684\u73af\u5883\u548c\u5de5\u5177\u3002\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u4f60\u53ef\u4ee5\u4f7f\u7528\u6253\u5305\u5728 Docker \u5bb9\u5668\u4e2d\u7684\u4efb\u4f55\u5de5\u5177\u3002\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 pipeline { agent { docker { image node:7-alpine } } stages { stage( Test ) { steps { sh node --version } } } } \u5f53\u7ba1\u9053\u6267\u884c\u65f6\uff0c Jenkins \u53ef\u4ee5\u81ea\u52a8\u7684\u542f\u52a8 Docker \u5bb9\u5668\u5e76\u5728\u5bb9\u5668\u4e2d\u6267\u884c\u5b9a\u4e49\u597d\u7684\u6b65\u9aa4, \u50cf\u4e0b\u9762\u8fd9\u6837\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 [Pipeline] { [Pipeline] stage [Pipeline] { (node test) [Pipeline] sh [My_Pipeline_master-KX7XBL63CQEDQTNZKBOYFV6X2NHL6Y56ZLRMSX6DZ3WJX6IDTRWA] Running shell script + node --version v7.10.1 [Pipeline] } [Pipeline] // stage [Pipeline] } $ docker stop --time=1 6cb12d574c725716c8a556db17883e17a758dd54290fdf5fd7251a8a770ef73c $ docker rm -f 6cb12d574c725716c8a556db17883e17a758dd54290fdf5fd7251a8a770ef73c [Pipeline] // withDockerContainer [Pipeline] } [Pipeline] // node [Pipeline] End of Pipeline Finished: SUCCESS \u5c06 agent \u548c Docker \u5bb9\u5668\u8fdb\u884c\u4e0d\u540c\u7684\u642d\u914d\uff0c\u53ef\u4ee5\u8ba9\u7ba1\u9053\u7684\u6267\u884c\u53d8\u7684\u975e\u5e38\u7684\u7075\u6d3b\u3002","title":"\u5b9a\u4e49\u6267\u884c\u73af\u5883"},{"location":"jenkins/guide/deployment/","text":"\u4e00\u4e2a\u6700\u57fa\u672c\u7684\u6301\u7eed\u5206\u53d1\u7ba1\u9053\u81f3\u5c11\u5305\u542b\u4e09\u4e2a\u9636\u6bb5\uff0c\u5b83\u4eec\u5728 Jenkinsfile \u4e2d\u88ab\u5b9a\u4e49\u4e3a\uff1a \u6784\u5efa \u3001 \u6d4b\u8bd5 \u548c \u5e03\u7f72 \u8fd9\u4e00\u8282\uff0c\u6211\u4eec\u4e3b\u8981\u5173\u6ce8\u5e03\u7f72\u9636\u6bb5\uff0c\u4f46\u8fd9\u4e2a\u9636\u6bb5\u662f\u9700\u8981\u7a33\u5b9a\u7684\u6784\u5efa\u548c\u6d4b\u8bd5\u9636\u6bb5\u7684\u652f\u6301\u624d\u80fd\u8fdb\u884c\u7684\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 pipeline { agent any stages { stage( Build ) { steps { echo Building } } stage( Test ) { steps { echo Testing } } stage( Deploy ) { steps { echo Deploying } } } } \u628a\u9636\u6bb5\u4f5c\u4e3a\u5e03\u7f72\u73af\u5883 \u4e00\u4e2a\u5e38\u7528\u7684\u6a21\u5f0f\u5c31\u662f\u901a\u8fc7\u6269\u5c55\u9636\u6bb5\u7684\u6570\u91cf\u6765\u521b\u5efa\u989d\u5916\u7684\u5e03\u7f72\u73af\u5883\uff0c\u6bd4\u5982\uff1a\"\u9636\u6bb5\"\u548c\"\u4ea7\u54c1\"\uff0c\u4e0b\u9762\u6709\u4e00\u4e2a\u4ee3\u7801\u6bb5\uff1a 1 2 3 4 5 6 7 8 9 10 11 stage( Deploy - Staging ) { steps { sh ./deploy staging sh ./run-smoke-tests } } stage( Deploy - Production ) { steps { sh ./deploy production } } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5047\u8bbe \u5192\u70df\u6d4b\u8bd5 \u901a\u8fc7\u811a\u672c ./run-smoke-tests \u6765\u8fd0\u884c\uff0c\u4ece\u800c\u6d4b\u8bd5\u4ea7\u54c1\u8d28\u91cf\u662f\u5426\u5408\u683c\u3002\u8fd9\u79cd\u4ece\u4ee3\u7801\u5230\u4ea7\u54c1\u81ea\u52a8\u5e03\u7f72\u7684\u7ba1\u9053\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u6301\u7eed\u5206\u53d1\u7684\u5b9e\u73b0\u3002\u8fd9\u662f\u4e00\u79cd\u7406\u60f3\u72b6\u6001\u3002\u6709\u65f6\u5019\uff0c\u6301\u7eed\u5206\u53d1\u5728\u5b9e\u9645\u4e2d\u662f\u4e0d\u80fd\u5b8c\u5168\u5b9e\u73b0\u7684\uff0c\u4e0d\u7ba1\u600e\u6837\uff0c\u8fd9\u4e2a\u4e0d\u5b8c\u6574\u7684\u8fc7\u7a0b\u4ecd\u7136\u53ef\u4ee5\u5e26\u6765\u5f88\u5927\u7684\u597d\u5904\u3002\u5728\u8fd9\u79cd\u4e0d\u80fd\u5b8c\u6574\u5b9e\u73b0\u6301\u7eed\u5206\u53d1\u7684\u65f6\u5019\uff0c Jenkins \u53ef\u4ee5\u63d0\u4f9b\u7528\u6237\u4ea4\u4e92\u6765\u5904\u7406\u5404\u79cd\u60c5\u51b5\u3002 \u5411\u7528\u6237\u63d0\u4f9b\u4ea4\u4e92\u6765\u5904\u7406\u95ee\u9898 \u5728\u4e0d\u540c\u9636\u6bb5\u8f6c\u6362\u8fc7\u7a0b\u4e2d\uff0c\u6709\u65f6\u5019\u9700\u8981\u7528\u6237\u4ea4\u4e92\u6765\u5e72\u9884\uff0c\u4f8b\u5982\uff1a\u9700\u8981\u7528\u6237\u6765\u5224\u65ad\u5e94\u7528\u662f\u5426\u5df2\u7ecf\u8db3\u591f\u597d\u5e76\u53ef\u7528\u4e8e\u751f\u4ea7\u73af\u5883\u4e2d\u3002 Jenkins \u53ef\u4ee5\u4f7f\u7528 input \u6b65\u9aa4\u6765\u83b7\u53d6\u7528\u6237\u8f93\u5165\u3002\u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c Sanity check \u9636\u6bb5\u5982\u679c\u6ca1\u6709\u7528\u6237\u6015\u8f93\u5165\uff0c\u5c31\u4f1a\u963b\u65ad\u6574\u4e2a\u7ba1\u9053\u7684\u8fdb\u5ea6\uff0c\u76f4\u5230\u7528\u6237\u5904\u7406\u5b8c\u624d\u80fd\u7ee7\u7eed\u6267\u884c\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 pipeline { agent any stages { /* Build and Test stages omitted */ stage( Deploy - Staging ) { steps { sh ./deploy staging sh ./run-smoke-tests } } stage( Sanity check ) { steps { input Does the staging environment look ok? } } stage( Deploy - Production ) { steps { sh ./deploy production } } } } \u7ed3\u8bed \u8fd9\u4efd\u5bfc\u89c8\u65e8\u5728\u5f15\u5bfc\u4f60\u4f7f\u7528 Jenkins \u7684\u57fa\u672c\u529f\u80fd\u548c\u7ba1\u9053\u3002\u56e0\u4e3a Jenkins \u975e\u5e38\u6709\u6269\u5c55\u6027\uff0c\u6240\u4ee5\u5b83\u901a\u8fc7\u4fee\u6539\u548c\u914d\u7f6e\u53ef\u4ee5\u5904\u7406\u5176\u5b83\u5404\u7c7b\u7684\u81ea\u52a8\u5316\u95ee\u9898\u3002\u60f3\u8981\u4e86\u89e3\u66f4\u591a\u5173\u4e8e Jenkins \u7684\u4f7f\u7528\uff0c\u53c2\u8003 Jenkins \u4f7f\u7528\u624b\u518c \u6216\u8005 Jenkins \u535a\u5ba2 \u3002","title":"\u5e03\u7f72"},{"location":"jenkins/guide/deployment/#_1","text":"\u4e00\u4e2a\u5e38\u7528\u7684\u6a21\u5f0f\u5c31\u662f\u901a\u8fc7\u6269\u5c55\u9636\u6bb5\u7684\u6570\u91cf\u6765\u521b\u5efa\u989d\u5916\u7684\u5e03\u7f72\u73af\u5883\uff0c\u6bd4\u5982\uff1a\"\u9636\u6bb5\"\u548c\"\u4ea7\u54c1\"\uff0c\u4e0b\u9762\u6709\u4e00\u4e2a\u4ee3\u7801\u6bb5\uff1a 1 2 3 4 5 6 7 8 9 10 11 stage( Deploy - Staging ) { steps { sh ./deploy staging sh ./run-smoke-tests } } stage( Deploy - Production ) { steps { sh ./deploy production } } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5047\u8bbe \u5192\u70df\u6d4b\u8bd5 \u901a\u8fc7\u811a\u672c ./run-smoke-tests \u6765\u8fd0\u884c\uff0c\u4ece\u800c\u6d4b\u8bd5\u4ea7\u54c1\u8d28\u91cf\u662f\u5426\u5408\u683c\u3002\u8fd9\u79cd\u4ece\u4ee3\u7801\u5230\u4ea7\u54c1\u81ea\u52a8\u5e03\u7f72\u7684\u7ba1\u9053\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u6301\u7eed\u5206\u53d1\u7684\u5b9e\u73b0\u3002\u8fd9\u662f\u4e00\u79cd\u7406\u60f3\u72b6\u6001\u3002\u6709\u65f6\u5019\uff0c\u6301\u7eed\u5206\u53d1\u5728\u5b9e\u9645\u4e2d\u662f\u4e0d\u80fd\u5b8c\u5168\u5b9e\u73b0\u7684\uff0c\u4e0d\u7ba1\u600e\u6837\uff0c\u8fd9\u4e2a\u4e0d\u5b8c\u6574\u7684\u8fc7\u7a0b\u4ecd\u7136\u53ef\u4ee5\u5e26\u6765\u5f88\u5927\u7684\u597d\u5904\u3002\u5728\u8fd9\u79cd\u4e0d\u80fd\u5b8c\u6574\u5b9e\u73b0\u6301\u7eed\u5206\u53d1\u7684\u65f6\u5019\uff0c Jenkins \u53ef\u4ee5\u63d0\u4f9b\u7528\u6237\u4ea4\u4e92\u6765\u5904\u7406\u5404\u79cd\u60c5\u51b5\u3002","title":"\u628a\u9636\u6bb5\u4f5c\u4e3a\u5e03\u7f72\u73af\u5883"},{"location":"jenkins/guide/deployment/#_2","text":"\u5728\u4e0d\u540c\u9636\u6bb5\u8f6c\u6362\u8fc7\u7a0b\u4e2d\uff0c\u6709\u65f6\u5019\u9700\u8981\u7528\u6237\u4ea4\u4e92\u6765\u5e72\u9884\uff0c\u4f8b\u5982\uff1a\u9700\u8981\u7528\u6237\u6765\u5224\u65ad\u5e94\u7528\u662f\u5426\u5df2\u7ecf\u8db3\u591f\u597d\u5e76\u53ef\u7528\u4e8e\u751f\u4ea7\u73af\u5883\u4e2d\u3002 Jenkins \u53ef\u4ee5\u4f7f\u7528 input \u6b65\u9aa4\u6765\u83b7\u53d6\u7528\u6237\u8f93\u5165\u3002\u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c Sanity check \u9636\u6bb5\u5982\u679c\u6ca1\u6709\u7528\u6237\u6015\u8f93\u5165\uff0c\u5c31\u4f1a\u963b\u65ad\u6574\u4e2a\u7ba1\u9053\u7684\u8fdb\u5ea6\uff0c\u76f4\u5230\u7528\u6237\u5904\u7406\u5b8c\u624d\u80fd\u7ee7\u7eed\u6267\u884c\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 pipeline { agent any stages { /* Build and Test stages omitted */ stage( Deploy - Staging ) { steps { sh ./deploy staging sh ./run-smoke-tests } } stage( Sanity check ) { steps { input Does the staging environment look ok? } } stage( Deploy - Production ) { steps { sh ./deploy production } } } }","title":"\u5411\u7528\u6237\u63d0\u4f9b\u4ea4\u4e92\u6765\u5904\u7406\u95ee\u9898"},{"location":"jenkins/guide/deployment/#_3","text":"\u8fd9\u4efd\u5bfc\u89c8\u65e8\u5728\u5f15\u5bfc\u4f60\u4f7f\u7528 Jenkins \u7684\u57fa\u672c\u529f\u80fd\u548c\u7ba1\u9053\u3002\u56e0\u4e3a Jenkins \u975e\u5e38\u6709\u6269\u5c55\u6027\uff0c\u6240\u4ee5\u5b83\u901a\u8fc7\u4fee\u6539\u548c\u914d\u7f6e\u53ef\u4ee5\u5904\u7406\u5176\u5b83\u5404\u7c7b\u7684\u81ea\u52a8\u5316\u95ee\u9898\u3002\u60f3\u8981\u4e86\u89e3\u66f4\u591a\u5173\u4e8e Jenkins \u7684\u4f7f\u7528\uff0c\u53c2\u8003 Jenkins \u4f7f\u7528\u624b\u518c \u6216\u8005 Jenkins \u535a\u5ba2 \u3002","title":"\u7ed3\u8bed"},{"location":"jenkins/guide/first-pipeline/","text":"\u5feb\u901f\u521b\u5efa\u4e00\u4e2a\u7ba1\u9053\uff1a \u590d\u5236\u4e0b\u9762\u7684\u5185\u5bb9\uff0c\u5e76\u547d\u540d\u4e3a Jenkinsfile \uff0c\u52a0\u5165\u5230\u7248\u672c\u63a7\u5236\u7684\u4ed3\u5e93\u4e2d(\u6258\u7ba1\u670d\u52a1\u50cfGitHub/Gogs/GitLab)\uff0c\u8fdb\u884c\u8fde\u63a5\u65f6\uff0c\u53ef\u80fd\u9700\u8981\u63d0\u4f9b\u4f60\u5728\u6258\u7ba1\u670d\u52a1\u5546\u90a3\u91cc\u6ce8\u518c\u7684\u5e10\u53f7\u548c\u5bc6\u7801\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 pipeline { agent any stages { stage( Build ) { steps { sh echo Hello World sh echo Multiline shell steps works too ls -lah } } } } \u5728 Jenkins \u7684 web UI \u4e2d\u70b9\u51fb**New Item**\u83dc\u5355\u3002 \u4e3a\u65b0\u5efa\u7684\u7ba1\u9053\u53d6\u4e00\u4e2a\u540d\u5b57\uff08\u4f8b\u5982\uff1a My Pipeline \uff09\uff0c\u7136\u540e\u9009\u62e9**Multibranch Pipeline**\u591a\u5206\u652f\u7ba1\u9053\u3002 \u70b9\u51fb**Add Source**\u6309\u94ae\uff0c\u9009\u62e9\u4f60\u4f7f\u7528\u7684\u7248\u672c\u63a7\u5236\u4ed3\u5e93\u7c7b\u578b\uff0c\u5e76\u586b\u5199\u4e00\u4e9b\u8be6\u60c5\u4fe1\u606f\u3002 \u70b9\u51fb**Save**\u6309\u94ae\uff0c\u89c2\u5bdf\u4f60\u7684\u7b2c\u4e00\u4e2a\u7ba1\u9053\u7684\u8fd0\u884c\u60c5\u51b5\u3002 \u4f60\u53ef\u80fd\u9700\u8981\u5bf9\u793a\u4f8b\u4e2d\u7684\u6587\u672c\u505a\u4e00\u4e9b\u4fee\u6539\u4ee5\u9002\u914d\u4f60\u81ea\u5df1\u7684\u9879\u76ee\u3002\u5728\u4e0d\u540c\u7684\u7cfb\u7edf\u4e0a sh \u7684\u7c7b\u578b\u4e0d\u540c\uff0c\u53ef\u80fd\u9700\u8981\u8c03\u6574\u4e00\u4e0b\u3002 \u5efa\u7acb\u8d77\u81ea\u5df1\u7684\u7ba1\u9053\u540e\uff0cJenkins\u4f1a\u81ea\u52a8\u4fa6\u6d4b\u5230\u4f60\u7684\u5de5\u4f5c\u4ed3\u5e93\u4e2d\u65b0\u5206\u652f\u521b\u5efa\u548c\u65b0\u63a8\u9001\u8bf7\u6c42\u7684\u4e8b\u4ef6\uff0c\u5e76\u542f\u52a8\u76f8\u5e94\u7684\u7ba1\u9053\u4efb\u52a1\u3002 \u793a\u4f8b \u4e0b\u9762\u662f\u5bf9\u5e94\u591a\u79cd\u8bed\u8a00\u7684\u5173\u4e8e\u7ba1\u9053\u7684\u7b80\u5355\u793a\u4f8b,\u7531\u4e8e\u8fd9\u91cc\u7684\u7ba1\u9053\u5b9a\u4e49\u4e86\u548c Do\u001dcker \u76f8\u5173\u7684\u4efb\u52a1\uff0c\u6240\u4ee5\u9700\u8981\u5b89\u88c5 Docker \u001c\u3002 Java 1 2 3 4 5 6 7 8 9 10 pipeline { agent { docker maven : 3.3.3 } stages { stage ( build ){ steps { sh mvn -- version } } } } Node.js / JavaScript 1 2 3 4 5 6 7 8 9 10 pipeline { agent { docker node: 6.3 } stages { stage ( build ) { steps { sh npm --version } } } } Ruby 1 2 3 4 5 6 7 8 9 10 pipeline { agent { docker ruby } stages { stage ( build ) { steps { sh ruby --version } } } } Python 1 2 3 4 5 6 7 8 9 10 pipeline { agent { docker python: 3.5.1 } stages { stage ( build ){ steps { sh python --version } } } } PHP 1 2 3 4 5 6 7 8 9 10 pipeline { agent { docker php } stages { stage( build ) { steps { sh php --version } } } }","title":"\u7b2c\u4e00\u4e2a\u7ba1\u9053"},{"location":"jenkins/guide/first-pipeline/#_1","text":"\u4e0b\u9762\u662f\u5bf9\u5e94\u591a\u79cd\u8bed\u8a00\u7684\u5173\u4e8e\u7ba1\u9053\u7684\u7b80\u5355\u793a\u4f8b,\u7531\u4e8e\u8fd9\u91cc\u7684\u7ba1\u9053\u5b9a\u4e49\u4e86\u548c Do\u001dcker \u76f8\u5173\u7684\u4efb\u52a1\uff0c\u6240\u4ee5\u9700\u8981\u5b89\u88c5 Docker \u001c\u3002","title":"\u793a\u4f8b"},{"location":"jenkins/guide/first-pipeline/#java","text":"1 2 3 4 5 6 7 8 9 10 pipeline { agent { docker maven : 3.3.3 } stages { stage ( build ){ steps { sh mvn -- version } } } }","title":"Java"},{"location":"jenkins/guide/first-pipeline/#nodejs-javascript","text":"1 2 3 4 5 6 7 8 9 10 pipeline { agent { docker node: 6.3 } stages { stage ( build ) { steps { sh npm --version } } } }","title":"Node.js / JavaScript"},{"location":"jenkins/guide/first-pipeline/#ruby","text":"1 2 3 4 5 6 7 8 9 10 pipeline { agent { docker ruby } stages { stage ( build ) { steps { sh ruby --version } } } }","title":"Ruby"},{"location":"jenkins/guide/first-pipeline/#python","text":"1 2 3 4 5 6 7 8 9 10 pipeline { agent { docker python: 3.5.1 } stages { stage ( build ){ steps { sh python --version } } } }","title":"Python"},{"location":"jenkins/guide/first-pipeline/#php","text":"1 2 3 4 5 6 7 8 9 10 pipeline { agent { docker php } stages { stage( build ) { steps { sh php --version } } } }","title":"PHP"},{"location":"jenkins/guide/multiple-steps-pipeline/","text":"\u4e00\u4e2a\u7ba1\u9053\u53ef\u4ee5\u7531\u591a\u4e2a\u6b65\u9aa4\u7ec4\u6210\uff0c\u8fd9\u6837\u5b83\u5c31\u53ef\u4ee5\u8ba9\u4f60\u5b8c\u6210\u50cf\u6784\u5efa\u3001\u6d4b\u8bd5\u548c\u5e03\u7f72\u5e94\u7528\u7684\u4efb\u52a1\u3002 Jenkins \u53ef\u4ee5\u7528\u6bd4\u8f83\u5bb9\u6613\u7684\u65b9\u5f0f\u5e2e\u52a9\u4f60\u5efa\u7acb\u4e00\u4e2a\u591a\u6b65\u9aa4\u7684\u7ba1\u9053\u6765\u6a21\u62df\u5404\u79cd\u7c7b\u578b\u7684\u81ea\u52a8\u5316\u6d41\u7a0b\u3002 \u4e00\u4e2a\u6b65\u9aa4\u5c31\u50cf\u4e00\u6761\u547d\u4ee4\u4e00\u6837\u6267\u884c\u4e00\u4e2a\u52a8\u4f5c\u3002\u4e00\u4e2a\u6b65\u9aa4\u6267\u884c\u6210\u529f\u5c31\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u4e2a\u6b65\u9aa4\uff0c\u7ba1\u9053\u4e2d\u53ea\u8981\u6709\u4e00\u4e2a\u6b65\u9aa4\u6267\u884c\u5931\u8d25\uff0c\u6574\u4e2a\u7ba1\u9053\u5c31\u6267\u884c\u5931\u8d25\u3002 \u7ba1\u9053\u6267\u884c\u6210\u529f\u7684\u5fc5\u8981\u6761\u4ef6\u5c31\u662f\uff0c\u7ba1\u9053\u5305\u542b\u7684\u6bcf\u4e00\u4e2a\u6b65\u9aa4\u90fd\u6267\u884c\u6210\u529f\u3002 Linux/BSD/MacOS\u4e0b\u7684\u591a\u6b65\u9aa4\u7ba1\u9053 1 2 3 4 5 6 7 8 9 10 11 12 13 14 pipeline { agent any stages { stage( Build ) { steps { sh echo Hello World sh echo Multiline shell steps works too ls -lah } } } } Windows\u4e0b\u7684\u591a\u6b65\u9aa4\u7ba1\u9053 1 2 3 4 5 6 7 8 9 10 pipeline { agent any stages { stage( Build ) { steps { bat set } } } } \u5177\u6709\u5904\u7406\u8d85\u65f6\u3001\u91cd\u8bd5\u548c\u5176\u5b83\u673a\u5236\u529f\u80fd\u7684\u6b65\u9aa4 \u4e0b\u9762\u7ba1\u9053\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6700\u591a\u53ef\u4ee5\u91cd\u8bd53\u6b21\u7684\u6b65\u9aa4\uff0c\u548c\u4e00\u4e2a\u8d85\u65f6\u65f6\u95f4\u4e3a3\u5206\u949f\u7684\u6b65\u9aa4\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 pipeline { agent any stages { stage( Deploy ) { steps { retry(3) { sh ./flakey-deploy.sh } timeout(time: 3, unit: MINUTES ) { sh ./health-check.sh } } } } } \u8fd9\u4e9b\u5177\u6709\u7279\u6b8a\u529f\u80fd\u7684\u6b65\u9aa4\u5305\u88f9\u5728\u5176\u5b83\u6b65\u9aa4\u7684\u5916\u9762\u53d1\u6325\u5176\u4f5c\u7528\uff0c\u5f53\u7136\u5b83\u4eec\u4e5f\u53ef\u4ee5\u5d4c\u5957\u4f7f\u7528\u3002\u6765\u770b\u4e00\u4e2a\u5d4c\u5957\u4f7f\u7528\u7684\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 pipeline { agent any stages { stage( Deploy ) { steps { timeout(time: 3, unit: MINUTES ) { retry(5) { sh ./flakey-deploy.sh } } } } } } \u5f53\u7ba1\u9053\u6267\u884c\u5b8c\u6210\u65f6\u505a\u4ec0\u4e48 \u4f60\u53ef\u80fd\u9700\u8981\u5728\u7ba1\u9053\u6267\u884c\u5b8c\u6210\u540e\uff0c\u57fa\u4e8e\u6267\u884c\u7ed3\u679c\u505a\u4e00\u4e9b\u6e05\u7406\u5de5\u4f5c\uff0c\u8fd9\u4e9b\u5de5\u4f5c\u88ab\u653e\u5728 post \u533a\u4e2d\u6267\u884c\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 pipeline { agent any stages { stage( Test ) { steps { sh echo Fail! ; exit 1 } } } post { always { echo This will always run } success { echo This will run only if successful } failure { echo This will run only if failed } unstable { echo This will run only if the run was marked as unstable } changed { echo This will run only if the state of the Pipeline has changed echo For example, if the Pipeline was previously failing but is now successful } } }","title":"\u591a\u6b65\u7ba1\u9053"},{"location":"jenkins/guide/multiple-steps-pipeline/#linuxbsdmacos","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 pipeline { agent any stages { stage( Build ) { steps { sh echo Hello World sh echo Multiline shell steps works too ls -lah } } } }","title":"Linux/BSD/MacOS\u4e0b\u7684\u591a\u6b65\u9aa4\u7ba1\u9053"},{"location":"jenkins/guide/multiple-steps-pipeline/#windows","text":"1 2 3 4 5 6 7 8 9 10 pipeline { agent any stages { stage( Build ) { steps { bat set } } } }","title":"Windows\u4e0b\u7684\u591a\u6b65\u9aa4\u7ba1\u9053"},{"location":"jenkins/guide/multiple-steps-pipeline/#_1","text":"\u4e0b\u9762\u7ba1\u9053\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6700\u591a\u53ef\u4ee5\u91cd\u8bd53\u6b21\u7684\u6b65\u9aa4\uff0c\u548c\u4e00\u4e2a\u8d85\u65f6\u65f6\u95f4\u4e3a3\u5206\u949f\u7684\u6b65\u9aa4\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 pipeline { agent any stages { stage( Deploy ) { steps { retry(3) { sh ./flakey-deploy.sh } timeout(time: 3, unit: MINUTES ) { sh ./health-check.sh } } } } } \u8fd9\u4e9b\u5177\u6709\u7279\u6b8a\u529f\u80fd\u7684\u6b65\u9aa4\u5305\u88f9\u5728\u5176\u5b83\u6b65\u9aa4\u7684\u5916\u9762\u53d1\u6325\u5176\u4f5c\u7528\uff0c\u5f53\u7136\u5b83\u4eec\u4e5f\u53ef\u4ee5\u5d4c\u5957\u4f7f\u7528\u3002\u6765\u770b\u4e00\u4e2a\u5d4c\u5957\u4f7f\u7528\u7684\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 pipeline { agent any stages { stage( Deploy ) { steps { timeout(time: 3, unit: MINUTES ) { retry(5) { sh ./flakey-deploy.sh } } } } } }","title":"\u5177\u6709\u5904\u7406\u8d85\u65f6\u3001\u91cd\u8bd5\u548c\u5176\u5b83\u673a\u5236\u529f\u80fd\u7684\u6b65\u9aa4"},{"location":"jenkins/guide/multiple-steps-pipeline/#_2","text":"\u4f60\u53ef\u80fd\u9700\u8981\u5728\u7ba1\u9053\u6267\u884c\u5b8c\u6210\u540e\uff0c\u57fa\u4e8e\u6267\u884c\u7ed3\u679c\u505a\u4e00\u4e9b\u6e05\u7406\u5de5\u4f5c\uff0c\u8fd9\u4e9b\u5de5\u4f5c\u88ab\u653e\u5728 post \u533a\u4e2d\u6267\u884c\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 pipeline { agent any stages { stage( Test ) { steps { sh echo Fail! ; exit 1 } } } post { always { echo This will always run } success { echo This will run only if successful } failure { echo This will run only if failed } unstable { echo This will run only if the run was marked as unstable } changed { echo This will run only if the state of the Pipeline has changed echo For example, if the Pipeline was previously failing but is now successful } } }","title":"\u5f53\u7ba1\u9053\u6267\u884c\u5b8c\u6210\u65f6\u505a\u4ec0\u4e48"},{"location":"jenkins/guide/recording-test-results-and-artifacts/","text":"\u867d\u7136\u6d4b\u8bd5\u662f\u4e00\u4e2a\u597d\u7684\u6301\u7eed\u5206\u53d1\u7ba1\u9053\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u4f46\u5927\u90e8\u5206\u4eba\u90fd\u4e0d\u613f\u610f\u5728\u51e0\u5343\u884c\u7684\u63a7\u5236\u53f0\u8f93\u51fa\u4e2d\u5bfb\u627e\u6d4b\u8bd5\u5931\u8d25\u7684\u76f8\u5173\u4fe1\u606f\u3002\u4e3a\u4e86\u8ba9\u4e8b\u60c5\u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\uff0c\u53ea\u8981\u4f60\u6d4b\u8bd5\u5668\u53ef\u4ee5\u8f93\u51fa\u6d4b\u8bd5\u7ed3\u679c\u6587\u4ef6\uff0c Jenkins \u5c31\u53ef\u4ee5\u8bb0\u5f55\u5e76\u6c47\u603b\u6d4b\u8bd5\u7ed3\u679c\u3002 Jenkins \u901a\u5e38\u4f1a\u548c junit \u6b65\u9aa4\u6253\u5305\u5728\u4e00\u8d77\uff0c\u4f46\u5982\u679c\u4f60\u7684\u6d4b\u8bd5\u5668\u4e0d\u80fd\u8f93\u51fa JUnit \u98ce\u683c\u7684XML\u62a5\u544a\uff0c Jenkins \u4e5f\u6709\u53ef\u4ee5\u5904\u7406\u5e38\u7528\u6d4b\u8bd5\u62a5\u544a\u683c\u5f0f\u7684\u5176\u5b83\u63d2\u4ef6\u4f9b\u4f7f\u7528\u3002 \u4e3a\u4e86\u6536\u96c6\u6d4b\u8bd5\u7ed3\u679c\uff0c\u6211\u4eec\u5728\u7ba1\u9053\u4e2d\u4f7f\u7528 post \u533a\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 pipeline { agent any stages { stage( Test ) { steps { sh ./gradlew check } } } post { always { junit build/reports/**/*.xml } } } always \u6307\u660e Jenkins \u4e00\u76f4\u8ddf\u8e2a\u5e76\u83b7\u53d6\u6d4b\u8bd5\u7ed3\u679c\uff0c\u57fa\u4e8e\u8fd9\u4e9b\u6d4b\u8bd5\u7ed3\u679c\u8ba1\u7b97\u8d8b\u52bf\u56fe\u548c\u751f\u6210\u62a5\u544a\u3002\u4e00\u4e2a\u6d4b\u8bd5\u5931\u8d25\u7684\u7ba1\u9053\u4f1a\u88ab\u6807\u8bb0\u4e3a UNSTABLE \u72b6\u6001\uff0c\u5728 web UI \u4e2d\u4ee5\u9ec4\u8272\u6807\u8bc6\uff0c\u8fd9\u548c\u4e00\u4e2a FAILED \u72b6\u6001\u7684\u7ba1\u9053\u4e0d\u540c\uff0c\u540e\u8005\u7528\u7ea2\u8272\u6807\u8bc6\u3002 \u5f53\u7ba1\u9053\u4e2d\u6709\u6d4b\u8bd5\u5931\u8d25\u65f6\uff0c\u901a\u5e38\u83b7\u53d6\u6784\u5efa\u8fc7\u7a0b\u4e2d\u751f\u6210\u7684\u4fe1\u606f\u8fdb\u884c\u5206\u6790\u6bd4\u8f83\u6709\u7528\u3002 Jenkins \u652f\u6301\u5b58\u50a8\u8fd9\u4e9b\u6784\u5efa\u8fc7\u7a0b\u4e2d\u751f\u6210\u7684\u4e1c\u897f\u3002 \u8fd9\u4e2a\u6536\u96c6\u53ef\u4ee5\u4f7f\u7528 archive \u6b65\u9aa4\u6765\u8fdb\u884c\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u6587\u4ef6\u83b7\u53d6\u7684\u793a\u4f8b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 pipeline { agent any stages { stage( Build ) { steps { sh ./gradlew build } } stage( Test ) { steps { sh ./gradlew check } } } post { always { archive build/libs/**/*.jar junit build/reports/**/*.xml } } } \u8bb0\u5f55\u6d4b\u8bd5\u548c\u6784\u5efa\u8fc7\u7a0b\u4e2d\u751f\u6210\u7684\u4e1c\u897f\u5728 Jenkins \u4e2d\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u5728\u754c\u9762\u4e2d\u53cd\u6620\u4e00\u4e9b\u4fe1\u606f\u7ed9\u56e2\u961f\u6210\u5458\u3002\u4e0b\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u8981\u8ba8\u8bba\u600e\u4e48\u901a\u77e5\u56e2\u961f\u6210\u5458\u7ba1\u9053\u4e2d\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\u3002","title":"\u8bb0\u5f55\u6d4b\u8bd5\u7ed3\u679c"},{"location":"jenkins/guide/using-environment-variables/","text":"\u73af\u5883\u53d8\u91cf\u53ef\u4ee5\u662f\u5bf9\u5168\u5c40\u6709\u6548\u7684\uff0c\u001c\u4e5f\u53ef\u4ee5\u53ea\u5728 stage \u7684\u8303\u56f4\u5185\u6709\u6548\u3002\u4f8b\u5982: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 pipeline { agent any environment { DISABLE_AUTH = true DB_ENGINE = sqlite } stages { stage( Build ) { steps { sh printenv } } } } \u4e0a\u9762\u7684\u8fd9\u79cd\u73af\u5883\u53d8\u91cf\u5b9a\u4e49\u65b9\u5f0f\u7528\u6765\u6307\u793a\u811a\u672c\u7684\u6267\u884c\u8fc7\u7a0b\u65f6\u975e\u5e38\u6709\u7528\uff0c\u5b83\u53ef\u4ee5\u4f7f \u6784\u5efa \u548c \u6d4b\u8bd5 \u5728 Jenkins \u5185\u90e8\u5728\u4e0d\u540c\u7684\u65b9\u5f0f\u6267\u884c\u3002 \u73af\u5883\u53d8\u91cf\u53e6\u5916\u4e00\u4e2a\u7528\u5904\u662f\u8bbe\u7f6e\u6784\u5efa\u548c\u6d4b\u8bd5\u811a\u672c\u7684\u8d44\u683c\u9a8c\u8bc1\u3002\u56e0\u4e3a\u76f4\u63a5\u628a\u8d44\u683c\u9a8c\u8bc1\u7684\u90e8\u5206\u5199\u5165 Jenkinsfile \u663e\u7136\u65f6\u4e0d\u660e\u667a\u7684\u3002\u4f7f\u7528\u73af\u5883\u53d8\u91cf\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7ba1\u9053\u5b89\u5168\u5feb\u6377\u7684\u8bbf\u95ee\u5230\u9884\u5148\u5b9a\u4e49\u597d\u7684\u8d44\u683c\u9a8c\u8bc1\uff0c\u751a\u81f3\u90fd\u4e0d\u9700\u8981\u77e5\u9053\u8fd9\u4e2a\u8d44\u683c\u9a8c\u8bc1\u5177\u4f53\u662f\u600e\u4e48\u5b9a\u4e49\u7684\u3002 # \u73af\u5883\u53d8\u91cf\u4e2d\u5b9a\u4e49\u8d44\u683c\u9a8c\u8bc1 \u5982\u679c\u4f60\u7684 Jenkins \u73af\u5883\u914d\u7f6e\u4e86\u8d44\u683c\u9a8c\u8bc1\u673a\u5236\uff0c\u8bf8\u5982 \u6784\u5efa\u5bc6\u94a5 \u6216\u8005 API tokens \uff0c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u63d2\u5165\u5230\u73af\u5883\u53d8\u91cf\u4e2d\u4f9b\u7ba1\u9053\u4f7f\u7528\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u662f\u4e00\u4e2a\u5bc6\u6587\u7c7b\u578b\u8d44\u683c\u9a8c\u8bc1\u7684\u793a\u4f8b\uff1a 1 2 3 4 environment { AWS_ACCESS_KEY_ID = credentials( AWS_ACCESS_KEY_ID ) AWS_SECRET_ACCESS_KEY = credentials( AWS_SECRET_ACCESS_KEY ) } \u548c\u7b2c\u4e00\u4e2a\u4f8b\u5b50\u4e00\u6837\uff0c\u8fd9\u4e9b\u53d8\u91cf\u65e2\u53ef\u4ee5\u5168\u5c40\u6709\u6548\uff0c\u4e5f\u53ef\u4ee5\u53ea\u80fd\u67d0\u4e2a\u9636\u6bb5(stage)\u751f\u6548\u3002 \u7b2c\u4e8c\u79cd\u6bd4\u8f83\u5e38\u89c1\u7684\u9a8c\u8bc1\u673a\u5236\u662f \u7528\u6237\u540d/\u5bc6\u7801 \u9a8c\u8bc1\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u73af\u5883\u53d8\u91cf\u6307\u4ee4\uff0c\u4f46\u662f\u4e0e\u76f4\u63a5\u8bbe\u7f6e\u53d8\u91cf\u6709\u4e9b\u533a\u522b\u3002 1 2 3 environment { SAUCE_ACCESS = credentials( sauce-lab-dev ) } \u8fd9\u5b9e\u9645\u4e0a\u8bbe\u7f6e\u4e86\u4e09\u4e2a\u73af\u5883\u53d8\u91cf\uff1a SAUCE_ACCESS \u5305\u542b : SAUCE_ACCESS_USR \u5305\u542b\u7528\u6237\u540d SAUCE_ACCESS_PSW \u5305\u542b\u5bc6\u7801 credentials \u53ea\u5728\u58f0\u660e\u6027\u7684\u7ba1\u9053\u4e2d\u6709\u6548\u3002\u5728\u4f7f\u7528\u811a\u672c\u7684\u7ba1\u9053\uff0c\u53c2\u89c1 withCredentials \u6b65\u9aa4 \u76ee\u524d\uff0c\u6211\u4eec\u4e3b\u8981\u5173\u6ce8\u7684\u662f\u521b\u5efa\u6211\u4eec\u6307\u5b9a\u914d\u7f6e\u548c\u6267\u884c\u6b65\u9aa4\u7684\u7ba1\u9053\u3002\u5728\u63a5\u4e0b\u6765\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u5904\u7406\u6301\u7eed\u5206\u53d1\u53e6\u4e00\u4e2a\u91cd\u8981\u65b9\u9762\uff1a\u754c\u9762\u53cd\u9988\u548c\u4fe1\u606f\u3002","title":"\u4f7f\u7528\u73af\u5883\u53d8\u91cf"},{"location":"job/My Plan for finding Job/","text":"My plan for finding job \u7f51\u7533\u7684\u7f51\u7ad9 \u4e2d\u5174 - \u8f6f\u4ef6\u5f00\u53d1\u5de5\u7a0b\u5e08 \u7528\u6237\u540d\uff1a \u5bc6\u7801\uff1aW5438***** \u5c0f\u7c73 - iOS\u5f00\u53d1(10\u670812\u53f7 \u5317\u90ae) \u7528\u6237\u540d\uff1a \u5bc6\u7801\uff1aW5438***** \u4e50\u89c6\u7f51 - iOS\u5f00\u53d1\u5de5\u7a0b\u5e08 \u7528\u6237\u540d\uff1a \u5bc6\u7801\uff1aW54385***** \u5c55\u8baf - \u8f6f\u4ef6\u5f00\u53d1\u5de5\u7a0b\u5e08 \u7528\u6237\u540d\uff1azhulongyixian \u5bc6\u7801\uff1aW5438***** 360 - ios\u624b\u673a\u8f6f\u4ef6\u5f00\u53d1\u5de5\u7a0b\u5e08 \u7528\u6237\u540d\uff1a15102272032 \u5bc6\u7801\uff1aW5438***** \u5ba3\u8bb2\u57ce\u5e02 \u5ba3\u8bb2\u5b66\u6821 \u5ba3\u8bb2\u65e5\u671f \u5ba3\u8bb2\u65f6\u95f4 \u5ba3\u8bb2\u573a\u5730 \u5929\u6d25 \u5357\u5f00\u5927\u5b66 2015/9/17 19:00-21:00 \u516c\u5171\u6559\u5b66\u697cB203\uff08\u6d25\u5357\u6821\u533a\uff09 \u822a\u5929\u79d1\u5de5\u4e8c\u9662 \u8fd8\u6ca1\u6709\u6210\u7ee9\u5355 \u7528\u6237\u540d\uff1a\u70db\u9f99\u4e00\u73b0 \u5bc6\u7801\uff1aW5438***** \u5fae\u8f6f - Software Enginer 51job \u7528\u6237\u540d: \u5bc6\u7801: W5438***** \u5fae\u8f6f\u5e94\u5c4a\u751fBBS\u95ee\u7b54\u4e13\u533a \u4eac\u4e1c - \u8f6f\u4ef6\u5f00\u53d1\u5de5\u7a0b\u5e08 \u3001\u5ba2\u6237\u7aef\u5f00\u53d1\u5de5\u7a0b\u5e08 \u7528\u6237\u540d\uff1a\u70db\u9f99\u4e00\u73b0 \u5bc6\u7801\uff1aW5438***** \u7f8e\u56e2\u6821\u62db - \u79fb\u52a8\u7aef\u5f00\u53d1\u5de5\u7a0b\u5e08 \u7528\u6237\u540d\uff1awangzhizhou \u5bc6\u7801\uff1aW5******** \u7f8e\u56e2\u6821\u62db2 - \u79fb\u52a8\u7aef\u5f00\u53d1\u5de5\u7a0b\u5e08 \u7528\u6237\u540d\uff1azhulongyixian \u5bc6\u7801\uff1aW5438***** 2015.9.12 \u7761\u8fc7\u5934\u6ca1\u6709\u53c2\u52a0\u7b14\u8bd5 \u767e\u5ea6\u6821\u56ed\u62db\u8058 - \u5317\u4eac-\u79fb\u52a8\u8f6f\u4ef6\u7814\u53d1\u5de5\u7a0b\u5e08 \u7528\u6237\u540d\uff1a \u5bc6\u7801\uff1aW5******** \u817e\u8baf\u6821\u62db - \u8f6f\u4ef6\u5f00\u53d1-\u79fb\u52a8\u5ba2\u6237\u7aef\u5f00\u53d1\u65b9\u5411 \u7528\u6237\u540d\uff1a824****** \u5bc6\u7801\uff1a!@#************* \u963f\u91cc\u6821\u62db - \u5ba2\u6237\u7aef\u5f00\u53d1 \u7528\u6237\u540d\uff1a15102****** \u5bc6\u7801\uff1aW54******* \u534e\u4e3a - IT\u5e94\u7528\u8f6f\u4ef6\u5f00\u53d1\u5de5\u7a0b\u5e08(C++\u5e94\u7528\u8f6f\u4ef6) \u7528\u6237\u540d\uff1azhulongyixian \u5bc6\u7801\uff1a_w54******* \u7231\u5947\u827a - iOS\u7814\u53d1\u5de5\u7a0b\u5e08 \u7528\u6237\u540d\uff1a \u5bc6\u7801\uff1aW5438***** hiho Coder \u7528\u6237\u540d\uff1awangzhizhou2014GitHub \u5bc6\u7801\uff1agithub********* leetCode \u7528\u6237\u540d\uff1a \u5bc6\u7801: W5438***** GitHub \u7528\u6237\u540d\uff1awangzhizhou2014GitHub \u5bc6\u7801\uff1agithub5******** [\u66b4\u98ce\u5f71\u97f3] \u5927\u8857\u7f51\u4e0a\u6295\u9012\u7684 - \u6700\u7ec8\u9009\u62e9\u5165\u804c","title":"My plan for finding job"},{"location":"job/My Plan for finding Job/#my-plan-for-finding-job","text":"","title":"My plan for finding job"},{"location":"job/My Plan for finding Job/#_1","text":"","title":"\u7f51\u7533\u7684\u7f51\u7ad9"},{"location":"job/My Plan for finding Job/#-","text":"\u7528\u6237\u540d\uff1a \u5bc6\u7801\uff1aW5438*****","title":"\u4e2d\u5174 - \u8f6f\u4ef6\u5f00\u53d1\u5de5\u7a0b\u5e08"},{"location":"job/My Plan for finding Job/#-ios1012","text":"\u7528\u6237\u540d\uff1a \u5bc6\u7801\uff1aW5438*****","title":"\u5c0f\u7c73 - iOS\u5f00\u53d1(10\u670812\u53f7 \u5317\u90ae)"},{"location":"job/My Plan for finding Job/#-ios","text":"\u7528\u6237\u540d\uff1a \u5bc6\u7801\uff1aW54385*****","title":"\u4e50\u89c6\u7f51 - iOS\u5f00\u53d1\u5de5\u7a0b\u5e08"},{"location":"job/My Plan for finding Job/#-_1","text":"\u7528\u6237\u540d\uff1azhulongyixian \u5bc6\u7801\uff1aW5438*****","title":"\u5c55\u8baf - \u8f6f\u4ef6\u5f00\u53d1\u5de5\u7a0b\u5e08"},{"location":"job/My Plan for finding Job/#360-ios","text":"\u7528\u6237\u540d\uff1a15102272032 \u5bc6\u7801\uff1aW5438***** \u5ba3\u8bb2\u57ce\u5e02 \u5ba3\u8bb2\u5b66\u6821 \u5ba3\u8bb2\u65e5\u671f \u5ba3\u8bb2\u65f6\u95f4 \u5ba3\u8bb2\u573a\u5730 \u5929\u6d25 \u5357\u5f00\u5927\u5b66 2015/9/17 19:00-21:00 \u516c\u5171\u6559\u5b66\u697cB203\uff08\u6d25\u5357\u6821\u533a\uff09","title":"360 - ios\u624b\u673a\u8f6f\u4ef6\u5f00\u53d1\u5de5\u7a0b\u5e08"},{"location":"job/My Plan for finding Job/#_2","text":"\u7528\u6237\u540d\uff1a\u70db\u9f99\u4e00\u73b0 \u5bc6\u7801\uff1aW5438*****","title":"\u822a\u5929\u79d1\u5de5\u4e8c\u9662 \u8fd8\u6ca1\u6709\u6210\u7ee9\u5355"},{"location":"job/My Plan for finding Job/#-software-enginer","text":"","title":"\u5fae\u8f6f - Software Enginer"},{"location":"job/My Plan for finding Job/#51job","text":"\u7528\u6237\u540d: \u5bc6\u7801: W5438*****","title":"51job"},{"location":"job/My Plan for finding Job/#bbs","text":"","title":"\u5fae\u8f6f\u5e94\u5c4a\u751fBBS\u95ee\u7b54\u4e13\u533a"},{"location":"job/My Plan for finding Job/#-_2","text":"\u7528\u6237\u540d\uff1a\u70db\u9f99\u4e00\u73b0 \u5bc6\u7801\uff1aW5438*****","title":"\u4eac\u4e1c - \u8f6f\u4ef6\u5f00\u53d1\u5de5\u7a0b\u5e08 \u3001\u5ba2\u6237\u7aef\u5f00\u53d1\u5de5\u7a0b\u5e08"},{"location":"job/My Plan for finding Job/#-_3","text":"\u7528\u6237\u540d\uff1awangzhizhou \u5bc6\u7801\uff1aW5********","title":"\u7f8e\u56e2\u6821\u62db - \u79fb\u52a8\u7aef\u5f00\u53d1\u5de5\u7a0b\u5e08"},{"location":"job/My Plan for finding Job/#2-","text":"\u7528\u6237\u540d\uff1azhulongyixian \u5bc6\u7801\uff1aW5438***** 2015.9.12 \u7761\u8fc7\u5934\u6ca1\u6709\u53c2\u52a0\u7b14\u8bd5","title":"\u7f8e\u56e2\u6821\u62db2 - \u79fb\u52a8\u7aef\u5f00\u53d1\u5de5\u7a0b\u5e08"},{"location":"job/My Plan for finding Job/#-_4","text":"\u7528\u6237\u540d\uff1a \u5bc6\u7801\uff1aW5********","title":"\u767e\u5ea6\u6821\u56ed\u62db\u8058 - \u5317\u4eac-\u79fb\u52a8\u8f6f\u4ef6\u7814\u53d1\u5de5\u7a0b\u5e08"},{"location":"job/My Plan for finding Job/#-_5","text":"\u7528\u6237\u540d\uff1a824****** \u5bc6\u7801\uff1a!@#*************","title":"\u817e\u8baf\u6821\u62db - \u8f6f\u4ef6\u5f00\u53d1-\u79fb\u52a8\u5ba2\u6237\u7aef\u5f00\u53d1\u65b9\u5411"},{"location":"job/My Plan for finding Job/#-_6","text":"\u7528\u6237\u540d\uff1a15102****** \u5bc6\u7801\uff1aW54*******","title":"\u963f\u91cc\u6821\u62db - \u5ba2\u6237\u7aef\u5f00\u53d1"},{"location":"job/My Plan for finding Job/#-itc","text":"\u7528\u6237\u540d\uff1azhulongyixian \u5bc6\u7801\uff1a_w54*******","title":"\u534e\u4e3a - IT\u5e94\u7528\u8f6f\u4ef6\u5f00\u53d1\u5de5\u7a0b\u5e08(C++\u5e94\u7528\u8f6f\u4ef6)"},{"location":"job/My Plan for finding Job/#-ios_1","text":"\u7528\u6237\u540d\uff1a \u5bc6\u7801\uff1aW5438*****","title":"\u7231\u5947\u827a - iOS\u7814\u53d1\u5de5\u7a0b\u5e08"},{"location":"job/My Plan for finding Job/#hiho-coder","text":"\u7528\u6237\u540d\uff1awangzhizhou2014GitHub \u5bc6\u7801\uff1agithub*********","title":"hiho Coder"},{"location":"job/My Plan for finding Job/#leetcode","text":"\u7528\u6237\u540d\uff1a \u5bc6\u7801: W5438*****","title":"leetCode"},{"location":"job/My Plan for finding Job/#github","text":"\u7528\u6237\u540d\uff1awangzhizhou2014GitHub \u5bc6\u7801\uff1agithub5********","title":"GitHub"},{"location":"job/My Plan for finding Job/#-_7","text":"","title":"[\u66b4\u98ce\u5f71\u97f3] \u5927\u8857\u7f51\u4e0a\u6295\u9012\u7684 - \u6700\u7ec8\u9009\u62e9\u5165\u804c"},{"location":"job/dimission/","text":"\u79bb\u804c\u65f6\u9700\u8981\u6ce8\u610f\u7684\u95ee\u9898 \u793e\u4fdd\u7684\u7eed\u4ea4 \u6237\u53e3\u7684\u8fc1\u79fb/\u6863\u6848\u7684\u4fdd\u5b58(\u6237\u53e3\u548c\u6863\u6848\u9700\u8981\u540c\u65f6\u7b7e\u51fa\uff0c\u8054\u7cfb\u6587\u6d77\u971e: \u5fae\u4fe1:wen_haixia, \u624b\u673a: 13681468849\uff0c\u6682\u653e\u96c6\u56e2) \u515a\u7ec4\u5173\u7cfb\u8f6c\u79fb(\u66b4\u98ce\u53f2\u4e3d: 139 1159 2687) \u7b80\u5386\u7684\u51c6\u5907 \u804c\u4f4d\u7684\u9009\u62e9 \u85aa\u8d44\u7684\u8981\u6c42","title":"\u79bb\u804c\u65f6\u9700\u8981\u6ce8\u610f\u7684\u95ee\u9898"},{"location":"job/dimission/#_1","text":"\u793e\u4fdd\u7684\u7eed\u4ea4 \u6237\u53e3\u7684\u8fc1\u79fb/\u6863\u6848\u7684\u4fdd\u5b58(\u6237\u53e3\u548c\u6863\u6848\u9700\u8981\u540c\u65f6\u7b7e\u51fa\uff0c\u8054\u7cfb\u6587\u6d77\u971e: \u5fae\u4fe1:wen_haixia, \u624b\u673a: 13681468849\uff0c\u6682\u653e\u96c6\u56e2) \u515a\u7ec4\u5173\u7cfb\u8f6c\u79fb(\u66b4\u98ce\u53f2\u4e3d: 139 1159 2687) \u7b80\u5386\u7684\u51c6\u5907 \u804c\u4f4d\u7684\u9009\u62e9 \u85aa\u8d44\u7684\u8981\u6c42","title":"\u79bb\u804c\u65f6\u9700\u8981\u6ce8\u610f\u7684\u95ee\u9898"},{"location":"life/Gu Bei Shui Zhen/","text":"2017\u5e74\u53e4\u5317\u6c34\u9547\u56fd\u5e86\u65c5\u6e38\u8ba1\u5212 \u884c\u7a0b\u4e24\u5929\uff1a 2017.10.1 - 2017.10.2 \u516c\u8f66\u4fe1\u606f: \u666f\u70b9 \u53e4\u5317\u6c34\u9547 \u53f8\u9a6c\u53f0\u957f\u57ce \u4f4f\u5bbf \u5367\u9f99\u5821\u5ba2\u6808 - 1.5\u7c73\u5927\u5e8a\u623f - \u53cc\b\u4eba\u65e9\u9910 - WiFi - 620\u5143/\u665a - \u53e4\u9547\u95e8\u7968\u4f18\u60e080\u5143/2(\u6309\u6807\u51c6\u5165\u4f4f\u4eba\u6570\u8ba1) \u6b63\u9910 \u53cc\u4eba\u65e9\u9910\u514d\u8d39\u4e00\u5929 \u8d39\u7528\u9884\u8ba1 \u4f4f\u5bbf\uff1a 620\u5143 \u5730\u94c1\uff1a 3\u5143 * 2 * 2 = 12 \u5143 \u4e13\u7ebf\u8f66\u8d39\uff1a 48\u5143 * 2 = 96 \u5143 \u53e4\u9547\u95e8\u7968\uff1a 80\u5143 * 2 = 169 \u5143 \u53f8\u9a6c\u53f0\u957f\u57ce\u7968\uff1a 40\u5143 * 2 = 80 \u5143 \u5171\u8ba1\uff1a 977 \u5143 \u76ee\u524d\u6ca1\u6709\u8ba1\u5165\u81ea\u5907\u996e\u98df\u548c\u53ef\u9009\u6e29\u6cc9\u9879\u76ee\u8d39\u7528 \u76f8\u5173\u94fe\u63a5 \u5b98\u7f51 \u5b9e\u9645\u82b1\u8d39 \u81ea\u5907\u96f6\u98df\uff1a 49.02\u5143 \u5730\u94c1\u51fa\u53d1\uff1a 4\u5143/\u4eba * 2 = 8 \u5143 \u4e1c\u76f4\u95e8\u5230\u53e4\u5317\u6c34\u9547\u76f4\u8fbe\u8f66\uff1a48\u5143/\u4eba * 2\u4eba = 96 \u5143 \u5367\u9f99\u5821\u5ba2\u6808\uff1a620\u5143/\u6807\u95f4(2\u4eba) * 1\u95f4 = 620 \u5143 \u53e4\u9547\u6e38\u89c8\u7968(\u9547\u5185\u4f4f\u5bbf\u4f18\u60e0\u4ef7)\uff1a80\u5143/\u4eba * 2\u4eba = 160 \u5143 \u7172\u4ed4\u996d\uff1a 38\u5143 * 1\u4efd = 38 \u5143 \u519c\u592b\u5c71\u6cc9\uff1a3\u5143/\u74f6 * 3 \u74f6 = 9 \u5143 \u53f8\u9a6c\u53f0\u957f\u57ce\u95e8\u7968\uff1a40\u5143/\u4eba * 2\u4eba = 80 \u5143 \u8c46\u8150\u89d2\uff1a 15\u5143/\u4efd * 1\u4efd= 15 \u5143 \u5bc6\u4e91\u5c0f\u70e7\u8089\uff1a204\u5143 \u53e4\u5317\u6c34\u9547\u81f3\u4e1c\u76f4\u95e8\u76f4\u8fbe\u8f66\uff1a48\u5143/\u4eba * 2\u4eba = 96 \u5143 \u4e1c\u76f4\u95e8\u81f3\u4f4f\u6240\uff1a 4\u5143/\u4eba * 2 \u4eba = 8 \u5143 \u665a\u996d\uff08\u9ebb\u8fa3\u70eb\uff09\uff1a51\u5143 \u5b9e\u9645\u5171\u7528\uff1a 1434.02 \u5143 \u603b\u7ed3\uff1a\u9879\u76ee\u9884\u4f30\u8981\u4ee5 1.5\uff5e2 \u500d\u8ba1\u7b97 \u6ca1\u6709\u4f53\u9a8c\u7684\u90e8\u5206 \u6e29\u6cc9\u4f53\u9a8c\u7968\u6ca1\u6709\u7528\uff0c\u7531\u4e8e\u6ca1\u6709\u5e26\u6cf3\u8863\u53c8\u4e0d\u60f3\u79df\u8863\u670d \u53d1\u73b0 \u5176\u5b9e\u53ef\u4ee5\u4e0d\u7528\u95e8\u7968\u8fdb\u5165\u9547\u5185\uff0c\u552e\u7968\u5927\u5385\u897f\u4fa7\u6709\u4e2a\u6e38\u5ba2\u51fa\u53e3\uff0c\u4e0d\u77e5\u9053\u662f\u5426\u53ef\u4ee5\u6df7\u5165 \u76f8\u5173\u7968\u636e \u9644\u79c1\u7167\u4e00\u5f20","title":"2017\u5e74\u53e4\u5317\u6c34\u9547\u56fd\u5e86\u65c5\u6e38\u8ba1\u5212"},{"location":"life/Gu Bei Shui Zhen/#2017","text":"\u884c\u7a0b\u4e24\u5929\uff1a 2017.10.1 - 2017.10.2","title":"2017\u5e74\u53e4\u5317\u6c34\u9547\u56fd\u5e86\u65c5\u6e38\u8ba1\u5212"},{"location":"life/Gu Bei Shui Zhen/#_1","text":"","title":"\u516c\u8f66\u4fe1\u606f:"},{"location":"life/Gu Bei Shui Zhen/#_2","text":"\u53e4\u5317\u6c34\u9547 \u53f8\u9a6c\u53f0\u957f\u57ce","title":"\u666f\u70b9"},{"location":"life/Gu Bei Shui Zhen/#_3","text":"\u5367\u9f99\u5821\u5ba2\u6808 - 1.5\u7c73\u5927\u5e8a\u623f - \u53cc\b\u4eba\u65e9\u9910 - WiFi - 620\u5143/\u665a - \u53e4\u9547\u95e8\u7968\u4f18\u60e080\u5143/2(\u6309\u6807\u51c6\u5165\u4f4f\u4eba\u6570\u8ba1)","title":"\u4f4f\u5bbf"},{"location":"life/Gu Bei Shui Zhen/#_4","text":"\u53cc\u4eba\u65e9\u9910\u514d\u8d39\u4e00\u5929","title":"\u6b63\u9910"},{"location":"life/Gu Bei Shui Zhen/#_5","text":"\u4f4f\u5bbf\uff1a 620\u5143 \u5730\u94c1\uff1a 3\u5143 * 2 * 2 = 12 \u5143 \u4e13\u7ebf\u8f66\u8d39\uff1a 48\u5143 * 2 = 96 \u5143 \u53e4\u9547\u95e8\u7968\uff1a 80\u5143 * 2 = 169 \u5143 \u53f8\u9a6c\u53f0\u957f\u57ce\u7968\uff1a 40\u5143 * 2 = 80 \u5143 \u5171\u8ba1\uff1a 977 \u5143 \u76ee\u524d\u6ca1\u6709\u8ba1\u5165\u81ea\u5907\u996e\u98df\u548c\u53ef\u9009\u6e29\u6cc9\u9879\u76ee\u8d39\u7528","title":"\u8d39\u7528\u9884\u8ba1"},{"location":"life/Gu Bei Shui Zhen/#_6","text":"\u5b98\u7f51","title":"\u76f8\u5173\u94fe\u63a5"},{"location":"life/Gu Bei Shui Zhen/#_7","text":"\u81ea\u5907\u96f6\u98df\uff1a 49.02\u5143 \u5730\u94c1\u51fa\u53d1\uff1a 4\u5143/\u4eba * 2 = 8 \u5143 \u4e1c\u76f4\u95e8\u5230\u53e4\u5317\u6c34\u9547\u76f4\u8fbe\u8f66\uff1a48\u5143/\u4eba * 2\u4eba = 96 \u5143 \u5367\u9f99\u5821\u5ba2\u6808\uff1a620\u5143/\u6807\u95f4(2\u4eba) * 1\u95f4 = 620 \u5143 \u53e4\u9547\u6e38\u89c8\u7968(\u9547\u5185\u4f4f\u5bbf\u4f18\u60e0\u4ef7)\uff1a80\u5143/\u4eba * 2\u4eba = 160 \u5143 \u7172\u4ed4\u996d\uff1a 38\u5143 * 1\u4efd = 38 \u5143 \u519c\u592b\u5c71\u6cc9\uff1a3\u5143/\u74f6 * 3 \u74f6 = 9 \u5143 \u53f8\u9a6c\u53f0\u957f\u57ce\u95e8\u7968\uff1a40\u5143/\u4eba * 2\u4eba = 80 \u5143 \u8c46\u8150\u89d2\uff1a 15\u5143/\u4efd * 1\u4efd= 15 \u5143 \u5bc6\u4e91\u5c0f\u70e7\u8089\uff1a204\u5143 \u53e4\u5317\u6c34\u9547\u81f3\u4e1c\u76f4\u95e8\u76f4\u8fbe\u8f66\uff1a48\u5143/\u4eba * 2\u4eba = 96 \u5143 \u4e1c\u76f4\u95e8\u81f3\u4f4f\u6240\uff1a 4\u5143/\u4eba * 2 \u4eba = 8 \u5143 \u665a\u996d\uff08\u9ebb\u8fa3\u70eb\uff09\uff1a51\u5143 \u5b9e\u9645\u5171\u7528\uff1a 1434.02 \u5143 \u603b\u7ed3\uff1a\u9879\u76ee\u9884\u4f30\u8981\u4ee5 1.5\uff5e2 \u500d\u8ba1\u7b97","title":"\u5b9e\u9645\u82b1\u8d39"},{"location":"life/Gu Bei Shui Zhen/#_8","text":"\u6e29\u6cc9\u4f53\u9a8c\u7968\u6ca1\u6709\u7528\uff0c\u7531\u4e8e\u6ca1\u6709\u5e26\u6cf3\u8863\u53c8\u4e0d\u60f3\u79df\u8863\u670d","title":"\u6ca1\u6709\u4f53\u9a8c\u7684\u90e8\u5206"},{"location":"life/Gu Bei Shui Zhen/#_9","text":"\u5176\u5b9e\u53ef\u4ee5\u4e0d\u7528\u95e8\u7968\u8fdb\u5165\u9547\u5185\uff0c\u552e\u7968\u5927\u5385\u897f\u4fa7\u6709\u4e2a\u6e38\u5ba2\u51fa\u53e3\uff0c\u4e0d\u77e5\u9053\u662f\u5426\u53ef\u4ee5\u6df7\u5165","title":"\u53d1\u73b0"},{"location":"life/Gu Bei Shui Zhen/#_10","text":"","title":"\u76f8\u5173\u7968\u636e"},{"location":"life/Gu Bei Shui Zhen/#_11","text":"","title":"\u9644\u79c1\u7167\u4e00\u5f20"},{"location":"life/Renting in Beijing/","text":"\u5317\u4eac\u5e02\u6d77\u6dc0\u533a\u5b66\u9662\u8def\u8857\u9053\u7d2b\u6e05\u5bb6\u56ed3\u53f7\u697c-2\u5355\u5143-2804(\u5408\u79df) \u7269\u4e1a\u5de5\u4f5c\u65f6\u95f4: 8:00 - 17:00, \u7269\u4e1a\u5730\u70b9: \u5317\u4eac\u5e02\u6d77\u6dc0\u533a\u53cc\u6e05\u8def\u7d2b\u6e05\u5bb6\u56ed4\u53f7\u697c\u4e8c\u5c42 \u6c34\u8d39 \u81ea\u6765\u6c34\u516c\u53f8\u5b9a\u671f\u6284\u8868\uff0c\u7528\u540e\u7ed3\u7b97\uff0c\u6c34\u5361\u662f\u53ea\u7ba1\u7406\u5395\u6240\u7528\u6c34 \u7535\u8d39 \u5145\u503c200\u5143\uff0c400\u5ea6\u7535\uff0c\u9700\u8981\u8054\u7cfb\u7269\u4e1a\u5f00\u7535\u8868\u95f4\u63d2\u4e0a \u71c3\u6c14\u8d39 \u9700\u8981\u5728\u5efa\u884c\u62ffIC\u5361\u5145\u503c\uff0c\u76ee\u524d\u6682\u4e0d\u652f\u6301\u7f51\u7edc\u4ea4\u8d39\u3002 \u6211\u5148\u4ea4\u4e8691.2\u5143\u8d39\u7528\uff0c\u9884\u8ba1\u4f7f\u75281\u4e2a\u591a\u6708 \u7f51\u7edc\u8d39 \u5728\u79df\u623f\u7684\u670d\u52a1\u8d39\u4e2d\u5305\u542b\u4e86 \u95e8\u9501(\u679c\u52a0GC+) \u5927\u95e8\uff1aMzIyODA0Cg== \u623f\u95f4: NTQzODU5MjMwCg== (2015.12 - 2018.4.7)\u5317\u4eac\u5e02\u6d77\u6dc0\u533a\u6e05\u534e\u4e1c\u8def\u7532\u4e03\u53f7\u96621\u53f7\u697c1202\u5ba4 - \u9694\u9633 \u56e0\u4e3a\u662f\u5408\u79df\u623f\uff0c\u8d39\u7528\u5206\u62c5\u9700\u8981\u548c\u5404\u6237\u5546\u91cf\u597d \u6c34\u8d39 \u53a8\u623f\u548c\u6d17\u624b\u95f4\u5404\u6709\u4e00\u4e2a\u6c34\u8868\uff0c\u901a\u8fc7\u8868\u6570\u5dee\u4e58\u4ee5\u6c34\u8d39\u8d39\u7387\u8ba1\u7b97\u3002\u5317\u4eac\u5e02\u6c34\u8d39\u8d39\u7387\u8bf7\u81ea\u884c\u641c\u7d22\u3002 \u7535\u8d39 \u7535\u8d39\u7f34\u7eb3\u8fd8\u4e0d\u80fd\u901a\u8fc7\u7f51\u7edc\u7684\u65b9\u5f0f\uff0c\u662f\u901a\u8fc7\u5230\u6307\u5b9a\u7684\u5730\u70b9\u7ed9\u7535\u5361\u5145\u503c\u8d2d\u7535\u540e\u63d2\u5165\u4f4f\u6237\u7535\u8868\u53d6\u7535\u7684\u65b9\u5f0f\u8fdb\u884c\u7684\u3002 \u7535\u5361\u5145\u503c\u5730\u70b9 \u5730\u5740: \u82b1\u56ed\u8def1\u53f7\u9662\u5185\uff0c\u5854\u9662\u5199\u5b57\u697c\u897f\u8fb9\u7684\u697c\u91cc\u7684\u4e09\u5c42\u6700\u91cc\u9762\u7684\u5c4b\u5b50 \u53ef\u4ee5\u4ece \u540c\u89c2\u5546\u4e1a\u4e2d\u5fc3 \u6b63\u5bf9\u7740\u7684\u5c0f\u533a\u5165\u53e3\u8fdb\u53bb\u5bfb\u627e, \u7ec6\u7bad\u5934\u662f\u5c0f\u533a\u5165\u53e3 \u5145\u7535\u5361\u5355\u4f4d\u5de5\u4f5c\u65f6\u95f4\uff1a \u5468\u4e00\u81f3\u5468\u4e94 \u4e0a\u5348: 8:00 - 12:00 \u4e0b\u5348: 2:00 - 6:00 \u5bbd\u5e26\u8d39\u7528 \u7f51\u8d39\u53ef\u4ee5\u4f7f\u7528\u5fae\u4fe1\u751f\u6d3b\u7f34\u8d39\u529f\u80fd\u67e5\u8be2\u548c\u7f34\u7eb3\uff1a 11531803 (\u7531\u4e8e\u5f00\u6237\u4eba\u590f\u6653\u7490\u5e10\u6237\u53d8\u66f4\u505c\u7528\u8be5\u4e0a\u7f51\u5e10\u53f7) \u9700\u8981\u81ea\u884c\u5f00\u901a\u7f51\u7edc\u5e10\u53f7, \u6700\u597d\u662f\u4e2a\u4eba\u5e10\u53f7\uff1a \u65b0\u5f00\u4e86\u4e00\u5e74\u7684\u957f\u57ce\u5bbd\u5e2650M, 880\u5143/\u5e74\uff0c \u6bd4\u539f\u6765\u7684\u8054\u901a\u8282\u7701\u4e86\u4e00\u534a\u7684\u8d39\u7528\uff0c\u4e0d\u77e5\u9053\u597d\u4e0d\u597d\u7528\uff0c\u5148\u8bd5\u7528\u4e00\u6bb5\u65f6\u95f4\u518d\u8bf4 \u71c3\u6c14\u8d39 \u53ef\u4ee5\u4f7f\u7528\u5fae\u4fe1\u751f\u6d3b\u7f34\u8d39\u529f\u80fd\u67e5\u8be2\u548c\u7f34\u7eb3\uff1a 96577390000 \u536b\u751f\u6ce8\u610f\u4e8b\u9879 \u53a8\u623f\u4e0d\u8981\u5806\u79ef\u672a\u5403\u5b8c\u7684\u98df\u7269\uff0c\u4f1a\u5438\u5f15\u87d1\u8782 \u5783\u573e\u4e0d\u8981\u653e\u5728\u5c4b\u5185\uff0c\u53ef\u4e34\u65f6\u653e\u4e8e\u95e8\u5916\uff0c\u4e0d\u8fc7\u6700\u597d\u7b2c\u4e8c\u5929\u5c31\u987a\u624b\u5e26\u5230\u697c\u4e0b\u7684\u5783\u573e\u6876\u91cc \u4e0a\u5b8c\u5395\u6240\uff0c\u8bf7\u628a\u7eb8\u653e\u5165\u5395\u7eb8\u6876\uff0c\u4e0d\u8981\u4e22\u5230\u5730\u4e0a\u6216\u8005\u7ba1\u9053\u4e0a\uff0c\u5f88\u96be\u6e05\u7406\uff0c\u6700\u597d\u5728\u5395\u7eb8\u6876\u5185\u5957\u4e2a\u5783\u573e\u888b\uff0c\u4fbf\u4e8e\u6e05\u6d01 \u4e0b\u6c34\u9053\u7684\u8fc7\u6ee4\u5668\u662f\u4e3a\u4e86\u907f\u514d\u7ba1\u9053\u5835\u585e\u7528\u7684\uff0c\u53ef\u4ee5\u628a\u5934\u53d1\u4e1d\u6216\u8005\u522b\u7684\u5927\u5757\u7684\u7269\u54c1\u62e6\u4f4f\uff0c\u6211\u4eec\u4e0d\u8981\u4e3a\u4e86\u65b9\u4fbf\u5c31\u628a\u90a3\u4e2a\u53d6\u8d70\uff0c\u800c\u662f\u8981\u5728\u770b\u5230\u5835\u4e86\u4e4b\u540e\uff0c\u5b9a\u671f\u7684\u6e05\u7406\u8fc7\u6ee4\u5668\u3002\u540c\u6837\u7684\uff0c\u53a8\u623f\u7684\u51b2\u6d17\u6c60\u91cc\u4e5f\u6709\u4e00\u4e2a\u8fc7\u6ee4\u5668\uff0c\u540c\u6837\u7684\u5904\u7406\u65b9\u5f0f\u3002 \u51b0\u7bb1\u662f\u516c\u7528\uff0c\u5927\u5bb6\u6309\u81ea\u5df1\u7684\u9700\u8981\u653e\u4e1c\u897f\uff0c\u4e0d\u8981\u5806\u6ee1\u6216\u8005\u5360\u7528\u592a\u591a\u7a7a\u95f4\uff0c\u7ed9\u5176\u5b83\u4eba\u4e5f\u7559\u70b9\u4f4d\u7f6e","title":"\u5317\u4eac\u5e02\u6d77\u6dc0\u533a\u5b66\u9662\u8def\u8857\u9053\u7d2b\u6e05\u5bb6\u56ed3\u53f7\u697c-2\u5355\u5143-2804(\u5408\u79df)"},{"location":"life/Renting in Beijing/#3-2-2804","text":"\u7269\u4e1a\u5de5\u4f5c\u65f6\u95f4: 8:00 - 17:00, \u7269\u4e1a\u5730\u70b9: \u5317\u4eac\u5e02\u6d77\u6dc0\u533a\u53cc\u6e05\u8def\u7d2b\u6e05\u5bb6\u56ed4\u53f7\u697c\u4e8c\u5c42","title":"\u5317\u4eac\u5e02\u6d77\u6dc0\u533a\u5b66\u9662\u8def\u8857\u9053\u7d2b\u6e05\u5bb6\u56ed3\u53f7\u697c-2\u5355\u5143-2804(\u5408\u79df)"},{"location":"life/Renting in Beijing/#_1","text":"\u81ea\u6765\u6c34\u516c\u53f8\u5b9a\u671f\u6284\u8868\uff0c\u7528\u540e\u7ed3\u7b97\uff0c\u6c34\u5361\u662f\u53ea\u7ba1\u7406\u5395\u6240\u7528\u6c34","title":"\u6c34\u8d39"},{"location":"life/Renting in Beijing/#_2","text":"\u5145\u503c200\u5143\uff0c400\u5ea6\u7535\uff0c\u9700\u8981\u8054\u7cfb\u7269\u4e1a\u5f00\u7535\u8868\u95f4\u63d2\u4e0a","title":"\u7535\u8d39"},{"location":"life/Renting in Beijing/#_3","text":"\u9700\u8981\u5728\u5efa\u884c\u62ffIC\u5361\u5145\u503c\uff0c\u76ee\u524d\u6682\u4e0d\u652f\u6301\u7f51\u7edc\u4ea4\u8d39\u3002 \u6211\u5148\u4ea4\u4e8691.2\u5143\u8d39\u7528\uff0c\u9884\u8ba1\u4f7f\u75281\u4e2a\u591a\u6708","title":"\u71c3\u6c14\u8d39"},{"location":"life/Renting in Beijing/#_4","text":"\u5728\u79df\u623f\u7684\u670d\u52a1\u8d39\u4e2d\u5305\u542b\u4e86","title":"\u7f51\u7edc\u8d39"},{"location":"life/Renting in Beijing/#gc","text":"\u5927\u95e8\uff1aMzIyODA0Cg== \u623f\u95f4: NTQzODU5MjMwCg==","title":"\u95e8\u9501(\u679c\u52a0GC+)"},{"location":"life/Renting in Beijing/#201512-20184711202-","text":"\u56e0\u4e3a\u662f\u5408\u79df\u623f\uff0c\u8d39\u7528\u5206\u62c5\u9700\u8981\u548c\u5404\u6237\u5546\u91cf\u597d","title":"(2015.12 - 2018.4.7)\u5317\u4eac\u5e02\u6d77\u6dc0\u533a\u6e05\u534e\u4e1c\u8def\u7532\u4e03\u53f7\u96621\u53f7\u697c1202\u5ba4 - \u9694\u9633"},{"location":"life/Renting in Beijing/#_5","text":"\u53a8\u623f\u548c\u6d17\u624b\u95f4\u5404\u6709\u4e00\u4e2a\u6c34\u8868\uff0c\u901a\u8fc7\u8868\u6570\u5dee\u4e58\u4ee5\u6c34\u8d39\u8d39\u7387\u8ba1\u7b97\u3002\u5317\u4eac\u5e02\u6c34\u8d39\u8d39\u7387\u8bf7\u81ea\u884c\u641c\u7d22\u3002","title":"\u6c34\u8d39"},{"location":"life/Renting in Beijing/#_6","text":"\u7535\u8d39\u7f34\u7eb3\u8fd8\u4e0d\u80fd\u901a\u8fc7\u7f51\u7edc\u7684\u65b9\u5f0f\uff0c\u662f\u901a\u8fc7\u5230\u6307\u5b9a\u7684\u5730\u70b9\u7ed9\u7535\u5361\u5145\u503c\u8d2d\u7535\u540e\u63d2\u5165\u4f4f\u6237\u7535\u8868\u53d6\u7535\u7684\u65b9\u5f0f\u8fdb\u884c\u7684\u3002","title":"\u7535\u8d39"},{"location":"life/Renting in Beijing/#_7","text":"\u5730\u5740: \u82b1\u56ed\u8def1\u53f7\u9662\u5185\uff0c\u5854\u9662\u5199\u5b57\u697c\u897f\u8fb9\u7684\u697c\u91cc\u7684\u4e09\u5c42\u6700\u91cc\u9762\u7684\u5c4b\u5b50 \u53ef\u4ee5\u4ece \u540c\u89c2\u5546\u4e1a\u4e2d\u5fc3 \u6b63\u5bf9\u7740\u7684\u5c0f\u533a\u5165\u53e3\u8fdb\u53bb\u5bfb\u627e, \u7ec6\u7bad\u5934\u662f\u5c0f\u533a\u5165\u53e3","title":"\u7535\u5361\u5145\u503c\u5730\u70b9"},{"location":"life/Renting in Beijing/#_8","text":"\u5468\u4e00\u81f3\u5468\u4e94 \u4e0a\u5348: 8:00 - 12:00 \u4e0b\u5348: 2:00 - 6:00","title":"\u5145\u7535\u5361\u5355\u4f4d\u5de5\u4f5c\u65f6\u95f4\uff1a"},{"location":"life/Renting in Beijing/#_9","text":"\u7f51\u8d39\u53ef\u4ee5\u4f7f\u7528\u5fae\u4fe1\u751f\u6d3b\u7f34\u8d39\u529f\u80fd\u67e5\u8be2\u548c\u7f34\u7eb3\uff1a 11531803 (\u7531\u4e8e\u5f00\u6237\u4eba\u590f\u6653\u7490\u5e10\u6237\u53d8\u66f4\u505c\u7528\u8be5\u4e0a\u7f51\u5e10\u53f7) \u9700\u8981\u81ea\u884c\u5f00\u901a\u7f51\u7edc\u5e10\u53f7, \u6700\u597d\u662f\u4e2a\u4eba\u5e10\u53f7\uff1a \u65b0\u5f00\u4e86\u4e00\u5e74\u7684\u957f\u57ce\u5bbd\u5e2650M, 880\u5143/\u5e74\uff0c \u6bd4\u539f\u6765\u7684\u8054\u901a\u8282\u7701\u4e86\u4e00\u534a\u7684\u8d39\u7528\uff0c\u4e0d\u77e5\u9053\u597d\u4e0d\u597d\u7528\uff0c\u5148\u8bd5\u7528\u4e00\u6bb5\u65f6\u95f4\u518d\u8bf4","title":"\u5bbd\u5e26\u8d39\u7528"},{"location":"life/Renting in Beijing/#_10","text":"\u53ef\u4ee5\u4f7f\u7528\u5fae\u4fe1\u751f\u6d3b\u7f34\u8d39\u529f\u80fd\u67e5\u8be2\u548c\u7f34\u7eb3\uff1a 96577390000","title":"\u71c3\u6c14\u8d39"},{"location":"life/Renting in Beijing/#_11","text":"\u53a8\u623f\u4e0d\u8981\u5806\u79ef\u672a\u5403\u5b8c\u7684\u98df\u7269\uff0c\u4f1a\u5438\u5f15\u87d1\u8782 \u5783\u573e\u4e0d\u8981\u653e\u5728\u5c4b\u5185\uff0c\u53ef\u4e34\u65f6\u653e\u4e8e\u95e8\u5916\uff0c\u4e0d\u8fc7\u6700\u597d\u7b2c\u4e8c\u5929\u5c31\u987a\u624b\u5e26\u5230\u697c\u4e0b\u7684\u5783\u573e\u6876\u91cc \u4e0a\u5b8c\u5395\u6240\uff0c\u8bf7\u628a\u7eb8\u653e\u5165\u5395\u7eb8\u6876\uff0c\u4e0d\u8981\u4e22\u5230\u5730\u4e0a\u6216\u8005\u7ba1\u9053\u4e0a\uff0c\u5f88\u96be\u6e05\u7406\uff0c\u6700\u597d\u5728\u5395\u7eb8\u6876\u5185\u5957\u4e2a\u5783\u573e\u888b\uff0c\u4fbf\u4e8e\u6e05\u6d01 \u4e0b\u6c34\u9053\u7684\u8fc7\u6ee4\u5668\u662f\u4e3a\u4e86\u907f\u514d\u7ba1\u9053\u5835\u585e\u7528\u7684\uff0c\u53ef\u4ee5\u628a\u5934\u53d1\u4e1d\u6216\u8005\u522b\u7684\u5927\u5757\u7684\u7269\u54c1\u62e6\u4f4f\uff0c\u6211\u4eec\u4e0d\u8981\u4e3a\u4e86\u65b9\u4fbf\u5c31\u628a\u90a3\u4e2a\u53d6\u8d70\uff0c\u800c\u662f\u8981\u5728\u770b\u5230\u5835\u4e86\u4e4b\u540e\uff0c\u5b9a\u671f\u7684\u6e05\u7406\u8fc7\u6ee4\u5668\u3002\u540c\u6837\u7684\uff0c\u53a8\u623f\u7684\u51b2\u6d17\u6c60\u91cc\u4e5f\u6709\u4e00\u4e2a\u8fc7\u6ee4\u5668\uff0c\u540c\u6837\u7684\u5904\u7406\u65b9\u5f0f\u3002 \u51b0\u7bb1\u662f\u516c\u7528\uff0c\u5927\u5bb6\u6309\u81ea\u5df1\u7684\u9700\u8981\u653e\u4e1c\u897f\uff0c\u4e0d\u8981\u5806\u6ee1\u6216\u8005\u5360\u7528\u592a\u591a\u7a7a\u95f4\uff0c\u7ed9\u5176\u5b83\u4eba\u4e5f\u7559\u70b9\u4f4d\u7f6e","title":"\u536b\u751f\u6ce8\u610f\u4e8b\u9879"},{"location":"life/alipay-scan-fu-icon/","text":"\u8fc7\u5e74\u96c6\u798f\u5361\u4e4b\u4eba\u54c1\u7bc7 \u4eca\u5e74\u963f\u91cc\u7684\u798f\u5361\u6d3b\u52a8\uff0c\u6211\u5904\u7406\u51fa\u6765\u7684\u6a21\u677f\u7167\u7247\uff0c\u8d34\u4e00\u4e0b\uff0c\u4f9b\u81ea\u5df1\u4f7f\u7528 \u76ee\u524d\u6211\u96c6\u7684\u798f\u5361 \u4e0b\u9762\u662f\u4e94\u798f\u7684\u4e8c\u503c\u5316\u56fe\u50cf\uff0c\u65b9\u4fbf\u624b\u673a\u968f\u65f6\u626b\u63cf \u7231\u56fd\u798f \u5bcc\u5f3a\u798f \u548c\u8c10\u798f \u53cb\u5584\u798f \u656c\u4e1a\u798f \u5982\u679c\u6709\u798f\u5361\u8d60\u9001\uff0c\u8bf7\u52a0\u597d\u53cb \u6216\u8005\u4f7f\u7528\u53e3\u4ee4 \u5fae\u4fe1/QQ: #\u5431\u53e3\u4ee4#\u590d\u5236\u6d88\u606f\uff0c\u3010\u8bf7\u4f60\u8d50\u6211\u4e00\u5f20\u656c\u4e1a\u798f\u3011QyzU7j05yn\u3010\u652f\u4ed8\u5b9d\uff0c\u8fc7\u798f\u5e74\u3011","title":"Alipay scan fu icon"},{"location":"life/alipay-scan-fu-icon/#_1","text":"\u4eca\u5e74\u963f\u91cc\u7684\u798f\u5361\u6d3b\u52a8\uff0c\u6211\u5904\u7406\u51fa\u6765\u7684\u6a21\u677f\u7167\u7247\uff0c\u8d34\u4e00\u4e0b\uff0c\u4f9b\u81ea\u5df1\u4f7f\u7528 \u76ee\u524d\u6211\u96c6\u7684\u798f\u5361","title":"\u8fc7\u5e74\u96c6\u798f\u5361\u4e4b\u4eba\u54c1\u7bc7"},{"location":"life/alipay-scan-fu-icon/#_2","text":"\u7231\u56fd\u798f \u5bcc\u5f3a\u798f \u548c\u8c10\u798f \u53cb\u5584\u798f \u656c\u4e1a\u798f","title":"\u4e0b\u9762\u662f\u4e94\u798f\u7684\u4e8c\u503c\u5316\u56fe\u50cf\uff0c\u65b9\u4fbf\u624b\u673a\u968f\u65f6\u626b\u63cf"},{"location":"life/alipay-scan-fu-icon/#_3","text":"","title":"\u5982\u679c\u6709\u798f\u5361\u8d60\u9001\uff0c\u8bf7\u52a0\u597d\u53cb"},{"location":"life/alipay-scan-fu-icon/#_4","text":"\u5fae\u4fe1/QQ: #\u5431\u53e3\u4ee4#\u590d\u5236\u6d88\u606f\uff0c\u3010\u8bf7\u4f60\u8d50\u6211\u4e00\u5f20\u656c\u4e1a\u798f\u3011QyzU7j05yn\u3010\u652f\u4ed8\u5b9d\uff0c\u8fc7\u798f\u5e74\u3011","title":"\u6216\u8005\u4f7f\u7528\u53e3\u4ee4"},{"location":"me/Life in Beijing/","text":"\u4eba\u5728\u5317\u4eac \u4ece\u5b66\u6821\u6bd5\u4e1a\u540e\uff0c\u5c31\u6765\u5230\u5317\u4eac\u5de5\u4f5c\uff0c\u516c\u53f8\u7ed9\u4e86\u4e2a\u96c6\u4f53\u6237\u53e3\uff0c\u6240\u4ee5\u524d\u4e24\u5929\u529e\u7406\u4e0b\u6765\uff0c\u62ff\u5230\u4e86\u65b0\u8eab\u4efd\u8bc1\u540e\uff0c\u8981\u529e\u7406\u7684\u4e8b\u60c5\u786e\u5b9e\u8fd8\u662f\u4e0d\u5c11\u7684\u3002\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u62ff\u5230\u4e86\u4e00\u5f20\u95e8\u7968\uff0c\u5176\u5b9e\u4e0d\u7ba1\u5728\u54ea\u4e2a\u57ce\u5e02\uff0c\u751f\u6d3b\u90fd\u5f97\u9760\u81ea\u5df1\uff0c\u53ea\u662f\u5317\u4eac\u8868\u73b0\u7684\u66f4\u52a0\u660e\u663e\u800c\u5df2\uff0c\u4e5f\u8bb8\u8fd9\u624d\u662f\u76f8\u5bf9\u516c\u5e73\u7684\u73af\u5883\u3002 \u53ef\u80fd\u662f\u6211\u56e0\u4e3a\u62ff\u5230\u4e86\u6237\u53e3\u624d\u4f1a\u8fd9\u4e48\u8bf4\uff0c\u8981\u662f\u6211\u62ff\u4e0d\u5230\uff0c\u6211\u4e5f\u4f1a\u8bf4\u8fd9\u4e2a\u57ce\u5e02\u4e0d\u516c\u5e73\uff0c\u8fd9\u662f\u5f88\u6b63\u5e38\u7684\uff0c\u6ca1\u6709\u5fc5\u8981\u56de\u907f\u3002\u4f46\u5176\u5b9e\u6237\u53e3\u8fd9\u4e1c\u897f\u5f53\u771f\u53ea\u662f\u4e3a\u4e86\u7f13\u51b2\u4eba\u53e3\u6d8c\u5165\u7684\u538b\u529b\uff0c\u5b9e\u9645\u4e0a\u4f5c\u7528\u5f88\u6709\u9650\u3002\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u8fd9\u5176\u5b9e\u4e5f\u662f\u5bf9\u6211\u7684\u4e00\u79cd\u80af\u5b9a\uff0c\u867d\u7136\u81ea\u5df1\u4e0d\u600e\u4e48\u4f18\u79c0\uff0c\u4f46\u786e\u5b9e\u4e5f\u8fd8\u662f\u5f88\u52aa\u529b\u7684\uff0c\u8fd9\u79cd\u80af\u5b9a\u5bf9\u6211\u5f88\u91cd\u8981\u3002 \u5bf9\u627e\u5bf9\u8c61\u3001\u7ed3\u5a5a\u3001\u623f\u5b50\u3001\u8f66\u5b50\u8fd9\u4e9b\u4e1c\u897f\u672c\u6765\u662f\u6ca1\u6709\u4ec0\u4e48\u6982\u5ff5\u7684\uff0c\u53ef\u80fd\u4e8c\u5341\u51e0\u5e74\u8bfb\u4e66\u8bfb\u6210\u4e86\u4e2a\u50bb\u5b50\uff0c\u4e0d\u8fc7\u51e1\u4e8b\u90fd\u6709\u4e2a\u8fc7\u7a0b\uff0c\u867d\u7136\u6210\u957f\u7684\u6bd4\u8f83\u6162\uff0c\u4f46\u6bd5\u7adf\u8fd8\u662f\u5728\u6210\u957f\u3002 \u4e00\u5ea6\u5728\u8fdb\u5165\u793e\u4f1a\u5de5\u4f5c\u540e\uff0c\u56e0\u5bf9\u8fd9\u4e2a\u4e16\u754c\u4e0d\u591f\u4e86\u89e3\u548c\u5bf9\u611f\u60c5\u7684\u4e8b\u4e0d\u592a\u4e0a\u5fc3\u800c\u611f\u5230\u5f88\u8ff7\u60d8\uff0c\u751a\u81f3\u73b0\u5728\u4e5f\u6ca1\u597d\u4e00\u4e9b\u3002\u8fd9\u4e5f\u8bb8\u662f\u4e00\u7c7b\u4eba\u5fc5\u987b\u7ecf\u5386\u7684\u4e8b\u60c5\uff0c\u4e5f\u80fd\u5766\u7136\u63a5\u53d7\uff0c\u4e86\u89e3\u751f\u6d3b\u7684\u4e0d\u5bb9\u6613\uff0c\u624d\u4f1a\u66f4\u52a0\u61c2\u5f97\u751f\u6d3b\uff0c\u56e0\u4e3a\u751f\u6d3b\u672c\u6765\u5c31\u4e0d\u5bb9\u6613\uff0c\u4ece\u53e4\u81f3\u4eca\u90fd\u662f\u5982\u6b64\uff0c\u53ea\u4e0d\u8fc7\u5c0f\u7684\u65f6\u5019\u662f\u5927\u4eba\u4eec\u5e2e\u5fd9\u6321\u6389\u4e86\u5927\u90e8\u5206\uff0c\u624d\u80fd\u8ba9\u6211\u6d3b\u7684\u6bd4\u8f83\u8212\u5766\u4e9b\u3002\u73b0\u5728\uff0c\u8f6e\u5230\u81ea\u5df1\u53bb\u9762\u5bf9\u4e86\uff0c\u5f53\u7136\u4e0d\u4f1a\u9000\u7f29\uff0c\u8fd9\u7edd\u5bf9\u662f\u5f53\u7136\u7684\u3002 \u4e00\u76f4\u5728\u60f3\uff0c\u4eba\u7684\u60c5\u7eea\u662f\u5426\u80fd\u6709\u610f\u8bc6\u7684\u5265\u79bb\uff0c\u6709\u65f6\u5019\u80fd\u505a\u5230\u6709\u65f6\u5019\u5f88\u96be\uff0c\u6bd4\u65b9\u8bf4\u5728\u6253 \u738b\u8005\u8363\u8000 \u7684\u65f6\u5019\uff0c\u6bd4\u8d5b\u6253\u8f93\u4e86\u603b\u4f1a\u4e0d\u7531\u81ea\u4e3b\u7684\u602a\u5bf9\u53cb\uff0c\u5148\u4e0d\u8bba\u5bf9\u53cb\u662f\u5426\u5bf9\u9519\uff0c\u4eba\u975e\u5723\u8d24\uff0c\u5e94\u8be5\u662f\u5728\u73b0\u6709\u6761\u4ef6\u4e0b\uff0c\u505a\u5bf9\u4e8b\u60c5\u6709\u76ca\u7684\u4e8b\uff0c\u800c\u4e0d\u662f\u4efb\u7531\u60c5\u7eea\u63a7\u5236\u3002\u6211\u60f3\u8fd9\u4e2a\u6e38\u620f\u786e\u5b9e\u80fd\u591f\u8ba9\u81ea\u5df1\u7684\u60c5\u7eea\u95ee\u9898\u66b4\u9732\u51fa\u6765\uff0c\u53ef\u4ee5\u7528\u6765\u953b\u70bc\u81ea\u5df1\u3002\u56e0\u4e3a\u6211\u5176\u5b9e\u5634\u4e0a\u5bf9\u8f93\u8d62\u65e0\u6240\u8c13\uff0c\u5176\u5b9e\u5fc3\u91cc\u9762\u770b\u7684\u5f88\u91cd\uff0c\u8fd9\u5c31\u662f\u6211\u76ee\u524d\u53d1\u73b0\u7684\u4e00\u4e2a\u95ee\u9898\u3002 \u60f3\u5230\u54ea\uff0c\u5c31\u5199\u5230\u54ea\uff0c\u601d\u8def\u6709\u70b9\u98d8\u7684\u5389\u5bb3-_-# \u5173\u4e8e\u604b\u7231\u95ee\u9898 \u57fa\u4e8e\u4e4b\u524d\u5931\u8d25\u7684\u604b\u7231\u7ecf\u5386\uff0c\u5f00\u59cb\u76f8\u4fe1\u661f\u5ea7\u7406\u8bba\uff0c\u5904\u5973\u548c\u5c04\u624b\u786e\u5b9e\u5f88\u7d2f\u3002 \u5904\u5973\u7537\u5bf9\u8c61\u661f\u5ea7\uff1a \u6469\u7faf\u5ea7\u3001\u91d1\u725b\u5ea7\u3001\u5de8\u87f9\u5ea7\u3001\u5929\u874e\u5ea7 \u5929\u79e4\u5973\u5bf9\u8c61\u661f\u5ea7\uff1a \u6c34\u74f6\u5ea7\u3001\u53cc\u5b50\u5ea7\u3001\u72ee\u5b50\u5ea7\u3001\u5c04\u624b\u5ea7 \u57fa\u4e8e\u661f\u5ea7\u7406\u8bba\uff0c\u627e\u5bf9\u8c61\u662f\u4f5c\u4e2a\u53c2\u8003 \u9047\u5230\u559c\u6b22\u7684\u4eba\u5374\u6293\u4e0d\u4f4f\u771f\u4ed6\u5a18\u7684\u75db\u82e6 \u5173\u4e8e\u5317\u4eac \u6765\u5317\u4eac\u5df2\u7ecf\u5feb\u4e09\u5e74\u4e86\uff0c\u8d8a\u6765\u8d8a\u6ca1\u6709\u76ee\u6807\u4e86\uff0c\u4e0d\u77e5\u9053\u4ece\u4ec0\u4e48\u65f6\u5019\u5f00\u59cb\u53d8\u7684\u60f3\u9003\u907f\uff0c\u751f\u6d3b\u672c\u6765\u5c31\u5f88\u4e0d\u5bb9\u6613\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u600e\u4e48\u6539\u53d8\uff0c\u5b8c\u5168\u6ca1\u6709\u65b9\u5411\u611f\uff0c\u611f\u60c5\u95ee\u9898\u662f\u4e00\u65b9\u9762\uff0c\u4e5f\u4e0d\u77e5\u9053\u600e\u4e48\u5f00\u59cb\u4e00\u6bb5\u611f\u60c5\uff0c\u603b\u4e4b\u5c31\u662f\u5f88\u8ff7\u832b\uff0c\u6bcf\u5929\u5b66\u4e60\u7684\u65f6\u95f4\u53d8\u5f97\u8d8a\u6765\u8d8a\u5c11\uff0c\u6253\u6e38\u620f\u7684\u65f6\u95f4\u53d8\u5f97\u8d8a\u6765\u8d8a\u957f\uff0c\u81ea\u5df1\u77e5\u9053\u8fd9\u6837\u4e0b\u53bb\u4f1a\u5e9f\u6389\uff0c\u4f46\u5c31\u662f\u63a7\u5236\u4e0d\u4f4f\u3002\u6709\u65f6\u4e5f\u5f88\u60f3\u7acb\u4e2aflag\uff0c\u4f46\u6267\u884c\u529b\u4e0d\u50cf\u4ee5\u524d\u90a3\u6837\u597d\u4e86\uff0c\u603b\u662f\u4e09\u5929\u6253\u9c7c\u4e24\u5929\u6492\u7f51\uff0c\u4e0d\u77e5\u9053\u6839\u672c\u539f\u56e0\u662f\u4ec0\u4e48\uff0c\u53ef\u80fd\u662f\u81ea\u5df1\u53d8\u5f97\u8d8a\u6765\u8d8a\u61d2\uff0c\u8d8a\u6765\u8d8a\u6ca1\u6709\u4e0a\u8fdb\u5fc3\u4e86\uff0c\u6bd5\u7adf\u8fde\u4e2a\u4f4f\u7684\u5730\u65b9\u90fd\u8fd8\u6ca1\u6709\u89e3\u51b3\uff0c\u5f88\u96be\u518d\u6709\u5fc3\u601d\u60f3\u522b\u7684\u9ad8\u8fdc\u7684\u7406\u60f3\u5b9e\u73b0\u4ec0\u4e48\u7684\u4e86\u3002\u8fd9\u5c31\u53eb\u4f5c\u88ab\u751f\u6d3b\u78e8\u5e73\u4e86\u68f1\u89d2\u5417\uff1f\u8111\u5b50\u611f\u89c9\u4e00\u5929\u4e0d\u5982\u4e00\u5929\u4e86\uff0c\u6709\u65f6\u4f1a\u83ab\u540d\u5176\u5999\u7684\u6709\u60c5\u7eea\uff0c\u53ef\u80fd\u662f\u72ec\u81ea\u4e00\u4eba\u4e60\u60ef\u4e86\u5427\u3002\u623f\u95f4\u4e5f\u662f\u4e71\u4e86\u4e00\u5339\uff0c\u4e5f\u4e0d\u613f\u610f\u6536\u62fe\uff0c\u6709\u65f6\u5fc3\u8840\u6765\u6f6e\u6536\u62fe\u4e00\u4e0b\uff0c\u4f46\u8fc7\u51e0\u5929\u5c31\u53c8\u4e71\u4e86\u3002\u81ea\u4ece\u5f00\u59cb\u6253\u738b\u8005\u8363\u8000\u8fd9\u4e2a\u6e38\u620f\uff0c\u5bf9\u6211\u7684\u5f71\u54cd\u8fd8\u662f\u633a\u5927\u4e86\uff0c\u5b66\u4f1a\u4e3a\u81ea\u5df1\u627e\u5404\u79cd\u501f\u53e3\uff0c\u6709\u65f6\u813e\u6c14\u4e5f\u662f\u5f88\u5dee\uff0c\u8001\u662f\u60f3\u9a82\u4eba\uff0c\u6c89\u8ff7\u5728\u8fd9\u4e2a\u6e38\u620f\u7684\u65f6\u95f4\u8d8a\u6765\u8d8a\u957f\uff0c\u51e0\u4e4e\u6574\u4e2a\u5468\u672b\u90fd\u6d6a\u8d39\u5728\u8fd9\u4e0a\u9762\u4e86\uff0c\u611f\u89c9\u81ea\u5df1\u7684\u804c\u4e1a\u6ca1\u6709\u4efb\u4f55\u524d\u8fdb\u7684\u8d8b\u52bf\uff0c\u6211\u5f88\u614c\uff0c\u5f88\u60f3\u6539\u53d8\u3002\u81ea\u5df1\u7684\u751f\u6d3b\u4e5f\u6ca1\u50cf\u4ee5\u524d\u90a3\u6837\u4e95\u4e95\u6709\u6761\uff0c\u4ee5\u524d\u603b\u60f3\u7740\u81ea\u5df1\u521b\u9020\u70b9\u4ec0\u4e48\uff0c\u540e\u6765\u53d1\u73b0\u4ec0\u4e48\u90fd\u6ca1\u6709\u5e72\u6210\uff0c\u8fd9\u6837\u7684\u4eba\u751f\u5f88\u632b\u8d25\uff0c\u4f46\u8fd9\u5c31\u662f\u4eba\u751f\u554a\u3002\u5931\u8d25\u4e86\u90fd\u6709\u52c7\u6c14\u9762\u5bf9\uff0c\u5728\u8fd9\u4e2a\u5b64\u5bc2\u7684\u591c\u665a\uff0c\u7a81\u7136\u601d\u7eea\u53d8\u7684\u6e05\u6670\u8d77\u6765\u4e86\uff0c\u60f3\u6e05\u695a\u4e86\u4e00\u8f88\u5b50\u4e0d\u8be5\u8fd9\u4e48\u4e0d\u6e05\u4e0d\u695a\u7684\u8fc7\u5b8c\uff0c\u90a3\u6837\u6ca1\u4ec0\u4e48\u610f\u601d\u3002\u6709\u65f6\u5019\u751f\u6d3b\u6ca1\u6709\u65b9\u5411\uff0c\u662f\u751f\u6d3b\u5728\u8003\u9a8c\u81ea\u5df1\u6709\u6ca1\u6709\u627f\u53d7\u5931\u8d25\u7684\u80fd\u529b\uff0c\u5f3a\u8005\u4e0d\u90fd\u662f\u4e00\u76f4\u80fd\u8d62\u7684\uff0c\u4ed6\u4eec\u66f4\u61c2\u7684\u5982\u4f55\u9762\u5bf9\u5931\u8d25\u3002\u60f3\u5230\u8fd9\u4e9b\uff0c\u6211\u4e5f\u60f3\u8981\u8bd5\u7740\u6539\u53d8\u4e00\u4e0b\u4e86\uff0c\u867d\u7136\u751f\u6d3b\u6709\u65f6\u5019\u771f\u7684\u5f88\u64cd\u86cb\uff0c\u4f46\u80fd\u6709\u4ec0\u4e48\u529e\u6cd5\uff0c\u9664\u4e86\u53bb\u9762\u5bf9\uff0c\u771f\u7684\u505a\u4e0d\u4e86\u522b\u7684\b\u4e8b\u60c5\u4e86\u3002\u4e5f\u8bb8\u662f\u53d7\u4e4b\u524d\u4e00\u4e2a\u7f51\u53cb\u7684\u6fc0\u52b1\u5427\uff0c\u53cd\u6b63\u662f\u65f6\u5019\u6e05\u9192\u4e86\uff0c\u867d\u7136\u7b2c\u4e00\u6b21\u604b\u7231\u7684\u6253\u51fb\u8ba9\u6211\u9893\u5e9f\u4e86\u63a5\u8fd1\u4e09\u5e74\uff0c\u4f46\u6211\u4e0d\u60f3\u518d\u8fd9\u4e48\u9893\u5e9f\u4e0b\u53bb\u4e86\u3002\u73b0\u5728\u867d\u7136\u8fd8\u6709\u65f6\u60f3\u8d77\u90a3\u4e2a\u4eba\uff0c\u4f46\u662f\u5df2\u7ecf\u4e0d\u90a3\u5f3a\u70c8\u4e86\uff0c\u8fc7\u6bb5\u65f6\u95f4\u5e94\u8be5\u4f1a\u5fd8\u8bb0\u4e86\uff0c\u4e5f\u6ca1\u5fc5\u8981\u8d70\u4e0d\u51fa\u6765\u4e86\uff0c\u5bf9\u81ea\u5df1\u597d\u4e00\u70b9\uff0c\u4e16\u754c\u6ca1\u4e86\u8c01\u90fd\u8981\u7ee7\u7eed\u8f6c\u52a8\uff0c\u4e00\u6b21\u5931\u8d25\u7684\u604b\u7231\u7ecf\u5386\u7b97\u4e0d\u4e86\u4ec0\u4e48\uff0c\u867d\u7136\u4e09\u5e74\u540e\u624d\u771f\u6b63\u7684\u6e05\u9192\u8fc7\u6765\uff0c\u4f46\u65f6\u95f4\u8fd8\u6765\u7684\u53ca\uff0c\u8fd8\u6ca1\u6709\u592a\u8fdf\uff0c\u6211\u771f\u7684\u4e0d\u60f3\u50cf\u6211\u7684\u4e09\u8205\u4e00\u6837\uff0c\u4e00\u751f\u88ab\u60c5\u6240\u56f0\uff0c\u6700\u540e\u8d70\u5411\u6b7b\u4ea1\uff0c\u90a3\u6837\u771f\u7684\u4e0d\u503c\u7684\u3002\u672a\u6765\u603b\u4f1a\u6709\u90a3\u4e48\u4e00\u4e2a\u4eba\u613f\u610f\u548c\u4f60\u4e00\u8d77\u8d70\u4e0b\u53bb\u7684\u3002\u4f46\u5728\u90a3\u4e4b\u524d\uff0c\u4f60\u5f97\u90a3\u81ea\u5df1\u4e0d\u90a3\u4e48\u770b\u8d77\u6765\u4e00\u70b9\u751f\u673a\u90fd\u6ca1\u6709\uff0c\u90a3\u6837\u8fde\u4f60\u81ea\u5df1\u90fd\u770b\u4e0d\u8d77\u81ea\u5df1\u4e86\uff0c\u522b\u4eba\u8fd8\u4f1a\u5728\u610f\u4f60\u5417\uff1f \u5728\u5317\u4eac\u5982\u4f55\u5b9a\u5c45\u4e0b\u6765\u8c03\u7814","title":"\u4eba\u5728\u5317\u4eac"},{"location":"me/Life in Beijing/#_1","text":"\u4ece\u5b66\u6821\u6bd5\u4e1a\u540e\uff0c\u5c31\u6765\u5230\u5317\u4eac\u5de5\u4f5c\uff0c\u516c\u53f8\u7ed9\u4e86\u4e2a\u96c6\u4f53\u6237\u53e3\uff0c\u6240\u4ee5\u524d\u4e24\u5929\u529e\u7406\u4e0b\u6765\uff0c\u62ff\u5230\u4e86\u65b0\u8eab\u4efd\u8bc1\u540e\uff0c\u8981\u529e\u7406\u7684\u4e8b\u60c5\u786e\u5b9e\u8fd8\u662f\u4e0d\u5c11\u7684\u3002\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u62ff\u5230\u4e86\u4e00\u5f20\u95e8\u7968\uff0c\u5176\u5b9e\u4e0d\u7ba1\u5728\u54ea\u4e2a\u57ce\u5e02\uff0c\u751f\u6d3b\u90fd\u5f97\u9760\u81ea\u5df1\uff0c\u53ea\u662f\u5317\u4eac\u8868\u73b0\u7684\u66f4\u52a0\u660e\u663e\u800c\u5df2\uff0c\u4e5f\u8bb8\u8fd9\u624d\u662f\u76f8\u5bf9\u516c\u5e73\u7684\u73af\u5883\u3002 \u53ef\u80fd\u662f\u6211\u56e0\u4e3a\u62ff\u5230\u4e86\u6237\u53e3\u624d\u4f1a\u8fd9\u4e48\u8bf4\uff0c\u8981\u662f\u6211\u62ff\u4e0d\u5230\uff0c\u6211\u4e5f\u4f1a\u8bf4\u8fd9\u4e2a\u57ce\u5e02\u4e0d\u516c\u5e73\uff0c\u8fd9\u662f\u5f88\u6b63\u5e38\u7684\uff0c\u6ca1\u6709\u5fc5\u8981\u56de\u907f\u3002\u4f46\u5176\u5b9e\u6237\u53e3\u8fd9\u4e1c\u897f\u5f53\u771f\u53ea\u662f\u4e3a\u4e86\u7f13\u51b2\u4eba\u53e3\u6d8c\u5165\u7684\u538b\u529b\uff0c\u5b9e\u9645\u4e0a\u4f5c\u7528\u5f88\u6709\u9650\u3002\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u8fd9\u5176\u5b9e\u4e5f\u662f\u5bf9\u6211\u7684\u4e00\u79cd\u80af\u5b9a\uff0c\u867d\u7136\u81ea\u5df1\u4e0d\u600e\u4e48\u4f18\u79c0\uff0c\u4f46\u786e\u5b9e\u4e5f\u8fd8\u662f\u5f88\u52aa\u529b\u7684\uff0c\u8fd9\u79cd\u80af\u5b9a\u5bf9\u6211\u5f88\u91cd\u8981\u3002 \u5bf9\u627e\u5bf9\u8c61\u3001\u7ed3\u5a5a\u3001\u623f\u5b50\u3001\u8f66\u5b50\u8fd9\u4e9b\u4e1c\u897f\u672c\u6765\u662f\u6ca1\u6709\u4ec0\u4e48\u6982\u5ff5\u7684\uff0c\u53ef\u80fd\u4e8c\u5341\u51e0\u5e74\u8bfb\u4e66\u8bfb\u6210\u4e86\u4e2a\u50bb\u5b50\uff0c\u4e0d\u8fc7\u51e1\u4e8b\u90fd\u6709\u4e2a\u8fc7\u7a0b\uff0c\u867d\u7136\u6210\u957f\u7684\u6bd4\u8f83\u6162\uff0c\u4f46\u6bd5\u7adf\u8fd8\u662f\u5728\u6210\u957f\u3002 \u4e00\u5ea6\u5728\u8fdb\u5165\u793e\u4f1a\u5de5\u4f5c\u540e\uff0c\u56e0\u5bf9\u8fd9\u4e2a\u4e16\u754c\u4e0d\u591f\u4e86\u89e3\u548c\u5bf9\u611f\u60c5\u7684\u4e8b\u4e0d\u592a\u4e0a\u5fc3\u800c\u611f\u5230\u5f88\u8ff7\u60d8\uff0c\u751a\u81f3\u73b0\u5728\u4e5f\u6ca1\u597d\u4e00\u4e9b\u3002\u8fd9\u4e5f\u8bb8\u662f\u4e00\u7c7b\u4eba\u5fc5\u987b\u7ecf\u5386\u7684\u4e8b\u60c5\uff0c\u4e5f\u80fd\u5766\u7136\u63a5\u53d7\uff0c\u4e86\u89e3\u751f\u6d3b\u7684\u4e0d\u5bb9\u6613\uff0c\u624d\u4f1a\u66f4\u52a0\u61c2\u5f97\u751f\u6d3b\uff0c\u56e0\u4e3a\u751f\u6d3b\u672c\u6765\u5c31\u4e0d\u5bb9\u6613\uff0c\u4ece\u53e4\u81f3\u4eca\u90fd\u662f\u5982\u6b64\uff0c\u53ea\u4e0d\u8fc7\u5c0f\u7684\u65f6\u5019\u662f\u5927\u4eba\u4eec\u5e2e\u5fd9\u6321\u6389\u4e86\u5927\u90e8\u5206\uff0c\u624d\u80fd\u8ba9\u6211\u6d3b\u7684\u6bd4\u8f83\u8212\u5766\u4e9b\u3002\u73b0\u5728\uff0c\u8f6e\u5230\u81ea\u5df1\u53bb\u9762\u5bf9\u4e86\uff0c\u5f53\u7136\u4e0d\u4f1a\u9000\u7f29\uff0c\u8fd9\u7edd\u5bf9\u662f\u5f53\u7136\u7684\u3002 \u4e00\u76f4\u5728\u60f3\uff0c\u4eba\u7684\u60c5\u7eea\u662f\u5426\u80fd\u6709\u610f\u8bc6\u7684\u5265\u79bb\uff0c\u6709\u65f6\u5019\u80fd\u505a\u5230\u6709\u65f6\u5019\u5f88\u96be\uff0c\u6bd4\u65b9\u8bf4\u5728\u6253 \u738b\u8005\u8363\u8000 \u7684\u65f6\u5019\uff0c\u6bd4\u8d5b\u6253\u8f93\u4e86\u603b\u4f1a\u4e0d\u7531\u81ea\u4e3b\u7684\u602a\u5bf9\u53cb\uff0c\u5148\u4e0d\u8bba\u5bf9\u53cb\u662f\u5426\u5bf9\u9519\uff0c\u4eba\u975e\u5723\u8d24\uff0c\u5e94\u8be5\u662f\u5728\u73b0\u6709\u6761\u4ef6\u4e0b\uff0c\u505a\u5bf9\u4e8b\u60c5\u6709\u76ca\u7684\u4e8b\uff0c\u800c\u4e0d\u662f\u4efb\u7531\u60c5\u7eea\u63a7\u5236\u3002\u6211\u60f3\u8fd9\u4e2a\u6e38\u620f\u786e\u5b9e\u80fd\u591f\u8ba9\u81ea\u5df1\u7684\u60c5\u7eea\u95ee\u9898\u66b4\u9732\u51fa\u6765\uff0c\u53ef\u4ee5\u7528\u6765\u953b\u70bc\u81ea\u5df1\u3002\u56e0\u4e3a\u6211\u5176\u5b9e\u5634\u4e0a\u5bf9\u8f93\u8d62\u65e0\u6240\u8c13\uff0c\u5176\u5b9e\u5fc3\u91cc\u9762\u770b\u7684\u5f88\u91cd\uff0c\u8fd9\u5c31\u662f\u6211\u76ee\u524d\u53d1\u73b0\u7684\u4e00\u4e2a\u95ee\u9898\u3002 \u60f3\u5230\u54ea\uff0c\u5c31\u5199\u5230\u54ea\uff0c\u601d\u8def\u6709\u70b9\u98d8\u7684\u5389\u5bb3-_-#","title":"\u4eba\u5728\u5317\u4eac"},{"location":"me/Life in Beijing/#_2","text":"\u57fa\u4e8e\u4e4b\u524d\u5931\u8d25\u7684\u604b\u7231\u7ecf\u5386\uff0c\u5f00\u59cb\u76f8\u4fe1\u661f\u5ea7\u7406\u8bba\uff0c\u5904\u5973\u548c\u5c04\u624b\u786e\u5b9e\u5f88\u7d2f\u3002 \u5904\u5973\u7537\u5bf9\u8c61\u661f\u5ea7\uff1a \u6469\u7faf\u5ea7\u3001\u91d1\u725b\u5ea7\u3001\u5de8\u87f9\u5ea7\u3001\u5929\u874e\u5ea7 \u5929\u79e4\u5973\u5bf9\u8c61\u661f\u5ea7\uff1a \u6c34\u74f6\u5ea7\u3001\u53cc\u5b50\u5ea7\u3001\u72ee\u5b50\u5ea7\u3001\u5c04\u624b\u5ea7 \u57fa\u4e8e\u661f\u5ea7\u7406\u8bba\uff0c\u627e\u5bf9\u8c61\u662f\u4f5c\u4e2a\u53c2\u8003 \u9047\u5230\u559c\u6b22\u7684\u4eba\u5374\u6293\u4e0d\u4f4f\u771f\u4ed6\u5a18\u7684\u75db\u82e6","title":"\u5173\u4e8e\u604b\u7231\u95ee\u9898"},{"location":"me/Life in Beijing/#_3","text":"\u6765\u5317\u4eac\u5df2\u7ecf\u5feb\u4e09\u5e74\u4e86\uff0c\u8d8a\u6765\u8d8a\u6ca1\u6709\u76ee\u6807\u4e86\uff0c\u4e0d\u77e5\u9053\u4ece\u4ec0\u4e48\u65f6\u5019\u5f00\u59cb\u53d8\u7684\u60f3\u9003\u907f\uff0c\u751f\u6d3b\u672c\u6765\u5c31\u5f88\u4e0d\u5bb9\u6613\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u600e\u4e48\u6539\u53d8\uff0c\u5b8c\u5168\u6ca1\u6709\u65b9\u5411\u611f\uff0c\u611f\u60c5\u95ee\u9898\u662f\u4e00\u65b9\u9762\uff0c\u4e5f\u4e0d\u77e5\u9053\u600e\u4e48\u5f00\u59cb\u4e00\u6bb5\u611f\u60c5\uff0c\u603b\u4e4b\u5c31\u662f\u5f88\u8ff7\u832b\uff0c\u6bcf\u5929\u5b66\u4e60\u7684\u65f6\u95f4\u53d8\u5f97\u8d8a\u6765\u8d8a\u5c11\uff0c\u6253\u6e38\u620f\u7684\u65f6\u95f4\u53d8\u5f97\u8d8a\u6765\u8d8a\u957f\uff0c\u81ea\u5df1\u77e5\u9053\u8fd9\u6837\u4e0b\u53bb\u4f1a\u5e9f\u6389\uff0c\u4f46\u5c31\u662f\u63a7\u5236\u4e0d\u4f4f\u3002\u6709\u65f6\u4e5f\u5f88\u60f3\u7acb\u4e2aflag\uff0c\u4f46\u6267\u884c\u529b\u4e0d\u50cf\u4ee5\u524d\u90a3\u6837\u597d\u4e86\uff0c\u603b\u662f\u4e09\u5929\u6253\u9c7c\u4e24\u5929\u6492\u7f51\uff0c\u4e0d\u77e5\u9053\u6839\u672c\u539f\u56e0\u662f\u4ec0\u4e48\uff0c\u53ef\u80fd\u662f\u81ea\u5df1\u53d8\u5f97\u8d8a\u6765\u8d8a\u61d2\uff0c\u8d8a\u6765\u8d8a\u6ca1\u6709\u4e0a\u8fdb\u5fc3\u4e86\uff0c\u6bd5\u7adf\u8fde\u4e2a\u4f4f\u7684\u5730\u65b9\u90fd\u8fd8\u6ca1\u6709\u89e3\u51b3\uff0c\u5f88\u96be\u518d\u6709\u5fc3\u601d\u60f3\u522b\u7684\u9ad8\u8fdc\u7684\u7406\u60f3\u5b9e\u73b0\u4ec0\u4e48\u7684\u4e86\u3002\u8fd9\u5c31\u53eb\u4f5c\u88ab\u751f\u6d3b\u78e8\u5e73\u4e86\u68f1\u89d2\u5417\uff1f\u8111\u5b50\u611f\u89c9\u4e00\u5929\u4e0d\u5982\u4e00\u5929\u4e86\uff0c\u6709\u65f6\u4f1a\u83ab\u540d\u5176\u5999\u7684\u6709\u60c5\u7eea\uff0c\u53ef\u80fd\u662f\u72ec\u81ea\u4e00\u4eba\u4e60\u60ef\u4e86\u5427\u3002\u623f\u95f4\u4e5f\u662f\u4e71\u4e86\u4e00\u5339\uff0c\u4e5f\u4e0d\u613f\u610f\u6536\u62fe\uff0c\u6709\u65f6\u5fc3\u8840\u6765\u6f6e\u6536\u62fe\u4e00\u4e0b\uff0c\u4f46\u8fc7\u51e0\u5929\u5c31\u53c8\u4e71\u4e86\u3002\u81ea\u4ece\u5f00\u59cb\u6253\u738b\u8005\u8363\u8000\u8fd9\u4e2a\u6e38\u620f\uff0c\u5bf9\u6211\u7684\u5f71\u54cd\u8fd8\u662f\u633a\u5927\u4e86\uff0c\u5b66\u4f1a\u4e3a\u81ea\u5df1\u627e\u5404\u79cd\u501f\u53e3\uff0c\u6709\u65f6\u813e\u6c14\u4e5f\u662f\u5f88\u5dee\uff0c\u8001\u662f\u60f3\u9a82\u4eba\uff0c\u6c89\u8ff7\u5728\u8fd9\u4e2a\u6e38\u620f\u7684\u65f6\u95f4\u8d8a\u6765\u8d8a\u957f\uff0c\u51e0\u4e4e\u6574\u4e2a\u5468\u672b\u90fd\u6d6a\u8d39\u5728\u8fd9\u4e0a\u9762\u4e86\uff0c\u611f\u89c9\u81ea\u5df1\u7684\u804c\u4e1a\u6ca1\u6709\u4efb\u4f55\u524d\u8fdb\u7684\u8d8b\u52bf\uff0c\u6211\u5f88\u614c\uff0c\u5f88\u60f3\u6539\u53d8\u3002\u81ea\u5df1\u7684\u751f\u6d3b\u4e5f\u6ca1\u50cf\u4ee5\u524d\u90a3\u6837\u4e95\u4e95\u6709\u6761\uff0c\u4ee5\u524d\u603b\u60f3\u7740\u81ea\u5df1\u521b\u9020\u70b9\u4ec0\u4e48\uff0c\u540e\u6765\u53d1\u73b0\u4ec0\u4e48\u90fd\u6ca1\u6709\u5e72\u6210\uff0c\u8fd9\u6837\u7684\u4eba\u751f\u5f88\u632b\u8d25\uff0c\u4f46\u8fd9\u5c31\u662f\u4eba\u751f\u554a\u3002\u5931\u8d25\u4e86\u90fd\u6709\u52c7\u6c14\u9762\u5bf9\uff0c\u5728\u8fd9\u4e2a\u5b64\u5bc2\u7684\u591c\u665a\uff0c\u7a81\u7136\u601d\u7eea\u53d8\u7684\u6e05\u6670\u8d77\u6765\u4e86\uff0c\u60f3\u6e05\u695a\u4e86\u4e00\u8f88\u5b50\u4e0d\u8be5\u8fd9\u4e48\u4e0d\u6e05\u4e0d\u695a\u7684\u8fc7\u5b8c\uff0c\u90a3\u6837\u6ca1\u4ec0\u4e48\u610f\u601d\u3002\u6709\u65f6\u5019\u751f\u6d3b\u6ca1\u6709\u65b9\u5411\uff0c\u662f\u751f\u6d3b\u5728\u8003\u9a8c\u81ea\u5df1\u6709\u6ca1\u6709\u627f\u53d7\u5931\u8d25\u7684\u80fd\u529b\uff0c\u5f3a\u8005\u4e0d\u90fd\u662f\u4e00\u76f4\u80fd\u8d62\u7684\uff0c\u4ed6\u4eec\u66f4\u61c2\u7684\u5982\u4f55\u9762\u5bf9\u5931\u8d25\u3002\u60f3\u5230\u8fd9\u4e9b\uff0c\u6211\u4e5f\u60f3\u8981\u8bd5\u7740\u6539\u53d8\u4e00\u4e0b\u4e86\uff0c\u867d\u7136\u751f\u6d3b\u6709\u65f6\u5019\u771f\u7684\u5f88\u64cd\u86cb\uff0c\u4f46\u80fd\u6709\u4ec0\u4e48\u529e\u6cd5\uff0c\u9664\u4e86\u53bb\u9762\u5bf9\uff0c\u771f\u7684\u505a\u4e0d\u4e86\u522b\u7684\b\u4e8b\u60c5\u4e86\u3002\u4e5f\u8bb8\u662f\u53d7\u4e4b\u524d\u4e00\u4e2a\u7f51\u53cb\u7684\u6fc0\u52b1\u5427\uff0c\u53cd\u6b63\u662f\u65f6\u5019\u6e05\u9192\u4e86\uff0c\u867d\u7136\u7b2c\u4e00\u6b21\u604b\u7231\u7684\u6253\u51fb\u8ba9\u6211\u9893\u5e9f\u4e86\u63a5\u8fd1\u4e09\u5e74\uff0c\u4f46\u6211\u4e0d\u60f3\u518d\u8fd9\u4e48\u9893\u5e9f\u4e0b\u53bb\u4e86\u3002\u73b0\u5728\u867d\u7136\u8fd8\u6709\u65f6\u60f3\u8d77\u90a3\u4e2a\u4eba\uff0c\u4f46\u662f\u5df2\u7ecf\u4e0d\u90a3\u5f3a\u70c8\u4e86\uff0c\u8fc7\u6bb5\u65f6\u95f4\u5e94\u8be5\u4f1a\u5fd8\u8bb0\u4e86\uff0c\u4e5f\u6ca1\u5fc5\u8981\u8d70\u4e0d\u51fa\u6765\u4e86\uff0c\u5bf9\u81ea\u5df1\u597d\u4e00\u70b9\uff0c\u4e16\u754c\u6ca1\u4e86\u8c01\u90fd\u8981\u7ee7\u7eed\u8f6c\u52a8\uff0c\u4e00\u6b21\u5931\u8d25\u7684\u604b\u7231\u7ecf\u5386\u7b97\u4e0d\u4e86\u4ec0\u4e48\uff0c\u867d\u7136\u4e09\u5e74\u540e\u624d\u771f\u6b63\u7684\u6e05\u9192\u8fc7\u6765\uff0c\u4f46\u65f6\u95f4\u8fd8\u6765\u7684\u53ca\uff0c\u8fd8\u6ca1\u6709\u592a\u8fdf\uff0c\u6211\u771f\u7684\u4e0d\u60f3\u50cf\u6211\u7684\u4e09\u8205\u4e00\u6837\uff0c\u4e00\u751f\u88ab\u60c5\u6240\u56f0\uff0c\u6700\u540e\u8d70\u5411\u6b7b\u4ea1\uff0c\u90a3\u6837\u771f\u7684\u4e0d\u503c\u7684\u3002\u672a\u6765\u603b\u4f1a\u6709\u90a3\u4e48\u4e00\u4e2a\u4eba\u613f\u610f\u548c\u4f60\u4e00\u8d77\u8d70\u4e0b\u53bb\u7684\u3002\u4f46\u5728\u90a3\u4e4b\u524d\uff0c\u4f60\u5f97\u90a3\u81ea\u5df1\u4e0d\u90a3\u4e48\u770b\u8d77\u6765\u4e00\u70b9\u751f\u673a\u90fd\u6ca1\u6709\uff0c\u90a3\u6837\u8fde\u4f60\u81ea\u5df1\u90fd\u770b\u4e0d\u8d77\u81ea\u5df1\u4e86\uff0c\u522b\u4eba\u8fd8\u4f1a\u5728\u610f\u4f60\u5417\uff1f","title":"\u5173\u4e8e\u5317\u4eac"},{"location":"me/Life in Beijing/#_4","text":"","title":"\u5728\u5317\u4eac\u5982\u4f55\u5b9a\u5c45\u4e0b\u6765\u8c03\u7814"},{"location":"me/My Financial Planning/","text":"\u6211\u7684\u7406\u8d22\u89c4\u5212 \u91cd\u8981\u539f\u5219\uff1a \u5f00\u6e90\u8282\u6d41 \u5408\u7406\u8ba1\u5212 \u4e2a\u4eba\u57fa\u672c\u60c5\u51b5 \u5e94\u7a0e\u5de5\u8d44 = \u7a0e\u524d\u6536\u5165 - \u793e\u4fdd - \u516c\u79ef\u91d1(5%-12% * \u57fa\u6570(\u5e74\u85aa\u5747\u520612\u4e2a\u6708) \u4e2a\u4eba\u6240\u5f97\u7a0e = (\u5e94\u7a0e\u5de5\u8d44 - \u8d77\u5f81\u70b9\uff09* \u7a0e\u7387 - \u901f\u7b97\u6263 \u85aa\u8d44\u8ba1\u7b97\u65b9\u6cd5: \u7a0e\u540e\u6536\u5165 = \u5e94\u7a0e\u5de5\u8d44 - \u4e2a\u4eba\u6240\u5f97\u7a0e \u66b4\u98ce\u5f71\u97f3\u5de5\u4f5c\u671f\u95f4 (2016.02.25 - 2018.04.30) \u7a0e\u524d\u603b\u6536\u5165\u7ec4\u6210\uff1a\u5de5\u8d44 + \u8865\u52a9(\u9910\u8865/\u52a0\u73ed\u8d39/\u8003\u52e4/\u63d0\u6210/\u672a\u4f11\u5e74\u5047\u8865\u85aa) \u4e2a\u4eba\u6240\u5f97\u7a0e\u8d77\u5f81\u70b9\u4e3a: 3500\u5143\uff0c\u7a0e\u7387\u4e3a20%\uff0c\u57fa\u6570\u4e3a\u7a0e\u524d\u603b\u6536\u5165 \u7a0e\u524d\u5de5\u8d44\uff1a13000\u5143/\u6708\uff0c\u4ece\u4e8biOS\u7814\u53d1\u5de5\u4f5c\u3002 \u66b4\u98ce\u5f71\u97f3\u76ee\u524d\u4f7f\u7528\u516c\u79ef\u91d1\u6bd4\u4f8b\u4e3a\uff1a 9% , \u7f34\u5b58\u57fa\u6570\u4e3a\u7a0e\u524d\u5de5\u8d44\uff0c\u516c\u53f8\u548c\u4e2a\u4eba\u5404\u51fa\u4e00\u4efd\u5b58\u5165\u516c\u79ef\u91d1\u5e10\u6237\uff0c\u5373\u6bcf\u6708: 13000 * 9% * 2 = 2340 , \u4f46\u5bf9\u5e10\u6e05\u5355\u662f 2304\u5143/\u6708\uff0c\u6000\u7591\u662f\u4e0d\u662f\u6253\u9519\u540e\u4e24\u4f4d\u4e86\uff0c\u8fd9\u53ef\u5dee\u4e8636\u5757\u554a\u3002 \u793e\u4f1a\u4fdd\u969c\uff1a982.2\u5143/\u6708\uff0c \u57fa\u6570\u4e3a\u7a0e\u524d\u5de5\u8d44 \u6bcf\u6708\u5f00\u652f\uff1a \u623f\u79df\uff1a1900\u5143/\u6708 \u901a\u8baf\u8d39\u7528\uff1a100\u5143/\u6708 \u9910\u8d39: 1500\u5143/\u6708 (\u6bcf\u592950\uff0c\u4e00\u670830\u5929\uff09 \u7fbd\u6bdb\u7403: 120\u5143/\u6708 \uff08\u4e00\u5468\u4e24\u6b21\uff0c\u5355\u573a2\u4eba\uff0c\u6bcf\u4eba15\u5143\uff09 \u4e0a\u4e0b\u73ed\u8f66\u8d39\uff1a120\u5143/\u6708 \uff08\u4e0a\u4e0b\u73ed 4\u5143/\u5929\uff09 \u7f8e\u56e2\u9152\u65c5\u5de5\u4f5c\u671f\u95f4 (2018.05.02 - ) \u7a0e\u524d\u603b\u6536\u5165\u7ec4\u6210: \u5de5\u8d44 + \u5956\u91d1 + \u8865\u52a9(\u9910\u8865/\u52a0\u73ed\u8d39/\u8003\u52e4/\u63d0\u6210/\u672a\u4f11\u5e74\u5047\u8865\u85aa) \u4e2a\u7a0e\u8d77\u5f81\u70b9\uff1a 3500\u5143\uff0c\u7a0e\u7387\uff1a25%\uff0c \u901f\u7b97\u6263\u9664\u6570\uff1a1005 \u7a0e\u524d\u6536\u5165: 24000\u5143 \u793e\u4fdd\u516c\u79ef\u91d1: 5331\u5143 = 2880(\u516c\u79ef\u91d1) + 2451(\u793e\u4fdd) = \uff0812% + 2% + 8 + 0.2%) * 24000 \u516c\u79ef\u91d1\u57fa\u6570: 24000\u5143\uff0c\u6708\u7f34\u5b58\u6570: 2880\u5143, \u7f34\u5b58\u6bd4\u4f8b(\u516c\u53f8\u548c\u4e2a\u4eba): 12%\uff0c \u793e\u4fdd: 1 2 3 4 5 6 7 8 9 \u533b\u4fdd(\u516c\u53f810%\uff0c\u4e2a\u4eba2%), \u57fa\u6570: 24000\u5143 \u517b\u8001\u4fdd\u9669(\u516c\u53f819%\uff0c\u4e2a\u4eba8%), \u57fa\u6570: 24000\u5143 \u5931\u4e1a\u4fdd\u9669(\u516c\u53f80.8%\uff0c\u4e2a\u4eba0.2%), \u57fa\u6570: 24000\u5143 \u5de5\u4f24\u4fdd\u9669(\u516c\u53f80.3%\uff0c\u4e2a\u4eba0%), \u57fa\u6570: 24000\u5143 \u751f\u80b2\u4fdd\u9669(\u516c\u53f80.8%\uff0c\u4e2a\u4eba0%), \u57fa\u6570: 24000\u5143 \u5e94\u7a0e\u5de5\u8d44(\u65e0\u5956\u91d1)\uff1a 24000 - 5331 = 18669\u5143 \u4e2a\u4eba\u6240\u5f97\u7a0e\uff1a \uff0818669 - 3500\uff09* 25% - 1005 = 2787.25\u5143 \u7a0e\u540e\u5de5\u8d44\uff1a 18669 - 2787.25 = 15881.75\u5143 \u6bcf\u6708\u5f00\u652f\uff1a \u623f\u79df\uff1a2760\u5143/\u6708 \u901a\u8baf\u8d39\u7528\uff1a80\u5143/\u6708 \u9910\u8d39: 1500\u5143/\u6708 (\u6bcf\u592950\uff0c\u4e00\u670830\u5929\uff09 \u4e0a\u4e0b\u73ed\u8f66\u8d39\uff1a300\u5143/\u6708 \uff08\u4e0a\u4e0b\u73ed 10\u5143/\u5929\uff09 \u8d44\u91d1\u5b58\u653e\u65b9\u5f0f\uff1a \u5fae\u4fe1\u94b1\u5305(\u5c3d\u91cf\u4e0d\u653e\uff0c\u53ea\u662f\u7ed1\u5b9a\u94f6\u884c\u5361) \u652f\u4ed8\u5b9d(\u4e0d\u653e\uff0c\u6d3b\u52a8\u8d44\u91d1\u653e\u5165\u4f59\u989d\u5b9d) \u4f59\u989d\u5b9d(\u6708\u751f\u6d3b\u8d39\u76846\u500d\uff0c\u7075\u6d3b\u5b58\u53d6) \u5de5\u8d44\u5361(\u6d3b\u671f\uff0c\u65e0\u5229\u606f\uff0c\u6709\u5f85\u4f18\u5316) \u4fe1\u7528\u5361(\u7528\u6765\u6d77\u5916\u8d2d\u548c\u5e94\u6025) \u793e\u4f1a\u4fdd\u969c\u5361(\u4e70\u836f) \u5b58\u6298(\u76ee\u524d\u8fd8\u672a\u529e\u7406, \u6709\u5f85\u4f18\u5316) \u8d44\u91d1\u5206\u5272\u65b9\u5f0f \u7236\u6bcd\u8d61\u517b\u8d39: 1000\u5143/\u6708 \u7b97\u4e0b\u7ed3\u4f59\u6bd4\u7387: 50% \u5c5e\u4e8e\u5408\u7406\u7ed3\u6784 \u4fdd\u969c\u6027\u5546\u4e1a\u4fdd\u9669: \u94f6\u884c\u901a\u6da8\u4f1a\u8d2c\u503c \u5de5\u8d44\u5212\u5206 \u65e5\u5e38\u5e94\u6025\u8d44\u91d1 \u5e94\u6025\u8d44\u91d1\u5e94\u7528\u4e3a\u65e5\u5e38\u751f\u6d3b\u8d39\u7684 3~6 \u500d, \u53ef\u653e\u5165\u4f59\u989d\u5b9d\u4fdd\u8bc1\u5b58\u53d6\u7075\u6d3b\u6027\uff0c\u8fd8\u53ef\u4ee5\u6709\u6240\u6536\u76ca\u3002 \u8d2d\u4e70\u56fa\u5b9a\u6536\u76ca\u7406\u8d22\u4ea7\u54c1 \u94f6\u884c\u7406\u8d22\u4ea7\u54c1\u3001\u4e92\u8054\u7f51\u91d1\u878d\u3001\u56fd\u503a \u8d2d\u4e70\u4e00\u5b9a\u7684\u5546\u4e1a\u4fdd\u9669 \u610f\u5916\u4f24\u5bb3\u9669\u3001\u91cd\u5927\u75be\u75c5\u9669\u3001\u5b9a\u671f\u5bff\u9669 \u503a\u52a1\u72b6\u51b5 \u738b\u6e2f\u501f: 1.5w+, \u652f\u4ed8\u5b9d\u65b9\u5f0f\u8f6c\u5e10 \u5218\u751f\u4eae\u501f: 8k, \u652f\u4ed8\b\u5b9d\u8f6c\u5e10(\u5df2\u8fd8) \u5218\u751f\u4eae\u501f\uff1a1w\uff0c\u652f\u4ed8\u5b9d\u65b9\u5f0f\u8f6c\u5e10\uff0c\u5df2\u8fd8 \u5218\u751f\u4eae\u501f\uff1a1.5w\uff0c\u652f\u4ed8\u5b9d\u65b9\u5f0f\u8f6c\u5e10, \u5df2\u8fd8 \u5218\u5b81\u501f\uff1a1w, \u5de5\u884c\u5361\u8f6c\u5e10\uff0c\u670d\u52a1\u8d3910\u5143, \u5df2\u8fd87k\uff0c\u5269\u4f593k \u738b\u8fdc\u5f3a\u501f: 2w, \u670d\u52a1\u8d3920\u5143\uff0c\u5317\u4eac\u94f6\u884c\u8f6c\u5e10(\u5df2\u8fd8) \u674e\u6653\u9e4f\u501f\uff1a2.5k \u53c2\u52a0\u7684\u5a5a\u793c 1K \u5218\u6587\u535a 1k \u5f20\u6cfd\u6960 1k \u7c73\u620e\u6821 1k \u738b\u4f1f 1k \u738b\u6625\u96f7 1k \u5434\u4eab\u6797 1k \u5f20\u5b54 \u30001k \u738b\u6e2f 1k \u738b\u80dc 1k \u5173\u8dc3\u6587 1k 0.8K \u90d1\u5b8f\u4f1f 0.8k \u674e\u6587\u8fdc 0.8k \u738b\u8fdc\u5f3a 0.8k 0.5K \u5218\u6d77\u4e1c 0.5k \u859b\u79b9\u6167 0.5k \u6768\u56fd\u8363 0.5k \u7fc1\u7389\u8339 0.5k \u5b59\u6587\u672c 0.5k \u5218\u98de 0.5k","title":"\u6211\u7684\u7406\u8d22\u89c4\u5212"},{"location":"me/My Financial Planning/#_1","text":"\u91cd\u8981\u539f\u5219\uff1a \u5f00\u6e90\u8282\u6d41 \u5408\u7406\u8ba1\u5212","title":"\u6211\u7684\u7406\u8d22\u89c4\u5212"},{"location":"me/My Financial Planning/#_2","text":"\u5e94\u7a0e\u5de5\u8d44 = \u7a0e\u524d\u6536\u5165 - \u793e\u4fdd - \u516c\u79ef\u91d1(5%-12% * \u57fa\u6570(\u5e74\u85aa\u5747\u520612\u4e2a\u6708) \u4e2a\u4eba\u6240\u5f97\u7a0e = (\u5e94\u7a0e\u5de5\u8d44 - \u8d77\u5f81\u70b9\uff09* \u7a0e\u7387 - \u901f\u7b97\u6263 \u85aa\u8d44\u8ba1\u7b97\u65b9\u6cd5: \u7a0e\u540e\u6536\u5165 = \u5e94\u7a0e\u5de5\u8d44 - \u4e2a\u4eba\u6240\u5f97\u7a0e","title":"\u4e2a\u4eba\u57fa\u672c\u60c5\u51b5"},{"location":"me/My Financial Planning/#20160225-20180430","text":"\u7a0e\u524d\u603b\u6536\u5165\u7ec4\u6210\uff1a\u5de5\u8d44 + \u8865\u52a9(\u9910\u8865/\u52a0\u73ed\u8d39/\u8003\u52e4/\u63d0\u6210/\u672a\u4f11\u5e74\u5047\u8865\u85aa) \u4e2a\u4eba\u6240\u5f97\u7a0e\u8d77\u5f81\u70b9\u4e3a: 3500\u5143\uff0c\u7a0e\u7387\u4e3a20%\uff0c\u57fa\u6570\u4e3a\u7a0e\u524d\u603b\u6536\u5165 \u7a0e\u524d\u5de5\u8d44\uff1a13000\u5143/\u6708\uff0c\u4ece\u4e8biOS\u7814\u53d1\u5de5\u4f5c\u3002 \u66b4\u98ce\u5f71\u97f3\u76ee\u524d\u4f7f\u7528\u516c\u79ef\u91d1\u6bd4\u4f8b\u4e3a\uff1a 9% , \u7f34\u5b58\u57fa\u6570\u4e3a\u7a0e\u524d\u5de5\u8d44\uff0c\u516c\u53f8\u548c\u4e2a\u4eba\u5404\u51fa\u4e00\u4efd\u5b58\u5165\u516c\u79ef\u91d1\u5e10\u6237\uff0c\u5373\u6bcf\u6708: 13000 * 9% * 2 = 2340 , \u4f46\u5bf9\u5e10\u6e05\u5355\u662f 2304\u5143/\u6708\uff0c\u6000\u7591\u662f\u4e0d\u662f\u6253\u9519\u540e\u4e24\u4f4d\u4e86\uff0c\u8fd9\u53ef\u5dee\u4e8636\u5757\u554a\u3002 \u793e\u4f1a\u4fdd\u969c\uff1a982.2\u5143/\u6708\uff0c \u57fa\u6570\u4e3a\u7a0e\u524d\u5de5\u8d44 \u6bcf\u6708\u5f00\u652f\uff1a \u623f\u79df\uff1a1900\u5143/\u6708 \u901a\u8baf\u8d39\u7528\uff1a100\u5143/\u6708 \u9910\u8d39: 1500\u5143/\u6708 (\u6bcf\u592950\uff0c\u4e00\u670830\u5929\uff09 \u7fbd\u6bdb\u7403: 120\u5143/\u6708 \uff08\u4e00\u5468\u4e24\u6b21\uff0c\u5355\u573a2\u4eba\uff0c\u6bcf\u4eba15\u5143\uff09 \u4e0a\u4e0b\u73ed\u8f66\u8d39\uff1a120\u5143/\u6708 \uff08\u4e0a\u4e0b\u73ed 4\u5143/\u5929\uff09","title":"\u66b4\u98ce\u5f71\u97f3\u5de5\u4f5c\u671f\u95f4 (2016.02.25 - 2018.04.30)"},{"location":"me/My Financial Planning/#20180502-","text":"\u7a0e\u524d\u603b\u6536\u5165\u7ec4\u6210: \u5de5\u8d44 + \u5956\u91d1 + \u8865\u52a9(\u9910\u8865/\u52a0\u73ed\u8d39/\u8003\u52e4/\u63d0\u6210/\u672a\u4f11\u5e74\u5047\u8865\u85aa) \u4e2a\u7a0e\u8d77\u5f81\u70b9\uff1a 3500\u5143\uff0c\u7a0e\u7387\uff1a25%\uff0c \u901f\u7b97\u6263\u9664\u6570\uff1a1005 \u7a0e\u524d\u6536\u5165: 24000\u5143 \u793e\u4fdd\u516c\u79ef\u91d1: 5331\u5143 = 2880(\u516c\u79ef\u91d1) + 2451(\u793e\u4fdd) = \uff0812% + 2% + 8 + 0.2%) * 24000 \u516c\u79ef\u91d1\u57fa\u6570: 24000\u5143\uff0c\u6708\u7f34\u5b58\u6570: 2880\u5143, \u7f34\u5b58\u6bd4\u4f8b(\u516c\u53f8\u548c\u4e2a\u4eba): 12%\uff0c \u793e\u4fdd: 1 2 3 4 5 6 7 8 9 \u533b\u4fdd(\u516c\u53f810%\uff0c\u4e2a\u4eba2%), \u57fa\u6570: 24000\u5143 \u517b\u8001\u4fdd\u9669(\u516c\u53f819%\uff0c\u4e2a\u4eba8%), \u57fa\u6570: 24000\u5143 \u5931\u4e1a\u4fdd\u9669(\u516c\u53f80.8%\uff0c\u4e2a\u4eba0.2%), \u57fa\u6570: 24000\u5143 \u5de5\u4f24\u4fdd\u9669(\u516c\u53f80.3%\uff0c\u4e2a\u4eba0%), \u57fa\u6570: 24000\u5143 \u751f\u80b2\u4fdd\u9669(\u516c\u53f80.8%\uff0c\u4e2a\u4eba0%), \u57fa\u6570: 24000\u5143 \u5e94\u7a0e\u5de5\u8d44(\u65e0\u5956\u91d1)\uff1a 24000 - 5331 = 18669\u5143 \u4e2a\u4eba\u6240\u5f97\u7a0e\uff1a \uff0818669 - 3500\uff09* 25% - 1005 = 2787.25\u5143 \u7a0e\u540e\u5de5\u8d44\uff1a 18669 - 2787.25 = 15881.75\u5143 \u6bcf\u6708\u5f00\u652f\uff1a \u623f\u79df\uff1a2760\u5143/\u6708 \u901a\u8baf\u8d39\u7528\uff1a80\u5143/\u6708 \u9910\u8d39: 1500\u5143/\u6708 (\u6bcf\u592950\uff0c\u4e00\u670830\u5929\uff09 \u4e0a\u4e0b\u73ed\u8f66\u8d39\uff1a300\u5143/\u6708 \uff08\u4e0a\u4e0b\u73ed 10\u5143/\u5929\uff09","title":"\u7f8e\u56e2\u9152\u65c5\u5de5\u4f5c\u671f\u95f4 (2018.05.02 - )"},{"location":"me/My Financial Planning/#_3","text":"\u5fae\u4fe1\u94b1\u5305(\u5c3d\u91cf\u4e0d\u653e\uff0c\u53ea\u662f\u7ed1\u5b9a\u94f6\u884c\u5361) \u652f\u4ed8\u5b9d(\u4e0d\u653e\uff0c\u6d3b\u52a8\u8d44\u91d1\u653e\u5165\u4f59\u989d\u5b9d) \u4f59\u989d\u5b9d(\u6708\u751f\u6d3b\u8d39\u76846\u500d\uff0c\u7075\u6d3b\u5b58\u53d6) \u5de5\u8d44\u5361(\u6d3b\u671f\uff0c\u65e0\u5229\u606f\uff0c\u6709\u5f85\u4f18\u5316) \u4fe1\u7528\u5361(\u7528\u6765\u6d77\u5916\u8d2d\u548c\u5e94\u6025) \u793e\u4f1a\u4fdd\u969c\u5361(\u4e70\u836f) \u5b58\u6298(\u76ee\u524d\u8fd8\u672a\u529e\u7406, \u6709\u5f85\u4f18\u5316)","title":"\u8d44\u91d1\u5b58\u653e\u65b9\u5f0f\uff1a"},{"location":"me/My Financial Planning/#_4","text":"\u7236\u6bcd\u8d61\u517b\u8d39: 1000\u5143/\u6708 \u7b97\u4e0b\u7ed3\u4f59\u6bd4\u7387: 50% \u5c5e\u4e8e\u5408\u7406\u7ed3\u6784 \u4fdd\u969c\u6027\u5546\u4e1a\u4fdd\u9669: \u94f6\u884c\u901a\u6da8\u4f1a\u8d2c\u503c","title":"\u8d44\u91d1\u5206\u5272\u65b9\u5f0f"},{"location":"me/My Financial Planning/#_5","text":"","title":"\u5de5\u8d44\u5212\u5206"},{"location":"me/My Financial Planning/#_6","text":"\u5e94\u6025\u8d44\u91d1\u5e94\u7528\u4e3a\u65e5\u5e38\u751f\u6d3b\u8d39\u7684 3~6 \u500d, \u53ef\u653e\u5165\u4f59\u989d\u5b9d\u4fdd\u8bc1\u5b58\u53d6\u7075\u6d3b\u6027\uff0c\u8fd8\u53ef\u4ee5\u6709\u6240\u6536\u76ca\u3002","title":"\u65e5\u5e38\u5e94\u6025\u8d44\u91d1"},{"location":"me/My Financial Planning/#_7","text":"\u94f6\u884c\u7406\u8d22\u4ea7\u54c1\u3001\u4e92\u8054\u7f51\u91d1\u878d\u3001\u56fd\u503a","title":"\u8d2d\u4e70\u56fa\u5b9a\u6536\u76ca\u7406\u8d22\u4ea7\u54c1"},{"location":"me/My Financial Planning/#_8","text":"\u610f\u5916\u4f24\u5bb3\u9669\u3001\u91cd\u5927\u75be\u75c5\u9669\u3001\u5b9a\u671f\u5bff\u9669","title":"\u8d2d\u4e70\u4e00\u5b9a\u7684\u5546\u4e1a\u4fdd\u9669"},{"location":"me/My Financial Planning/#_9","text":"\u738b\u6e2f\u501f: 1.5w+, \u652f\u4ed8\u5b9d\u65b9\u5f0f\u8f6c\u5e10 \u5218\u751f\u4eae\u501f: 8k, \u652f\u4ed8\b\u5b9d\u8f6c\u5e10(\u5df2\u8fd8) \u5218\u751f\u4eae\u501f\uff1a1w\uff0c\u652f\u4ed8\u5b9d\u65b9\u5f0f\u8f6c\u5e10\uff0c\u5df2\u8fd8 \u5218\u751f\u4eae\u501f\uff1a1.5w\uff0c\u652f\u4ed8\u5b9d\u65b9\u5f0f\u8f6c\u5e10, \u5df2\u8fd8 \u5218\u5b81\u501f\uff1a1w, \u5de5\u884c\u5361\u8f6c\u5e10\uff0c\u670d\u52a1\u8d3910\u5143, \u5df2\u8fd87k\uff0c\u5269\u4f593k \u738b\u8fdc\u5f3a\u501f: 2w, \u670d\u52a1\u8d3920\u5143\uff0c\u5317\u4eac\u94f6\u884c\u8f6c\u5e10(\u5df2\u8fd8) \u674e\u6653\u9e4f\u501f\uff1a2.5k","title":"\u503a\u52a1\u72b6\u51b5"},{"location":"me/My Financial Planning/#_10","text":"","title":"\u53c2\u52a0\u7684\u5a5a\u793c"},{"location":"me/My Financial Planning/#1k","text":"\u5218\u6587\u535a 1k \u5f20\u6cfd\u6960 1k \u7c73\u620e\u6821 1k \u738b\u4f1f 1k \u738b\u6625\u96f7 1k \u5434\u4eab\u6797 1k \u5f20\u5b54 \u30001k \u738b\u6e2f 1k \u738b\u80dc 1k \u5173\u8dc3\u6587 1k","title":"1K"},{"location":"me/My Financial Planning/#08k","text":"\u90d1\u5b8f\u4f1f 0.8k \u674e\u6587\u8fdc 0.8k \u738b\u8fdc\u5f3a 0.8k","title":"0.8K"},{"location":"me/My Financial Planning/#05k","text":"\u5218\u6d77\u4e1c 0.5k \u859b\u79b9\u6167 0.5k \u6768\u56fd\u8363 0.5k \u7fc1\u7389\u8339 0.5k \u5b59\u6587\u672c 0.5k \u5218\u98de 0.5k","title":"0.5K"},{"location":"me/Personal Pre-Work Record/","text":"Personal Pre-Work Record Download the record file(.xls)","title":"Personal Pre-Work Record"},{"location":"me/Personal Pre-Work Record/#personal-pre-work-record","text":"Download the record file(.xls)","title":"Personal Pre-Work Record"},{"location":"me/jokerhub/","text":"jokerhub \u57df\u540d\u7533\u8bf7 \u5728\u767e\u5ea6\u4e91\u4e0a\u7533\u8bf7\u4e86\u4e2a\u4eba\u57df\u540d\uff1a jokerhub.cn , \u6682\u65f6\u4e70\u4e86\u4e00\u5e74\uff0c\u8d39\u752828\u5143\u4eba\u6c11\u5e01\u3002","title":"jokerhub \u57df\u540d\u7533\u8bf7"},{"location":"me/jokerhub/#jokerhub","text":"\u5728\u767e\u5ea6\u4e91\u4e0a\u7533\u8bf7\u4e86\u4e2a\u4eba\u57df\u540d\uff1a jokerhub.cn , \u6682\u65f6\u4e70\u4e86\u4e00\u5e74\uff0c\u8d39\u752828\u5143\u4eba\u6c11\u5e01\u3002","title":"jokerhub \u57df\u540d\u7533\u8bf7"},{"location":"minecraft/minecraft/","text":"Minecraft \u6700\u65b0\u7248(1.12) \u81ea\u5efa\u4f53\u9a8c \u300aMinecraft\u300b\u662f\u4e00\u6b3e\u98ce\u9761\u5168\u7403\u7684\u9ad8\u81ea\u7531\u5ea6\u6c99\u76d2\u6e38\u620f\uff0c\u7531\u745e\u5178 Mojang AB \u548c 4J Studios \u5f00\u53d1\uff0c\u4e8e2009\u5e745\u670813\u65e5\u53d1\u884c\u30022014\u5e7411\u67086\u65e5\uff0c\u8be5\u6e38\u620f\u88ab\u5fae\u8f6f\u6536\u8d2d\u30022016\u5e74\u7f51\u6613\u53d6\u5f97\u4e86\u8be5\u6e38\u620f\u5728\u4e2d\u56fd\u7684\u4ee3\u7406\u6743\u3002 \u8be5\u4f5c\u4ee5\u6bcf\u4e00\u4e2a\u73a9\u5bb6\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u81ea\u7531\u5730\u521b\u9020\u548c\u7834\u574f\u4e0d\u540c\u79cd\u7c7b\u7684\u65b9\u5757\u4e3a\u4e3b\u9898\u3002\u73a9\u5bb6\u5728\u6e38\u620f\u4e2d\u53ef\u4ee5\u5728\u5355\u4eba\u6216\u591a\u4eba\u6a21\u5f0f\u4e2d\u901a\u8fc7\u6467\u6bc1\u6216\u521b\u9020\u65b9\u5757\u4ee5\u521b\u9020\u7cbe\u5999\u7edd\u4f26\u7684\u5efa\u7b51\u7269\u548c\u827a\u672f\uff0c\u6216\u8005\u6536\u96c6\u7269\u54c1\u63a2\u7d22\u5730\u56fe\u4ee5\u5b8c\u6210\u6e38\u620f\u7684\u4e3b\u7ebf\u3002 Minecraft 1.12 \u5ba2\u6237\u7aef\u4e0b\u8f7d \u542f\u52a8\u4fa0 \u7cbe\u7b80\u7248 \u4f53\u9a8c\u6307\u5bfc \u4e0b\u8f7d\u5e76\u89e3\u538b\u5ba2\u6237\u7aef(Unix/Linux \u9700\u8981\u5b89\u88c5Wine\u6765\u652f\u6301exe\u7a0b\u5e8f\u8fd0\u884c)\uff0c\u5982\u679c\u5bf9\u5e94\u7248\u672c\u7684\u6e38\u620f\u6ca1\u6709\u4e0b\u8f7d\uff0c\u8bf7\u9009\u62e9 \u7248\u672c \u4e0b\u62c9\u6846\uff0c\u6309\u63d0\u793a\u4e0b\u8f7d\u5bf9\u5e94\u7248\u672c\u7684\u5ba2\u6237\u7aef\u6587\u4ef6 \u53d6\u4e00\u4e2a\u540d\u5b57\uff0c\u7136\u540e** \u542f\u52a8\u6e38\u620f **(\u5982\u679c\u6ca1\u6709Java\u8fd0\u884c\u73af\u5883\uff0c\u542f\u52a8\u8fc7\u7a0b\u4e2d\u4f1a\u81ea\u52a8\u4e0b\u8f7d) \u9009\u62e9** \u591a\u4eba\u6e38\u620f | \u6dfb\u52a0\u670d\u52a1\u5668 ** \u6dfb\u52a0\u670d\u52a1\u5668\u540e\u5982\u679c\u7ea2\u53c9\u63d0\u793a\uff0c\u591a\u70b9\u51e0\u6b21 \u5237\u65b0 \u6309\u94ae \u9009\u62e9\u670d\u52a1\u5668\u540e\uff0c\u70b9\u51fb** \u52a0\u5165\u670d\u52a1\u5668 **\u5373\u53ef\u4f53\u9a8c Minecraft 1.12 \u4f53\u9a8c\u670d\u52a1\u5668 \u7eaf\u51c0\u7248\uff0c\u65e0Mod\u6dfb\u52a0 \u627f\u8f7d\u4e0a\u9650: 20\u4eba \u6a21\u5f0f\uff1a\u751f\u5b58\u6a21\u5f0f \u65e0\u8eab\u4efd\u8ba4\u8bc1(\u4e2a\u4eba\u7ef4\u62a4) \u670d\u52a1\u5668\u5730\u5740: zhulongyixian.vicp.cc:25566 \u5982\u679c\u670d\u52a1\u5668\u8fde\u4e0d\u4e0a\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u6ca1\u6709\u5f00\u542f\uff0c\u5982\u679c\u6709\u5174\u8da3\u60f3\u73a9\u7684\uff0c\u53ef\u4ee5\u8054\u7cfb\u7ba1\u7406\u5458\u5f00\u542f\uff0c\u8054\u7cfb\u65b9\u5f0f\u5728\u4e0b\u8fb9\u3002 \u6e38\u620f\u653b\u7565\u8bf4\u660e \u5b98\u7f51 MC1.12\u7248\u672c\u4fe1\u606f\u548c\u64cd\u4f5c\u6307\u5357 MC\u4e2d\u6587\u7ad9 MC\u5b98\u65b9Wiki MC\u5b98\u7f51 \u7ba1\u7406\u5458\u8054\u7cfb\u65b9\u5f0f \u90ae\u7bb1: \u5fae\u4fe1: w_z_z_1991 \u51c6\u5907\u597d\u4e86\u5417\uff1f\u6211\u5728\u6211\u7684\u4e16\u754c\u7b49\u4f60","title":"Minecraft \u6700\u65b0\u7248(1.12) \u81ea\u5efa\u4f53\u9a8c"},{"location":"minecraft/minecraft/#minecraft-112","text":"\u300aMinecraft\u300b\u662f\u4e00\u6b3e\u98ce\u9761\u5168\u7403\u7684\u9ad8\u81ea\u7531\u5ea6\u6c99\u76d2\u6e38\u620f\uff0c\u7531\u745e\u5178 Mojang AB \u548c 4J Studios \u5f00\u53d1\uff0c\u4e8e2009\u5e745\u670813\u65e5\u53d1\u884c\u30022014\u5e7411\u67086\u65e5\uff0c\u8be5\u6e38\u620f\u88ab\u5fae\u8f6f\u6536\u8d2d\u30022016\u5e74\u7f51\u6613\u53d6\u5f97\u4e86\u8be5\u6e38\u620f\u5728\u4e2d\u56fd\u7684\u4ee3\u7406\u6743\u3002 \u8be5\u4f5c\u4ee5\u6bcf\u4e00\u4e2a\u73a9\u5bb6\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u81ea\u7531\u5730\u521b\u9020\u548c\u7834\u574f\u4e0d\u540c\u79cd\u7c7b\u7684\u65b9\u5757\u4e3a\u4e3b\u9898\u3002\u73a9\u5bb6\u5728\u6e38\u620f\u4e2d\u53ef\u4ee5\u5728\u5355\u4eba\u6216\u591a\u4eba\u6a21\u5f0f\u4e2d\u901a\u8fc7\u6467\u6bc1\u6216\u521b\u9020\u65b9\u5757\u4ee5\u521b\u9020\u7cbe\u5999\u7edd\u4f26\u7684\u5efa\u7b51\u7269\u548c\u827a\u672f\uff0c\u6216\u8005\u6536\u96c6\u7269\u54c1\u63a2\u7d22\u5730\u56fe\u4ee5\u5b8c\u6210\u6e38\u620f\u7684\u4e3b\u7ebf\u3002","title":"Minecraft \u6700\u65b0\u7248(1.12) \u81ea\u5efa\u4f53\u9a8c"},{"location":"minecraft/minecraft/#minecraft-112_1","text":"\u542f\u52a8\u4fa0 \u7cbe\u7b80\u7248","title":"Minecraft 1.12 \u5ba2\u6237\u7aef\u4e0b\u8f7d"},{"location":"minecraft/minecraft/#_1","text":"\u4e0b\u8f7d\u5e76\u89e3\u538b\u5ba2\u6237\u7aef(Unix/Linux \u9700\u8981\u5b89\u88c5Wine\u6765\u652f\u6301exe\u7a0b\u5e8f\u8fd0\u884c)\uff0c\u5982\u679c\u5bf9\u5e94\u7248\u672c\u7684\u6e38\u620f\u6ca1\u6709\u4e0b\u8f7d\uff0c\u8bf7\u9009\u62e9 \u7248\u672c \u4e0b\u62c9\u6846\uff0c\u6309\u63d0\u793a\u4e0b\u8f7d\u5bf9\u5e94\u7248\u672c\u7684\u5ba2\u6237\u7aef\u6587\u4ef6 \u53d6\u4e00\u4e2a\u540d\u5b57\uff0c\u7136\u540e** \u542f\u52a8\u6e38\u620f **(\u5982\u679c\u6ca1\u6709Java\u8fd0\u884c\u73af\u5883\uff0c\u542f\u52a8\u8fc7\u7a0b\u4e2d\u4f1a\u81ea\u52a8\u4e0b\u8f7d) \u9009\u62e9** \u591a\u4eba\u6e38\u620f | \u6dfb\u52a0\u670d\u52a1\u5668 ** \u6dfb\u52a0\u670d\u52a1\u5668\u540e\u5982\u679c\u7ea2\u53c9\u63d0\u793a\uff0c\u591a\u70b9\u51e0\u6b21 \u5237\u65b0 \u6309\u94ae \u9009\u62e9\u670d\u52a1\u5668\u540e\uff0c\u70b9\u51fb** \u52a0\u5165\u670d\u52a1\u5668 **\u5373\u53ef\u4f53\u9a8c","title":"\u4f53\u9a8c\u6307\u5bfc"},{"location":"minecraft/minecraft/#minecraft-112_2","text":"\u7eaf\u51c0\u7248\uff0c\u65e0Mod\u6dfb\u52a0 \u627f\u8f7d\u4e0a\u9650: 20\u4eba \u6a21\u5f0f\uff1a\u751f\u5b58\u6a21\u5f0f \u65e0\u8eab\u4efd\u8ba4\u8bc1(\u4e2a\u4eba\u7ef4\u62a4) \u670d\u52a1\u5668\u5730\u5740: zhulongyixian.vicp.cc:25566 \u5982\u679c\u670d\u52a1\u5668\u8fde\u4e0d\u4e0a\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u6ca1\u6709\u5f00\u542f\uff0c\u5982\u679c\u6709\u5174\u8da3\u60f3\u73a9\u7684\uff0c\u53ef\u4ee5\u8054\u7cfb\u7ba1\u7406\u5458\u5f00\u542f\uff0c\u8054\u7cfb\u65b9\u5f0f\u5728\u4e0b\u8fb9\u3002","title":"Minecraft 1.12 \u4f53\u9a8c\u670d\u52a1\u5668"},{"location":"minecraft/minecraft/#_2","text":"MC1.12\u7248\u672c\u4fe1\u606f\u548c\u64cd\u4f5c\u6307\u5357 MC\u4e2d\u6587\u7ad9 MC\u5b98\u65b9Wiki MC\u5b98\u7f51","title":"\u6e38\u620f\u653b\u7565\u8bf4\u660e&amp;\u5b98\u7f51"},{"location":"minecraft/minecraft/#_3","text":"\u90ae\u7bb1: \u5fae\u4fe1: w_z_z_1991 \u51c6\u5907\u597d\u4e86\u5417\uff1f\u6211\u5728\u6211\u7684\u4e16\u754c\u7b49\u4f60","title":"\u7ba1\u7406\u5458\u8054\u7cfb\u65b9\u5f0f"},{"location":"music/theory/accompanying/Transcribing What You Hear/","text":"","title":"Transcribing What You Hear"},{"location":"music/theory/appendixes/A/","text":"","title":"A"},{"location":"music/theory/arranging/composing and arranging for voices and instruments/","text":"","title":"Composing and arranging for voices and instruments"},{"location":"music/theory/embellishing/Harmony and Counterpoint/","text":"","title":"Harmony and Counterpoint"},{"location":"music/theory/rhythms/Note Values and Basic Notation/","text":"","title":"Note Values and Basic Notation"},{"location":"music/theory/tones/Pitches and Clefs/","text":"\u97f3\u9ad8\u548c\u8c31\u53f7 \u8981\u70b9 \u7406\u89e3\u97f3\u8c03 \u7ed9\u97f3\u9ad8\u547d\u540d \u5728\u4e94\u7ebf\u8c31\u4e0a\u653e\u7f6e\u97f3\u7b26 \u4f7f\u7528\u9ad8\u97f3\u8c31\u53f7\u3001\u4f4e\u95f4\u8c31\u53f7\u6216\u5176\u5b83\u8c31\u53f7 \u4ece\u4e66\u540d\u5c31\u53ef\u4ee5\u770b\u51fa\u8fd9\u672c\u4e66\u662f\u5173\u4e8e\u97f3\u4e50\u7406\u8bba\u7684\u3002\u4f46\u7a76\u7adf\u4ec0\u4e48\u662f\u97f3\u4e50\u7406\u8bba\u5462\uff1f\u6216\u8005\u66f4\u57fa\u672c\u7684\uff0c\u7a76\u7adf\u4ec0\u4e48\u662f\u97f3\u4e50\uff1f \u5bf9\u97f3\u4e50\u7684\u5b9a\u4e49\u6709\u5f88\u591a\uff0c\u5176\u4e2d\u7684\u4e00\u4e9b\u5bcc\u6709\u8bd7\u610f\u3002\u4f8b\u5982\uff0c\u838e\u58eb\u6bd4\u4e9a\u628a\u97f3\u4e50\u53eb\u4f5c \u7231\u7684\u98df\u7cae , \u8427\u4f2f\u7eb3\u628a\u97f3\u4e50\u53eb\u4f5c \u8be5\u6b7b\u7684\u767d\u5170\u5730 , \u83b1\u5e03\u5c3c\u5179\u628a\u97f3\u4e50\u79f0\u4e3a \u53d1\u97f3\u7684\u6570\u5b66 \u3002\u8fd9\u4e9b\u5b9a\u4e49\u90fd\u5f88\u6709\u8da3\uff0c\u4f46\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002 \u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u97f3\u4e50\u7684\u53e6\u4e00\u4e2a\u5b9a\u4e49\uff1a 1 \u97f3\u4e50\u662f\u5728\u65f6\u95f4\u7684\u6846\u67b6\u5185\u7ec4\u7ec7\u6709\u58f0\u65e0\u58f0\u7684\u827a\u672f\u3001\u6280\u827a\u548c\u79d1\u5b66 \u8fd9\u4e2a\u5b9a\u4e49\u4f3c\u4e4e\u6709\u70b9\u4f5c\u7528\uff0c\u4f46\u5e76\u4e0d\u5927\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5b9a\u4e49\u592a\u5bbd\u6cdb\u3002\u5b83\u53ef\u4ee5\u662f\u6bcd\u4eb2\u7ed9\u5979\u5b69\u5b50\u54fc\u7684\u6447\u7bee\u66f2\u3001\u4e50\u961f\u6f14\u594f\u7684\u83ab\u624e\u7279\u7684\u4ea4\u54cd\u4e50\u3001\u6447\u6eda\u56e2\u7684\u6253\u51fb\u58f0\u3001\u7f8e\u6d32\u571f\u8457\u5728\u793c\u4eea\u4e0a\u7684\u9f13\u70b9\u3001\u8def\u6613\u65af\u00b7\u963f\u59c6\u65af\u7279\u6717\u5728 \u7235\u58eb\u56db\u91cd\u594f\u4e2d\u7684\u5c0f\u53f7\u3001\u4e00\u7fa4\u6c34\u624b\u7684\u541f\u5531\u6216\u8005\u591c\u83ba\u7684\u557c\u58f0\u3002\u867d\u7136\u8fd9\u4e9b\u90fd\u80fd\u53eb\u4f5c\u97f3\u4e50\uff0c\u4f46\u5982\u679c\u97f3\u4e50\u662f\u8fd9\u6837\u5b9a\u4e49\u7684\u8bdd\uff0c\u4f60\u80af\u5b9a\u4e0d\u613f\u610f\u4e70\u8fd9\u672c\u4e66\u6765\u5b66\u4e60\u8fd9\u4e9b\u4e1c\u897f\u3002 \u6240\u4ee5\uff0c\u672c\u4e66\u5bf9\u97f3\u4e50\u4f7f\u7528\u4e00\u4e2a\u66f4\u52a0\u5177\u4f53\u7684\u5b9a\u4e49\uff1a 1 \u97f3\u4e50\u662f\u6309\u7167\u7279\u5b9a\u8282\u594f\u6392\u5217\u7684\u4e00\u8fde\u4e32\u97f3\u7b26\u3002 \u8fd9\u6837\u7684\u5b9a\u4e49\u662f\u4e0d\u662f\u4f1a\u597d\u4e00\u70b9?\u867d\u7136\u5b83\u6ca1\u6709\u5305\u542b\u97f3\u4e50\u7684\u5168\u90e8\u5185\u5bb9\uff0c\u4f46\u5374\u7b26\u5408\u6211\u4eec\u5bf9\u65e5\u5e38\u63a5\u89e6\u7684\u97f3\u4e50\uff08\u4e8c\u5341\u4e16\u7eaa\u7684\u6d41\u884c\u97f3\u4e50\u3001\u62c9\u683c\u6cf0\u59c6\u97f3\u4e50\u3001\u745e\u683c\u821e\u3001\u6447\u6eda\uff09\u7684\u7406\u89e3\u3002 \u90a3\u4ec0\u4e48\u662f\u7406\u8bba\uff1f\u5728\u79d1\u5b66\u7684\u8303\u7574\u5185\uff0c\u7406\u8bba\u8868\u793a\u6784\u60f3\u7684\u5047\u8bbe\uff0c\u4f8b\u5982\u7231\u56e0\u65af\u5766\u7684\u76f8\u5bf9\u8bba\uff0c\u7406\u8bba\u97f3\u4e50\u5bb6\u6709\u65f6\u4e5f\u4f1a\u7528\u79d1\u5b66\u7684\u65b9\u5f0f\u5236\u5b9a\u5047\u8bbe\uff0c\u4f46\u8fd9\u4e0d\u662f\u672c\u4e66\u6240\u6d89\u53ca\u90e8\u5206\u3002 \u672c\u4e66\u4e2d\u7684\u7406\u8bba\u4ec5\u6307\u80fd\u591f\u4f7f\u8868\u6f14\u8005\u548c\u542c\u4f17\u521b\u4f5c\u6216\u4eab\u53d7\u97f3\u4e50\u8fd9\u4e00\u95e8\u827a\u672f\u6240\u5fc5\u5907\u7684\u57fa\u672c\u77e5\u8bc6\u3002\u4e5f\u5c31\u662f\u4e00\u79cd\u770b\u5f85\u4e8b\u7269\u7684\u9014\u5f84\u3002\u5982\u679c\u6211\u4eec\u4e0d\u4ec5\u80fd\u4e86\u89e3\u97f3\u4e50\uff0c\u800c\u4e14\u80fd\u591f\u8046\u542c\u5e76\u6f14\u594f\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u76ee\u7684\u5c31\u8fbe\u5230\u4e86\u3002 \u65e2\u7136\u6211\u4eec\u5b9a\u4e49\u4e86\u672f\u8bed\uff0c\u90a3\u5c31\u5f00\u59cb\u5b66\u4e60\u97f3\u4e50\u80cc\u540e\u7684\u7406\u8bba\u5427\u3002\u65e2\u7136\u97f3\u4e50\u662f\u4ee5\u7279\u5b9a\u8282\u594f\u6392\u5217\u7684\u4e00\u8fde\u4e32\u97f3\u7b26\uff0c\u90a3\u6211\u4eec\u5c31\u8981\u4ece\u97f3\u7b26\u5f00\u59cb\u5b66\u4e60\uff0c\u7136\u540e\u5b66\u4e60\u600e\u4e48\u7ec4\u7ec7\u5b83\u4eec\u3002\u4ece\u7b2c\u4e94\u7ae0\u6211\u4eec\u5b66\u4e60\u97f3\u7b26\u7684\u7ec4\u7ec7\uff0c\u90a3\u4e48\uff0c\u73b0\u5728\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e0b\uff0c\u4ec0\u4e48\u662f\u97f3\u7b26\u3002 \u7406\u89e3\u97f3\u8c03 \u4ec0\u4e48\u662f\u97f3\u8c03\uff1f 1 \u97f3\u8c03\u662f\u4ee5\u6307\u5b9a\u97f3\u9ad8\u6f14\u594f\u6216\u6f14\u5531\u51fa\u6765\u7684\u58f0\u97f3\u3002 \u97f3\u9ad8\u662f\u6307\u58f0\u97f3\u9891\u7387\u7684\u9ad8\u4f4e \u5f53\u4f60\u54fc\u54fc\u7684\u65f6\u5019\uff0c\u4f60\u5c31\u662f\u54fc\u51fa\u4e86\u97f3\u8c03\u3002\u5f53\u4f60\u6253\u53e3\u54e8\u65f6\uff0c\u4e5f\u4ea7\u751f\u4e86\u97f3\u8c03\u3002\u5982\u679c\u4f60\u8fde\u7eed\u7684\u54fc\u54fc\u6216\u8005\u6253\u53e3\u54e8\uff0c\u4f60\u5c31\u5236\u9020\u51fa\u4e86\u97f3\u4e50\u3002 \u4f60\u53ef\u4ee5\u54fc\u51fa\u6216\u9ad8\u6216\u4f4e\u7684\u97f3\u8c03\uff0c\u4e5f\u5c31\u662f\u6240\u8c13\u7684 \u9ad8\u97f3 \u548c \u4f4e\u97f3 \uff0c\u4e00\u822c\u5973\u751f\u7684\u97f3\u8c03\u6bd4\u7537\u751f\u7684\u9ad8\uff0c\u4fc4\u7f57\u65af\u6d77\u8c5a\u97f3\u90a3\u8d27\u662f\u4e2a\u4f8b\u5916\u3002 \u4e0d\u540c\u7684\u55d3\u97f3\u548c\u4e50\u5668\u6240\u80fd\u4ea7\u751f\u7684\u97f3\u8c03\u7684\u97f3\u9ad8\u8303\u56f4\u662f\u4e0d\u540c\u7684\uff0c\u4e5f\u5c31\u662f\u6240\u80fd\u4ea7\u751f\u7684\u58f0\u97f3\u9891\u7387\u8303\u56f4\u4e0d\u540c\u3002 \u4e50\u5668\u4e2d\u4f53\u578b\u5927\u7684\u4e50\u5668\u97f3\u8c03\u7684\u504f\u4f4e\u97f3\uff0c\u800c\u4f53\u5f62\u5c0f\u7684\u4e50\u5668\u97f3\u8c03\u504f\u9ad8\u97f3\u3002\u56e0\u4e3a\u5b83\u4eec\u53d1\u97f3\u65f6\u632f\u52a8\u7684\u7a7a\u6c14\u91cf\u4e0d\u540c\uff0c\u632f\u52a8\u7684\u7a7a\u6c14\u91cf\u8d8a\u5927\u53d1\u51fa\u7684\u58f0\u97f3\u8d8a\u4f4e\uff0c\u8fd9\u4e5f\u5c31\u8bf4\u660e\u4e86\u4e3a\u4ec0\u4e48\u98ce\u94c3\u4ea7\u751f\u7684\u58f0\u97f3\u6bd4\u5927\u53f7\u7684\u9ad8\uff0c\u5409\u5b83\u4e0a\u7c97\u7684\u5f26\u53d1\u7684\u58f0\u97f3\u6bd4\u7ec6\u7684\u5f26\u4f4e\u3002 \u4e50\u5668\u4e2d\u6709\u4e00\u4e9b\u53d1\u51fa\u97f3\u8c03\u7684\u9ad8\u4f4e\u4e0d\u662f\u56fa\u5b9a\u4e0d\u53d8\u7684\uff0c\u50cf\u9f13\u3001\u94b9\uff0c\u5b83\u4eec\u7684\u4e00\u4e2a\u97f3\u53d1\u51fa\u540e\u4f1a\u9ad8\u4f4e\u53d8\u6362\u3002 \u4e00\u4e9b\u4e50\u5668\u6240\u80fd\u4ea7\u751f\u7684\u97f3\u8c03\u7684\u97f3\u9ad8\u8303\u56f4\u6bd4\u53e6\u4e00\u4e9b\u5927\u3002\u4f8b\u5982\uff0c\u94a2\u7434\u97f3\u8c03\u7684\u97f3\u9ad8\u8303\u56f4\u975e\u5e38\u5927\uff0c\u751a\u81f3\u6bd4\u4eba\u7684\u55d3\u5b50\u6240\u80fd\u53d1\u51fa\u7684\u6240\u6709\u97f3\u8c03\u7684\u97f3\u9ad8\u8303\u56f4\u8fd8\u5927\u3002 \u4f60\u53ef\u4ee5\u8bd5\u7740\u4ece\u4f60\u80fd\u54fc\u51fa\u7684\u6700\u4f4e\u97f3\u5f00\u59cb\uff0c\u4e00\u76f4\u54fc\u5230\u4f60\u80fd\u54fc\u51fa\u7684\u6700\u9ad8\u97f3\uff0c\u4f53\u4f1a\u4e00\u4e0b\uff0c\u770b\u770b\u522b\u4eba\u662f\u4e0d\u662f\u4e5f\u548c\u4f60\u7684\u97f3\u9ad8\u8303\u56f4\u4e00\u6837\u3002 \u97f3\u8c03\u3001\u97f3\u9ad8\u548c\u97f3\u7b26\u8fd9\u4e09\u4e2a\u6982\u5ff5\u6709\u65f6\u5019\u4e5f\u4e0d\u662f\u5206\u7684\u90a3\u4e48\u6e05\u695a\u7684\uff0c\u4f46\u6211\u76f8\u4fe1\u4f60\u4eec\u5df2\u7ecf\u611f\u89c9\u51fa\u6765\u5b83\u4eec\u4e4b\u95f4\u7684\u4e0d\u540c\u4e4b\u5904\u4e86\u3002 \u97f3\u8c03\u662f\u6709\u503c\u7684 \u97f3\u8c03\u7684\u503c\u53ef\u4ee5\u7528\u6765\u63cf\u8ff0\u4e00\u4e2a\u97f3\u7684\u9ad8\u4f4e\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u97f3\u7684\u9891\u7387\u7684\u9ad8\u4f4e\uff0c\u5373\u97f3\u9ad8\u3002 \u4ec0\u4e48\u662f\u9891\u7387 \u5982\u679c\u4f60\u628a\u9ea6\u514b\u98ce\u63d2\u8fdb\u793a\u6ce2\u5668\uff0c\u7136\u540e\u5bf9\u7740\u9ea6\u514b\u98ce\u54fc\u4e00\u4e2a\u97f3\u8c03\uff0c\u4f60\u4f1a\u770b\u5230\u793a\u6ce2\u5668\u4f1a\u6d4b\u91cf\u51fa\u8fd9\u4e2a\u97f3\u8c03\u7684\u9891\u7387\uff0c\u8fd9\u4e2a\u9891\u7387\u8868\u793a\u7684\u662f\u8fd9\u4e2a\u97f3\u8c03\u53d1\u51fa\u65f6\u5468\u56f4\u7a7a\u6c14\u632f\u52a8\u7684\u9891\u7387(Hz)\uff0c\u4e5f\u5c31\u662f\u4e00\u79d2\u632f\u52a8\u591a\u5c11\u6b21\u3002\u4e2d\u97f3C\u8c03\u7684\u9891\u7387\u662f256Hz\uff0c\u4e5f\u5c31\u662f\u94a2\u7434\u952e\u76d8\u4e2d\u95f4\u7684\u767d\u952e\u6240\u53d1\u51fa\u7684\u97f3\u8c03\u7684\u97f3\u9ad8\uff0c\u5b83\u7b49\u4e8e\u5409\u5b83A\u5f26\u7b2c\u4e09\u6863\u53d1\u51fa\u7684\u97f3\u8c03\u7684\u97f3\u9ad8\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u9891\u7387\u6765\u8bc6\u522b\u4e00\u4e2a\u97f3\u8c03\u7684\u9ad8\u4f4e\u3002\u4f46\u8981\u4f7f\u7528\u58f0\u97f3\u7684\u9891\u7387\u5199\u4e00\u9996\u97f3\u4e50\u5f88\u8d39\u52b2\uff0c\u5c31\u50cf\u4f60\u8981\u7528\u4e8c\u8fdb\u5236\u7684\u8ba1\u7b97\u673a\u6307\u4ee4\u5199\u4e00\u4e2a\u5927\u578b\u8f6f\u4ef6\u9879\u76ee\u4e00\u6837\uff0c\u7b80\u76f4\u662f\u4e2a\u5669\u68a6\u3002 \u5982\u679c\u7528\u9891\u7387\u5199\u51fa\u300aMary Had a Little Lamb\u300b\u8fd9\u9996\u6b4c\u7684\u524d\u534a\u90e8\u5206\u5c31\u50cf\u4e0b\u9762\u8fd9\u6837\u7684\uff1a 1 2 3 659Hz, 587Hz, 523Hz, 587Hz, 659Hz, 659Hz, 659Hz, 587Hz, 587Hz, 587Hz, 659Hz, 783Hz, 783Hz \u8fd9\u6837\u7684\u66f2\u8c31\u9b3c\u624d\u613f\u610f\u53bb\u770b\u3002\u8fd9\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u4e0d\u4f7f\u7528\u9891\u7387\u53bb\u8bb0\u8c31\u3002 \u6709\u4e00\u4e9b\u4eba\u5177\u6709 \u7edd\u5bf9\u97f3\u51c6 \u8fd9\u79cd\u5929\u8d4b\u6280\u80fd\uff0c\u4ed6\u4eec\u80fd\u51c6\u786e\u7684\u8bc6\u522b\u51fa\u58f0\u97f3\u7684\u9ad8\u4f4e\uff0c\u5c31\u597d\u50cf\u542c\u4e00\u4e2a\u97f3\u8c03\u5c31\u80fd\u8bf4\u51fa\u5b83\u7684\u632f\u52a8\u9891\u7387\u4e00\u6837\u3002\u8fd9\u79cd\u6280\u80fd\u5927\u90e8\u5206\u4eba\u90fd\u6ca1\u6709\uff0c\u4f46\u53ef\u4ee5\u501f\u52a9\u8c03\u97f3\u5668\u6765\u6821\u51c6\u4e00\u4e2a\u58f0\u97f3\u5230\u6307\u5b9a\u7684\u97f3\u9ad8\u3002\u8fd9\u79cd\u662f\u6211\u4eec\u5728\u5409\u5b83\u8c03\u97f3\u65f6\u4f1a\u7528\u5230\u7684\u90a3\u4e2a\u8c03\u97f3\u5668\uff0c\u5f53\u7136\uff0c\u73b0\u5728\u4e5f\u6709\u597d\u591a\u7684\u624b\u673a\u8f6f\u4ef6\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u6837\u7684\u529f\u80fd\u3002 \u7528\u6570\u5b57\u6765\u6f14\u594f \u53e6\u4e00\u79cd\u7a0d\u5fae\u7b80\u5355\u7684\u65b9\u5f0f\u662f\u7528\u6570\u5b57\u6765\u6807\u8bc6\u67d0\u4e2a\u7279\u5b9a\u97f3\u9ad8\u7684\u97f3\u8c03\u3002\u5728\u8fd9\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e00\u4e0b\uff0c\u4e0d\u540c\u97f3\u9ad8\u7684\u97f3\u8c03\u4e4b\u95f4\u5b58\u5728\u4ec0\u4e48\u6837\u7684\u76f8\u5bf9\u5173\u7cfb\u3002 \u4e5f\u8bb8\uff0c\u4f60\u5728\u54fc\u4e00\u4e2a\u8c03\u65f6\uff0c\u53ef\u4ee5\u4ece\u4f4e\u5230\u9ad8\u6216\u8005\u4ece\u9ad8\u5230\u4f4e\u7684\u8fde\u7eed\u8fdb\u884c\uff0c\u8fd9\u4f1a\u8ba9\u4f60\u8ba4\u4e3a\u5728\u4e24\u4e2a\u4e0d\u540c\u97f3\u9ad8\u7684\u97f3\u8c03\u4e4b\u95f4\u5b58\u5728\u7740\u65e0\u9650\u591a\u4e2a\u5176\u5b83\u7684\u97f3\u8c03\uff0c\u8fd9\u5728\u7406\u8bba\u4e0a\u662f\u6b63\u786e\u7684\uff0c\u4f46\u4eba\u8033\u5bf9\u58f0\u97f3\u7684\u5206\u8fa8\u80fd\u529b\u662f\u6709\u9650\u7684\uff0c\u4e24\u4e2a\u9891\u7387\u63a5\u8fd1\u7684\u97f3\u8c03\u5728\u4eba\u8033\u542c\u8d77\u6765\u4f1a\u89c9\u5f97\u662f\u4e00\u6837\u7684\uff0c\u53ea\u6709\u5f53\u4e24\u4e2a\u97f3\u8c03\u7684\u97f3\u9ad8\u5dee\u522b\u6bd4\u8f83\u5927\u65f6\uff0c\u4eba\u8033\u624d\u80fd\u533a\u5206\u51fa\u6765\u4e24\u4e2a\u97f3\u8c03\u7684\u4e0d\u540c\u4e4b\u5904\u3002\u8fd9\u4e2a\u80fd\u591f\u533a\u522b\u4e24\u4e2a\u4e0d\u540c\u97f3\u8c03\u7684\u97f3\u9ad8\u5dee\u786e\u5b9a\u4e0b\u6765\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u6570\u5b57\u6765\u6807\u8bc6\u4eba\u8033\u80fd\u591f\u533a\u522b\u7684\u4e0d\u540c\u97f3\u9ad8\u7684\u97f3\u8c03\u4e86\u3002\u8fd9\u6837\u7684\u4e00\u7cfb\u5217\u7528\u6570\u5b57\u6807\u8bc6\u7684\u4e0d\u540c\u97f3\u9ad8\u7684\u97f3\u8c03\u5c31\u6784\u6210\u4e86\u6211\u4eec\u6240\u8bf4\u7684\u97f3\u9636\u3002 \u5728\u897f\u65b9\u97f3\u4e50\u4e2d\uff0c\u4f7f\u7528\u4e86\u4e03\u4e2a\u6570\u5b57\u6807\u8bc6\u67d0\u4e00\u90e8\u5206\u97f3\u9636\uff0c\u5f62\u6210\u4e86\u4e03\u4e2a\u4e3b\u8981\u7684\u97f3\u7b26\uff0c\u4e5f\u5c31\u662f\u56fa\u5b9a\u4e86\u8fd9\u4e03\u4e2a\u97f3\u7b26\u5728\u97f3\u9636\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5176\u5b83\u7684\u9ad8\u4f4e\u97f3\u4ee5\u8fd9\u4e03\u4e2a\u4e3b\u8981\u97f3\u7b26\u4e3a\u6807\u51c6\u53c2\u8003\u70b9\u8fdb\u884c\u6807\u8bc6\u3002\u5f53\u7136\u8fd9\u4e2a\u4e3b\u8981\u97f3\u7b26\u7684\u4e2a\u6570\u548c\u5728\u97f3\u9636\u7684\u4e2d\u4f4d\u7f6e\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8fdb\u884c\u4fee\u6539\uff0c\u4f46\u5728\u4eba\u7c7b\u7684\u542c\u89c9\u8303\u56f4\u5185\u8fdb\u884c\u4e00\u4e2a\u7edf\u4e00\u7684\u6807\u8bc6\u53ef\u4ee5\u65b9\u4fbf\u4e0d\u540c\u5730\u57df\u7684\u4eba\u4eec\u4e4b\u95f4\u8fdb\u884c\u4ea4\u6d41\uff0c\u8fd9\u5c31\u662f\u5236\u5b9a\u6807\u51c6\u7684\u4e00\u4e2a\u597d\u5904\uff0c\u5c31\u50cf\u5404\u79cd\u8ba1\u7b97\u673a\u7f51\u7edc\u901a\u4fe1\u7684\u6807\u51c6\u4e00\u6837\u3002 \u5982\u679c\u6309\u7167\u8fd9\u79cd\u4e03\u4e2a\u97f3\u7b26\u7684\u6807\u51c6\u6765\u91cd\u5199\u300aMary Had a Little Lamb\u300b\u8fd9\u9996\u6b4c\u7684\u524d\u534a\u90e8\u5206\u5c31\u50cf\u4e0b\u9762\u8fd9\u6837\u7684\uff1a 1 2 3 3 2 1 2 3 3 2 2 2 3 5 5 \u8fd9\u79cd\u662f\u4e0d\u662f\u7b80\u5316\u4e86\u5f88\u591a\uff0c\u6700\u8d77\u7801\u5b57\u6570\u53d8\u5c11\u4e86\u3002 \u4e00\u5f20\u56fe\u8bf4\u660e\u6570\u5b57\u548c\u97f3\u9ad8\u7684\u5bf9\u5e94\u5173\u7cfb","title":"\u97f3\u9ad8\u548c\u8c31\u53f7"},{"location":"music/theory/tones/Pitches and Clefs/#_1","text":"\u8981\u70b9 \u7406\u89e3\u97f3\u8c03 \u7ed9\u97f3\u9ad8\u547d\u540d \u5728\u4e94\u7ebf\u8c31\u4e0a\u653e\u7f6e\u97f3\u7b26 \u4f7f\u7528\u9ad8\u97f3\u8c31\u53f7\u3001\u4f4e\u95f4\u8c31\u53f7\u6216\u5176\u5b83\u8c31\u53f7 \u4ece\u4e66\u540d\u5c31\u53ef\u4ee5\u770b\u51fa\u8fd9\u672c\u4e66\u662f\u5173\u4e8e\u97f3\u4e50\u7406\u8bba\u7684\u3002\u4f46\u7a76\u7adf\u4ec0\u4e48\u662f\u97f3\u4e50\u7406\u8bba\u5462\uff1f\u6216\u8005\u66f4\u57fa\u672c\u7684\uff0c\u7a76\u7adf\u4ec0\u4e48\u662f\u97f3\u4e50\uff1f \u5bf9\u97f3\u4e50\u7684\u5b9a\u4e49\u6709\u5f88\u591a\uff0c\u5176\u4e2d\u7684\u4e00\u4e9b\u5bcc\u6709\u8bd7\u610f\u3002\u4f8b\u5982\uff0c\u838e\u58eb\u6bd4\u4e9a\u628a\u97f3\u4e50\u53eb\u4f5c \u7231\u7684\u98df\u7cae , \u8427\u4f2f\u7eb3\u628a\u97f3\u4e50\u53eb\u4f5c \u8be5\u6b7b\u7684\u767d\u5170\u5730 , \u83b1\u5e03\u5c3c\u5179\u628a\u97f3\u4e50\u79f0\u4e3a \u53d1\u97f3\u7684\u6570\u5b66 \u3002\u8fd9\u4e9b\u5b9a\u4e49\u90fd\u5f88\u6709\u8da3\uff0c\u4f46\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002 \u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u97f3\u4e50\u7684\u53e6\u4e00\u4e2a\u5b9a\u4e49\uff1a 1 \u97f3\u4e50\u662f\u5728\u65f6\u95f4\u7684\u6846\u67b6\u5185\u7ec4\u7ec7\u6709\u58f0\u65e0\u58f0\u7684\u827a\u672f\u3001\u6280\u827a\u548c\u79d1\u5b66 \u8fd9\u4e2a\u5b9a\u4e49\u4f3c\u4e4e\u6709\u70b9\u4f5c\u7528\uff0c\u4f46\u5e76\u4e0d\u5927\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5b9a\u4e49\u592a\u5bbd\u6cdb\u3002\u5b83\u53ef\u4ee5\u662f\u6bcd\u4eb2\u7ed9\u5979\u5b69\u5b50\u54fc\u7684\u6447\u7bee\u66f2\u3001\u4e50\u961f\u6f14\u594f\u7684\u83ab\u624e\u7279\u7684\u4ea4\u54cd\u4e50\u3001\u6447\u6eda\u56e2\u7684\u6253\u51fb\u58f0\u3001\u7f8e\u6d32\u571f\u8457\u5728\u793c\u4eea\u4e0a\u7684\u9f13\u70b9\u3001\u8def\u6613\u65af\u00b7\u963f\u59c6\u65af\u7279\u6717\u5728 \u7235\u58eb\u56db\u91cd\u594f\u4e2d\u7684\u5c0f\u53f7\u3001\u4e00\u7fa4\u6c34\u624b\u7684\u541f\u5531\u6216\u8005\u591c\u83ba\u7684\u557c\u58f0\u3002\u867d\u7136\u8fd9\u4e9b\u90fd\u80fd\u53eb\u4f5c\u97f3\u4e50\uff0c\u4f46\u5982\u679c\u97f3\u4e50\u662f\u8fd9\u6837\u5b9a\u4e49\u7684\u8bdd\uff0c\u4f60\u80af\u5b9a\u4e0d\u613f\u610f\u4e70\u8fd9\u672c\u4e66\u6765\u5b66\u4e60\u8fd9\u4e9b\u4e1c\u897f\u3002 \u6240\u4ee5\uff0c\u672c\u4e66\u5bf9\u97f3\u4e50\u4f7f\u7528\u4e00\u4e2a\u66f4\u52a0\u5177\u4f53\u7684\u5b9a\u4e49\uff1a 1 \u97f3\u4e50\u662f\u6309\u7167\u7279\u5b9a\u8282\u594f\u6392\u5217\u7684\u4e00\u8fde\u4e32\u97f3\u7b26\u3002 \u8fd9\u6837\u7684\u5b9a\u4e49\u662f\u4e0d\u662f\u4f1a\u597d\u4e00\u70b9?\u867d\u7136\u5b83\u6ca1\u6709\u5305\u542b\u97f3\u4e50\u7684\u5168\u90e8\u5185\u5bb9\uff0c\u4f46\u5374\u7b26\u5408\u6211\u4eec\u5bf9\u65e5\u5e38\u63a5\u89e6\u7684\u97f3\u4e50\uff08\u4e8c\u5341\u4e16\u7eaa\u7684\u6d41\u884c\u97f3\u4e50\u3001\u62c9\u683c\u6cf0\u59c6\u97f3\u4e50\u3001\u745e\u683c\u821e\u3001\u6447\u6eda\uff09\u7684\u7406\u89e3\u3002 \u90a3\u4ec0\u4e48\u662f\u7406\u8bba\uff1f\u5728\u79d1\u5b66\u7684\u8303\u7574\u5185\uff0c\u7406\u8bba\u8868\u793a\u6784\u60f3\u7684\u5047\u8bbe\uff0c\u4f8b\u5982\u7231\u56e0\u65af\u5766\u7684\u76f8\u5bf9\u8bba\uff0c\u7406\u8bba\u97f3\u4e50\u5bb6\u6709\u65f6\u4e5f\u4f1a\u7528\u79d1\u5b66\u7684\u65b9\u5f0f\u5236\u5b9a\u5047\u8bbe\uff0c\u4f46\u8fd9\u4e0d\u662f\u672c\u4e66\u6240\u6d89\u53ca\u90e8\u5206\u3002 \u672c\u4e66\u4e2d\u7684\u7406\u8bba\u4ec5\u6307\u80fd\u591f\u4f7f\u8868\u6f14\u8005\u548c\u542c\u4f17\u521b\u4f5c\u6216\u4eab\u53d7\u97f3\u4e50\u8fd9\u4e00\u95e8\u827a\u672f\u6240\u5fc5\u5907\u7684\u57fa\u672c\u77e5\u8bc6\u3002\u4e5f\u5c31\u662f\u4e00\u79cd\u770b\u5f85\u4e8b\u7269\u7684\u9014\u5f84\u3002\u5982\u679c\u6211\u4eec\u4e0d\u4ec5\u80fd\u4e86\u89e3\u97f3\u4e50\uff0c\u800c\u4e14\u80fd\u591f\u8046\u542c\u5e76\u6f14\u594f\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u76ee\u7684\u5c31\u8fbe\u5230\u4e86\u3002 \u65e2\u7136\u6211\u4eec\u5b9a\u4e49\u4e86\u672f\u8bed\uff0c\u90a3\u5c31\u5f00\u59cb\u5b66\u4e60\u97f3\u4e50\u80cc\u540e\u7684\u7406\u8bba\u5427\u3002\u65e2\u7136\u97f3\u4e50\u662f\u4ee5\u7279\u5b9a\u8282\u594f\u6392\u5217\u7684\u4e00\u8fde\u4e32\u97f3\u7b26\uff0c\u90a3\u6211\u4eec\u5c31\u8981\u4ece\u97f3\u7b26\u5f00\u59cb\u5b66\u4e60\uff0c\u7136\u540e\u5b66\u4e60\u600e\u4e48\u7ec4\u7ec7\u5b83\u4eec\u3002\u4ece\u7b2c\u4e94\u7ae0\u6211\u4eec\u5b66\u4e60\u97f3\u7b26\u7684\u7ec4\u7ec7\uff0c\u90a3\u4e48\uff0c\u73b0\u5728\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e0b\uff0c\u4ec0\u4e48\u662f\u97f3\u7b26\u3002","title":"\u97f3\u9ad8\u548c\u8c31\u53f7"},{"location":"music/theory/tones/Pitches and Clefs/#_2","text":"\u4ec0\u4e48\u662f\u97f3\u8c03\uff1f 1 \u97f3\u8c03\u662f\u4ee5\u6307\u5b9a\u97f3\u9ad8\u6f14\u594f\u6216\u6f14\u5531\u51fa\u6765\u7684\u58f0\u97f3\u3002 \u97f3\u9ad8\u662f\u6307\u58f0\u97f3\u9891\u7387\u7684\u9ad8\u4f4e \u5f53\u4f60\u54fc\u54fc\u7684\u65f6\u5019\uff0c\u4f60\u5c31\u662f\u54fc\u51fa\u4e86\u97f3\u8c03\u3002\u5f53\u4f60\u6253\u53e3\u54e8\u65f6\uff0c\u4e5f\u4ea7\u751f\u4e86\u97f3\u8c03\u3002\u5982\u679c\u4f60\u8fde\u7eed\u7684\u54fc\u54fc\u6216\u8005\u6253\u53e3\u54e8\uff0c\u4f60\u5c31\u5236\u9020\u51fa\u4e86\u97f3\u4e50\u3002 \u4f60\u53ef\u4ee5\u54fc\u51fa\u6216\u9ad8\u6216\u4f4e\u7684\u97f3\u8c03\uff0c\u4e5f\u5c31\u662f\u6240\u8c13\u7684 \u9ad8\u97f3 \u548c \u4f4e\u97f3 \uff0c\u4e00\u822c\u5973\u751f\u7684\u97f3\u8c03\u6bd4\u7537\u751f\u7684\u9ad8\uff0c\u4fc4\u7f57\u65af\u6d77\u8c5a\u97f3\u90a3\u8d27\u662f\u4e2a\u4f8b\u5916\u3002 \u4e0d\u540c\u7684\u55d3\u97f3\u548c\u4e50\u5668\u6240\u80fd\u4ea7\u751f\u7684\u97f3\u8c03\u7684\u97f3\u9ad8\u8303\u56f4\u662f\u4e0d\u540c\u7684\uff0c\u4e5f\u5c31\u662f\u6240\u80fd\u4ea7\u751f\u7684\u58f0\u97f3\u9891\u7387\u8303\u56f4\u4e0d\u540c\u3002 \u4e50\u5668\u4e2d\u4f53\u578b\u5927\u7684\u4e50\u5668\u97f3\u8c03\u7684\u504f\u4f4e\u97f3\uff0c\u800c\u4f53\u5f62\u5c0f\u7684\u4e50\u5668\u97f3\u8c03\u504f\u9ad8\u97f3\u3002\u56e0\u4e3a\u5b83\u4eec\u53d1\u97f3\u65f6\u632f\u52a8\u7684\u7a7a\u6c14\u91cf\u4e0d\u540c\uff0c\u632f\u52a8\u7684\u7a7a\u6c14\u91cf\u8d8a\u5927\u53d1\u51fa\u7684\u58f0\u97f3\u8d8a\u4f4e\uff0c\u8fd9\u4e5f\u5c31\u8bf4\u660e\u4e86\u4e3a\u4ec0\u4e48\u98ce\u94c3\u4ea7\u751f\u7684\u58f0\u97f3\u6bd4\u5927\u53f7\u7684\u9ad8\uff0c\u5409\u5b83\u4e0a\u7c97\u7684\u5f26\u53d1\u7684\u58f0\u97f3\u6bd4\u7ec6\u7684\u5f26\u4f4e\u3002 \u4e50\u5668\u4e2d\u6709\u4e00\u4e9b\u53d1\u51fa\u97f3\u8c03\u7684\u9ad8\u4f4e\u4e0d\u662f\u56fa\u5b9a\u4e0d\u53d8\u7684\uff0c\u50cf\u9f13\u3001\u94b9\uff0c\u5b83\u4eec\u7684\u4e00\u4e2a\u97f3\u53d1\u51fa\u540e\u4f1a\u9ad8\u4f4e\u53d8\u6362\u3002 \u4e00\u4e9b\u4e50\u5668\u6240\u80fd\u4ea7\u751f\u7684\u97f3\u8c03\u7684\u97f3\u9ad8\u8303\u56f4\u6bd4\u53e6\u4e00\u4e9b\u5927\u3002\u4f8b\u5982\uff0c\u94a2\u7434\u97f3\u8c03\u7684\u97f3\u9ad8\u8303\u56f4\u975e\u5e38\u5927\uff0c\u751a\u81f3\u6bd4\u4eba\u7684\u55d3\u5b50\u6240\u80fd\u53d1\u51fa\u7684\u6240\u6709\u97f3\u8c03\u7684\u97f3\u9ad8\u8303\u56f4\u8fd8\u5927\u3002 \u4f60\u53ef\u4ee5\u8bd5\u7740\u4ece\u4f60\u80fd\u54fc\u51fa\u7684\u6700\u4f4e\u97f3\u5f00\u59cb\uff0c\u4e00\u76f4\u54fc\u5230\u4f60\u80fd\u54fc\u51fa\u7684\u6700\u9ad8\u97f3\uff0c\u4f53\u4f1a\u4e00\u4e0b\uff0c\u770b\u770b\u522b\u4eba\u662f\u4e0d\u662f\u4e5f\u548c\u4f60\u7684\u97f3\u9ad8\u8303\u56f4\u4e00\u6837\u3002 \u97f3\u8c03\u3001\u97f3\u9ad8\u548c\u97f3\u7b26\u8fd9\u4e09\u4e2a\u6982\u5ff5\u6709\u65f6\u5019\u4e5f\u4e0d\u662f\u5206\u7684\u90a3\u4e48\u6e05\u695a\u7684\uff0c\u4f46\u6211\u76f8\u4fe1\u4f60\u4eec\u5df2\u7ecf\u611f\u89c9\u51fa\u6765\u5b83\u4eec\u4e4b\u95f4\u7684\u4e0d\u540c\u4e4b\u5904\u4e86\u3002","title":"\u7406\u89e3\u97f3\u8c03"},{"location":"music/theory/tones/Pitches and Clefs/#_3","text":"\u97f3\u8c03\u7684\u503c\u53ef\u4ee5\u7528\u6765\u63cf\u8ff0\u4e00\u4e2a\u97f3\u7684\u9ad8\u4f4e\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u97f3\u7684\u9891\u7387\u7684\u9ad8\u4f4e\uff0c\u5373\u97f3\u9ad8\u3002","title":"\u97f3\u8c03\u662f\u6709\u503c\u7684"},{"location":"music/theory/tones/Pitches and Clefs/#_4","text":"\u5982\u679c\u4f60\u628a\u9ea6\u514b\u98ce\u63d2\u8fdb\u793a\u6ce2\u5668\uff0c\u7136\u540e\u5bf9\u7740\u9ea6\u514b\u98ce\u54fc\u4e00\u4e2a\u97f3\u8c03\uff0c\u4f60\u4f1a\u770b\u5230\u793a\u6ce2\u5668\u4f1a\u6d4b\u91cf\u51fa\u8fd9\u4e2a\u97f3\u8c03\u7684\u9891\u7387\uff0c\u8fd9\u4e2a\u9891\u7387\u8868\u793a\u7684\u662f\u8fd9\u4e2a\u97f3\u8c03\u53d1\u51fa\u65f6\u5468\u56f4\u7a7a\u6c14\u632f\u52a8\u7684\u9891\u7387(Hz)\uff0c\u4e5f\u5c31\u662f\u4e00\u79d2\u632f\u52a8\u591a\u5c11\u6b21\u3002\u4e2d\u97f3C\u8c03\u7684\u9891\u7387\u662f256Hz\uff0c\u4e5f\u5c31\u662f\u94a2\u7434\u952e\u76d8\u4e2d\u95f4\u7684\u767d\u952e\u6240\u53d1\u51fa\u7684\u97f3\u8c03\u7684\u97f3\u9ad8\uff0c\u5b83\u7b49\u4e8e\u5409\u5b83A\u5f26\u7b2c\u4e09\u6863\u53d1\u51fa\u7684\u97f3\u8c03\u7684\u97f3\u9ad8\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u9891\u7387\u6765\u8bc6\u522b\u4e00\u4e2a\u97f3\u8c03\u7684\u9ad8\u4f4e\u3002\u4f46\u8981\u4f7f\u7528\u58f0\u97f3\u7684\u9891\u7387\u5199\u4e00\u9996\u97f3\u4e50\u5f88\u8d39\u52b2\uff0c\u5c31\u50cf\u4f60\u8981\u7528\u4e8c\u8fdb\u5236\u7684\u8ba1\u7b97\u673a\u6307\u4ee4\u5199\u4e00\u4e2a\u5927\u578b\u8f6f\u4ef6\u9879\u76ee\u4e00\u6837\uff0c\u7b80\u76f4\u662f\u4e2a\u5669\u68a6\u3002 \u5982\u679c\u7528\u9891\u7387\u5199\u51fa\u300aMary Had a Little Lamb\u300b\u8fd9\u9996\u6b4c\u7684\u524d\u534a\u90e8\u5206\u5c31\u50cf\u4e0b\u9762\u8fd9\u6837\u7684\uff1a 1 2 3 659Hz, 587Hz, 523Hz, 587Hz, 659Hz, 659Hz, 659Hz, 587Hz, 587Hz, 587Hz, 659Hz, 783Hz, 783Hz \u8fd9\u6837\u7684\u66f2\u8c31\u9b3c\u624d\u613f\u610f\u53bb\u770b\u3002\u8fd9\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u4e0d\u4f7f\u7528\u9891\u7387\u53bb\u8bb0\u8c31\u3002 \u6709\u4e00\u4e9b\u4eba\u5177\u6709 \u7edd\u5bf9\u97f3\u51c6 \u8fd9\u79cd\u5929\u8d4b\u6280\u80fd\uff0c\u4ed6\u4eec\u80fd\u51c6\u786e\u7684\u8bc6\u522b\u51fa\u58f0\u97f3\u7684\u9ad8\u4f4e\uff0c\u5c31\u597d\u50cf\u542c\u4e00\u4e2a\u97f3\u8c03\u5c31\u80fd\u8bf4\u51fa\u5b83\u7684\u632f\u52a8\u9891\u7387\u4e00\u6837\u3002\u8fd9\u79cd\u6280\u80fd\u5927\u90e8\u5206\u4eba\u90fd\u6ca1\u6709\uff0c\u4f46\u53ef\u4ee5\u501f\u52a9\u8c03\u97f3\u5668\u6765\u6821\u51c6\u4e00\u4e2a\u58f0\u97f3\u5230\u6307\u5b9a\u7684\u97f3\u9ad8\u3002\u8fd9\u79cd\u662f\u6211\u4eec\u5728\u5409\u5b83\u8c03\u97f3\u65f6\u4f1a\u7528\u5230\u7684\u90a3\u4e2a\u8c03\u97f3\u5668\uff0c\u5f53\u7136\uff0c\u73b0\u5728\u4e5f\u6709\u597d\u591a\u7684\u624b\u673a\u8f6f\u4ef6\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u6837\u7684\u529f\u80fd\u3002","title":"\u4ec0\u4e48\u662f\u9891\u7387"},{"location":"music/theory/tones/Pitches and Clefs/#_5","text":"\u53e6\u4e00\u79cd\u7a0d\u5fae\u7b80\u5355\u7684\u65b9\u5f0f\u662f\u7528\u6570\u5b57\u6765\u6807\u8bc6\u67d0\u4e2a\u7279\u5b9a\u97f3\u9ad8\u7684\u97f3\u8c03\u3002\u5728\u8fd9\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e00\u4e0b\uff0c\u4e0d\u540c\u97f3\u9ad8\u7684\u97f3\u8c03\u4e4b\u95f4\u5b58\u5728\u4ec0\u4e48\u6837\u7684\u76f8\u5bf9\u5173\u7cfb\u3002 \u4e5f\u8bb8\uff0c\u4f60\u5728\u54fc\u4e00\u4e2a\u8c03\u65f6\uff0c\u53ef\u4ee5\u4ece\u4f4e\u5230\u9ad8\u6216\u8005\u4ece\u9ad8\u5230\u4f4e\u7684\u8fde\u7eed\u8fdb\u884c\uff0c\u8fd9\u4f1a\u8ba9\u4f60\u8ba4\u4e3a\u5728\u4e24\u4e2a\u4e0d\u540c\u97f3\u9ad8\u7684\u97f3\u8c03\u4e4b\u95f4\u5b58\u5728\u7740\u65e0\u9650\u591a\u4e2a\u5176\u5b83\u7684\u97f3\u8c03\uff0c\u8fd9\u5728\u7406\u8bba\u4e0a\u662f\u6b63\u786e\u7684\uff0c\u4f46\u4eba\u8033\u5bf9\u58f0\u97f3\u7684\u5206\u8fa8\u80fd\u529b\u662f\u6709\u9650\u7684\uff0c\u4e24\u4e2a\u9891\u7387\u63a5\u8fd1\u7684\u97f3\u8c03\u5728\u4eba\u8033\u542c\u8d77\u6765\u4f1a\u89c9\u5f97\u662f\u4e00\u6837\u7684\uff0c\u53ea\u6709\u5f53\u4e24\u4e2a\u97f3\u8c03\u7684\u97f3\u9ad8\u5dee\u522b\u6bd4\u8f83\u5927\u65f6\uff0c\u4eba\u8033\u624d\u80fd\u533a\u5206\u51fa\u6765\u4e24\u4e2a\u97f3\u8c03\u7684\u4e0d\u540c\u4e4b\u5904\u3002\u8fd9\u4e2a\u80fd\u591f\u533a\u522b\u4e24\u4e2a\u4e0d\u540c\u97f3\u8c03\u7684\u97f3\u9ad8\u5dee\u786e\u5b9a\u4e0b\u6765\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u6570\u5b57\u6765\u6807\u8bc6\u4eba\u8033\u80fd\u591f\u533a\u522b\u7684\u4e0d\u540c\u97f3\u9ad8\u7684\u97f3\u8c03\u4e86\u3002\u8fd9\u6837\u7684\u4e00\u7cfb\u5217\u7528\u6570\u5b57\u6807\u8bc6\u7684\u4e0d\u540c\u97f3\u9ad8\u7684\u97f3\u8c03\u5c31\u6784\u6210\u4e86\u6211\u4eec\u6240\u8bf4\u7684\u97f3\u9636\u3002 \u5728\u897f\u65b9\u97f3\u4e50\u4e2d\uff0c\u4f7f\u7528\u4e86\u4e03\u4e2a\u6570\u5b57\u6807\u8bc6\u67d0\u4e00\u90e8\u5206\u97f3\u9636\uff0c\u5f62\u6210\u4e86\u4e03\u4e2a\u4e3b\u8981\u7684\u97f3\u7b26\uff0c\u4e5f\u5c31\u662f\u56fa\u5b9a\u4e86\u8fd9\u4e03\u4e2a\u97f3\u7b26\u5728\u97f3\u9636\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5176\u5b83\u7684\u9ad8\u4f4e\u97f3\u4ee5\u8fd9\u4e03\u4e2a\u4e3b\u8981\u97f3\u7b26\u4e3a\u6807\u51c6\u53c2\u8003\u70b9\u8fdb\u884c\u6807\u8bc6\u3002\u5f53\u7136\u8fd9\u4e2a\u4e3b\u8981\u97f3\u7b26\u7684\u4e2a\u6570\u548c\u5728\u97f3\u9636\u7684\u4e2d\u4f4d\u7f6e\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8fdb\u884c\u4fee\u6539\uff0c\u4f46\u5728\u4eba\u7c7b\u7684\u542c\u89c9\u8303\u56f4\u5185\u8fdb\u884c\u4e00\u4e2a\u7edf\u4e00\u7684\u6807\u8bc6\u53ef\u4ee5\u65b9\u4fbf\u4e0d\u540c\u5730\u57df\u7684\u4eba\u4eec\u4e4b\u95f4\u8fdb\u884c\u4ea4\u6d41\uff0c\u8fd9\u5c31\u662f\u5236\u5b9a\u6807\u51c6\u7684\u4e00\u4e2a\u597d\u5904\uff0c\u5c31\u50cf\u5404\u79cd\u8ba1\u7b97\u673a\u7f51\u7edc\u901a\u4fe1\u7684\u6807\u51c6\u4e00\u6837\u3002 \u5982\u679c\u6309\u7167\u8fd9\u79cd\u4e03\u4e2a\u97f3\u7b26\u7684\u6807\u51c6\u6765\u91cd\u5199\u300aMary Had a Little Lamb\u300b\u8fd9\u9996\u6b4c\u7684\u524d\u534a\u90e8\u5206\u5c31\u50cf\u4e0b\u9762\u8fd9\u6837\u7684\uff1a 1 2 3 3 2 1 2 3 3 2 2 2 3 5 5 \u8fd9\u79cd\u662f\u4e0d\u662f\u7b80\u5316\u4e86\u5f88\u591a\uff0c\u6700\u8d77\u7801\u5b57\u6570\u53d8\u5c11\u4e86\u3002 \u4e00\u5f20\u56fe\u8bf4\u660e\u6570\u5b57\u548c\u97f3\u9ad8\u7684\u5bf9\u5e94\u5173\u7cfb","title":"\u7528\u6570\u5b57\u6765\u6f14\u594f"},{"location":"music/theory/tunes/Melodies/","text":"","title":"Melodies"},{"location":"nginx/application/","text":"\u9759\u6001\u6587\u4ef6\u670d\u52a1\u5668 \u53cd\u5411\u4ee3\u7406 \u6b63\u5411\u4ee3\u7406 \u8d1f\u8f7d\u5747\u8861","title":"\u4e3b\u8981\u7528\u9014"},{"location":"nginx/application/#_1","text":"","title":"\u9759\u6001\u6587\u4ef6\u670d\u52a1\u5668"},{"location":"nginx/application/#_2","text":"","title":"\u53cd\u5411\u4ee3\u7406"},{"location":"nginx/application/#_3","text":"","title":"\u6b63\u5411\u4ee3\u7406"},{"location":"nginx/application/#_4","text":"","title":"\u8d1f\u8f7d\u5747\u8861"},{"location":"nginx/beginner-guide/","text":"\u8fd9\u7bc7\u6307\u5357\u4e3b\u8981\u662f\u5bf9 nignx \u53ca\u5176\u6240\u80fd\u5b8c\u6210\u7684\u4efb\u52a1\u505a\u4e2a\u7b80\u5355\u7684\u4ecb\u7ecd\uff0c\u5047\u8bbe\u4f60\u5df2\u7ecf\u5b89\u88c5\u4e86 nignx \u001c\uff0c\u5982\u679c\u8fd8\u6ca1\u5b89\u88c5\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b89\u88c5nginx nginx \u6709\u4e00\u4e2a\u4e3b\u8fdb\u7a0b\u548c\u82e5\u5e72\u4e2a\u5de5\u4f5c\u8005\u8fdb\u7a0b\u3002\u4e3b\u8fdb\u7a0b\u7684\u4e3b\u8981\u529f\u80fd\u662f\u8bfb\u914d\u7f6e\u6587\u4ef6\u5e76\u7ba1\u7406\u5404\u4e2a\u5de5\u4f5c\u8005\u8fdb\u7a0b\u3002\u5b9e\u9645\u5904\u7406\u8bf7\u6c42\u7684\u662f\u5de5\u4f5c\u8005\u8fdb\u7a0b\u3002 nginx \u57fa\u4e8e\u4e8b\u4ef6\u5e76\u5229\u7528\u64cd\u4f5c\u7cfb\u7edf\u7684\u76f8\u5173\u673a\u5236\u6709\u6548\u7684\u5206\u914d\u8bf7\u6c42\u7ed9\u5de5\u4f5c\u8005\u5904\u7406\u3002\u5de5\u4f5c\u8005\u8fc7\u7a0b\u7684\u6570\u91cf\u53ef\u4ee5\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bbe\u7f6e\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u56fa\u5b9a\u6570\u91cf\uff0c\u4e5f\u53ef\u4ee5\u6839\u636eCPU\u7684\u6838\u5fc3\u6570\u91cf\u81ea\u52a8\u8bbe\u7f6e\u4e00\u4e2a\u9002\u5408\u7684\u5de5\u4f5c\u8005\u8fdb\u7a0b\u6570\u3002 nginx \u548c\u5b83\u7684\u6a21\u5757\u6309\u7167\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u8bbe\u7f6e\u8fd0\u4f5c\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u914d\u7f6e\u6587\u4ef6\u540d\u4e3a nginx.conf \uff0c\u5e76\u4e14\u88ab\u653e\u5728\u76ee\u5f55 /usr/local/nginx/conf \u3001 /etc/nginx \u6216\u8005 /usr/local/etc/nginx \u4e0b\u9762\u3002 \u542f\u52a8\u3001\u505c\u6b62\u4ee5\u53ca\u91cd\u65b0\u8f7d\u5165\u914d\u7f6e \u76f4\u63a5\u8fd0\u884c nginx \u6587\u4ef6\uff0c\u53ef\u4ee5\u542f\u52a8 nginx \uff0c nginx \u542f\u52a8\u4ee5\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5f62\u5f0f\u6765\u63a7\u5236\u5b83: 1 nginx -s signal \u5176\u4e2d\uff0c signal \u53ef\u4ee5\u662f\u4e0b\u9762\u7684\u4e00\u4e2a\u503c\uff1a stop - \u5feb\u901f\u505c\u6b62 quit - \u4f18\u96c5\u7684\u505c\u6b62 reload - \u91cd\u65b0\u8f7d\u5165\u914d\u7f6e\u6587\u4ef6 reopen - \u91cd\u65b0\u6253\u5f00\u65e5\u5fd7\u6587\u4ef6 \u4f8b\u5982\uff0c\u8981\u7b49\u5de5\u4f5c\u8005\u7ebf\u7a0b\u5b8c\u6210\u5f53\u524d\u8bf7\u6c42\u540e\u505c\u6b62 nginx \u8fd0\u884c\uff0c\u4f7f\u7528\uff1a 1 nginx -s quit \u5bf9\u914d\u7f6e\u6587\u4ef6\u7684\u66f4\u6539\u60f3\u8981\u751f\u6548\u7684\u65b9\u6cd5\u662f\uff1a\u91cd\u65b0\u8f7d\u5165\u914d\u7f6e\u6587\u4ef6\u6216\u8005\u91cd\u65b0\u542f\u52a8 nginx \u3002\u91cd\u65b0\u8f7d\u5165\u914d\u7f6e\u6587\u4ef6\u4f7f\u7528\uff1a 1 nginx -s reload \u4e3b\u8fdb\u7a0b\u4f1a\u91cd\u65b0\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\u5185\u5bb9\u5e76\u68c0\u9a8c\u8bed\u6cd5\u662f\u5426\u6709\u6548\uff0c\u5e76\u5c1d\u8bd5\u5e94\u7528\u66f4\u6539\u540e\u7684\u914d\u7f6e\u3002 \u5982\u679c\u5e94\u7528\u65b0\u914d\u7f6e\u6210\u529f\uff0c nginx \u4e3b\u8fdb\u7a0b\u5c31\u521b\u5efa\u65b0\u7684\u5de5\u4f5c\u8005\u7ebf\u7a0b\u5e76\u5411\u8001\u7684\u5de5\u4f5c\u8005\u53d1\u51fa\u505c\u6b62\u4fe1\u53f7\u3002\u5982\u679c\u5e94\u7528\u65b0\u914d\u7f6e\u5931\u8d25\uff0c\u4f9d\u65e7\u4f7f\u7528\u8001\u7684\u914d\u7f6e\u3002\u5982\u679c\u8001\u7684\u5de5\u4f5c\u8005\u8fdb\u7a0b\u5728\u63a5\u5230\u505c\u6b62\u4fe1\u53f7\u65f6\u6b63\u5728\u5904\u7406\u7528\u6237\u8bf7\u6c42\uff0c\u5b83\u4f1a\u62d2\u7edd\u63a5\u53d7\u65b0\u7684\u7528\u6237\u8bf7\u6c42\uff0c\u5e76\u5728\u5f53\u524d\u6b63\u5728\u5904\u7406\u7684\u8bf7\u6c42\u5904\u7406\u5b8c\u6210\u4e4b\u540e\u505c\u6b62\u8fd0\u884c\u3002 \u4fe1\u53f7\u4e5f\u53ef\u4ee5\u501f\u52a9unix\u7684\u547d\u4ee4\u884c\u5de5\u5177 kill \u6765\u53d1\u9001\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4f1a\u76f4\u63a5\u53d1\u9001\u4fe1\u53f7\u7ed9\u6307\u5b9a\u8fdb\u7a0bID\u7684\u8fdb\u7a0b\u3002 nginx \u4e3b\u8fdb\u7a0b\u7684ID\u88ab\u5199\u5165 /usr/local/nginx/logs \u6216 /var/run \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6 nginx.pid \u4e2d\u3002\u4f8b\u5982\uff0c\u4e3b\u8fdb\u7a0b\u7684ID\u4e3a 1628 \uff0c\u8981\u53d1\u4fe1\u53f7\u4f7f\u5176\u505c\u6b62\u8fd0\u884c\uff0c\u6267\u884c\u4e0b\u9762\u7684\u6307\u4ee4\uff1a 1 kill -s QUIT 1628 \u8981\u83b7\u53d6\u8fd0\u884c\u7740\u7684 nginx \u7684\u5168\u90e8\u8fdb\u7a0b\u5217\u8868\uff0c\u4f7f\u7528 ps \u547d\u4ee4\uff1a 1 ps -ax | grep nginx \u66f4\u591a\u5173\u4e8e\u63a7\u5236 nginx \u7684\u5185\u5bb9\uff0c\u53c2\u770b \u63a7\u5236nginx \u914d\u7f6e\u6587\u4ef6\u7ed3\u6784 nginx \u901a\u8fc7\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u901a\u8fc7\u6307\u4ee4\u6765\u6307\u5b9a\u5404\u4e2a\u6a21\u5757\u7684\u8fd0\u4f5c\u3002\u6307\u4ee4\u5206\u4e3a \u7b80\u5355\u6307\u4ee4 \u548c \u5757\u6307\u4ee4 \u3002 \u7b80\u5355\u6307\u4ee4\u7531\u7a7a\u683c\u5206\u9694\u7684\u540d\u5b57\u548c\u53c2\u6570\u7ec4\u6210\uff0c\u5e76\u4ee5 ; \u53f7\u7ed3\u5c3e\u3002 \u5757\u6307\u4ee4\u4e0e\u7b80\u5355\u6307\u4ee4\u6709\u76f8\u540c\u7684\u7ed3\u6784\uff0c\u4f46\u5b83\u7684\u7ed3\u5c3e\u4e0d\u662f ; \u53f7\uff0c\u800c\u662f\u4e00\u7ec4\u7528 { \u548c } \u5305\u56f4\u7684\u5176\u5b83\u6307\u4ee4\u3002\u5982\u679c\u4e00\u4e2a\u5757\u6307\u4ee4\u5728\u82b1\u62ec\u53f7\u5185\u53ef\u4ee5\u5305\u542b\u5176\u5b83\u6307\u4ee4\uff0c\u5c31\u88ab\u79f0\u4e3a \u73af\u5883 \uff08\u4f8b\u5982\uff1a events \u3001 http \u3001 server \u548c location \u8fd9\u4e9b\u6307\u4ee4\u90fd\u88ab\u79f0\u4e3a \u73af\u5883 \u3002 \u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u6700\u5916\u5c42\u7684\u6307\u4ee4\u88ab\u653e\u5728 \u4e3b\u73af\u5883\u4e2d \uff0c\u5757\u6307\u4ee4 events \u548c http \u662f\u5728\u4e3b\u73af\u5883\u4e2d\u7684\uff0c server \u662f http \u73af\u5883\u4e2d\uff0c location \u5728 server \u73af\u5883\u4e2d\u3002 \u4ee5 # \u5f00\u5934\u7684\u662f\u6ce8\u91ca\u8bed\u53e5\u3002 \u9759\u6001\u5185\u5bb9\u670d\u52a1 \u5efa\u7acb\u7b80\u5355\u7684\u4ee3\u7406\u670d\u52a1\u5668 \u5efa\u7acbFastCGI\u4ee3\u7406","title":"\u65b0\u624b\u6559\u7a0b"},{"location":"nginx/beginner-guide/#_1","text":"\u76f4\u63a5\u8fd0\u884c nginx \u6587\u4ef6\uff0c\u53ef\u4ee5\u542f\u52a8 nginx \uff0c nginx \u542f\u52a8\u4ee5\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5f62\u5f0f\u6765\u63a7\u5236\u5b83: 1 nginx -s signal \u5176\u4e2d\uff0c signal \u53ef\u4ee5\u662f\u4e0b\u9762\u7684\u4e00\u4e2a\u503c\uff1a stop - \u5feb\u901f\u505c\u6b62 quit - \u4f18\u96c5\u7684\u505c\u6b62 reload - \u91cd\u65b0\u8f7d\u5165\u914d\u7f6e\u6587\u4ef6 reopen - \u91cd\u65b0\u6253\u5f00\u65e5\u5fd7\u6587\u4ef6 \u4f8b\u5982\uff0c\u8981\u7b49\u5de5\u4f5c\u8005\u7ebf\u7a0b\u5b8c\u6210\u5f53\u524d\u8bf7\u6c42\u540e\u505c\u6b62 nginx \u8fd0\u884c\uff0c\u4f7f\u7528\uff1a 1 nginx -s quit \u5bf9\u914d\u7f6e\u6587\u4ef6\u7684\u66f4\u6539\u60f3\u8981\u751f\u6548\u7684\u65b9\u6cd5\u662f\uff1a\u91cd\u65b0\u8f7d\u5165\u914d\u7f6e\u6587\u4ef6\u6216\u8005\u91cd\u65b0\u542f\u52a8 nginx \u3002\u91cd\u65b0\u8f7d\u5165\u914d\u7f6e\u6587\u4ef6\u4f7f\u7528\uff1a 1 nginx -s reload \u4e3b\u8fdb\u7a0b\u4f1a\u91cd\u65b0\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\u5185\u5bb9\u5e76\u68c0\u9a8c\u8bed\u6cd5\u662f\u5426\u6709\u6548\uff0c\u5e76\u5c1d\u8bd5\u5e94\u7528\u66f4\u6539\u540e\u7684\u914d\u7f6e\u3002 \u5982\u679c\u5e94\u7528\u65b0\u914d\u7f6e\u6210\u529f\uff0c nginx \u4e3b\u8fdb\u7a0b\u5c31\u521b\u5efa\u65b0\u7684\u5de5\u4f5c\u8005\u7ebf\u7a0b\u5e76\u5411\u8001\u7684\u5de5\u4f5c\u8005\u53d1\u51fa\u505c\u6b62\u4fe1\u53f7\u3002\u5982\u679c\u5e94\u7528\u65b0\u914d\u7f6e\u5931\u8d25\uff0c\u4f9d\u65e7\u4f7f\u7528\u8001\u7684\u914d\u7f6e\u3002\u5982\u679c\u8001\u7684\u5de5\u4f5c\u8005\u8fdb\u7a0b\u5728\u63a5\u5230\u505c\u6b62\u4fe1\u53f7\u65f6\u6b63\u5728\u5904\u7406\u7528\u6237\u8bf7\u6c42\uff0c\u5b83\u4f1a\u62d2\u7edd\u63a5\u53d7\u65b0\u7684\u7528\u6237\u8bf7\u6c42\uff0c\u5e76\u5728\u5f53\u524d\u6b63\u5728\u5904\u7406\u7684\u8bf7\u6c42\u5904\u7406\u5b8c\u6210\u4e4b\u540e\u505c\u6b62\u8fd0\u884c\u3002 \u4fe1\u53f7\u4e5f\u53ef\u4ee5\u501f\u52a9unix\u7684\u547d\u4ee4\u884c\u5de5\u5177 kill \u6765\u53d1\u9001\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4f1a\u76f4\u63a5\u53d1\u9001\u4fe1\u53f7\u7ed9\u6307\u5b9a\u8fdb\u7a0bID\u7684\u8fdb\u7a0b\u3002 nginx \u4e3b\u8fdb\u7a0b\u7684ID\u88ab\u5199\u5165 /usr/local/nginx/logs \u6216 /var/run \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6 nginx.pid \u4e2d\u3002\u4f8b\u5982\uff0c\u4e3b\u8fdb\u7a0b\u7684ID\u4e3a 1628 \uff0c\u8981\u53d1\u4fe1\u53f7\u4f7f\u5176\u505c\u6b62\u8fd0\u884c\uff0c\u6267\u884c\u4e0b\u9762\u7684\u6307\u4ee4\uff1a 1 kill -s QUIT 1628 \u8981\u83b7\u53d6\u8fd0\u884c\u7740\u7684 nginx \u7684\u5168\u90e8\u8fdb\u7a0b\u5217\u8868\uff0c\u4f7f\u7528 ps \u547d\u4ee4\uff1a 1 ps -ax | grep nginx \u66f4\u591a\u5173\u4e8e\u63a7\u5236 nginx \u7684\u5185\u5bb9\uff0c\u53c2\u770b \u63a7\u5236nginx","title":"\u542f\u52a8\u3001\u505c\u6b62\u4ee5\u53ca\u91cd\u65b0\u8f7d\u5165\u914d\u7f6e"},{"location":"nginx/beginner-guide/#_2","text":"nginx \u901a\u8fc7\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u901a\u8fc7\u6307\u4ee4\u6765\u6307\u5b9a\u5404\u4e2a\u6a21\u5757\u7684\u8fd0\u4f5c\u3002\u6307\u4ee4\u5206\u4e3a \u7b80\u5355\u6307\u4ee4 \u548c \u5757\u6307\u4ee4 \u3002 \u7b80\u5355\u6307\u4ee4\u7531\u7a7a\u683c\u5206\u9694\u7684\u540d\u5b57\u548c\u53c2\u6570\u7ec4\u6210\uff0c\u5e76\u4ee5 ; \u53f7\u7ed3\u5c3e\u3002 \u5757\u6307\u4ee4\u4e0e\u7b80\u5355\u6307\u4ee4\u6709\u76f8\u540c\u7684\u7ed3\u6784\uff0c\u4f46\u5b83\u7684\u7ed3\u5c3e\u4e0d\u662f ; \u53f7\uff0c\u800c\u662f\u4e00\u7ec4\u7528 { \u548c } \u5305\u56f4\u7684\u5176\u5b83\u6307\u4ee4\u3002\u5982\u679c\u4e00\u4e2a\u5757\u6307\u4ee4\u5728\u82b1\u62ec\u53f7\u5185\u53ef\u4ee5\u5305\u542b\u5176\u5b83\u6307\u4ee4\uff0c\u5c31\u88ab\u79f0\u4e3a \u73af\u5883 \uff08\u4f8b\u5982\uff1a events \u3001 http \u3001 server \u548c location \u8fd9\u4e9b\u6307\u4ee4\u90fd\u88ab\u79f0\u4e3a \u73af\u5883 \u3002 \u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u6700\u5916\u5c42\u7684\u6307\u4ee4\u88ab\u653e\u5728 \u4e3b\u73af\u5883\u4e2d \uff0c\u5757\u6307\u4ee4 events \u548c http \u662f\u5728\u4e3b\u73af\u5883\u4e2d\u7684\uff0c server \u662f http \u73af\u5883\u4e2d\uff0c location \u5728 server \u73af\u5883\u4e2d\u3002 \u4ee5 # \u5f00\u5934\u7684\u662f\u6ce8\u91ca\u8bed\u53e5\u3002","title":"\u914d\u7f6e\u6587\u4ef6\u7ed3\u6784"},{"location":"nginx/beginner-guide/#_3","text":"","title":"\u9759\u6001\u5185\u5bb9\u670d\u52a1"},{"location":"nginx/beginner-guide/#_4","text":"","title":"\u5efa\u7acb\u7b80\u5355\u7684\u4ee3\u7406\u670d\u52a1\u5668"},{"location":"nginx/beginner-guide/#fastcgi","text":"","title":"\u5efa\u7acbFastCGI\u4ee3\u7406"},{"location":"reactiveX/Observable/","text":"\u5728 ReactiveX \u4e2d\uff0c\u4e00\u4e2a\u89c2\u5bdf\u8005\u53ef\u4ee5\u8ba2\u9605\u4e00\u4e2a\u53ef\u89c2\u5bdf\u5bf9\u8c61\u3002\u4e4b\u540e\u89c2\u5bdf\u8005\u5c31\u53ef\u4ee5\u5bf9\u88ab\u89c2\u5bdf\u5bf9\u8c61\u53d1\u51fa\u7684\u4e00\u4e2a\u6216\u4e00\u7cfb\u5217\u4e8b\u4ef6\u4f5c\u51fa\u54cd\u5e94\u3002\u8fd9\u79cd\u6a21\u5f0f\u4f7f\u5e76\u53d1\u64cd\u4f5c\u66f4\u5bb9\u6613\u5b9e\u73b0\uff0c\u56e0\u4e3a\u89c2\u5bdf\u8005\u5728\u7b49\u5f85\u88ab\u89c2\u5bdf\u5bf9\u8c61\u53d1\u51fa\u4e8b\u4ef6\u7684\u540c\u65f6\u4e0d\u4f1a\u963b\u65ad\u7a0b\u5e8f\u7684\u6267\u884c\uff0c\u800c\u662f\u76f8\u5f53\u4e8e\u4ee5\u89c2\u5bdf\u8005\u7684\u65b9\u5f0f\u521b\u5efa\u4e86\u4e00\u4e2a\u54e8\u5175\u4e13\u95e8\u8d1f\u8d23\u54cd\u5e94\u88ab\u89c2\u5bdf\u5bf9\u8c61\u4ea7\u751f\u7684\u4e8b\u4ef6\u3002 \u8fd9\u4e00\u7bc7\u5c31\u662f\u6765\u8bf4\u660e\u4ec0\u4e48\u65f6\u54cd\u5e94\u6a21\u5f0f\u3001\u88ab\u89c2\u5bdf\u5bf9\u8c61\u548c\u89c2\u5bdf\u8005\u662f\u4ec0\u4e48\u4ee5\u53ca\u89c2\u5bdf\u8005\u600e\u4e48\u8ba2\u9605\u88ab\u89c2\u5bdf\u5bf9\u8c61\u3002\u5176\u5b83\u7684\u7bc7\u5e45\u7528\u6765\u5c55\u793a\u600e\u6837\u4f7f\u7528\u591a\u79cd\u88ab\u89c2\u5bdf\u5bf9\u8c61\u8fd0\u7b97\u7b26\u6765\u94fe\u63a5\u591a\u4e2a\u88ab\u89c2\u5bdf\u5bf9\u8c61\u5e76\u4e14\u6539\u53d8\u5b83\u4eec\u7684\u884c\u4e3a\u3002 \u8fd9\u4e2a\u6587\u6863\u4f7f\u7528\u5927\u7406\u77f3\u56fe\u6765\u89e3\u91ca\u76f8\u5173\u7684\u6982\u5ff5\u77e5\u8bc6\uff0c\u4e0b\u9762\u7684\u5927\u7406\u77f3\u56fe\u7528\u6765\u8868\u793a\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53ca\u5176\u53d8\u6362: \u80cc\u666f\u77e5\u8bc6 \u5728\u4e00\u4e9b\u7f16\u7a0b\u4efb\u52a1\u4e2d\uff0c\u6211\u4eec\u4f1a\u5e0c\u671b\u6211\u4eec\u6240\u5199\u7684\u6307\u4ee4\u7acb\u9a6c\u6267\u884c\u5e76\u4e14\u9a6c\u4e0a\u5b8c\u6210\uff0c\u4e00\u6b21\u4e00\u6761\uff0c\u6309\u7740\u6211\u4eec\u7684\u4e66\u5199\u987a\u5e8f\u6267\u884c\u3002\u4f46\u5728 ReactiveX \u4e2d\uff0c\u67d0\u4e9b\u6307\u4ee4\u53ef\u4ee5\u5e76\u884c\u6267\u884c\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u6267\u884c\u7ed3\u679c\u4f1a\u88ab\u89c2\u5bdf\u8005\u6355\u83b7\uff0c\u5e76\u4e14\u6307\u4ee4\u6267\u884c\u7ed3\u679c\u4e0e\u6307\u4ee4\u6267\u884c\u7684\u987a\u5e8f\u65e0\u5173\u3002\u4f60\u4ee5\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u65b9\u5f0f\u5b9a\u4e49\u4e00\u79cd\u83b7\u53d6\u6216\u8005\u53d8\u6362\u6570\u636e\u7684\u673a\u5236\uff0c\u7136\u540e\u8ba9\u89c2\u5bdf\u8005\u6765\u8ba2\u9605\u5b83\uff0c\u53ea\u8981\u88ab\u89c2\u5bdf\u5bf9\u8c61\u6309\u7167\u9884\u5b9a\u4e49\u7684\u673a\u5236\u629b\u51fa\u4e8b\u4ef6\uff0c\u5e76\u4e14\u89c2\u5bdf\u8005\u5df2\u7ecf\u4f5c\u597d\u4e86\u54cd\u5e94\u4e8b\u4ef6\u7684\u51c6\u5907\u5c31\u884c\u3002 \u8fd9\u79cd\u65b9\u5f0f\u7684\u4e00\u4e2a\u4f18\u70b9\u662f\uff0c\u5f53\u4f60\u6709\u5927\u91cf\u76f8\u4e92\u72ec\u7acb\u7684\u4efb\u52a1\u9700\u8981\u5b8c\u6210\u65f6\uff0c\u53ef\u4ee5\u8ba9\u8fd9\u4e9b\u4efb\u52a1\u540c\u65f6\u6267\u884c\uff0c\u800c\u4e0d\u662f\u7b49\u4e00\u4e2a\u4efb\u52a1\u5b8c\u6210\u540e\u518d\u53bb\u6267\u884c\u4e0b\u4e00\u4e2a\u4efb\u52a1\u3002\u6240\u6709\u8fd9\u4e9b\u4efb\u52a1\u5b8c\u6210\u7684\u65f6\u95f4\uff0c\u4ee5\u8017\u65f6\u6700\u957f\u7684\u4efb\u52a1\u8ba1\u7b97\u3002 \u8fd9\u91cc\u6709\u4e00\u4e9b\u672f\u8bed\u7528\u6765\u63cf\u8ff0\u8fd9\u4e2a\u5f02\u6b65\u7f16\u7a0b\u6a21\u578b\uff1a \u4e00\u4e2a\u89c2\u5bdf\u8005\u8ba2\u9605\u4e86\u4e00\u4e2a\u88ab\u89c2\u5bdf\u5bf9\u8c61 \u4e00\u4e2a\u88ab\u89c2\u5bdf\u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u5176\u89c2\u5bdf\u8005\u7684\u65b9\u6cd5\u6765\u629b\u51fa\u4e00\u4e2a\u4e8b\u4ef6\u6216\u8005\u53d1\u9001\u4e00\u4e2a\u901a\u77e5\u7ed9\u5b83\u7684\u89c2\u5bdf\u8005\u3002 \u5728\u5176\u5b83\u7684\u4e00\u4e9b\u6587\u6863\u548c\u73af\u5883\u4e0b\uff0c\u6211\u4eec\u8fd9\u91cc\u6240\u8bf4\u7684 \u89c2\u5bdf\u8005 \u6709\u65f6\u4e5f\u88ab\u53eb\u4f5c \u8ba2\u9605\u8005 \u3001 \u76d1\u89c6\u8005 \u6216\u8005 \u54cd\u5e94\u8005 \u3002\u8fd9\u79cd\u7f16\u7a0b\u6a21\u578b\u901a\u5e38\u88ab\u79f0\u4e3a \u54cd\u5e94\u6a21\u5f0f \u3002 \u5efa\u7acb\u89c2\u5bdf\u8005 \u672c\u6587\u4f7f\u7528\u7c7b Groovy \u7684\u4f2a\u4ee3\u7801\u6765\u5199\u793a\u4f8b\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u5b83\u7684\u7f16\u7a0b\u8bed\u8a00\u6765\u5b9e\u73b0\u3002 \u4e00\u822c\u7684\u65b9\u6cd5\u8c03\u7528(\u4e0d\u50cf\u5728 ReactiveX \u4e2d\u7684\u5f02\u6b65/\u5e76\u884c\u8c03\u7528)\u6d41\u7a0b\u5982\u4e0b\uff1a \u8c03\u7528\u4e00\u4e2a\u65b9\u6cd5 \u628a\u4ece\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u8fd4\u4e2d\u7684\u503c\u5b58\u5165\u53d8\u91cf \u4f7f\u7528\u8fd9\u4e2a\u8d4b\u4e88\u65b0\u503c\u7684\u53d8\u91cf\u53bb\u4f5c\u4e00\u4e9b\u4e8b\u60c5 \u7528\u4f2a\u4ee3\u7801\u8868\u793a\u5c31\u662f\uff1a 1 2 3 //make the call, assign its return value to `returnVal` returnVal = someMethod(itsParameters); // so something useful with returnVal \u800c\u5728\u5f02\u6b65\u7f16\u7a0b\u6a21\u578b\u4e2d\uff0c\u6d41\u7a0b\u5982\u4e0b\uff1a \u5b9a\u4e49\u4e00\u4e2a\u5904\u7406\u5f02\u6b65\u8c03\u7528\u8fd4\u56de\u503c\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5c5e\u4e8e\u89c2\u5bdf\u8005 \u628a\u5f02\u6b65\u8c03\u7528\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u8ba9\u89c2\u5bdf\u8005\u53bb\u8ba2\u9605\u8fd9\u4e2a\u5b9a\u4e49\u7684\u53ef\u89c2\u5bdf\u5bf9\u8c61\uff0c\u8fd9\u540c\u65f6\u4e5f\u4f1a\u8ba9\u53ef\u89c2\u5bdf\u5bf9\u8c61\u5f00\u59cb\u8d77\u4f5c\u7528 \u4e4b\u540e\uff0c\u4f60\u5c31\u53ef\u4ee5\u5904\u7406\u4e1a\u52a1\u903b\u8f91\u4e86\uff0c\u6bcf\u5f53\u5f02\u6b65\u8c03\u7528\u8fd4\u56de\u503c\u65f6\uff0c\u89c2\u5bdf\u8005\u5c31\u4f1a\u7528\u81ea\u5df1\u7684\u65b9\u6cd5\u6765\u5904\u7406\u8fd9\u4e2a\u4ece\u53ef\u89c2\u5bdf\u5bf9\u8c61\u8fd4\u56de\u7684\u503c \u7528\u4f2a\u4ee3\u7801\u8868\u793a\u5982\u4e0b\uff1a 1 2 3 4 5 6 // defines, but does not invoke, the Subscriber s onNext handler // (in this example, the observer is very simple and has only an onNext handler) def myOnNext = { it - do something useful with it }; def myObservable = someObservable(itsParameters); myObservable.subscribe(myOnNext); // go on about my business onNext, onCompleted \u548c onError Subscribe \u65b9\u6cd5\u53ef\u4ee5\u628a\u89c2\u5bdf\u8005\u548c\u53ef\u89c2\u5bdf\u5bf9\u8c61\u8fde\u63a5\u5728\u4e00\u8d77\u3002\u89c2\u5bdf\u8005\u5e94\u8be5\u5b9e\u73b0\u4e0b\u9762\u65b9\u6cd5\u7684\u5b50\u96c6\uff1a onNext - \u53ef\u89c2\u5bdf\u5bf9\u8c61\u6bcf\u53d1\u51fa\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u5c31\u4f1a\u8c03\u7528\u4e00\u6b21\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u5e76\u628a\u53d1\u51fa\u7684\u4e8b\u4ef6\u4f5c\u4e3a\u8fd9\u4e2a\u65b9\u6cd5\u7684\u53c2\u6570 onError - \u53ef\u89c2\u5bdf\u5bf9\u8c61\u901a\u8fc7\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u6765\u8868\u660e\u5b83\u65e0\u6cd5\u751f\u6210\u671f\u671b\u7684\u6570\u636e\u6216\u8005\u78b0\u5230\u4e86\u4e00\u4e9b\u5176\u5b83\u7684\u9519\u8bef\u3002\u8fd9\u4e2a\u65b9\u6cd5\u88ab\u8c03\u7528\u4e4b\u540e\uff0c\u53ef\u89c2\u5bdf\u5bf9\u8c61\u5c31\u4e0d\u4f1a\u518d\u8c03\u7528 onNext \u548c onCompleted \u65b9\u6cd5\u4e86\u3002\u540c\u65f6\uff0c onError \u65b9\u6cd5\u88ab\u8c03\u7528\u65f6\u4f1a\u628a\u9519\u8bef\u4fe1\u606f\u5c01\u88c5\u6210\u5b83\u7684\u53c2\u6570\uff0c\u544a\u8bc9\u89c2\u5bdf\u8005\u53d1\u751f\u4e86\u4ec0\u4e48\u7c7b\u578b\u7684\u9519\u8bef onCompleted - \u5f53\u4e00\u4e2a\u53ef\u89c2\u5bdf\u5bf9\u8c61\u8c03\u7528\u5b8c\u6700\u540e\u4e00\u6b21 onNext \u65b9\u6cd5\u540e\u5982\u679c\u6ca1\u6709\u51fa\u73b0\u4efb\u4f55\u9519\u8bef\uff0c\u4fbf\u4f1a\u8c03\u7528 OnCompleted \u65b9\u6cd5 \u6839\u636e\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u4e0d\u540c\u534f\u8bae\u7c7b\u578b\uff0c onNext \u65b9\u6cd5\u53ef\u80fd\u4f1a\u88ab\u8c03\u7528\u591a\u6b21\uff0c\u4e5f\u53ef\u80fd\u5b8c\u5168\u4e0d\u4f1a\u88ab\u8c03\u7528\uff0c\u4f46 onCompleted \u548c onError \u65b9\u6cd5\u4e00\u5b9a\u662f\u53ef\u89c2\u5bdf\u5bf9\u8c61\u6700\u540e\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u5e76\u4e14\u5b83\u4eec\u662f\u4e92\u65a5\u7684\uff0c\u4e0d\u4f1a\u4f5c\u4e3a\u6700\u540e\u7684\u65b9\u6cd5\u88ab\u540c\u65f6\u8c03\u7528\u3002\u901a\u5e38\uff0c\u6211\u4eec\u628a onNext \u65b9\u6cd5\u8c03\u7528\u79f0\u4e3a \u4e8b\u4ef6\u53d1\u9001 ,\u800c onCompleted \u548c onError \u65b9\u6cd5\u8c03\u7528\u79f0\u4e3a \u901a\u77e5 \u3002 \u4e00\u4e2a\u66f4\u52a0\u5b8c\u6574\u7684\u8ba2\u9605\u8c03\u7528\u793a\u4f8b\u5982\u4e0b\uff1a 1 2 3 4 5 6 def myOnNext = { item - /* do something useful with item */ }; def myOnError = { throwable - /* react sensible to a failed call */ }; def myOnCompleted = { /* clean up after the final response */ }; def myObservable = someMethod(itsParameters); myObservable.subscribe(myOnNext, myOnError, myOnCompleted); // go on about my bussiness \u53d6\u6d88\u8ba2\u9605 \u5728\u4e00\u4e9b ReactiveX \u7684\u5b9e\u73b0\u4e2d\uff0c\u6709\u4e00\u79cd\u7279\u6b8a\u7684\u89c2\u5bdf\u8005\u63a5\u53e3\uff0c\u53eb\u4f5c \u8ba2\u9605\u8005 \uff0c\u5b83\u5b9e\u73b0\u4e86\u4e00\u4e2a unsubscribe \u65b9\u6cd5\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u8fd9\u4e2a unsubscribe \u65b9\u6cd5\u6765\u8868\u660e\u4f60\u5bf9\u5f53\u524d\u8ba2\u9605\u7684\u53ef\u89c2\u5bdf\u5bf9\u8c61\u4e0d\u518d\u611f\u5174\u8da3\u3002\u5982\u679c\u8fd9\u4e2a\u53ef\u89c2\u5bdf\u5bf9\u8c61\u6ca1\u6709\u88ab\u5176\u5b83\u7684\u89c2\u5bdf\u8005\u8ba2\u9605\uff0c\u5b83\u5c31\u53ef\u4ee5\u505c\u6b62\u53d1\u9001\u65b0\u7684\u4e8b\u4ef6\u3002 \u53d6\u6d88\u8ba2\u9605\u7684\u7ed3\u679c\u5c31\u662f\u8ba9\u89c2\u5bdf\u8005\u8ba2\u9605\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u8fd0\u7b97\u94fe\u4e0a\u6bcf\u4e00\u4e2a\u4e8b\u4ef6\u901a\u9053\u90fd\u5173\u95ed\u3002\u8fd9\u4e2a\u4e0d\u4f1a\u7acb\u5373\u751f\u6548\uff0c\u5373\u4f7f\u53ef\u89c2\u5bdf\u5bf9\u8c61\u5df2\u7ecf\u6ca1\u6709\u88ab\u4efb\u4f55\u89c2\u5bdf\u8005\u8ba2\u9605\uff0c\u5b83\u4e5f\u53ef\u80fd\u4f1a\u6301\u7eed\u4e00\u6bb5\u65f6\u95f4\u5411\u5916\u53d1\u9001\u4e8b\u4ef6\u3002 \u547d\u540d\u516c\u7ea6 \u5177\u4f53\u8bed\u8a00\u5728\u5404\u81ea\u5b9e\u73b0 ReactiveX \u65f6\uff0c\u90fd\u6709\u5404\u81ea\u7684\u547d\u540d\u98ce\u683c\uff0c\u6ca1\u6709\u4ec0\u4e48\u89c4\u8303\u6807\u51c6\uff0c\u4f46\u4e0d\u540c\u7684\u5b9e\u73b0\u6709\u4e00\u4e9b\u5171\u540c\u4e4b\u5904\u3002 \u4e00\u4e9b\u547d\u540d\u5728\u67d0\u4e9b\u573a\u5408\u4e0b\u663e\u7684\u5f88\u96be\u7406\u89e3\uff0c\u751a\u81f3\u6709\u70b9\u53e4\u602a\u3002 \u4f8b\u5982\u50cf onEvent \u7684\u547d\u540d\u65b9\u5f0f(onNext\u3001onCompleted\u3001onError)\u3002\u5728\u5176\u5b83\u4e00\u4e9b\u573a\u5408\u4e0b\uff0c\u8fd9\u6837\u7684\u547d\u540d\u6307\u660e\u54ea\u4e00\u4e2a\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u88ab\u6ce8\u518c\uff0c\u4f46\u5728 ReactiveX \u4e2d\uff0c\u8fd9\u79cd\u547d\u540d\u8868\u793a\u7684\u662f\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u672c\u8eab\u3002 \u70ed\u53ef\u89c2\u5bdf\u5bf9\u8c61\u548c\u51b7\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u4ec0\u4e48\u65f6\u5019\u53ef\u89c2\u5bdf\u5bf9\u8c61\u4f1a\u5bf9\u5916\u53d1\u51fa\u4e8b\u4ef6\u5462\uff1f\u8fd9\u5c31\u8981\u770b\u5177\u4f53\u7684\u53ef\u89c2\u5bdf\u5bf9\u8c61\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\u4e86\u3002\u70ed\u53ef\u89c2\u5bdf\u5bf9\u50cf\u5728\u521b\u5efa\u4e4b\u540e\u7acb\u9a6c\u5c31\u5411\u5916\u53d1\u51fa\u4e8b\u4ef6\uff0c\u4efb\u4f55\u5728\u5b83\u521b\u5efa\u4e4b\u540e\u8ba2\u9605\u5b83\u7684\u89c2\u5bdf\u8005\u90fd\u53ea\u80fd\u83b7\u5f97\u6240\u6709\u53d1\u51fa\u4e8b\u4ef6\u7684\u4e00\u90e8\u5206\u3002\u51b7\u53ef\u89c2\u5bdf\u8005\u5728\u5411\u5916\u53d1\u9001\u4e8b\u4ef6\u4e4b\u524d\uff0c\u5fc5\u987b\u81f3\u5c11\u6709\u4e00\u4e2a\u89c2\u5bdf\u8005\u8ba2\u9605\u4e86\u5b83\u624d\u884c\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u89c2\u5bdf\u8005\u53ef\u4ee5\u4ece\u5934\u5230\u5c3e\u83b7\u5f97\u6240\u6709\u7684\u4e8b\u4ef6\u3002 \u901a\u8fc7\u53ef\u89c2\u5bdf\u5bf9\u8c61\u8fd0\u7b97\u6765\u7ec4\u5408\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u53ef\u89c2\u5bdf\u5bf9\u8c61\u548c\u89c2\u5bdf\u8005\u53ea\u662f ReactiveX \u7684\u57fa\u7840\uff0c\u5b83\u4eec\u4ec5\u4ec5\u662f\u5bf9\u6807\u51c6\u89c2\u5bdf\u8005\u8bbe\u8ba1\u6a21\u5f0f\u7684\u6269\u5c55\uff0c\u53ef\u4ee5\u66f4\u597d\u7684\u9002\u7528\u4e8e\u4e00\u7cfb\u5217\u7684\u4e8b\u4ef6\u56de\u8c03\uff0c\u800c\u4e0d\u662f\u9488\u5bf9\u5355\u4e2a\u56de\u8c03\u3002 ReactiveX \u901a\u8fc7\u6269\u5c55\u8fd0\u7b97\u6765\u53d8\u6362\u3001\u7ec4\u5408\u3001\u64cd\u4f5c\u4e00\u7cfb\u5217\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u51fa\u7684\u4e8b\u4ef6\uff0c\u4ece\u800c\u53d1\u6325\u771f\u6b63\u7684\u5a01\u529b\u3002 \u8fd9\u4e9b\u6269\u5c55\u8fd0\u7b97\u53ef\u4ee5\u628a\u5f02\u6b65\u5e8f\u5217\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u4ee5\u4e00\u79cd\u7b80\u5355\u660e\u4e86\u7684\u65b9\u5f0f\u5c55\u73b0\u51fa\u6765\uff0c\u5145\u5206\u53d1\u6325\u4e86\u56de\u8c03\u7684\u4f18\u70b9\uff0c\u907f\u514d\u4e86\u56de\u8c03\u5728\u4f20\u7edf\u5f02\u6b65\u7f16\u7a0b\u4e2d\u5b58\u5728\u7684\u591a\u7ea7\u5d4c\u5957\u7684\u7f3a\u70b9\u3002 \u672c\u6587\u6863\u5728\u4e0b\u9762\u6c47\u603b\u4e86\u5f88\u591a\u8fd9\u4e9b\u6269\u5c55\u8fd0\u7b97\u548c\u76f8\u5e94\u7684\u7528\u6cd5: \u521b\u5efa\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u64cd\u4f5c Create \u3001 Defer \u3001 Empty / Never / Throw \u3001 From \u3001 Interval \u3001 Just \u3001 Range \u3001 Repeat \u3001 Start \u548c Timer \u53d8\u6362\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u64cd\u4f5c Buffer \u3001 FlatMap \u3001 GroupBy \u3001 Map \u3001 Scan \u548c Window \u8fc7\u8651\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u64cd\u4f5c Debounce \u3001 Distinct \u3001 ElementAt \u3001 Filter \u3001 First \u3001 IgnoreElements \u3001 Last \u3001 Sample \u3001 Skip \u3001 SkipLast \u3001 Take \u548c TakeLast \u7ec4\u5408\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u64cd\u4f5c And / Then / When \u3001 CombineLatest \u3001 Join \u3001 Merge \u3001 StartWith \u3001 Switch \u548c Zip \u9519\u8bef\u5904\u7406\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u64cd\u4f5c Catch \u548c Retry \u8f85\u52a9\u64cd\u4f5c Delay \u3001 Do \u3001 Materialize / Dematerialize \u3001 ObserveOn \u3001 Serialize \u3001 Subscribe \u3001 SubscribeOn \u3001 Timeout \u3001 Timestamp \u548c Using \u6761\u4ef6\u5e03\u5c14\u64cd\u4f5c All \u3001 Amb \u3001 Contains \u3001 DefaultIfEmpty \u3001 SequenceEqual \u3001 SkipUntil \u3001 SkipWhile \u3001 TakeUntil \u548c TakeWhile \u6570\u5b66\u548c\u805a\u5408\u64cd\u4f5c Average \u3001 Concat \u3001 Count \u3001 Max \u3001 Min \u3001 Reduce \u548c Sum \u8f6c\u6362\u64cd\u4f5c To \u8fde\u63a5\u53ef\u89c2\u5bdf\u5bf9\u8c61\u64cd\u4f5c Connect \u3001 Publish \u3001 RefCount \u548c Replay \u80cc\u538b\u64cd\u4f5c \u589e\u5f3a\u6d41\u63a7\u5236\u7b56\u7565\u7684\u591a\u79cd\u8fd0\u7b97 \u4e0a\u9762\u7684\u8fd9\u4e9b\u8fd0\u7b97\u5305\u542b\u4e86\u4e00\u4e9b\u5e76\u4e0d\u662f ReactiveX \u6838\u5fc3\u8fd0\u7b97\u7684\u90e8\u5206\uff0c\u4f46\u5b83\u4eec\u5728\u4e00\u4e9b\u7279\u6b8a\u8bed\u8a00\u7684\u5b9e\u73b0\u548c\u53ef\u9009\u6a21\u5757\u4e2d\u6709\u5e94\u7528\u3002 \u94fe\u5f0f\u8fd0\u7b97 \u5927\u90e8\u5206\u8fd0\u7b97\u57fa\u4e8e\u53ef\u89c2\u5bdf\u5bf9\u8c61\uff0c\u5e76\u4e14\u8fd4\u56de\u503c\u4e5f\u662f\u53ef\u89c2\u5bdf\u5bf9\u8c61\uff0c\u8fd9\u79cd\u65b9\u5f0f\u8ba9\u4f60\u80fd\u591f\u4ee5\u94fe\u5f0f\u8fdb\u884c\u8fd0\u7b97\u3002\u5728\u94fe\u5f0f\u8fd0\u7b97\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u8fd0\u7b97\u7b26\u90fd\u4f5c\u7528\u4e8e\u524d\u4e00\u4e2a\u8fd0\u7b97\u5904\u7406\u5b8c\u6210\u540e\u8fd4\u56de\u7684\u53ef\u89c2\u5bdf\u5bf9\u8c61\u4e0a\u3002 \u8fd9\u513f\u4ea7\u751f\u4e86\u53e6\u4e00\u4e2a\u95ee\u9898\uff0c\u5728\u521b\u9020\u6a21\u5f0f\u4e2d\uff0c\u94fe\u5f0f\u65b9\u6cd5\u8c03\u7528\u7684\u987a\u5e8f\u5bf9\u7ed3\u679c\u6ca1\u6709\u5f71\u54cd\uff0c\u4f46\u5728 ReactiveX \u7684\u53ef\u89c2\u5bdf\u5bf9\u8c61\u4e0a\u8fdb\u884c\u7684\u94fe\u5f0f\u8fd0\u7b97\u7684\u987a\u5e8f\u5bf9\u7ed3\u679c\u6709\u5f71\u54cd\u3002 \u53ef\u89c2\u5bdf\u5bf9\u8c61\u4e0a\u7684\u94fe\u5f0f\u8fd0\u7b97\u4e0d\u662f\u72ec\u7acb\u7684\u4f5c\u7528\u5728\u539f\u59cb\u53ef\u89c2\u5bdf\u5bf9\u8c61\u4e0a\u7684\uff0c\u6bcf\u4e00\u4e2a\u8fd0\u7b97\u90fd\u57fa\u4e8e\u524d\u4e00\u4e2a\u8fd0\u7b97\u8fd4\u56de\u7684\u7ed3\u679c\uff0c\u6240\u4ee5\u987a\u5e8f\u5c31\u663e\u7684\u5f88\u91cd\u8981\u4e86\u3002 \u53c2\u8003\u6587\u7ae0 Single \u2014 a specialized version of an Observable that emits only a single item Rx Workshop: Introduction Introduction to Rx: IObservable Mastering observables (from the Couchbase Server documentation) 2 minute introduction to Rx by Andre Staltz (\u201cThink of an Observable as an asynchronous immutable array.\u201d) Introducing the Observable by Jafar Husain (JavaScript Video Tutorial) Observable object (RxJS) by Dennis Stoyanov Turning a callback into an Rx Observable by @afterecho","title":"\u53ef\u89c2\u5bdf\u7684"},{"location":"reactiveX/Observable/#_1","text":"\u5728\u4e00\u4e9b\u7f16\u7a0b\u4efb\u52a1\u4e2d\uff0c\u6211\u4eec\u4f1a\u5e0c\u671b\u6211\u4eec\u6240\u5199\u7684\u6307\u4ee4\u7acb\u9a6c\u6267\u884c\u5e76\u4e14\u9a6c\u4e0a\u5b8c\u6210\uff0c\u4e00\u6b21\u4e00\u6761\uff0c\u6309\u7740\u6211\u4eec\u7684\u4e66\u5199\u987a\u5e8f\u6267\u884c\u3002\u4f46\u5728 ReactiveX \u4e2d\uff0c\u67d0\u4e9b\u6307\u4ee4\u53ef\u4ee5\u5e76\u884c\u6267\u884c\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u6267\u884c\u7ed3\u679c\u4f1a\u88ab\u89c2\u5bdf\u8005\u6355\u83b7\uff0c\u5e76\u4e14\u6307\u4ee4\u6267\u884c\u7ed3\u679c\u4e0e\u6307\u4ee4\u6267\u884c\u7684\u987a\u5e8f\u65e0\u5173\u3002\u4f60\u4ee5\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u65b9\u5f0f\u5b9a\u4e49\u4e00\u79cd\u83b7\u53d6\u6216\u8005\u53d8\u6362\u6570\u636e\u7684\u673a\u5236\uff0c\u7136\u540e\u8ba9\u89c2\u5bdf\u8005\u6765\u8ba2\u9605\u5b83\uff0c\u53ea\u8981\u88ab\u89c2\u5bdf\u5bf9\u8c61\u6309\u7167\u9884\u5b9a\u4e49\u7684\u673a\u5236\u629b\u51fa\u4e8b\u4ef6\uff0c\u5e76\u4e14\u89c2\u5bdf\u8005\u5df2\u7ecf\u4f5c\u597d\u4e86\u54cd\u5e94\u4e8b\u4ef6\u7684\u51c6\u5907\u5c31\u884c\u3002 \u8fd9\u79cd\u65b9\u5f0f\u7684\u4e00\u4e2a\u4f18\u70b9\u662f\uff0c\u5f53\u4f60\u6709\u5927\u91cf\u76f8\u4e92\u72ec\u7acb\u7684\u4efb\u52a1\u9700\u8981\u5b8c\u6210\u65f6\uff0c\u53ef\u4ee5\u8ba9\u8fd9\u4e9b\u4efb\u52a1\u540c\u65f6\u6267\u884c\uff0c\u800c\u4e0d\u662f\u7b49\u4e00\u4e2a\u4efb\u52a1\u5b8c\u6210\u540e\u518d\u53bb\u6267\u884c\u4e0b\u4e00\u4e2a\u4efb\u52a1\u3002\u6240\u6709\u8fd9\u4e9b\u4efb\u52a1\u5b8c\u6210\u7684\u65f6\u95f4\uff0c\u4ee5\u8017\u65f6\u6700\u957f\u7684\u4efb\u52a1\u8ba1\u7b97\u3002 \u8fd9\u91cc\u6709\u4e00\u4e9b\u672f\u8bed\u7528\u6765\u63cf\u8ff0\u8fd9\u4e2a\u5f02\u6b65\u7f16\u7a0b\u6a21\u578b\uff1a \u4e00\u4e2a\u89c2\u5bdf\u8005\u8ba2\u9605\u4e86\u4e00\u4e2a\u88ab\u89c2\u5bdf\u5bf9\u8c61 \u4e00\u4e2a\u88ab\u89c2\u5bdf\u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u5176\u89c2\u5bdf\u8005\u7684\u65b9\u6cd5\u6765\u629b\u51fa\u4e00\u4e2a\u4e8b\u4ef6\u6216\u8005\u53d1\u9001\u4e00\u4e2a\u901a\u77e5\u7ed9\u5b83\u7684\u89c2\u5bdf\u8005\u3002 \u5728\u5176\u5b83\u7684\u4e00\u4e9b\u6587\u6863\u548c\u73af\u5883\u4e0b\uff0c\u6211\u4eec\u8fd9\u91cc\u6240\u8bf4\u7684 \u89c2\u5bdf\u8005 \u6709\u65f6\u4e5f\u88ab\u53eb\u4f5c \u8ba2\u9605\u8005 \u3001 \u76d1\u89c6\u8005 \u6216\u8005 \u54cd\u5e94\u8005 \u3002\u8fd9\u79cd\u7f16\u7a0b\u6a21\u578b\u901a\u5e38\u88ab\u79f0\u4e3a \u54cd\u5e94\u6a21\u5f0f \u3002","title":"\u80cc\u666f\u77e5\u8bc6"},{"location":"reactiveX/Observable/#_2","text":"\u672c\u6587\u4f7f\u7528\u7c7b Groovy \u7684\u4f2a\u4ee3\u7801\u6765\u5199\u793a\u4f8b\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u5b83\u7684\u7f16\u7a0b\u8bed\u8a00\u6765\u5b9e\u73b0\u3002 \u4e00\u822c\u7684\u65b9\u6cd5\u8c03\u7528(\u4e0d\u50cf\u5728 ReactiveX \u4e2d\u7684\u5f02\u6b65/\u5e76\u884c\u8c03\u7528)\u6d41\u7a0b\u5982\u4e0b\uff1a \u8c03\u7528\u4e00\u4e2a\u65b9\u6cd5 \u628a\u4ece\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u8fd4\u4e2d\u7684\u503c\u5b58\u5165\u53d8\u91cf \u4f7f\u7528\u8fd9\u4e2a\u8d4b\u4e88\u65b0\u503c\u7684\u53d8\u91cf\u53bb\u4f5c\u4e00\u4e9b\u4e8b\u60c5 \u7528\u4f2a\u4ee3\u7801\u8868\u793a\u5c31\u662f\uff1a 1 2 3 //make the call, assign its return value to `returnVal` returnVal = someMethod(itsParameters); // so something useful with returnVal \u800c\u5728\u5f02\u6b65\u7f16\u7a0b\u6a21\u578b\u4e2d\uff0c\u6d41\u7a0b\u5982\u4e0b\uff1a \u5b9a\u4e49\u4e00\u4e2a\u5904\u7406\u5f02\u6b65\u8c03\u7528\u8fd4\u56de\u503c\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5c5e\u4e8e\u89c2\u5bdf\u8005 \u628a\u5f02\u6b65\u8c03\u7528\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u8ba9\u89c2\u5bdf\u8005\u53bb\u8ba2\u9605\u8fd9\u4e2a\u5b9a\u4e49\u7684\u53ef\u89c2\u5bdf\u5bf9\u8c61\uff0c\u8fd9\u540c\u65f6\u4e5f\u4f1a\u8ba9\u53ef\u89c2\u5bdf\u5bf9\u8c61\u5f00\u59cb\u8d77\u4f5c\u7528 \u4e4b\u540e\uff0c\u4f60\u5c31\u53ef\u4ee5\u5904\u7406\u4e1a\u52a1\u903b\u8f91\u4e86\uff0c\u6bcf\u5f53\u5f02\u6b65\u8c03\u7528\u8fd4\u56de\u503c\u65f6\uff0c\u89c2\u5bdf\u8005\u5c31\u4f1a\u7528\u81ea\u5df1\u7684\u65b9\u6cd5\u6765\u5904\u7406\u8fd9\u4e2a\u4ece\u53ef\u89c2\u5bdf\u5bf9\u8c61\u8fd4\u56de\u7684\u503c \u7528\u4f2a\u4ee3\u7801\u8868\u793a\u5982\u4e0b\uff1a 1 2 3 4 5 6 // defines, but does not invoke, the Subscriber s onNext handler // (in this example, the observer is very simple and has only an onNext handler) def myOnNext = { it - do something useful with it }; def myObservable = someObservable(itsParameters); myObservable.subscribe(myOnNext); // go on about my business","title":"\u5efa\u7acb\u89c2\u5bdf\u8005"},{"location":"reactiveX/Observable/#onnext-oncompleted-onerror","text":"Subscribe \u65b9\u6cd5\u53ef\u4ee5\u628a\u89c2\u5bdf\u8005\u548c\u53ef\u89c2\u5bdf\u5bf9\u8c61\u8fde\u63a5\u5728\u4e00\u8d77\u3002\u89c2\u5bdf\u8005\u5e94\u8be5\u5b9e\u73b0\u4e0b\u9762\u65b9\u6cd5\u7684\u5b50\u96c6\uff1a onNext - \u53ef\u89c2\u5bdf\u5bf9\u8c61\u6bcf\u53d1\u51fa\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u5c31\u4f1a\u8c03\u7528\u4e00\u6b21\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u5e76\u628a\u53d1\u51fa\u7684\u4e8b\u4ef6\u4f5c\u4e3a\u8fd9\u4e2a\u65b9\u6cd5\u7684\u53c2\u6570 onError - \u53ef\u89c2\u5bdf\u5bf9\u8c61\u901a\u8fc7\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u6765\u8868\u660e\u5b83\u65e0\u6cd5\u751f\u6210\u671f\u671b\u7684\u6570\u636e\u6216\u8005\u78b0\u5230\u4e86\u4e00\u4e9b\u5176\u5b83\u7684\u9519\u8bef\u3002\u8fd9\u4e2a\u65b9\u6cd5\u88ab\u8c03\u7528\u4e4b\u540e\uff0c\u53ef\u89c2\u5bdf\u5bf9\u8c61\u5c31\u4e0d\u4f1a\u518d\u8c03\u7528 onNext \u548c onCompleted \u65b9\u6cd5\u4e86\u3002\u540c\u65f6\uff0c onError \u65b9\u6cd5\u88ab\u8c03\u7528\u65f6\u4f1a\u628a\u9519\u8bef\u4fe1\u606f\u5c01\u88c5\u6210\u5b83\u7684\u53c2\u6570\uff0c\u544a\u8bc9\u89c2\u5bdf\u8005\u53d1\u751f\u4e86\u4ec0\u4e48\u7c7b\u578b\u7684\u9519\u8bef onCompleted - \u5f53\u4e00\u4e2a\u53ef\u89c2\u5bdf\u5bf9\u8c61\u8c03\u7528\u5b8c\u6700\u540e\u4e00\u6b21 onNext \u65b9\u6cd5\u540e\u5982\u679c\u6ca1\u6709\u51fa\u73b0\u4efb\u4f55\u9519\u8bef\uff0c\u4fbf\u4f1a\u8c03\u7528 OnCompleted \u65b9\u6cd5 \u6839\u636e\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u4e0d\u540c\u534f\u8bae\u7c7b\u578b\uff0c onNext \u65b9\u6cd5\u53ef\u80fd\u4f1a\u88ab\u8c03\u7528\u591a\u6b21\uff0c\u4e5f\u53ef\u80fd\u5b8c\u5168\u4e0d\u4f1a\u88ab\u8c03\u7528\uff0c\u4f46 onCompleted \u548c onError \u65b9\u6cd5\u4e00\u5b9a\u662f\u53ef\u89c2\u5bdf\u5bf9\u8c61\u6700\u540e\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u5e76\u4e14\u5b83\u4eec\u662f\u4e92\u65a5\u7684\uff0c\u4e0d\u4f1a\u4f5c\u4e3a\u6700\u540e\u7684\u65b9\u6cd5\u88ab\u540c\u65f6\u8c03\u7528\u3002\u901a\u5e38\uff0c\u6211\u4eec\u628a onNext \u65b9\u6cd5\u8c03\u7528\u79f0\u4e3a \u4e8b\u4ef6\u53d1\u9001 ,\u800c onCompleted \u548c onError \u65b9\u6cd5\u8c03\u7528\u79f0\u4e3a \u901a\u77e5 \u3002 \u4e00\u4e2a\u66f4\u52a0\u5b8c\u6574\u7684\u8ba2\u9605\u8c03\u7528\u793a\u4f8b\u5982\u4e0b\uff1a 1 2 3 4 5 6 def myOnNext = { item - /* do something useful with item */ }; def myOnError = { throwable - /* react sensible to a failed call */ }; def myOnCompleted = { /* clean up after the final response */ }; def myObservable = someMethod(itsParameters); myObservable.subscribe(myOnNext, myOnError, myOnCompleted); // go on about my bussiness","title":"onNext, onCompleted \u548c onError"},{"location":"reactiveX/Observable/#_3","text":"\u5728\u4e00\u4e9b ReactiveX \u7684\u5b9e\u73b0\u4e2d\uff0c\u6709\u4e00\u79cd\u7279\u6b8a\u7684\u89c2\u5bdf\u8005\u63a5\u53e3\uff0c\u53eb\u4f5c \u8ba2\u9605\u8005 \uff0c\u5b83\u5b9e\u73b0\u4e86\u4e00\u4e2a unsubscribe \u65b9\u6cd5\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u8fd9\u4e2a unsubscribe \u65b9\u6cd5\u6765\u8868\u660e\u4f60\u5bf9\u5f53\u524d\u8ba2\u9605\u7684\u53ef\u89c2\u5bdf\u5bf9\u8c61\u4e0d\u518d\u611f\u5174\u8da3\u3002\u5982\u679c\u8fd9\u4e2a\u53ef\u89c2\u5bdf\u5bf9\u8c61\u6ca1\u6709\u88ab\u5176\u5b83\u7684\u89c2\u5bdf\u8005\u8ba2\u9605\uff0c\u5b83\u5c31\u53ef\u4ee5\u505c\u6b62\u53d1\u9001\u65b0\u7684\u4e8b\u4ef6\u3002 \u53d6\u6d88\u8ba2\u9605\u7684\u7ed3\u679c\u5c31\u662f\u8ba9\u89c2\u5bdf\u8005\u8ba2\u9605\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u8fd0\u7b97\u94fe\u4e0a\u6bcf\u4e00\u4e2a\u4e8b\u4ef6\u901a\u9053\u90fd\u5173\u95ed\u3002\u8fd9\u4e2a\u4e0d\u4f1a\u7acb\u5373\u751f\u6548\uff0c\u5373\u4f7f\u53ef\u89c2\u5bdf\u5bf9\u8c61\u5df2\u7ecf\u6ca1\u6709\u88ab\u4efb\u4f55\u89c2\u5bdf\u8005\u8ba2\u9605\uff0c\u5b83\u4e5f\u53ef\u80fd\u4f1a\u6301\u7eed\u4e00\u6bb5\u65f6\u95f4\u5411\u5916\u53d1\u9001\u4e8b\u4ef6\u3002","title":"\u53d6\u6d88\u8ba2\u9605"},{"location":"reactiveX/Observable/#_4","text":"\u5177\u4f53\u8bed\u8a00\u5728\u5404\u81ea\u5b9e\u73b0 ReactiveX \u65f6\uff0c\u90fd\u6709\u5404\u81ea\u7684\u547d\u540d\u98ce\u683c\uff0c\u6ca1\u6709\u4ec0\u4e48\u89c4\u8303\u6807\u51c6\uff0c\u4f46\u4e0d\u540c\u7684\u5b9e\u73b0\u6709\u4e00\u4e9b\u5171\u540c\u4e4b\u5904\u3002 \u4e00\u4e9b\u547d\u540d\u5728\u67d0\u4e9b\u573a\u5408\u4e0b\u663e\u7684\u5f88\u96be\u7406\u89e3\uff0c\u751a\u81f3\u6709\u70b9\u53e4\u602a\u3002 \u4f8b\u5982\u50cf onEvent \u7684\u547d\u540d\u65b9\u5f0f(onNext\u3001onCompleted\u3001onError)\u3002\u5728\u5176\u5b83\u4e00\u4e9b\u573a\u5408\u4e0b\uff0c\u8fd9\u6837\u7684\u547d\u540d\u6307\u660e\u54ea\u4e00\u4e2a\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u88ab\u6ce8\u518c\uff0c\u4f46\u5728 ReactiveX \u4e2d\uff0c\u8fd9\u79cd\u547d\u540d\u8868\u793a\u7684\u662f\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u672c\u8eab\u3002","title":"\u547d\u540d\u516c\u7ea6"},{"location":"reactiveX/Observable/#_5","text":"\u4ec0\u4e48\u65f6\u5019\u53ef\u89c2\u5bdf\u5bf9\u8c61\u4f1a\u5bf9\u5916\u53d1\u51fa\u4e8b\u4ef6\u5462\uff1f\u8fd9\u5c31\u8981\u770b\u5177\u4f53\u7684\u53ef\u89c2\u5bdf\u5bf9\u8c61\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\u4e86\u3002\u70ed\u53ef\u89c2\u5bdf\u5bf9\u50cf\u5728\u521b\u5efa\u4e4b\u540e\u7acb\u9a6c\u5c31\u5411\u5916\u53d1\u51fa\u4e8b\u4ef6\uff0c\u4efb\u4f55\u5728\u5b83\u521b\u5efa\u4e4b\u540e\u8ba2\u9605\u5b83\u7684\u89c2\u5bdf\u8005\u90fd\u53ea\u80fd\u83b7\u5f97\u6240\u6709\u53d1\u51fa\u4e8b\u4ef6\u7684\u4e00\u90e8\u5206\u3002\u51b7\u53ef\u89c2\u5bdf\u8005\u5728\u5411\u5916\u53d1\u9001\u4e8b\u4ef6\u4e4b\u524d\uff0c\u5fc5\u987b\u81f3\u5c11\u6709\u4e00\u4e2a\u89c2\u5bdf\u8005\u8ba2\u9605\u4e86\u5b83\u624d\u884c\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u89c2\u5bdf\u8005\u53ef\u4ee5\u4ece\u5934\u5230\u5c3e\u83b7\u5f97\u6240\u6709\u7684\u4e8b\u4ef6\u3002","title":"\u70ed\u53ef\u89c2\u5bdf\u5bf9\u8c61\u548c\u51b7\u53ef\u89c2\u5bdf\u5bf9\u8c61"},{"location":"reactiveX/Observable/#_6","text":"\u53ef\u89c2\u5bdf\u5bf9\u8c61\u548c\u89c2\u5bdf\u8005\u53ea\u662f ReactiveX \u7684\u57fa\u7840\uff0c\u5b83\u4eec\u4ec5\u4ec5\u662f\u5bf9\u6807\u51c6\u89c2\u5bdf\u8005\u8bbe\u8ba1\u6a21\u5f0f\u7684\u6269\u5c55\uff0c\u53ef\u4ee5\u66f4\u597d\u7684\u9002\u7528\u4e8e\u4e00\u7cfb\u5217\u7684\u4e8b\u4ef6\u56de\u8c03\uff0c\u800c\u4e0d\u662f\u9488\u5bf9\u5355\u4e2a\u56de\u8c03\u3002 ReactiveX \u901a\u8fc7\u6269\u5c55\u8fd0\u7b97\u6765\u53d8\u6362\u3001\u7ec4\u5408\u3001\u64cd\u4f5c\u4e00\u7cfb\u5217\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u51fa\u7684\u4e8b\u4ef6\uff0c\u4ece\u800c\u53d1\u6325\u771f\u6b63\u7684\u5a01\u529b\u3002 \u8fd9\u4e9b\u6269\u5c55\u8fd0\u7b97\u53ef\u4ee5\u628a\u5f02\u6b65\u5e8f\u5217\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u4ee5\u4e00\u79cd\u7b80\u5355\u660e\u4e86\u7684\u65b9\u5f0f\u5c55\u73b0\u51fa\u6765\uff0c\u5145\u5206\u53d1\u6325\u4e86\u56de\u8c03\u7684\u4f18\u70b9\uff0c\u907f\u514d\u4e86\u56de\u8c03\u5728\u4f20\u7edf\u5f02\u6b65\u7f16\u7a0b\u4e2d\u5b58\u5728\u7684\u591a\u7ea7\u5d4c\u5957\u7684\u7f3a\u70b9\u3002 \u672c\u6587\u6863\u5728\u4e0b\u9762\u6c47\u603b\u4e86\u5f88\u591a\u8fd9\u4e9b\u6269\u5c55\u8fd0\u7b97\u548c\u76f8\u5e94\u7684\u7528\u6cd5:","title":"\u901a\u8fc7\u53ef\u89c2\u5bdf\u5bf9\u8c61\u8fd0\u7b97\u6765\u7ec4\u5408\u53ef\u89c2\u5bdf\u5bf9\u8c61"},{"location":"reactiveX/Observable/#_7","text":"Create \u3001 Defer \u3001 Empty / Never / Throw \u3001 From \u3001 Interval \u3001 Just \u3001 Range \u3001 Repeat \u3001 Start \u548c Timer","title":"\u521b\u5efa\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u64cd\u4f5c"},{"location":"reactiveX/Observable/#_8","text":"Buffer \u3001 FlatMap \u3001 GroupBy \u3001 Map \u3001 Scan \u548c Window","title":"\u53d8\u6362\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u64cd\u4f5c"},{"location":"reactiveX/Observable/#_9","text":"Debounce \u3001 Distinct \u3001 ElementAt \u3001 Filter \u3001 First \u3001 IgnoreElements \u3001 Last \u3001 Sample \u3001 Skip \u3001 SkipLast \u3001 Take \u548c TakeLast","title":"\u8fc7\u8651\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u64cd\u4f5c"},{"location":"reactiveX/Observable/#_10","text":"And / Then / When \u3001 CombineLatest \u3001 Join \u3001 Merge \u3001 StartWith \u3001 Switch \u548c Zip","title":"\u7ec4\u5408\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u64cd\u4f5c"},{"location":"reactiveX/Observable/#_11","text":"Catch \u548c Retry","title":"\u9519\u8bef\u5904\u7406\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u64cd\u4f5c"},{"location":"reactiveX/Observable/#_12","text":"Delay \u3001 Do \u3001 Materialize / Dematerialize \u3001 ObserveOn \u3001 Serialize \u3001 Subscribe \u3001 SubscribeOn \u3001 Timeout \u3001 Timestamp \u548c Using","title":"\u8f85\u52a9\u64cd\u4f5c"},{"location":"reactiveX/Observable/#_13","text":"All \u3001 Amb \u3001 Contains \u3001 DefaultIfEmpty \u3001 SequenceEqual \u3001 SkipUntil \u3001 SkipWhile \u3001 TakeUntil \u548c TakeWhile","title":"\u6761\u4ef6\u5e03\u5c14\u64cd\u4f5c"},{"location":"reactiveX/Observable/#_14","text":"Average \u3001 Concat \u3001 Count \u3001 Max \u3001 Min \u3001 Reduce \u548c Sum","title":"\u6570\u5b66\u548c\u805a\u5408\u64cd\u4f5c"},{"location":"reactiveX/Observable/#_15","text":"To","title":"\u8f6c\u6362\u64cd\u4f5c"},{"location":"reactiveX/Observable/#_16","text":"Connect \u3001 Publish \u3001 RefCount \u548c Replay","title":"\u8fde\u63a5\u53ef\u89c2\u5bdf\u5bf9\u8c61\u64cd\u4f5c"},{"location":"reactiveX/Observable/#_17","text":"\u589e\u5f3a\u6d41\u63a7\u5236\u7b56\u7565\u7684\u591a\u79cd\u8fd0\u7b97 \u4e0a\u9762\u7684\u8fd9\u4e9b\u8fd0\u7b97\u5305\u542b\u4e86\u4e00\u4e9b\u5e76\u4e0d\u662f ReactiveX \u6838\u5fc3\u8fd0\u7b97\u7684\u90e8\u5206\uff0c\u4f46\u5b83\u4eec\u5728\u4e00\u4e9b\u7279\u6b8a\u8bed\u8a00\u7684\u5b9e\u73b0\u548c\u53ef\u9009\u6a21\u5757\u4e2d\u6709\u5e94\u7528\u3002","title":"\u80cc\u538b\u64cd\u4f5c"},{"location":"reactiveX/Observable/#_18","text":"\u5927\u90e8\u5206\u8fd0\u7b97\u57fa\u4e8e\u53ef\u89c2\u5bdf\u5bf9\u8c61\uff0c\u5e76\u4e14\u8fd4\u56de\u503c\u4e5f\u662f\u53ef\u89c2\u5bdf\u5bf9\u8c61\uff0c\u8fd9\u79cd\u65b9\u5f0f\u8ba9\u4f60\u80fd\u591f\u4ee5\u94fe\u5f0f\u8fdb\u884c\u8fd0\u7b97\u3002\u5728\u94fe\u5f0f\u8fd0\u7b97\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u8fd0\u7b97\u7b26\u90fd\u4f5c\u7528\u4e8e\u524d\u4e00\u4e2a\u8fd0\u7b97\u5904\u7406\u5b8c\u6210\u540e\u8fd4\u56de\u7684\u53ef\u89c2\u5bdf\u5bf9\u8c61\u4e0a\u3002 \u8fd9\u513f\u4ea7\u751f\u4e86\u53e6\u4e00\u4e2a\u95ee\u9898\uff0c\u5728\u521b\u9020\u6a21\u5f0f\u4e2d\uff0c\u94fe\u5f0f\u65b9\u6cd5\u8c03\u7528\u7684\u987a\u5e8f\u5bf9\u7ed3\u679c\u6ca1\u6709\u5f71\u54cd\uff0c\u4f46\u5728 ReactiveX \u7684\u53ef\u89c2\u5bdf\u5bf9\u8c61\u4e0a\u8fdb\u884c\u7684\u94fe\u5f0f\u8fd0\u7b97\u7684\u987a\u5e8f\u5bf9\u7ed3\u679c\u6709\u5f71\u54cd\u3002 \u53ef\u89c2\u5bdf\u5bf9\u8c61\u4e0a\u7684\u94fe\u5f0f\u8fd0\u7b97\u4e0d\u662f\u72ec\u7acb\u7684\u4f5c\u7528\u5728\u539f\u59cb\u53ef\u89c2\u5bdf\u5bf9\u8c61\u4e0a\u7684\uff0c\u6bcf\u4e00\u4e2a\u8fd0\u7b97\u90fd\u57fa\u4e8e\u524d\u4e00\u4e2a\u8fd0\u7b97\u8fd4\u56de\u7684\u7ed3\u679c\uff0c\u6240\u4ee5\u987a\u5e8f\u5c31\u663e\u7684\u5f88\u91cd\u8981\u4e86\u3002","title":"\u94fe\u5f0f\u8fd0\u7b97"},{"location":"reactiveX/Observable/#_19","text":"Single \u2014 a specialized version of an Observable that emits only a single item Rx Workshop: Introduction Introduction to Rx: IObservable Mastering observables (from the Couchbase Server documentation) 2 minute introduction to Rx by Andre Staltz (\u201cThink of an Observable as an asynchronous immutable array.\u201d) Introducing the Observable by Jafar Husain (JavaScript Video Tutorial) Observable object (RxJS) by Dennis Stoyanov Turning a callback into an Rx Observable by @afterecho","title":"\u53c2\u8003\u6587\u7ae0"},{"location":"reactiveX/Operators/","text":"\u4ecb\u7ecd \u5177\u4f53\u8bed\u8a00\u5b9e\u73b0 ReactiveX \u65f6\uff0c\u90fd\u4f1a\u76f8\u5e94\u7684\u5b9e\u73b0\u4e00\u5957\u8fd0\u7b97\u7b26\uff0c\u867d\u7136\u4e0d\u540c\u5b9e\u73b0\u4e4b\u95f4\u4f1a\u6709\u91cd\u590d\u7684\u90e8\u5206\uff0c\u4f46\u4e5f\u6709\u5404\u4e2a\u72ec\u7279\u7684\u5730\u65b9\uff0c\u4f46\u5b83\u4eec\u7684\u547d\u540d\u65b9\u5f0f\u8fd8\u662f\u5c3d\u91cf\u4ee5\u4eba\u4eec\u6bd4\u8f83\u719f\u6089\u7684\u65b9\u5f0f\u8fdb\u884c\u7684\u3002 \u94fe\u5f0f\u8fd0\u7b97 \u5927\u90e8\u5206\u8fd0\u7b97\u90fd\u662f\u5728\u53ef\u89c2\u5bdf\u5bf9\u8c61\u4e0a\u8fdb\u884c\uff0c\u5e76\u4e14\u8fd4\u56de\u503c\u4e5f\u662f\u53ef\u89c2\u5bdf\u5bf9\u8c61\uff0c\u8fd9\u5c31\u4f7f\u8fd0\u7b97\u7684\u4e32\u8fde\u6267\u884c\u6210\u4e3a\u53ef\u80fd\uff0c\u5373\u94fe\u5f0f\u3002\u5728\u94fe\u5f0f\u8fd0\u7b97\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u8fd0\u7b97\u90fd\u662f\u5728\u524d\u4e00\u4e2a\u8fd0\u7b97\u5904\u7406\u8fc7\u7684\u53ef\u89c2\u5bdf\u5bf9\u8c61\u4e0a\u8fdb\u884c\u7684\u3002 \u8bbe\u8ba1\u6a21\u5f0f\u4e2d\u6709\u4e00\u79cd\u5efa\u9020\u8005\u6a21\u5f0f\uff0c\u4e00\u4e2a\u7c7b\u5305\u542b\u6709\u591a\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u7c7b\u7684\u5bf9\u8c61\u8fdb\u884c\u4fee\u6539\uff0c\u6240\u4ee5\u5b83\u4e5f\u652f\u6301\u94fe\u5f0f\u64cd\u4f5c\u3002\u4f46\u662f\u5efa\u9020\u8005\u6a21\u5f0f\u4e2d\uff0c\u5404\u79cd\u65b9\u6cd5\u5bf9\u8fd9\u4e2a\u7c7b\u5bf9\u8c61\u7684\u4fee\u6539\u4e0e\u8fd0\u7b97\u7684\u987a\u5e8f\u65e0\u5173\uff0c\u4f46\u5bf9\u4e8e\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u8fd0\u7b97\u6765\u8bf4\uff0c\u8fd0\u7b97\u7684\u987a\u5e8f\u662f\u5f88\u91cd\u8981\u7684\u3002 \u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u94fe\u5f0f\u64cd\u4f5c\u4e0d\u662f\u72ec\u7acb\u7684\u5e94\u7528\u4e8e\u539f\u59cb\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\uff0c\u800c\u662f\u6309\u987a\u5e8f\u8f6e\u6d41\u4f5c\u7528\u5728\u53ef\u89c2\u5bdf\u5bf9\u8c61\u4e0a\u7684\u3002 ReactiveX\u7684\u8fd0\u7b97\u7b26 \u672c\u6587\u9996\u5148\u5217\u51fa\u4e86 ReactiveX \u7684\u6838\u5fc3\u8fd0\u7b97\u548c\u76f8\u5173\u7684\u94fe\u63a5\u9875\uff0c\u4ee5\u65b9\u4fbf\u66f4\u52a0\u6df1\u5165\u7684\u4e86\u89e3\u8fd9\u4e9b\u6838\u5fc3\u8fd0\u7b97\u53ca\u5176\u5728\u5177\u4f53\u8bed\u8a00\u4e2d\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002 \u4e4b\u540e\u662f\u4e00\u4e2a\u51b3\u7b56\u6811\uff0c\u5e2e\u52a9\u4f60\u5728\u5177\u4f53\u5e94\u7528\u573a\u666f\u4e2d\u9009\u62e9\u9700\u8981\u4f7f\u7528\u7684\u8fd0\u7b97 \u6700\u540e\uff0c\u4ee5\u5b57\u6bcd\u987a\u5e8f\u5217\u51fa\u5927\u90e8\u5206\u5728\u5177\u4f53\u8bed\u8a00\u5b9e\u73b0\u4e2d\u4f7f\u7528\u7684\u8fd0\u7b97\u7b26, \u8fd9\u4e9b\u8fd0\u7b97\u7b26\u7684\u94fe\u63a5\u6307\u5411 ReactiveX \u4e2d\u5bf9\u5e94\u7684\u6838\u5fc3\u8fd0\u7b97\u9875\u9762\u3002\u4f8b\u5982\uff1aRx.NET \u4e2d\u7684 SelectMany \u94fe\u63a5\u6307\u5411 ReactiveX \u4e2d\u7684\u6838\u5fc3\u8fd0\u7b97 FlatMap`\u3002 \u5982\u679c\u4f60\u8981\u81ea\u5df1\u5b9e\u73b0\u8fd0\u7b97\u7b26\uff0c\u53ef\u4ee5\u53c2\u8003 \u8fd9\u7bc7\u6587\u7ae0 \u8fd0\u7b97\u7b26\u5206\u7c7b \u53ef\u89c2\u5bdf\u5bf9\u8c61\u8fd0\u7b97\u7b26\u51b3\u7b56\u6811 \u53ef\u89c2\u5bdf\u5bf9\u8c61\u8fd0\u7b97\u7b26\u5b57\u6bcd\u6392\u5e8f\u8868","title":"\u8fd0\u7b97\u7b26"},{"location":"reactiveX/Operators/#_1","text":"\u5177\u4f53\u8bed\u8a00\u5b9e\u73b0 ReactiveX \u65f6\uff0c\u90fd\u4f1a\u76f8\u5e94\u7684\u5b9e\u73b0\u4e00\u5957\u8fd0\u7b97\u7b26\uff0c\u867d\u7136\u4e0d\u540c\u5b9e\u73b0\u4e4b\u95f4\u4f1a\u6709\u91cd\u590d\u7684\u90e8\u5206\uff0c\u4f46\u4e5f\u6709\u5404\u4e2a\u72ec\u7279\u7684\u5730\u65b9\uff0c\u4f46\u5b83\u4eec\u7684\u547d\u540d\u65b9\u5f0f\u8fd8\u662f\u5c3d\u91cf\u4ee5\u4eba\u4eec\u6bd4\u8f83\u719f\u6089\u7684\u65b9\u5f0f\u8fdb\u884c\u7684\u3002","title":"\u4ecb\u7ecd"},{"location":"reactiveX/Operators/#_2","text":"\u5927\u90e8\u5206\u8fd0\u7b97\u90fd\u662f\u5728\u53ef\u89c2\u5bdf\u5bf9\u8c61\u4e0a\u8fdb\u884c\uff0c\u5e76\u4e14\u8fd4\u56de\u503c\u4e5f\u662f\u53ef\u89c2\u5bdf\u5bf9\u8c61\uff0c\u8fd9\u5c31\u4f7f\u8fd0\u7b97\u7684\u4e32\u8fde\u6267\u884c\u6210\u4e3a\u53ef\u80fd\uff0c\u5373\u94fe\u5f0f\u3002\u5728\u94fe\u5f0f\u8fd0\u7b97\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u8fd0\u7b97\u90fd\u662f\u5728\u524d\u4e00\u4e2a\u8fd0\u7b97\u5904\u7406\u8fc7\u7684\u53ef\u89c2\u5bdf\u5bf9\u8c61\u4e0a\u8fdb\u884c\u7684\u3002 \u8bbe\u8ba1\u6a21\u5f0f\u4e2d\u6709\u4e00\u79cd\u5efa\u9020\u8005\u6a21\u5f0f\uff0c\u4e00\u4e2a\u7c7b\u5305\u542b\u6709\u591a\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u7c7b\u7684\u5bf9\u8c61\u8fdb\u884c\u4fee\u6539\uff0c\u6240\u4ee5\u5b83\u4e5f\u652f\u6301\u94fe\u5f0f\u64cd\u4f5c\u3002\u4f46\u662f\u5efa\u9020\u8005\u6a21\u5f0f\u4e2d\uff0c\u5404\u79cd\u65b9\u6cd5\u5bf9\u8fd9\u4e2a\u7c7b\u5bf9\u8c61\u7684\u4fee\u6539\u4e0e\u8fd0\u7b97\u7684\u987a\u5e8f\u65e0\u5173\uff0c\u4f46\u5bf9\u4e8e\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u8fd0\u7b97\u6765\u8bf4\uff0c\u8fd0\u7b97\u7684\u987a\u5e8f\u662f\u5f88\u91cd\u8981\u7684\u3002 \u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u94fe\u5f0f\u64cd\u4f5c\u4e0d\u662f\u72ec\u7acb\u7684\u5e94\u7528\u4e8e\u539f\u59cb\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\uff0c\u800c\u662f\u6309\u987a\u5e8f\u8f6e\u6d41\u4f5c\u7528\u5728\u53ef\u89c2\u5bdf\u5bf9\u8c61\u4e0a\u7684\u3002","title":"\u94fe\u5f0f\u8fd0\u7b97"},{"location":"reactiveX/Operators/#reactivex","text":"\u672c\u6587\u9996\u5148\u5217\u51fa\u4e86 ReactiveX \u7684\u6838\u5fc3\u8fd0\u7b97\u548c\u76f8\u5173\u7684\u94fe\u63a5\u9875\uff0c\u4ee5\u65b9\u4fbf\u66f4\u52a0\u6df1\u5165\u7684\u4e86\u89e3\u8fd9\u4e9b\u6838\u5fc3\u8fd0\u7b97\u53ca\u5176\u5728\u5177\u4f53\u8bed\u8a00\u4e2d\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002 \u4e4b\u540e\u662f\u4e00\u4e2a\u51b3\u7b56\u6811\uff0c\u5e2e\u52a9\u4f60\u5728\u5177\u4f53\u5e94\u7528\u573a\u666f\u4e2d\u9009\u62e9\u9700\u8981\u4f7f\u7528\u7684\u8fd0\u7b97 \u6700\u540e\uff0c\u4ee5\u5b57\u6bcd\u987a\u5e8f\u5217\u51fa\u5927\u90e8\u5206\u5728\u5177\u4f53\u8bed\u8a00\u5b9e\u73b0\u4e2d\u4f7f\u7528\u7684\u8fd0\u7b97\u7b26, \u8fd9\u4e9b\u8fd0\u7b97\u7b26\u7684\u94fe\u63a5\u6307\u5411 ReactiveX \u4e2d\u5bf9\u5e94\u7684\u6838\u5fc3\u8fd0\u7b97\u9875\u9762\u3002\u4f8b\u5982\uff1aRx.NET \u4e2d\u7684 SelectMany \u94fe\u63a5\u6307\u5411 ReactiveX \u4e2d\u7684\u6838\u5fc3\u8fd0\u7b97 FlatMap`\u3002 \u5982\u679c\u4f60\u8981\u81ea\u5df1\u5b9e\u73b0\u8fd0\u7b97\u7b26\uff0c\u53ef\u4ee5\u53c2\u8003 \u8fd9\u7bc7\u6587\u7ae0","title":"ReactiveX\u7684\u8fd0\u7b97\u7b26"},{"location":"reactiveX/Operators/#_3","text":"","title":"\u8fd0\u7b97\u7b26\u5206\u7c7b"},{"location":"reactiveX/Operators/#_4","text":"","title":"\u53ef\u89c2\u5bdf\u5bf9\u8c61\u8fd0\u7b97\u7b26\u51b3\u7b56\u6811"},{"location":"reactiveX/Operators/#_5","text":"","title":"\u53ef\u89c2\u5bdf\u5bf9\u8c61\u8fd0\u7b97\u7b26\u5b57\u6bcd\u6392\u5e8f\u8868"},{"location":"reactiveX/Scheduler/","text":"\u5982\u679c\u4f60\u60f3\u5728\u4f60\u7684\u53ef\u89c2\u5bdf\u5bf9\u8c61\u8fd0\u7b97\u7011\u5e03\u6d41\u4e2d\u5f15\u5165\u591a\u7ebf\u7a0b\uff0c\u4f60\u53ef\u4ee5\u6307\u5b9a\u8fd9\u4e9b\u8fd0\u7b97\u6216\u53ef\u89c2\u5bdf\u5bf9\u8c61\u5728\u7279\u5b9a\u7684\u8c03\u5ea6\u5668\u4e0a\u8fd0\u884c\u3002 ReactiveX \u4e2d\u7684\u4e00\u4e9b\u8fd0\u7b97\u6709\u4e00\u4e9b\u53ef\u4ee5\u63a5\u53d7\u8c03\u5ea6\u5668\u4f5c\u4e3a\u53c2\u6570\u7684\u53d8\u4f53\uff0c\u8fd9\u79cd\u53d8\u4f53\u5c31\u662f\u6307\u5b9a\u8fd9\u4e2a\u8fd0\u7b97\u5728\u6307\u5b9a\u7684\u8c03\u5ea6\u5668\u4e0a\u505a\u90e8\u5206\u6216\u8005\u5168\u90e8\u5de5\u4f5c\u3002 \u53ef\u89c2\u5bdf\u5bf9\u8c61\u53ca\u5176\u8fd0\u7b97\u9ed8\u8ba4\u662f\u5728 Subscribe \u65b9\u6cd5\u88ab\u8c03\u7528\u65f6\u6240\u5728\u7684\u7ebf\u7a0b\u4e0a\u5de5\u4f5c\u7684\u3002 SubscribeOn \u65b9\u6cd5\u4e3a\u53ef\u89c2\u5bdf\u5bf9\u8c61\u6307\u5b9a\u53e6\u4e00\u4e2a\u8c03\u5ea6\u5668\uff0c\u4ee5\u4f7f\u5b83\u7684\u5de5\u4f5c\u5728\u5176\u4e0a\u8fdb\u884c\u3002 ObserveOn \u4e3a\u53ef\u89c2\u5bdf\u5bf9\u8c61\u6307\u5b9a\u4e00\u4e2a\u8c03\u5ea6\u5668\uff0c\u4f7f\u5b83\u5728\u53d1\u9001\u901a\u77e5\u7ed9\u89c2\u5bdf\u8005\u65f6\u5728\u8fd9\u4e2a\u8c03\u5ea6\u5668\u4e0a\u6267\u884c\u3002 \u5c31\u50cf\u4e0b\u56fe\u6240\u793a\uff0c SubscribeOn \u6307\u5b9a\u5f00\u59cb\u65f6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u5728\u54ea\u4e2a\u7ebf\u7a0b\u4e0a\u8fd0\u884c\uff0c\u4e0d\u7ba1\u8fd9\u4e2a\u64cd\u4f5c\u653e\u5728\u8fd0\u7b97\u94fe\u4e2d\u7684\u54ea\u4e2a\u4f4d\u7f6e\uff0c\u4f5c\u7528\u90fd\u4e00\u6837\uff0c\u4e0e\u4f4d\u7f6e\u65e0\u5173\u3002\u800c ObserveOn \u65b9\u6cd5\u4f1a\u4f5c\u7528\u4e8e\u53ef\u89c2\u5bdf\u5bf9\u8c61\u5373\u5c06\u4f7f\u7528\u7684\u7ebf\u7a0b\u4e0a\u3002\u6240\u4ee5\u4f60\u53ef\u80fd\u4f1a\u5728\u94fe\u5f0f\u8fd0\u7b97\u4e2d\u591a\u6b21\u8c03\u7528 ObserveOn \u65b9\u6cd5\u6765\u6539\u53d8\u5b83\u6240\u4f5c\u7528\u7684\u7ebf\u7a0b\u3002 \u53c2\u8003\u8d44\u6599 Introduction to Rx: Scheduling and Threading Rx Workshop: Schedulers Using Schedulers by Dennis Stoyanov","title":"\u8c03\u5ea6\u5668"},{"location":"reactiveX/Scheduler/#_1","text":"Introduction to Rx: Scheduling and Threading Rx Workshop: Schedulers Using Schedulers by Dennis Stoyanov","title":"\u53c2\u8003\u8d44\u6599"},{"location":"reactiveX/Single/","text":"RxJava \u53ca\u5b83\u6d3e\u751f\u7684 RxGroovy \u548c RxScala \u53d1\u5c55\u4e86\u4e00\u79cd\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u53d8\u4f53 \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u3002 \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u4e5f\u662f\u4e00\u79cd\u53ef\u89c2\u5bdf\u5bf9\u8c61\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u5b83\u4e0d\u662f\u53d1\u9001\u4e00\u7cfb\u5217\u503c\uff0c\u800c\u662f\u8981\u4e48\u53d1\u51fa \u4e00\u4e2a\u503c \uff0c\u8981\u4e48\u53d1\u51fa \u4e00\u4e2a\u9519\u8bef\u901a\u77e5 \uff0c\u6ca1\u6709\u5176\u5b83\u7684\u60c5\u51b5\u3002 \u7531\u4e8e\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u7279\u6b8a\u6027\uff0c\u6211\u4eec\u5728\u8ba2\u9605\u5b83\u65f6\u4e0d\u4f7f\u7528\u4e09\u4e2a\u65b9\u6cd5( onNext \u3001 onError \u3001 onCompleted )\uff0c\u53ea\u9700\u8981\u4e24\u4e2a( onSuccess \u548c onError )\u5c31\u53ef\u4ee5\u4e86\u3002 onSuccess - \u5355\u53ef\u89c2\u5bdf\u5bf9\u8c61\u6240\u53d1\u51fa\u7684\u552f\u4e00\u503c\u65f6\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u5e76\u628a\u552f\u4e00\u503c\u4f5c\u4e3a\u8fd9\u4e2a\u65b9\u6cd5\u7684\u53c2\u6570\u4f20\u5165\u3002 onError - \u5355\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u751f\u9519\u8bef\u65f6\uff0c\u5c06\u4e00\u4e2a\u53ef\u629b\u51fa\u9519\u8bef\u4fe1\u606f\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9\u8fd9\u4e2a\u65b9\u6cd5\u3002 \u8fd9\u4e24\u4e2a\u65b9\u6cd5\u4e2d\u53ea\u6709\u4e00\u4e2a\u4f1a\u88ab\u8c03\u7528\u5e76\u4e14\u53ea\u8c03\u7528\u4e00\u6b21\uff0c\u4e00\u65e6\u6709\u4e00\u4e2a\u65b9\u6cd5\u88ab\u8c03\u7528\u4e86\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5355\u53ef\u89c2\u5bdf\u5bf9\u8c61\u5c31\u5931\u6548\u4e86\uff0c\u6574\u4e2a\u8ba2\u9605\u8fc7\u7a0b\u4e5f\u5c31\u7ec8\u6b62\u4e86\u3002 \u7ec4\u5408\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u4e0e\u53ef\u89c2\u5bdf\u5bf9\u8c61\u4e00\u6837\uff0c\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5404\u79cd\u8fd0\u7b97\u6765\u64cd\u4f5c\u3002\u5176\u4e2d\u7684\u4e00\u4e9b\u8fd0\u7b97\u5141\u8bb8\u53ef\u89c2\u5bdf\u5bf9\u8c61\u548c\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u4e4b\u95f4\u8fdb\u884c\u4ea4\u4e92\u64cd\u4f5c\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u6df7\u5408\u4f7f\u7528\u8fd9\u4e24\u79cd\u5bf9\u8c61\u3002 \u8fd0\u7b97\u7b26 \u8fd4\u56de\u503c \u63cf\u8ff0 compose \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u521b\u5efa\u4e00\u4e2a\u53ef\u914d\u7f6e\u7684\u8fd0\u7b97\u7b26 concat\u548cconcatWith \u53ef\u89c2\u5bdf\u5bf9\u8c61 \u628a\u591a\u4e2a\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u51fa\u7684\u4e8b\u4ef6\u8fde\u63a5\u5728\u4e00\u8d77\u4f5c\u4e3a\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u4e8b\u4ef6\u53c2\u6570 create \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u663e\u5f0f\u8c03\u7528\u8ba2\u9605\u8005\u65b9\u6cd5\u6765\u521b\u5efa\u4e00\u4e2a\u539f\u59cb\u7684\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 delay \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u5ef6\u8fdf\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u9001\u4e8b\u4ef6\u7684\u65f6\u523b doOnError \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u8fd4\u56de\u4e00\u4e2a\u5728\u8c03\u7528onError\u65b9\u6cd5\u65f6\u4e5f\u4f1a\u540c\u65f6\u8c03\u7528doOnError\u6240\u6307\u5b9a\u65b9\u6cd5\u7684\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 doOnSuccess \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u8fd4\u56de\u4e00\u4e2a\u5728\u8c03\u7528onSuccess\u65b9\u6cd5\u65f6\u4e5f\u4f1a\u540c\u65f6\u8c03\u7528doOnSuccess\u6240\u6307\u5b9a\u65b9\u6cd5\u7684\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 error \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u8fd4\u56de\u4e00\u4e2a\u7acb\u5373\u901a\u77e5\u8ba2\u9605\u8005\u53d1\u751f\u4e86\u9519\u8bef\u7684\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 flatMap \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u8fd4\u56de\u4e00\u4e2a\u5df2\u7ecf\u88ab\u51fd\u6570\u5904\u7406\u8fc7\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u51fa\u4e8b\u4ef6\u7684\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 flatMapObservable \u53ef\u89c2\u5bdf\u5bf9\u8c61 \u8fd4\u52a0\u4e00\u4e2a\u5df2\u7ecf\u88ab\u51fd\u6570\u5904\u7406\u8fc7\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u51fa\u4e8b\u4ef6\u7684\u53ef\u89c2\u5bdf\u5bf9\u8c61 from \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u628a\u4e00\u4e2a\u5bf9\u8c61\u8f6c\u5316\u6210\u4e00\u4e2a\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 just \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u8fd4\u56de\u4e00\u4e2a\u53ea\u53d1\u51fa\u7279\u5b9a\u4e8b\u4ef6\u7684\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 map \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u8fd4\u56de\u4e00\u4e2a\u5df2\u7ecf\u88ab\u51fd\u6570\u5904\u7406\u8fc7\u539f\u6765\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u51fa\u4e8b\u4ef6\u7684\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 merge \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u8fd4\u56de\u4e00\u4e2a\u628a\u53e6\u4e00\u4e2a\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u51fa\u4e8b\u4ef6\u4f5c\u4e3a\u4e8b\u4ef6\u53d1\u51fa\u7684\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 merge\u548cmergeWith \u53ef\u89c2\u5bdf\u5bf9\u8c61 \u8fd4\u56de\u4e00\u4e2a\u628a\u5176\u5b83\u51e0\u4e2a\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u51fa\u4e8b\u4ef6\u5f53\u4f5c\u81ea\u5df1\u7684\u4e8b\u4ef6\u53d1\u51fa\u7684\u53ef\u89c2\u5bdf\u5bf9\u8c61 observeOn \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u6307\u793a\u4e00\u4e2a\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53bb\u8c03\u7528\u4e00\u4e2a\u5728\u7279\u5b9a\u8c03\u5ea6\u5668\u4e0b\u7684\u8ba2\u9605\u8005\u65b9\u6cd5 onErrorReturn \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u628a\u4e00\u4e2a\u53d1\u51fa\u9519\u8bef\u4fe1\u53f7\u7684\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u8f6c\u5316\u6210\u4e3a\u4e00\u4e2a\u53d1\u51fa\u6307\u5b9a\u4e8b\u4ef6\u7684\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 subscribeOn \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u6307\u793a\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u5728\u6307\u5b9a\u7684\u8c03\u5ea6\u5668\u4e0a\u64cd\u4f5c timeout \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u5982\u679c\u539f\u59cb\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u5728\u6307\u5b9a\u65f6\u95f4\u5185\u6ca1\u6709\u53d1\u9001\u4efb\u4f55\u4e8b\u4ef6\uff0c\u5c31\u8fd4\u56de\u4e00\u4e2a\u53d1\u51fa\u9519\u8bef\u4fe1\u606f\u7684\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 toSingle \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u628a\u4e00\u4e2a\u53d1\u51fa\u5355\u4e2a\u4e8b\u4ef6\u7684\u53ef\u89c2\u5bdf\u5bf9\u8c61\u8f6c\u5316\u6210\u4e00\u4e2a\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 toObservable \u53ef\u89c2\u5bdf\u5bf9\u8c61 \u628a\u4e00\u4e2a\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u8f6c\u5316\u6210\u4e00\u4e2a\u53ea\u53d1\u51fa\u4e00\u4e2a\u4e8b\u4ef6\u548c\u4e00\u4e2a\u5b8c\u6210\u901a\u77e5\u7684\u53ef\u89c2\u5bdf\u5bf9\u8c61 zip\u548czipWith \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u8fd4\u56de\u4e00\u4e2a\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u51fa\u7684\u4e8b\u4ef6\u662f\u4ee5\u4e00\u4e2a\u51fd\u6570\u5904\u7406\u5b8c\u5176\u5b83\u51e0\u4e2a\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u51fa\u4e8b\u4ef6\u7684\u7ed3\u679c\u4e3a\u53c2\u6570\u4f20\u9012\u7684 \u4e0b\u9762\u7684\u90e8\u5206\u4f7f\u7528\u5927\u7406\u77f3\u56fe\u6765\u8bf4\u660e\u4e0a\u9762\u90a3\u4e9b\u64cd\u4f5c\u7684\u7528\u6cd5\uff1a \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7528\u5927\u7406\u77f3\u56fe\u8868\u793a\u73b0\u6765 compose concat concatWith create delay delay on scheduler doOnError doOnSucces error flatMap flatMapObservable from from take a scheduler just map merge version 1 - merge one version 2 - merge multiple oberveOn onErrorReturn subscribeOn timeout version 1 - timeout within duration version 2 - timeout within duration on scheduler version 3 - timeout within duration with backup single version 4 - timeout within duration with backup single on scheduler toObservable zip\u548czipWith","title":"\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61"},{"location":"reactiveX/Single/#_1","text":"\u4e0e\u53ef\u89c2\u5bdf\u5bf9\u8c61\u4e00\u6837\uff0c\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5404\u79cd\u8fd0\u7b97\u6765\u64cd\u4f5c\u3002\u5176\u4e2d\u7684\u4e00\u4e9b\u8fd0\u7b97\u5141\u8bb8\u53ef\u89c2\u5bdf\u5bf9\u8c61\u548c\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u4e4b\u95f4\u8fdb\u884c\u4ea4\u4e92\u64cd\u4f5c\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u6df7\u5408\u4f7f\u7528\u8fd9\u4e24\u79cd\u5bf9\u8c61\u3002 \u8fd0\u7b97\u7b26 \u8fd4\u56de\u503c \u63cf\u8ff0 compose \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u521b\u5efa\u4e00\u4e2a\u53ef\u914d\u7f6e\u7684\u8fd0\u7b97\u7b26 concat\u548cconcatWith \u53ef\u89c2\u5bdf\u5bf9\u8c61 \u628a\u591a\u4e2a\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u51fa\u7684\u4e8b\u4ef6\u8fde\u63a5\u5728\u4e00\u8d77\u4f5c\u4e3a\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u4e8b\u4ef6\u53c2\u6570 create \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u663e\u5f0f\u8c03\u7528\u8ba2\u9605\u8005\u65b9\u6cd5\u6765\u521b\u5efa\u4e00\u4e2a\u539f\u59cb\u7684\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 delay \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u5ef6\u8fdf\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u9001\u4e8b\u4ef6\u7684\u65f6\u523b doOnError \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u8fd4\u56de\u4e00\u4e2a\u5728\u8c03\u7528onError\u65b9\u6cd5\u65f6\u4e5f\u4f1a\u540c\u65f6\u8c03\u7528doOnError\u6240\u6307\u5b9a\u65b9\u6cd5\u7684\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 doOnSuccess \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u8fd4\u56de\u4e00\u4e2a\u5728\u8c03\u7528onSuccess\u65b9\u6cd5\u65f6\u4e5f\u4f1a\u540c\u65f6\u8c03\u7528doOnSuccess\u6240\u6307\u5b9a\u65b9\u6cd5\u7684\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 error \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u8fd4\u56de\u4e00\u4e2a\u7acb\u5373\u901a\u77e5\u8ba2\u9605\u8005\u53d1\u751f\u4e86\u9519\u8bef\u7684\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 flatMap \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u8fd4\u56de\u4e00\u4e2a\u5df2\u7ecf\u88ab\u51fd\u6570\u5904\u7406\u8fc7\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u51fa\u4e8b\u4ef6\u7684\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 flatMapObservable \u53ef\u89c2\u5bdf\u5bf9\u8c61 \u8fd4\u52a0\u4e00\u4e2a\u5df2\u7ecf\u88ab\u51fd\u6570\u5904\u7406\u8fc7\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u51fa\u4e8b\u4ef6\u7684\u53ef\u89c2\u5bdf\u5bf9\u8c61 from \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u628a\u4e00\u4e2a\u5bf9\u8c61\u8f6c\u5316\u6210\u4e00\u4e2a\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 just \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u8fd4\u56de\u4e00\u4e2a\u53ea\u53d1\u51fa\u7279\u5b9a\u4e8b\u4ef6\u7684\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 map \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u8fd4\u56de\u4e00\u4e2a\u5df2\u7ecf\u88ab\u51fd\u6570\u5904\u7406\u8fc7\u539f\u6765\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u51fa\u4e8b\u4ef6\u7684\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 merge \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u8fd4\u56de\u4e00\u4e2a\u628a\u53e6\u4e00\u4e2a\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u51fa\u4e8b\u4ef6\u4f5c\u4e3a\u4e8b\u4ef6\u53d1\u51fa\u7684\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 merge\u548cmergeWith \u53ef\u89c2\u5bdf\u5bf9\u8c61 \u8fd4\u56de\u4e00\u4e2a\u628a\u5176\u5b83\u51e0\u4e2a\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u51fa\u4e8b\u4ef6\u5f53\u4f5c\u81ea\u5df1\u7684\u4e8b\u4ef6\u53d1\u51fa\u7684\u53ef\u89c2\u5bdf\u5bf9\u8c61 observeOn \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u6307\u793a\u4e00\u4e2a\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53bb\u8c03\u7528\u4e00\u4e2a\u5728\u7279\u5b9a\u8c03\u5ea6\u5668\u4e0b\u7684\u8ba2\u9605\u8005\u65b9\u6cd5 onErrorReturn \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u628a\u4e00\u4e2a\u53d1\u51fa\u9519\u8bef\u4fe1\u53f7\u7684\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u8f6c\u5316\u6210\u4e3a\u4e00\u4e2a\u53d1\u51fa\u6307\u5b9a\u4e8b\u4ef6\u7684\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 subscribeOn \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u6307\u793a\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u5728\u6307\u5b9a\u7684\u8c03\u5ea6\u5668\u4e0a\u64cd\u4f5c timeout \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u5982\u679c\u539f\u59cb\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u5728\u6307\u5b9a\u65f6\u95f4\u5185\u6ca1\u6709\u53d1\u9001\u4efb\u4f55\u4e8b\u4ef6\uff0c\u5c31\u8fd4\u56de\u4e00\u4e2a\u53d1\u51fa\u9519\u8bef\u4fe1\u606f\u7684\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 toSingle \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u628a\u4e00\u4e2a\u53d1\u51fa\u5355\u4e2a\u4e8b\u4ef6\u7684\u53ef\u89c2\u5bdf\u5bf9\u8c61\u8f6c\u5316\u6210\u4e00\u4e2a\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 toObservable \u53ef\u89c2\u5bdf\u5bf9\u8c61 \u628a\u4e00\u4e2a\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u8f6c\u5316\u6210\u4e00\u4e2a\u53ea\u53d1\u51fa\u4e00\u4e2a\u4e8b\u4ef6\u548c\u4e00\u4e2a\u5b8c\u6210\u901a\u77e5\u7684\u53ef\u89c2\u5bdf\u5bf9\u8c61 zip\u548czipWith \u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u8fd4\u56de\u4e00\u4e2a\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u51fa\u7684\u4e8b\u4ef6\u662f\u4ee5\u4e00\u4e2a\u51fd\u6570\u5904\u7406\u5b8c\u5176\u5b83\u51e0\u4e2a\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u51fa\u4e8b\u4ef6\u7684\u7ed3\u679c\u4e3a\u53c2\u6570\u4f20\u9012\u7684 \u4e0b\u9762\u7684\u90e8\u5206\u4f7f\u7528\u5927\u7406\u77f3\u56fe\u6765\u8bf4\u660e\u4e0a\u9762\u90a3\u4e9b\u64cd\u4f5c\u7684\u7528\u6cd5\uff1a","title":"\u7ec4\u5408\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61"},{"location":"reactiveX/Single/#_2","text":"","title":"\u5355\u4e8b\u4ef6\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7528\u5927\u7406\u77f3\u56fe\u8868\u793a\u73b0\u6765"},{"location":"reactiveX/Single/#compose","text":"","title":"compose"},{"location":"reactiveX/Single/#concat","text":"","title":"concat"},{"location":"reactiveX/Single/#concatwith","text":"","title":"concatWith"},{"location":"reactiveX/Single/#create","text":"","title":"create"},{"location":"reactiveX/Single/#delay","text":"","title":"delay"},{"location":"reactiveX/Single/#delay-on-scheduler","text":"","title":"delay on scheduler"},{"location":"reactiveX/Single/#doonerror","text":"","title":"doOnError"},{"location":"reactiveX/Single/#doonsucces","text":"","title":"doOnSucces"},{"location":"reactiveX/Single/#error","text":"","title":"error"},{"location":"reactiveX/Single/#flatmap","text":"","title":"flatMap"},{"location":"reactiveX/Single/#flatmapobservable","text":"","title":"flatMapObservable"},{"location":"reactiveX/Single/#from","text":"","title":"from"},{"location":"reactiveX/Single/#from-take-a-scheduler","text":"","title":"from take a scheduler"},{"location":"reactiveX/Single/#just","text":"","title":"just"},{"location":"reactiveX/Single/#map","text":"","title":"map"},{"location":"reactiveX/Single/#merge","text":"version 1 - merge one version 2 - merge multiple","title":"merge"},{"location":"reactiveX/Single/#oberveon","text":"","title":"oberveOn"},{"location":"reactiveX/Single/#onerrorreturn","text":"","title":"onErrorReturn"},{"location":"reactiveX/Single/#subscribeon","text":"","title":"subscribeOn"},{"location":"reactiveX/Single/#timeout","text":"version 1 - timeout within duration version 2 - timeout within duration on scheduler version 3 - timeout within duration with backup single version 4 - timeout within duration with backup single on scheduler","title":"timeout"},{"location":"reactiveX/Single/#toobservable","text":"","title":"toObservable"},{"location":"reactiveX/Single/#zipzipwith","text":"","title":"zip\u548czipWith"},{"location":"reactiveX/Subject/","text":"Subject \u662f\u4e00\u79cd\u6865\u6881\u6216\u8005\u4ee3\u7406\uff0c\u5728\u4e00\u4e9b\u9488\u5bf9 ReactiveX \u7684\u5b9e\u73b0\u4e2d\uff0c\u5b83\u53ef\u65e2\u662f\u89c2\u5bdf\u8005\u4e5f\u662f\u53ef\u89c2\u5bdf\u5bf9\u8c61\u3002\u4f5c\u4e3a\u89c2\u5bdf\u8005\uff0c\u5b83\u53ef\u4ee5\u8ba2\u9605\u4e00\u4e2a\u6216\u591a\u4e2a\u53ef\u89c2\u5bdf\u5bf9\u8c61\u3002\u4f5c\u4e3a\u53ef\u89c2\u5bdf\u5bf9\u8c61\uff0c\u5b83\u4e5f\u53ef\u4ee5\u91cd\u590d\u53d1\u51fa\u4e8b\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u53d1\u51fa\u65b0\u4e8b\u4ef6\u3002 \u56e0\u4e3a Subject \u8ba2\u9605\u4e86\u4e00\u4e2a\u53ef\u89c2\u5bdf\u5bf9\u8c61\uff0c\u5b83\u5728\u8ba2\u9605\u540e\u5c31\u4f1a\u89e6\u53d1\u53ef\u89c2\u5bdf\u5bf9\u8c61\u5f00\u59cb\u53d1\u51fa\u4e8b\u4ef6\u3002\u8fd9\u53ef\u4ee5\u8ba9\u4e00\u4e2a\u539f\u672c\u662f\u51b7\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d8\u6210\u4e00\u4e2a\u70ed\u53ef\u89c2\u5bdf\u5bf9\u8c61\u3002 \u53c2\u8003\u8d44\u6599 To Use or Not to Use Subject from Dave Sexton\u2019s blog Introduction to Rx: Subject 101 Rx Samples: ISubject and ISubject Advanced RxJava: Subject by D\u00e1vid Karnok Using Subjects by Dennis Stoyanov Subject\u7684\u53d8\u4f53 \u6709\u56db\u79cd\u53d8\u4f53\uff0c\u5e94\u7528\u4e8e\u67d0\u4e9b\u7279\u6b8a\u60c5\u51b5\u4e0b\u3002\u4f46\u4e0d\u662f\u6240\u6709\u7684\u5b9e\u73b0\u4e2d\u90fd\u4f7f\u7528\u4e86\u5b83\u4eec\u3002\u67d0\u4e9b\u5b9e\u73b0\u4e2d\u4f7f\u7528\u7684\u540d\u79f0\u53ef\u80fd\u6709\u4e9b\u4e0d\u540c\uff0c\u4f8b\u5982\u5728 RxScala \u4e2d\uff0c Subject \u88ab\u79f0\u4e3a PublicSubject \u3002 AsyncSubject \u4e00\u4e2a AsyncSubject \u5728\u6e90\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u51fa\u5b8c\u6210\u901a\u77e5\u540e\u624d\u53d1\u51fa\u6e90\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u6700\u540e\u4e00\u4e2a\u4e8b\u4ef6\u548c\u5b83\u7684\u5b8c\u6210\u901a\u77e5\u3002\u5982\u679c\u6e90\u53ef\u89c2\u5bdf\u5bf9\u8c61\u6ca1\u6709\u53d1\u51fa\u4efb\u4f55\u4e8b\u4ef6\uff0c AsyncSubject \u4e0d\u53d1\u51fa\u4efb\u4f55\u4e8b\u4ef6\uff0c\u4f46\u4f1a\u53d1\u51fa\u5b8c\u6210\u6216\u8005\u9519\u8bef\u901a\u77e5\u3002 \u53c2\u8003 Introduction to Rx: AsyncSubject BehaviorSubject \u5f53\u4e00\u4e2a\u89c2\u5bdf\u8005\u8ba2\u9605\u4e86\u4e00\u4e2a BehaviorSubject \u540e\uff0c\u5b83\u4f1a\u6536\u5230\u8ba2\u9605\u524d\u6e90\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u51fa\u7684\u6700\u8fd1\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u4ee5\u53ca\u8ba2\u9605\u540e\u7684\u6240\u6709\u4e8b\u4ef6\u3002 \u53c2\u8003 Introduction to Rx: BehaviorSubject PublishSubject \u89c2\u5bdf\u8005\u5982\u679c\u8ba2\u9605\u4e86 PublishSubject \uff0c\u5b83\u53ef\u63a5\u6536\u5230\u81ea\u8ba2\u9605\u4e4b\u540e\u53d1\u751f\u7684\u6240\u6709\u4e8b\u4ef6\u3002 \u5982\u679c\u4f60\u4e0d\u60f3\u6f0f\u6389\u8ba2\u9605\u4e4b\u524d\u7684\u90a3\u4e9b\u4e8b\u4ef6\uff0c\u53ef\u4ee5\u9009\u62e9\u521b\u5efa\u4e00\u4e2a\u51b7\u53ef\u89c2\u5bdf\u5bf9\u8c61\u6216\u8005\u4f7f\u7528 ReplaySubject ReplaySubject ReplaySubject \u5411\u8ba2\u9605\u5b83\u7684\u6240\u6709\u89c2\u5bdf\u8005\u53d1\u9001\u6240\u6709\u5b83\u6240\u53d1\u51fa\u7684\u4e8b\u4ef6\uff0c\u4e0d\u7ba1\u89c2\u5bdf\u8005\u662f\u4ece\u4ec0\u4e48\u65f6\u5019\u5f00\u59cb\u8ba2\u9605\u5b83\u3002 \u4f7f\u7528 ReplaySubject \u4f5c\u4e3a\u89c2\u5bdf\u8005\u65f6\uff0c\u4e0d\u8981\u4ece\u591a\u4e2a\u7ebf\u7a0b\u4e2d\u8c03\u7528\u5b83\u7684 onNext \u548c on \u65b9\u6cd5\uff0c\u56e0\u4e3a\u8fd9\u6837\u4ea7\u751f\u7684\u4e0d\u4e00\u81f4\u4f1a\u8fdd\u53cd\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u6761\u7ea6\u89c4\u5b9a\uff0c\u5bf9\u5148\u91cd\u53d1\u4e8b\u4ef6\u8fd8\u662f\u5148\u91cd\u53d1\u901a\u77e5\u4ea7\u751f\u4e8c\u4e49\u6027\u3002 \u53c2\u8003 Introduction to Rx: ReplaySubject","title":"\u4e3b\u9898"},{"location":"reactiveX/Subject/#_1","text":"To Use or Not to Use Subject from Dave Sexton\u2019s blog Introduction to Rx: Subject 101 Rx Samples: ISubject and ISubject Advanced RxJava: Subject by D\u00e1vid Karnok Using Subjects by Dennis Stoyanov","title":"\u53c2\u8003\u8d44\u6599"},{"location":"reactiveX/Subject/#subject","text":"\u6709\u56db\u79cd\u53d8\u4f53\uff0c\u5e94\u7528\u4e8e\u67d0\u4e9b\u7279\u6b8a\u60c5\u51b5\u4e0b\u3002\u4f46\u4e0d\u662f\u6240\u6709\u7684\u5b9e\u73b0\u4e2d\u90fd\u4f7f\u7528\u4e86\u5b83\u4eec\u3002\u67d0\u4e9b\u5b9e\u73b0\u4e2d\u4f7f\u7528\u7684\u540d\u79f0\u53ef\u80fd\u6709\u4e9b\u4e0d\u540c\uff0c\u4f8b\u5982\u5728 RxScala \u4e2d\uff0c Subject \u88ab\u79f0\u4e3a PublicSubject \u3002","title":"Subject\u7684\u53d8\u4f53"},{"location":"reactiveX/Subject/#asyncsubject","text":"\u4e00\u4e2a AsyncSubject \u5728\u6e90\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u51fa\u5b8c\u6210\u901a\u77e5\u540e\u624d\u53d1\u51fa\u6e90\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u6700\u540e\u4e00\u4e2a\u4e8b\u4ef6\u548c\u5b83\u7684\u5b8c\u6210\u901a\u77e5\u3002\u5982\u679c\u6e90\u53ef\u89c2\u5bdf\u5bf9\u8c61\u6ca1\u6709\u53d1\u51fa\u4efb\u4f55\u4e8b\u4ef6\uff0c AsyncSubject \u4e0d\u53d1\u51fa\u4efb\u4f55\u4e8b\u4ef6\uff0c\u4f46\u4f1a\u53d1\u51fa\u5b8c\u6210\u6216\u8005\u9519\u8bef\u901a\u77e5\u3002","title":"AsyncSubject"},{"location":"reactiveX/Subject/#_2","text":"Introduction to Rx: AsyncSubject","title":"\u53c2\u8003"},{"location":"reactiveX/Subject/#behaviorsubject","text":"\u5f53\u4e00\u4e2a\u89c2\u5bdf\u8005\u8ba2\u9605\u4e86\u4e00\u4e2a BehaviorSubject \u540e\uff0c\u5b83\u4f1a\u6536\u5230\u8ba2\u9605\u524d\u6e90\u53ef\u89c2\u5bdf\u5bf9\u8c61\u53d1\u51fa\u7684\u6700\u8fd1\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u4ee5\u53ca\u8ba2\u9605\u540e\u7684\u6240\u6709\u4e8b\u4ef6\u3002","title":"BehaviorSubject"},{"location":"reactiveX/Subject/#_3","text":"Introduction to Rx: BehaviorSubject","title":"\u53c2\u8003"},{"location":"reactiveX/Subject/#publishsubject","text":"\u89c2\u5bdf\u8005\u5982\u679c\u8ba2\u9605\u4e86 PublishSubject \uff0c\u5b83\u53ef\u63a5\u6536\u5230\u81ea\u8ba2\u9605\u4e4b\u540e\u53d1\u751f\u7684\u6240\u6709\u4e8b\u4ef6\u3002 \u5982\u679c\u4f60\u4e0d\u60f3\u6f0f\u6389\u8ba2\u9605\u4e4b\u524d\u7684\u90a3\u4e9b\u4e8b\u4ef6\uff0c\u53ef\u4ee5\u9009\u62e9\u521b\u5efa\u4e00\u4e2a\u51b7\u53ef\u89c2\u5bdf\u5bf9\u8c61\u6216\u8005\u4f7f\u7528 ReplaySubject","title":"PublishSubject"},{"location":"reactiveX/Subject/#replaysubject","text":"ReplaySubject \u5411\u8ba2\u9605\u5b83\u7684\u6240\u6709\u89c2\u5bdf\u8005\u53d1\u9001\u6240\u6709\u5b83\u6240\u53d1\u51fa\u7684\u4e8b\u4ef6\uff0c\u4e0d\u7ba1\u89c2\u5bdf\u8005\u662f\u4ece\u4ec0\u4e48\u65f6\u5019\u5f00\u59cb\u8ba2\u9605\u5b83\u3002 \u4f7f\u7528 ReplaySubject \u4f5c\u4e3a\u89c2\u5bdf\u8005\u65f6\uff0c\u4e0d\u8981\u4ece\u591a\u4e2a\u7ebf\u7a0b\u4e2d\u8c03\u7528\u5b83\u7684 onNext \u548c on \u65b9\u6cd5\uff0c\u56e0\u4e3a\u8fd9\u6837\u4ea7\u751f\u7684\u4e0d\u4e00\u81f4\u4f1a\u8fdd\u53cd\u53ef\u89c2\u5bdf\u5bf9\u8c61\u7684\u6761\u7ea6\u89c4\u5b9a\uff0c\u5bf9\u5148\u91cd\u53d1\u4e8b\u4ef6\u8fd8\u662f\u5148\u91cd\u53d1\u901a\u77e5\u4ea7\u751f\u4e8c\u4e49\u6027\u3002","title":"ReplaySubject"},{"location":"reactiveX/Subject/#_4","text":"Introduction to Rx: ReplaySubject","title":"\u53c2\u8003"},{"location":"reactiveX/introduction/","text":"ReactiveX \u662f Reactive Extensions \u7684\u7f29\u5199\uff0c\u987e\u540d\u601d\u4e49\u5c31\u662f\u4e00\u79cd\u6269\u5c55\u80fd\u529b\u3002 ReactiveX \u662f\u4e00\u79cd\u4f7f\u7528 \u53ef\u89c2\u5bdf\u6d41 \u8fdb\u884c\u5f02\u6b65\u7f16\u7a0b\u7684API\u3002 \u5728 ReactiveX \u4e2d\uff0c\u89c2\u5bdf\u8005\u6a21\u5f0f\u975e\u5e38\u6709\u7528\uff0c\u53ef\u4ee5\u8bf4 ReactiveX \u662f \u89c2\u5bdf\u8005\u6a21\u5f0f \u3001 \u8fed\u4ee3\u5668\u6a21\u5f0f \u548c \u51fd\u6570\u5f0f\u7f16\u7a0b \u7684\u96c6\u5927\u6210\u3002 \u4f18\u70b9 \u5f88\u5bb9\u6613\u521b\u5efa\u4e8b\u4ef6\u6d41\u548c\u6570\u636e\u6d41 \u53ef\u4ee5\u7528\u7c7b\u67e5\u8be2\u64cd\u4f5c\u7ec4\u5408\u6216\u53d8\u6362\u6d41 \u53ef\u4ee5\u8ba2\u9605\u53ef\u89c2\u5bdf\u6d41\u6765\u4ea7\u751f\u526f\u4f5c\u7528\u3002 \u526f\u4f5c\u7528(side effects) \uff1a\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\uff0c\u4e00\u4e2a\u51fd\u6570\u6216\u8868\u8fbe\u5f0f\u5982\u679c\u88ab\u63cf\u8ff0\u4e3a\u6709\u526f\u4f5c\u7528\u65f6\uff0c\u901a\u5e38\u662f\u6307\u5b83\u4eec\u53ef\u4ee5\u4fee\u6539\u81ea\u8eab\u4f5c\u7528\u8303\u56f4\u4e4b\u5916\u7684\u72b6\u6001\uff0c\u6216\u8005\u9664\u4e86\u8fd4\u56de\u503c\u4e4b\u5916\u4e0e\u5916\u90e8\u4e16\u754c\u5b58\u5728\u7740\u53ef\u88ab\u89c2\u5bdf\u7684\u4ea4\u4e92\u4f5c\u7528\u3002\u4f8b\u5982\uff1a\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u4fee\u6539\u5168\u5c40\u53d8\u91cf\u6216\u9759\u6001\u53d8\u91cf\u7684\u503c\u3001\u53ef\u4ee5\u4fee\u6539\u5b83\u7684\u4e00\u4e2a\u53c2\u6570\u3001\u53ef\u4ee5\u629b\u51fa\u5f02\u5e38\u3001\u53ef\u4ee5\u5199\u6570\u636e\u5230\u6587\u4ef6\u6216\u663e\u793a\u5668\u3001\u53ef\u4ee5\u8bfb\u6570\u636e\u6216\u8005\u8c03\u7528\u5176\u5b83\u6709\u526f\u4f5c\u7528\u7684\u51fd\u6570\uff0c\u8fd9\u4e9b\u5f71\u54cd\u5c31\u88ab\u79f0\u4e3a \u526f\u4f5c\u7528 \u3002\u5728\u526f\u4f5c\u7528\u5b58\u5728\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u7a0b\u5e8f\u7684\u884c\u4e3a\u4f1a\u4f9d\u8d56\u4e8e\u5b83\u7684\u5386\u53f2\u6216\u8005\u8ba1\u7b97\u987a\u5e8f\u3002 \u65e0\u5904\u4e0d\u5728 \u524d\u7aef\uff1a\u5904\u7406UI\u4e8b\u4ef6\u548cAPI\u54cd\u5e94\uff0cWeb\u5f00\u53d1\u53ef\u4ee5\u4f7f\u7528RxJS, \u79fb\u52a8\u5f00\u53d1\u53ef\u4ee5\u4f7f\u7528Rx.NET\u548cRxJava \u8de8\u5e73\u53f0\uff1a\u9002\u7528\u4e8e\u5404\u79cd\u8bed\u8a00\u7684\u4e60\u60ef\uff0c\u8bf8\u5982\uff1aJava\u3001Scala\u3001C#\u3001C++\u3001Clojure\u3001JavaScript\u3001Python\u3001Groovy\u3001JRuby\u53ca\u5176\u5b83\u8bed\u8a00 \u540e\u7aef\uff1a\u4f7f\u7528ReactiveX\u63d0\u4f9b\u7684\u5f02\u6b65\u529f\u80fd\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5e76\u53d1\u5904\u7406\uff0c\u51cf\u5c11\u7a0b\u5e8f\u95f4\u7684\u76f8\u4e92\u4f9d\u8d56\u3002 \u6709\u66f4\u597d\u7684\u7f16\u7801\u57fa\u7840 \u51fd\u6570\u5f0f\u7f16\u7a0b\uff1a\u53ef\u4ee5\u907f\u514d\u590d\u6742\u7684\u72b6\u6001\u4f9d\u8d56\u7f16\u7a0b\u65b9\u5f0f\uff0c\u4f7f\u7528\u6e05\u6670\u7684 \u8f93\u5165/\u8f93\u51fa \u51fd\u6570\u548c\u53ef\u89c2\u5bdf\u6d41\u7684\u6982\u5ff5\u3002 \u5c11\u5373\u662f\u591a\uff1aReactiveX\u7684\u8fd0\u7b97\u7b26\u53ef\u4ee5\u663e\u8457\u7f29\u51cf\u4ee3\u7801\u957f\u5ea6\u3002 \u5f02\u6b65\u7684\u9519\u8bef\u5904\u7406\uff1a\u4f20\u7edf\u7684 try/catch \u65b9\u5f0f\u5bf9\u4e8e\u5f02\u6b65\u7f16\u7a0b\u6765\u8bf4\u4f5c\u7528\u4e0d\u5927\uff0cReactiveX\u6709\u76f8\u5e94\u7684\u673a\u5236\u53ef\u4ee5\u6709\u6548\u7684\u5904\u7406\u8fd9\u4e9b\u95ee\u9898\u3002 \u5e76\u53d1\u7f16\u7a0b\u66f4\u52a0\u5bb9\u6613\uff1a\u53ef\u89c2\u5bdf\u5bf9\u8c61\u548c\u8c03\u5ea6\u5668\u5141\u8bb8\u7a0b\u5e8f\u5458\u4e0d\u7528\u8003\u8651\u7ebf\u7a0b\u3001\u540c\u6b65\u548c\u5e76\u53d1\u7b49\u6bd4\u8f83\u8270\u6da9\u7684\u6982\u5ff5\uff0c\u5728\u66f4\u9ad8\u7684\u62bd\u8c61\u4e0a\u53bb\u7f16\u7a0b\u3002 Reactive \u6f14\u8fdb ReactiveX\u4e0d\u4ec5\u662f\u4e00\u4e2aAPI\uff0c\u5b83\u4e5f\u662f\u4e00\u79cd\u601d\u60f3\u548c\u5728\u7f16\u7a0b\u827a\u672f\u4e0a\u7684\u4e00\u4e2a\u91cd\u5927\u7a81\u7834\u3002\u5b83\u4e5f\u542f\u53d1\u4e86\u4e00\u4e9b\u5176\u5b83\u7684API\u3001\u6846\u67b6\u751a\u81f3\u662f\u7f16\u7a0b\u8bed\u8a00\u3002","title":"\u4ecb\u7ecd"},{"location":"reactiveX/introduction/#_1","text":"\u5f88\u5bb9\u6613\u521b\u5efa\u4e8b\u4ef6\u6d41\u548c\u6570\u636e\u6d41 \u53ef\u4ee5\u7528\u7c7b\u67e5\u8be2\u64cd\u4f5c\u7ec4\u5408\u6216\u53d8\u6362\u6d41 \u53ef\u4ee5\u8ba2\u9605\u53ef\u89c2\u5bdf\u6d41\u6765\u4ea7\u751f\u526f\u4f5c\u7528\u3002 \u526f\u4f5c\u7528(side effects) \uff1a\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\uff0c\u4e00\u4e2a\u51fd\u6570\u6216\u8868\u8fbe\u5f0f\u5982\u679c\u88ab\u63cf\u8ff0\u4e3a\u6709\u526f\u4f5c\u7528\u65f6\uff0c\u901a\u5e38\u662f\u6307\u5b83\u4eec\u53ef\u4ee5\u4fee\u6539\u81ea\u8eab\u4f5c\u7528\u8303\u56f4\u4e4b\u5916\u7684\u72b6\u6001\uff0c\u6216\u8005\u9664\u4e86\u8fd4\u56de\u503c\u4e4b\u5916\u4e0e\u5916\u90e8\u4e16\u754c\u5b58\u5728\u7740\u53ef\u88ab\u89c2\u5bdf\u7684\u4ea4\u4e92\u4f5c\u7528\u3002\u4f8b\u5982\uff1a\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u4fee\u6539\u5168\u5c40\u53d8\u91cf\u6216\u9759\u6001\u53d8\u91cf\u7684\u503c\u3001\u53ef\u4ee5\u4fee\u6539\u5b83\u7684\u4e00\u4e2a\u53c2\u6570\u3001\u53ef\u4ee5\u629b\u51fa\u5f02\u5e38\u3001\u53ef\u4ee5\u5199\u6570\u636e\u5230\u6587\u4ef6\u6216\u663e\u793a\u5668\u3001\u53ef\u4ee5\u8bfb\u6570\u636e\u6216\u8005\u8c03\u7528\u5176\u5b83\u6709\u526f\u4f5c\u7528\u7684\u51fd\u6570\uff0c\u8fd9\u4e9b\u5f71\u54cd\u5c31\u88ab\u79f0\u4e3a \u526f\u4f5c\u7528 \u3002\u5728\u526f\u4f5c\u7528\u5b58\u5728\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u7a0b\u5e8f\u7684\u884c\u4e3a\u4f1a\u4f9d\u8d56\u4e8e\u5b83\u7684\u5386\u53f2\u6216\u8005\u8ba1\u7b97\u987a\u5e8f\u3002","title":"\u4f18\u70b9"},{"location":"reactiveX/introduction/#_2","text":"\u524d\u7aef\uff1a\u5904\u7406UI\u4e8b\u4ef6\u548cAPI\u54cd\u5e94\uff0cWeb\u5f00\u53d1\u53ef\u4ee5\u4f7f\u7528RxJS, \u79fb\u52a8\u5f00\u53d1\u53ef\u4ee5\u4f7f\u7528Rx.NET\u548cRxJava \u8de8\u5e73\u53f0\uff1a\u9002\u7528\u4e8e\u5404\u79cd\u8bed\u8a00\u7684\u4e60\u60ef\uff0c\u8bf8\u5982\uff1aJava\u3001Scala\u3001C#\u3001C++\u3001Clojure\u3001JavaScript\u3001Python\u3001Groovy\u3001JRuby\u53ca\u5176\u5b83\u8bed\u8a00 \u540e\u7aef\uff1a\u4f7f\u7528ReactiveX\u63d0\u4f9b\u7684\u5f02\u6b65\u529f\u80fd\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5e76\u53d1\u5904\u7406\uff0c\u51cf\u5c11\u7a0b\u5e8f\u95f4\u7684\u76f8\u4e92\u4f9d\u8d56\u3002","title":"\u65e0\u5904\u4e0d\u5728"},{"location":"reactiveX/introduction/#_3","text":"\u51fd\u6570\u5f0f\u7f16\u7a0b\uff1a\u53ef\u4ee5\u907f\u514d\u590d\u6742\u7684\u72b6\u6001\u4f9d\u8d56\u7f16\u7a0b\u65b9\u5f0f\uff0c\u4f7f\u7528\u6e05\u6670\u7684 \u8f93\u5165/\u8f93\u51fa \u51fd\u6570\u548c\u53ef\u89c2\u5bdf\u6d41\u7684\u6982\u5ff5\u3002 \u5c11\u5373\u662f\u591a\uff1aReactiveX\u7684\u8fd0\u7b97\u7b26\u53ef\u4ee5\u663e\u8457\u7f29\u51cf\u4ee3\u7801\u957f\u5ea6\u3002 \u5f02\u6b65\u7684\u9519\u8bef\u5904\u7406\uff1a\u4f20\u7edf\u7684 try/catch \u65b9\u5f0f\u5bf9\u4e8e\u5f02\u6b65\u7f16\u7a0b\u6765\u8bf4\u4f5c\u7528\u4e0d\u5927\uff0cReactiveX\u6709\u76f8\u5e94\u7684\u673a\u5236\u53ef\u4ee5\u6709\u6548\u7684\u5904\u7406\u8fd9\u4e9b\u95ee\u9898\u3002 \u5e76\u53d1\u7f16\u7a0b\u66f4\u52a0\u5bb9\u6613\uff1a\u53ef\u89c2\u5bdf\u5bf9\u8c61\u548c\u8c03\u5ea6\u5668\u5141\u8bb8\u7a0b\u5e8f\u5458\u4e0d\u7528\u8003\u8651\u7ebf\u7a0b\u3001\u540c\u6b65\u548c\u5e76\u53d1\u7b49\u6bd4\u8f83\u8270\u6da9\u7684\u6982\u5ff5\uff0c\u5728\u66f4\u9ad8\u7684\u62bd\u8c61\u4e0a\u53bb\u7f16\u7a0b\u3002","title":"\u6709\u66f4\u597d\u7684\u7f16\u7801\u57fa\u7840"},{"location":"reactiveX/introduction/#reactive","text":"ReactiveX\u4e0d\u4ec5\u662f\u4e00\u4e2aAPI\uff0c\u5b83\u4e5f\u662f\u4e00\u79cd\u601d\u60f3\u548c\u5728\u7f16\u7a0b\u827a\u672f\u4e0a\u7684\u4e00\u4e2a\u91cd\u5927\u7a81\u7834\u3002\u5b83\u4e5f\u542f\u53d1\u4e86\u4e00\u4e9b\u5176\u5b83\u7684API\u3001\u6846\u67b6\u751a\u81f3\u662f\u7f16\u7a0b\u8bed\u8a00\u3002","title":"Reactive \u6f14\u8fdb"},{"location":"tech/Add Watermark on Video with OpenCV and FFmpeg/","text":"Add Watermark on Video with OpenCV and FFmpeg \u4e4b\u524d\u5199\u8fc7\u4e00\u7bc7 use opencv to add watermark in a video \uff0c\u4f46\u662f\u53d1\u73b0\u6709\u4e2a\u95ee\u9898\uff1a \u5904\u7406\u540e\u7684\u89c6\u9891\u65e0\u6cd5\u4fdd\u7559\u539f\u6765\u89c6\u9891\u4e2d\u7684\u97f3\u9891\u4fe1\u606f \u6240\u4ee5\u51b3\u5b9a\u518d\u63a2\u7a76\u4e00\u4e0b\u3002 \u7ecf\u8fc7\u8c03\u67e5\u53d1\u73b0 FFmpeg \u5e94\u7528\u76f8\u5f53\u5e7f\u6cdb\uff0c\u51e0\u4e4e\u662f\u97f3\u89c6\u9891\u9886\u57df\u7684\u745e\u58eb\u519b\u5200\uff0c\u6240\u4ee5\u6211\u4e5f\u8bd5\u4e00\u4e0b\u6c34\uff0c\u7ecf\u8fc7\u4e09\u4e2a\u661f\u671f\u7684\u6478\u7d22\uff0c\u7ec8\u4e8e\u521d\u6b65\u89e3\u51b3\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u90a3\u4e2a\u95ee\u9898\u3002\u89c9\u5f97\u76f8\u5f53\u7684\u6b23\u6170\uff0c\u5bf9\u81ea\u5df1\u611f\u5230\u975e\u5e38\u6ee1\u610f ;-) \u7a0b\u5e8f\u7684\u4e3b\u8981\u529f\u80fd\u662f\uff0c\u8bfb\u5165\u4e00\u4e2a\u89c6\u9891(\u5176\u4e2d\u5305\u542b\u97f3\u9891)\uff0c\u7ed9\u89c6\u9891\u56fe\u50cf\u5de6\u4e0a\u89d2\u6dfb\u52a0\u4e00\u4e2a\u9ec4\u8272\u65b9\u5757\u540e\uff0c\u8f93\u51fa\u6210\u76f8\u540c\u683c\u5f0f\u7684\u89c6\u9891\u6587\u4ef6\uff0c\u5e76\u4fdd\u7559\u539f\u6587\u4ef6\u4e2d\u7684\u97f3\u9891\u4fe1\u606f\u3002 \u4ee3\u7801\u6587\u4ef6: ffmpeg-opencv-transcode.cpp \u6e90\u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 /** * Copyright (c) 2010 Nicolas George * Copyright (c) 2011 Stefano Sabatini * Copyright (c) 2014 Andrey Utkin * Copyright (c) 2016 Wang Zhizhou email: 824219521@qq.com * modified from ffmpeg offical example named: transcoding.c * * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the Software ), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: * * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED AS IS , WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. */ extern C { #include libavcodec/avcodec.h #include libavformat/avformat.h #include libavfilter/avfiltergraph.h #include libavfilter/buffersink.h #include libavfilter/buffersrc.h #include libavutil/opt.h #include libavutil/pixdesc.h #include libswscale/swscale.h } static AVFormatContext * ifmt_ctx ; static AVFormatContext * ofmt_ctx ; static int open_input_file ( const char * filename ){ int ret ; unsigned int i ; ifmt_ctx = NULL ; if (( ret = avformat_open_input ( ifmt_ctx , filename , NULL , NULL )) 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot open input file \\n ); return ret ; } if (( ret = avformat_find_stream_info ( ifmt_ctx , NULL )) 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot find stream information \\n ); return ret ; } for ( i = 0 ; i ifmt_ctx - nb_streams ; i ++ ) { AVStream * stream ; AVCodecContext * codec_ctx ; stream = ifmt_ctx - streams [ i ]; codec_ctx = stream - codec ; /* Reencode video audio and remux subtitles etc. */ if ( codec_ctx - codec_type == AVMEDIA_TYPE_VIDEO ) { /* Open decoder */ ret = avcodec_open2 ( codec_ctx , avcodec_find_decoder ( codec_ctx - codec_id ), NULL ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Failed to open decoder for stream #%u \\n , i ); return ret ; } } } av_dump_format ( ifmt_ctx , 0 , filename , 0 ); return 0 ; } static int open_output_file ( const char * filename ){ AVStream * out_stream ; AVStream * in_stream ; AVCodecContext * dec_ctx , * enc_ctx ; AVCodec * encoder ; int ret ; unsigned int i ; ofmt_ctx = NULL ; avformat_alloc_output_context2 ( ofmt_ctx , NULL , NULL , filename ); if ( ! ofmt_ctx ) { av_log ( NULL , AV_LOG_ERROR , Could not create output context \\n ); return AVERROR_UNKNOWN ; } for ( i = 0 ; i ifmt_ctx - nb_streams ; i ++ ) { out_stream = avformat_new_stream ( ofmt_ctx , NULL ); if ( ! out_stream ) { av_log ( NULL , AV_LOG_ERROR , Failed allocating output stream \\n ); return AVERROR_UNKNOWN ; } in_stream = ifmt_ctx - streams [ i ]; dec_ctx = in_stream - codec ; enc_ctx = out_stream - codec ; if ( dec_ctx - codec_type == AVMEDIA_TYPE_VIDEO ) { /* in this example, we choose transcoding to same codec */ encoder = avcodec_find_encoder ( dec_ctx - codec_id ); if ( ! encoder ) { av_log ( NULL , AV_LOG_FATAL , Necessary encoder not found \\n ); return AVERROR_INVALIDDATA ; } /* In this example, we transcode to same properties (picture size, * sample rate etc.). These properties can be changed for output * streams easily using filters */ if ( ofmt_ctx - oformat - flags AVFMT_GLOBALHEADER ) enc_ctx - flags |= AV_CODEC_FLAG_GLOBAL_HEADER ; enc_ctx - height = dec_ctx - height ; enc_ctx - width = dec_ctx - width ; enc_ctx - sample_aspect_ratio = dec_ctx - sample_aspect_ratio ; /* take first format from list of supported formats */ if ( encoder - pix_fmts ) enc_ctx - pix_fmt = encoder - pix_fmts [ 0 ]; else enc_ctx - pix_fmt = dec_ctx - pix_fmt ; /* video time_base can be set to whatever is handy and supported by encoder */ enc_ctx - time_base = dec_ctx - time_base ; out_stream - time_base = enc_ctx - time_base ; if ( dec_ctx - codec_id == AV_CODEC_ID_H264 ) { enc_ctx - me_range = 16 ; enc_ctx - max_qdiff = 4 ; enc_ctx - qmin = 11 ; enc_ctx - qmax = 30 ; enc_ctx - qcompress = 0.7 ; } /* Third parameter can be used to pass settings to encoder */ ret = avcodec_open2 ( enc_ctx , encoder , NULL ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot open video encoder for stream #%u \\n , i ); return ret ; } } else if ( dec_ctx - codec_type == AVMEDIA_TYPE_UNKNOWN ) { av_log ( NULL , AV_LOG_FATAL , Elementary stream #%d is of unknown type, cannot proceed \\n , i ); return AVERROR_INVALIDDATA ; } else { /* if this stream must be remuxed */ ret = avcodec_copy_context ( ofmt_ctx - streams [ i ] - codec , ifmt_ctx - streams [ i ] - codec ); if ( AVMEDIA_TYPE_AUDIO == ofmt_ctx - streams [ i ] - codec - codec_type ) { ofmt_ctx - streams [ i ] - codec - codec_tag = 0 ; } if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Copying stream context failed \\n ); return ret ; } } } av_dump_format ( ofmt_ctx , 0 , filename , 1 ); if ( ! ( ofmt_ctx - oformat - flags AVFMT_NOFILE )) { ret = avio_open ( ofmt_ctx - pb , filename , AVIO_FLAG_WRITE ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Could not open output file %s , filename ); return ret ; } } /* init muxer, write output file header */ ret = avformat_write_header ( ofmt_ctx , NULL ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Error occurred when opening output file \\n ); return ret ; } return 0 ; } static int encode_write_frame ( AVFrame * filt_frame , unsigned int stream_index , int * got_frame ) { int ret ; int got_frame_local ; AVPacket enc_pkt ; if ( ! got_frame ) got_frame = got_frame_local ; av_log ( NULL , AV_LOG_INFO , Encoding frame \\n ); /* encode filtered frame */ enc_pkt . data = NULL ; enc_pkt . size = 0 ; av_init_packet ( enc_pkt ); ret = avcodec_encode_video2 ( ofmt_ctx - streams [ stream_index ] - codec , enc_pkt , filt_frame , got_frame ); av_frame_free ( filt_frame ); if ( ret 0 ) return ret ; if ( ! ( * got_frame )) return 0 ; /* prepare packet for muxing */ enc_pkt . stream_index = stream_index ; av_packet_rescale_ts ( enc_pkt , ofmt_ctx - streams [ stream_index ] - codec - time_base , ofmt_ctx - streams [ stream_index ] - time_base ); av_log ( NULL , AV_LOG_DEBUG , Muxing frame \\n ); /* mux encoded frame */ ret = av_interleaved_write_frame ( ofmt_ctx , enc_pkt ); return ret ; } static int flush_encoder ( unsigned int stream_index ){ int ret ; int got_frame ; if ( ! ( ofmt_ctx - streams [ stream_index ] - codec - codec - capabilities AV_CODEC_CAP_DELAY )) return 0 ; while ( 1 ) { av_log ( NULL , AV_LOG_INFO , Flushing stream #%u encoder \\n , stream_index ); ret = encode_write_frame ( NULL , stream_index , got_frame ); if ( ret 0 ) break ; if ( ! got_frame ) return 0 ; } return ret ; } //#define USE_OPENCV //\u6ce8\u91ca\u8fd9\u4e00\u53e5\u540e\u8fd0\u884c\uff0c\u5bf9\u5e94\u4e0d\u52a0\u6c34\u5370\u7684\u8f93\u51fa\u89c6\u9891 #ifdef USE_OPENCV #include opencv2/opencv.hpp using namespace std ; using namespace cv ; /** \u8fd9\u4e2a\u51fd\u6570\u91cc\u4f7f\u7528OpenCV\u5904\u7406\u56fe\u50cf **/ void addWaterMarkOnTheImage ( Mat imageFrame ) { Mat waterMark = Mat ( 100 , 100 , CV_8UC3 , Scalar ( 0 , 255 , 255 )); //\u6a21\u62df\u6c34\u5370\u56fe\u50cf Mat imageROI = imageFrame ( Rect ( 10 , 10 , waterMark . cols , waterMark . rows )); cv :: addWeighted ( imageROI , 0 , waterMark , 1 , 0 , imageROI ); //\u6dfb\u52a0\u6c34\u5370\u5230\u89c6\u9891\u56fe\u50cf\u5e27\u4e0a } /** ------ **/ AVFrame * useOpenCVProcessFrame ( AVFrame * frame , int stream_index ) { AVStream * in_stream = ifmt_ctx - streams [ stream_index ]; AVCodecContext * pCodecCtx = in_stream - codec ; AVFrame * pFrameRGB = NULL ; /* \u6e90\u56fe\u50cf\u683c\u5f0f\u5411BGR24\u8f6c\u6362 */ struct SwsContext * img_convert_ctx = NULL ; if ( img_convert_ctx == NULL ){ img_convert_ctx = sws_getContext ( pCodecCtx - width , pCodecCtx - height , pCodecCtx - pix_fmt , pCodecCtx - width , pCodecCtx - height , AV_PIX_FMT_BGR24 , SWS_BICUBIC , NULL , NULL , NULL ); } pFrameRGB = av_frame_alloc (); int size = avpicture_get_size ( AV_PIX_FMT_BGR24 , pCodecCtx - width , pCodecCtx - height ); uint8_t * out_bufferRGB = new uint8_t [ size ]; avpicture_fill (( AVPicture * ) pFrameRGB , out_bufferRGB , AV_PIX_FMT_BGR24 , pCodecCtx - width , pCodecCtx - height ); sws_scale ( img_convert_ctx , frame - data , frame - linesize , 0 , pCodecCtx - height , pFrameRGB - data , pFrameRGB - linesize ); Mat imageFrame = Mat ( pCodecCtx - height , pCodecCtx - width , CV_8UC3 ); memcpy ( imageFrame . data , out_bufferRGB , size ); delete [] out_bufferRGB ; /*** \u6e90\u56fe\u50cf\u683c\u5f0f\u5411BGR24\u8f6c\u6362\u7ed3\u675f ***/ addWaterMarkOnTheImage ( imageFrame ); //\u4f7f\u7528OpenCV\u5411\u56fe\u50cf\u6dfb\u52a0\u6c34\u5370 imshow ( image , imageFrame ); waitKey ( 1 ); //OpenCV Mat\u56fe\u50cf\u6570\u636e\u8f6c\u4e3aFFmpeg AVFrame\u56fe\u50cf\u5e27\u6570\u636e avpicture_fill (( AVPicture * ) pFrameRGB , imageFrame . data , AV_PIX_FMT_BGR24 , pCodecCtx - width , pCodecCtx - height ); /* BGR24\u5411\u6e90\u56fe\u50cf\u683c\u5f0f\u8f6c\u6362 */ struct SwsContext * convert_ctx = NULL ; if ( convert_ctx == NULL ){ convert_ctx = sws_getContext ( pCodecCtx - width , pCodecCtx - height , AV_PIX_FMT_BGR24 , pCodecCtx - width , pCodecCtx - height , pCodecCtx - pix_fmt , SWS_BICUBIC , NULL , NULL , NULL ); } AVFrame * srcFrame = av_frame_alloc (); size = avpicture_get_size ( pCodecCtx - pix_fmt , pCodecCtx - width , pCodecCtx - height ); uint8_t * out_buffer = new uint8_t [ size ]; avpicture_fill (( AVPicture * ) srcFrame , out_buffer , pCodecCtx - pix_fmt , pCodecCtx - width , pCodecCtx - height ); sws_scale ( convert_ctx , pFrameRGB - data , pFrameRGB - linesize , 0 , pCodecCtx - height , srcFrame - data , srcFrame - linesize ); delete [] out_buffer ; /*** BGR24\u5411\u6e90\u56fe\u50cf\u683c\u5f0f\u8f6c\u6362\u7ed3\u675f ***/ av_free ( pFrameRGB ); srcFrame - width = frame - width ; srcFrame - height = frame - height ; srcFrame - format = frame - format ; av_frame_copy_props ( srcFrame , frame ); return srcFrame ; } #endif int main ( int argc , char ** argv ){ int ret ; AVPacket packet = { . data = NULL , . size = 0 }; AVFrame * frame = NULL ; enum AVMediaType type ; unsigned int stream_index ; unsigned int i ; int got_frame ; if ( argc != 3 ) { av_log ( NULL , AV_LOG_ERROR , Usage: %s input file output file \\n , argv [ 0 ]); return 1 ; } av_register_all (); avfilter_register_all (); if (( ret = open_input_file ( argv [ 1 ])) 0 ) goto end ; if (( ret = open_output_file ( argv [ 2 ])) 0 ) goto end ; /* read all packets */ while ( 1 ) { if (( ret = av_read_frame ( ifmt_ctx , packet )) 0 ) break ; stream_index = packet . stream_index ; type = ifmt_ctx - streams [ packet . stream_index ] - codec - codec_type ; av_log ( NULL , AV_LOG_DEBUG , Demuxer gave frame of stream_index %u \\n , stream_index ); if ( type == AVMEDIA_TYPE_VIDEO ) { av_log ( NULL , AV_LOG_DEBUG , Going to reencode filter the frame \\n ); frame = av_frame_alloc (); if ( ! frame ) { ret = AVERROR ( ENOMEM ); break ; } av_packet_rescale_ts ( packet , ifmt_ctx - streams [ stream_index ] - time_base , ifmt_ctx - streams [ stream_index ] - codec - time_base ); ret = avcodec_decode_video2 ( ifmt_ctx - streams [ stream_index ] - codec , frame , got_frame , packet ); if ( ret 0 ) { av_frame_free ( frame ); av_log ( NULL , AV_LOG_ERROR , Decoding failed \\n ); break ; } if ( got_frame ) { #ifdef USE_OPENCV AVFrame * convertFrame = useOpenCVProcessFrame ( frame , stream_index ); convertFrame - pts = av_frame_get_best_effort_timestamp ( frame ); convertFrame - pict_type = AV_PICTURE_TYPE_NONE ; ret = encode_write_frame ( convertFrame , stream_index , NULL ); #else frame - pts = av_frame_get_best_effort_timestamp ( frame ); frame - pict_type = AV_PICTURE_TYPE_NONE ; ret = encode_write_frame ( frame , stream_index , NULL ); #endif if ( ret 0 ) goto end ; } else { av_frame_free ( frame ); } } else { /* remux this frame without reencoding */ av_packet_rescale_ts ( packet , ifmt_ctx - streams [ stream_index ] - time_base , ofmt_ctx - streams [ stream_index ] - time_base ); ret = av_interleaved_write_frame ( ofmt_ctx , packet ); if ( ret 0 ) goto end ; } av_packet_unref ( packet ); } /* flush filters and encoders */ for ( i = 0 ; i ifmt_ctx - nb_streams ; i ++ ) { /* flush encoder */ if ( ifmt_ctx - streams [ i ] - codec - codec_type == AVMEDIA_TYPE_VIDEO ) { ret = flush_encoder ( i ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Flushing encoder failed \\n ); goto end ; } } } av_write_trailer ( ofmt_ctx ); end : av_packet_unref ( packet ); for ( i = 0 ; i ifmt_ctx - nb_streams ; i ++ ) { avcodec_close ( ifmt_ctx - streams [ i ] - codec ); if ( ofmt_ctx ofmt_ctx - nb_streams i ofmt_ctx - streams [ i ] ofmt_ctx - streams [ i ] - codec ) avcodec_close ( ofmt_ctx - streams [ i ] - codec ); } avformat_close_input ( ifmt_ctx ); if ( ofmt_ctx ! ( ofmt_ctx - oformat - flags AVFMT_NOFILE )) avio_closep ( ofmt_ctx - pb ); avformat_free_context ( ofmt_ctx ); if ( ret 0 ) av_log ( NULL , AV_LOG_ERROR , Error occurred: %s \\n , av_err2str ( ret )); return ret ? 1 : 0 ; } \u672c\u7a0b\u5e8f\u8fd0\u884c\u8c03\u7528\u4e86 ffmpeg-2.8.6 \u548c opencv-3.0.1 \u7248\u7684\u5e93(\u5e93\u7684\u5b89\u88c5\u8bfb\u8005\u8fd8\u662f\u81ea\u5df1\u641e\u5b9a\u5427\uff0c\u6709\u4e8b\u8054\u7cfb: ) \u7f16\u8bd1 \u4f7f\u7528g++\u7f16\u8bd1\uff0c\u7f16\u8bd1\u547d\u4ee4\u5982\u4e0b\uff1a 1 g++ ffmpeg-opencv-transcode.cpp -I/usr/local/include -L/usr/local/lib -lavcodec -lavformat -lswscale -lavfilter -lavutil -lx264 -lz -lm -lopencv_imgproc -lopencv_highgui -lopencv_core \u4f7f\u7528 \u4f7f\u7528\u65b9\u6cd5\uff1a 1 ./a.out input.mp4 output.mp4 \u6d4b\u8bd5\u89c6\u9891 \u8fd9\u91cc\u6709\u51e0\u4e2a\u6d4b\u8bd5\u89c6\u9891\u53ef\u4f9b\u4f7f\u7528\uff1a 1.mp4 2.mp4","title":"Add Watermark on Video with OpenCV and FFmpeg"},{"location":"tech/Add Watermark on Video with OpenCV and FFmpeg/#add-watermark-on-video-with-opencv-and-ffmpeg","text":"\u4e4b\u524d\u5199\u8fc7\u4e00\u7bc7 use opencv to add watermark in a video \uff0c\u4f46\u662f\u53d1\u73b0\u6709\u4e2a\u95ee\u9898\uff1a \u5904\u7406\u540e\u7684\u89c6\u9891\u65e0\u6cd5\u4fdd\u7559\u539f\u6765\u89c6\u9891\u4e2d\u7684\u97f3\u9891\u4fe1\u606f \u6240\u4ee5\u51b3\u5b9a\u518d\u63a2\u7a76\u4e00\u4e0b\u3002 \u7ecf\u8fc7\u8c03\u67e5\u53d1\u73b0 FFmpeg \u5e94\u7528\u76f8\u5f53\u5e7f\u6cdb\uff0c\u51e0\u4e4e\u662f\u97f3\u89c6\u9891\u9886\u57df\u7684\u745e\u58eb\u519b\u5200\uff0c\u6240\u4ee5\u6211\u4e5f\u8bd5\u4e00\u4e0b\u6c34\uff0c\u7ecf\u8fc7\u4e09\u4e2a\u661f\u671f\u7684\u6478\u7d22\uff0c\u7ec8\u4e8e\u521d\u6b65\u89e3\u51b3\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u90a3\u4e2a\u95ee\u9898\u3002\u89c9\u5f97\u76f8\u5f53\u7684\u6b23\u6170\uff0c\u5bf9\u81ea\u5df1\u611f\u5230\u975e\u5e38\u6ee1\u610f ;-) \u7a0b\u5e8f\u7684\u4e3b\u8981\u529f\u80fd\u662f\uff0c\u8bfb\u5165\u4e00\u4e2a\u89c6\u9891(\u5176\u4e2d\u5305\u542b\u97f3\u9891)\uff0c\u7ed9\u89c6\u9891\u56fe\u50cf\u5de6\u4e0a\u89d2\u6dfb\u52a0\u4e00\u4e2a\u9ec4\u8272\u65b9\u5757\u540e\uff0c\u8f93\u51fa\u6210\u76f8\u540c\u683c\u5f0f\u7684\u89c6\u9891\u6587\u4ef6\uff0c\u5e76\u4fdd\u7559\u539f\u6587\u4ef6\u4e2d\u7684\u97f3\u9891\u4fe1\u606f\u3002 \u4ee3\u7801\u6587\u4ef6: ffmpeg-opencv-transcode.cpp","title":"Add Watermark on Video with OpenCV and FFmpeg"},{"location":"tech/Add Watermark on Video with OpenCV and FFmpeg/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 /** * Copyright (c) 2010 Nicolas George * Copyright (c) 2011 Stefano Sabatini * Copyright (c) 2014 Andrey Utkin * Copyright (c) 2016 Wang Zhizhou email: 824219521@qq.com * modified from ffmpeg offical example named: transcoding.c * * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the Software ), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: * * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED AS IS , WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. */ extern C { #include libavcodec/avcodec.h #include libavformat/avformat.h #include libavfilter/avfiltergraph.h #include libavfilter/buffersink.h #include libavfilter/buffersrc.h #include libavutil/opt.h #include libavutil/pixdesc.h #include libswscale/swscale.h } static AVFormatContext * ifmt_ctx ; static AVFormatContext * ofmt_ctx ; static int open_input_file ( const char * filename ){ int ret ; unsigned int i ; ifmt_ctx = NULL ; if (( ret = avformat_open_input ( ifmt_ctx , filename , NULL , NULL )) 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot open input file \\n ); return ret ; } if (( ret = avformat_find_stream_info ( ifmt_ctx , NULL )) 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot find stream information \\n ); return ret ; } for ( i = 0 ; i ifmt_ctx - nb_streams ; i ++ ) { AVStream * stream ; AVCodecContext * codec_ctx ; stream = ifmt_ctx - streams [ i ]; codec_ctx = stream - codec ; /* Reencode video audio and remux subtitles etc. */ if ( codec_ctx - codec_type == AVMEDIA_TYPE_VIDEO ) { /* Open decoder */ ret = avcodec_open2 ( codec_ctx , avcodec_find_decoder ( codec_ctx - codec_id ), NULL ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Failed to open decoder for stream #%u \\n , i ); return ret ; } } } av_dump_format ( ifmt_ctx , 0 , filename , 0 ); return 0 ; } static int open_output_file ( const char * filename ){ AVStream * out_stream ; AVStream * in_stream ; AVCodecContext * dec_ctx , * enc_ctx ; AVCodec * encoder ; int ret ; unsigned int i ; ofmt_ctx = NULL ; avformat_alloc_output_context2 ( ofmt_ctx , NULL , NULL , filename ); if ( ! ofmt_ctx ) { av_log ( NULL , AV_LOG_ERROR , Could not create output context \\n ); return AVERROR_UNKNOWN ; } for ( i = 0 ; i ifmt_ctx - nb_streams ; i ++ ) { out_stream = avformat_new_stream ( ofmt_ctx , NULL ); if ( ! out_stream ) { av_log ( NULL , AV_LOG_ERROR , Failed allocating output stream \\n ); return AVERROR_UNKNOWN ; } in_stream = ifmt_ctx - streams [ i ]; dec_ctx = in_stream - codec ; enc_ctx = out_stream - codec ; if ( dec_ctx - codec_type == AVMEDIA_TYPE_VIDEO ) { /* in this example, we choose transcoding to same codec */ encoder = avcodec_find_encoder ( dec_ctx - codec_id ); if ( ! encoder ) { av_log ( NULL , AV_LOG_FATAL , Necessary encoder not found \\n ); return AVERROR_INVALIDDATA ; } /* In this example, we transcode to same properties (picture size, * sample rate etc.). These properties can be changed for output * streams easily using filters */ if ( ofmt_ctx - oformat - flags AVFMT_GLOBALHEADER ) enc_ctx - flags |= AV_CODEC_FLAG_GLOBAL_HEADER ; enc_ctx - height = dec_ctx - height ; enc_ctx - width = dec_ctx - width ; enc_ctx - sample_aspect_ratio = dec_ctx - sample_aspect_ratio ; /* take first format from list of supported formats */ if ( encoder - pix_fmts ) enc_ctx - pix_fmt = encoder - pix_fmts [ 0 ]; else enc_ctx - pix_fmt = dec_ctx - pix_fmt ; /* video time_base can be set to whatever is handy and supported by encoder */ enc_ctx - time_base = dec_ctx - time_base ; out_stream - time_base = enc_ctx - time_base ; if ( dec_ctx - codec_id == AV_CODEC_ID_H264 ) { enc_ctx - me_range = 16 ; enc_ctx - max_qdiff = 4 ; enc_ctx - qmin = 11 ; enc_ctx - qmax = 30 ; enc_ctx - qcompress = 0.7 ; } /* Third parameter can be used to pass settings to encoder */ ret = avcodec_open2 ( enc_ctx , encoder , NULL ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot open video encoder for stream #%u \\n , i ); return ret ; } } else if ( dec_ctx - codec_type == AVMEDIA_TYPE_UNKNOWN ) { av_log ( NULL , AV_LOG_FATAL , Elementary stream #%d is of unknown type, cannot proceed \\n , i ); return AVERROR_INVALIDDATA ; } else { /* if this stream must be remuxed */ ret = avcodec_copy_context ( ofmt_ctx - streams [ i ] - codec , ifmt_ctx - streams [ i ] - codec ); if ( AVMEDIA_TYPE_AUDIO == ofmt_ctx - streams [ i ] - codec - codec_type ) { ofmt_ctx - streams [ i ] - codec - codec_tag = 0 ; } if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Copying stream context failed \\n ); return ret ; } } } av_dump_format ( ofmt_ctx , 0 , filename , 1 ); if ( ! ( ofmt_ctx - oformat - flags AVFMT_NOFILE )) { ret = avio_open ( ofmt_ctx - pb , filename , AVIO_FLAG_WRITE ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Could not open output file %s , filename ); return ret ; } } /* init muxer, write output file header */ ret = avformat_write_header ( ofmt_ctx , NULL ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Error occurred when opening output file \\n ); return ret ; } return 0 ; } static int encode_write_frame ( AVFrame * filt_frame , unsigned int stream_index , int * got_frame ) { int ret ; int got_frame_local ; AVPacket enc_pkt ; if ( ! got_frame ) got_frame = got_frame_local ; av_log ( NULL , AV_LOG_INFO , Encoding frame \\n ); /* encode filtered frame */ enc_pkt . data = NULL ; enc_pkt . size = 0 ; av_init_packet ( enc_pkt ); ret = avcodec_encode_video2 ( ofmt_ctx - streams [ stream_index ] - codec , enc_pkt , filt_frame , got_frame ); av_frame_free ( filt_frame ); if ( ret 0 ) return ret ; if ( ! ( * got_frame )) return 0 ; /* prepare packet for muxing */ enc_pkt . stream_index = stream_index ; av_packet_rescale_ts ( enc_pkt , ofmt_ctx - streams [ stream_index ] - codec - time_base , ofmt_ctx - streams [ stream_index ] - time_base ); av_log ( NULL , AV_LOG_DEBUG , Muxing frame \\n ); /* mux encoded frame */ ret = av_interleaved_write_frame ( ofmt_ctx , enc_pkt ); return ret ; } static int flush_encoder ( unsigned int stream_index ){ int ret ; int got_frame ; if ( ! ( ofmt_ctx - streams [ stream_index ] - codec - codec - capabilities AV_CODEC_CAP_DELAY )) return 0 ; while ( 1 ) { av_log ( NULL , AV_LOG_INFO , Flushing stream #%u encoder \\n , stream_index ); ret = encode_write_frame ( NULL , stream_index , got_frame ); if ( ret 0 ) break ; if ( ! got_frame ) return 0 ; } return ret ; } //#define USE_OPENCV //\u6ce8\u91ca\u8fd9\u4e00\u53e5\u540e\u8fd0\u884c\uff0c\u5bf9\u5e94\u4e0d\u52a0\u6c34\u5370\u7684\u8f93\u51fa\u89c6\u9891 #ifdef USE_OPENCV #include opencv2/opencv.hpp using namespace std ; using namespace cv ; /** \u8fd9\u4e2a\u51fd\u6570\u91cc\u4f7f\u7528OpenCV\u5904\u7406\u56fe\u50cf **/ void addWaterMarkOnTheImage ( Mat imageFrame ) { Mat waterMark = Mat ( 100 , 100 , CV_8UC3 , Scalar ( 0 , 255 , 255 )); //\u6a21\u62df\u6c34\u5370\u56fe\u50cf Mat imageROI = imageFrame ( Rect ( 10 , 10 , waterMark . cols , waterMark . rows )); cv :: addWeighted ( imageROI , 0 , waterMark , 1 , 0 , imageROI ); //\u6dfb\u52a0\u6c34\u5370\u5230\u89c6\u9891\u56fe\u50cf\u5e27\u4e0a } /** ------ **/ AVFrame * useOpenCVProcessFrame ( AVFrame * frame , int stream_index ) { AVStream * in_stream = ifmt_ctx - streams [ stream_index ]; AVCodecContext * pCodecCtx = in_stream - codec ; AVFrame * pFrameRGB = NULL ; /* \u6e90\u56fe\u50cf\u683c\u5f0f\u5411BGR24\u8f6c\u6362 */ struct SwsContext * img_convert_ctx = NULL ; if ( img_convert_ctx == NULL ){ img_convert_ctx = sws_getContext ( pCodecCtx - width , pCodecCtx - height , pCodecCtx - pix_fmt , pCodecCtx - width , pCodecCtx - height , AV_PIX_FMT_BGR24 , SWS_BICUBIC , NULL , NULL , NULL ); } pFrameRGB = av_frame_alloc (); int size = avpicture_get_size ( AV_PIX_FMT_BGR24 , pCodecCtx - width , pCodecCtx - height ); uint8_t * out_bufferRGB = new uint8_t [ size ]; avpicture_fill (( AVPicture * ) pFrameRGB , out_bufferRGB , AV_PIX_FMT_BGR24 , pCodecCtx - width , pCodecCtx - height ); sws_scale ( img_convert_ctx , frame - data , frame - linesize , 0 , pCodecCtx - height , pFrameRGB - data , pFrameRGB - linesize ); Mat imageFrame = Mat ( pCodecCtx - height , pCodecCtx - width , CV_8UC3 ); memcpy ( imageFrame . data , out_bufferRGB , size ); delete [] out_bufferRGB ; /*** \u6e90\u56fe\u50cf\u683c\u5f0f\u5411BGR24\u8f6c\u6362\u7ed3\u675f ***/ addWaterMarkOnTheImage ( imageFrame ); //\u4f7f\u7528OpenCV\u5411\u56fe\u50cf\u6dfb\u52a0\u6c34\u5370 imshow ( image , imageFrame ); waitKey ( 1 ); //OpenCV Mat\u56fe\u50cf\u6570\u636e\u8f6c\u4e3aFFmpeg AVFrame\u56fe\u50cf\u5e27\u6570\u636e avpicture_fill (( AVPicture * ) pFrameRGB , imageFrame . data , AV_PIX_FMT_BGR24 , pCodecCtx - width , pCodecCtx - height ); /* BGR24\u5411\u6e90\u56fe\u50cf\u683c\u5f0f\u8f6c\u6362 */ struct SwsContext * convert_ctx = NULL ; if ( convert_ctx == NULL ){ convert_ctx = sws_getContext ( pCodecCtx - width , pCodecCtx - height , AV_PIX_FMT_BGR24 , pCodecCtx - width , pCodecCtx - height , pCodecCtx - pix_fmt , SWS_BICUBIC , NULL , NULL , NULL ); } AVFrame * srcFrame = av_frame_alloc (); size = avpicture_get_size ( pCodecCtx - pix_fmt , pCodecCtx - width , pCodecCtx - height ); uint8_t * out_buffer = new uint8_t [ size ]; avpicture_fill (( AVPicture * ) srcFrame , out_buffer , pCodecCtx - pix_fmt , pCodecCtx - width , pCodecCtx - height ); sws_scale ( convert_ctx , pFrameRGB - data , pFrameRGB - linesize , 0 , pCodecCtx - height , srcFrame - data , srcFrame - linesize ); delete [] out_buffer ; /*** BGR24\u5411\u6e90\u56fe\u50cf\u683c\u5f0f\u8f6c\u6362\u7ed3\u675f ***/ av_free ( pFrameRGB ); srcFrame - width = frame - width ; srcFrame - height = frame - height ; srcFrame - format = frame - format ; av_frame_copy_props ( srcFrame , frame ); return srcFrame ; } #endif int main ( int argc , char ** argv ){ int ret ; AVPacket packet = { . data = NULL , . size = 0 }; AVFrame * frame = NULL ; enum AVMediaType type ; unsigned int stream_index ; unsigned int i ; int got_frame ; if ( argc != 3 ) { av_log ( NULL , AV_LOG_ERROR , Usage: %s input file output file \\n , argv [ 0 ]); return 1 ; } av_register_all (); avfilter_register_all (); if (( ret = open_input_file ( argv [ 1 ])) 0 ) goto end ; if (( ret = open_output_file ( argv [ 2 ])) 0 ) goto end ; /* read all packets */ while ( 1 ) { if (( ret = av_read_frame ( ifmt_ctx , packet )) 0 ) break ; stream_index = packet . stream_index ; type = ifmt_ctx - streams [ packet . stream_index ] - codec - codec_type ; av_log ( NULL , AV_LOG_DEBUG , Demuxer gave frame of stream_index %u \\n , stream_index ); if ( type == AVMEDIA_TYPE_VIDEO ) { av_log ( NULL , AV_LOG_DEBUG , Going to reencode filter the frame \\n ); frame = av_frame_alloc (); if ( ! frame ) { ret = AVERROR ( ENOMEM ); break ; } av_packet_rescale_ts ( packet , ifmt_ctx - streams [ stream_index ] - time_base , ifmt_ctx - streams [ stream_index ] - codec - time_base ); ret = avcodec_decode_video2 ( ifmt_ctx - streams [ stream_index ] - codec , frame , got_frame , packet ); if ( ret 0 ) { av_frame_free ( frame ); av_log ( NULL , AV_LOG_ERROR , Decoding failed \\n ); break ; } if ( got_frame ) { #ifdef USE_OPENCV AVFrame * convertFrame = useOpenCVProcessFrame ( frame , stream_index ); convertFrame - pts = av_frame_get_best_effort_timestamp ( frame ); convertFrame - pict_type = AV_PICTURE_TYPE_NONE ; ret = encode_write_frame ( convertFrame , stream_index , NULL ); #else frame - pts = av_frame_get_best_effort_timestamp ( frame ); frame - pict_type = AV_PICTURE_TYPE_NONE ; ret = encode_write_frame ( frame , stream_index , NULL ); #endif if ( ret 0 ) goto end ; } else { av_frame_free ( frame ); } } else { /* remux this frame without reencoding */ av_packet_rescale_ts ( packet , ifmt_ctx - streams [ stream_index ] - time_base , ofmt_ctx - streams [ stream_index ] - time_base ); ret = av_interleaved_write_frame ( ofmt_ctx , packet ); if ( ret 0 ) goto end ; } av_packet_unref ( packet ); } /* flush filters and encoders */ for ( i = 0 ; i ifmt_ctx - nb_streams ; i ++ ) { /* flush encoder */ if ( ifmt_ctx - streams [ i ] - codec - codec_type == AVMEDIA_TYPE_VIDEO ) { ret = flush_encoder ( i ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Flushing encoder failed \\n ); goto end ; } } } av_write_trailer ( ofmt_ctx ); end : av_packet_unref ( packet ); for ( i = 0 ; i ifmt_ctx - nb_streams ; i ++ ) { avcodec_close ( ifmt_ctx - streams [ i ] - codec ); if ( ofmt_ctx ofmt_ctx - nb_streams i ofmt_ctx - streams [ i ] ofmt_ctx - streams [ i ] - codec ) avcodec_close ( ofmt_ctx - streams [ i ] - codec ); } avformat_close_input ( ifmt_ctx ); if ( ofmt_ctx ! ( ofmt_ctx - oformat - flags AVFMT_NOFILE )) avio_closep ( ofmt_ctx - pb ); avformat_free_context ( ofmt_ctx ); if ( ret 0 ) av_log ( NULL , AV_LOG_ERROR , Error occurred: %s \\n , av_err2str ( ret )); return ret ? 1 : 0 ; } \u672c\u7a0b\u5e8f\u8fd0\u884c\u8c03\u7528\u4e86 ffmpeg-2.8.6 \u548c opencv-3.0.1 \u7248\u7684\u5e93(\u5e93\u7684\u5b89\u88c5\u8bfb\u8005\u8fd8\u662f\u81ea\u5df1\u641e\u5b9a\u5427\uff0c\u6709\u4e8b\u8054\u7cfb: )","title":"\u6e90\u4ee3\u7801"},{"location":"tech/Add Watermark on Video with OpenCV and FFmpeg/#_2","text":"\u4f7f\u7528g++\u7f16\u8bd1\uff0c\u7f16\u8bd1\u547d\u4ee4\u5982\u4e0b\uff1a 1 g++ ffmpeg-opencv-transcode.cpp -I/usr/local/include -L/usr/local/lib -lavcodec -lavformat -lswscale -lavfilter -lavutil -lx264 -lz -lm -lopencv_imgproc -lopencv_highgui -lopencv_core","title":"\u7f16\u8bd1"},{"location":"tech/Add Watermark on Video with OpenCV and FFmpeg/#_3","text":"\u4f7f\u7528\u65b9\u6cd5\uff1a 1 ./a.out input.mp4 output.mp4","title":"\u4f7f\u7528"},{"location":"tech/Add Watermark on Video with OpenCV and FFmpeg/#_4","text":"\u8fd9\u91cc\u6709\u51e0\u4e2a\u6d4b\u8bd5\u89c6\u9891\u53ef\u4f9b\u4f7f\u7528\uff1a 1.mp4 2.mp4","title":"\u6d4b\u8bd5\u89c6\u9891"},{"location":"tech/Configure Git Server With Ubuntn and Apache 2/","text":"Configure Git Server With Ubuntu and Apache 2 I always wanted to establish a local git server that I can push my code or other material on it. But there is no enough time for me to take it into practice. And This weekend, I make it working. So, I want to record this process for review. I have a Raspberry pi 3 Model B card computer, and Ubuntu system is hosted on it. So, I can manipulate it through the ssh protocol by my Mac Book Pro terminal. So, Let's start working! First, we should install the git and Apache Http Server , using command as follow: 1 sudo apt-get -y install git apache2 With git installed, we can create our repositories on local disk. With Apache2 Http Server installed, we can make the local disk repositories be access by other people connecting the same local network. So, we should go under the directory: /var/www/html/ to create our bare git repository and configure it with command: 1 2 3 4 5 6 7 pi@raspberrypi:~/Documents $ sudo git init --bare /var/www/html/sample.git Initialized empty Git repository in /var/www/html/sample.git/ pi@raspberrypi:~ $ cd /var/www/html/sample.git/hooks/ pi@raspberrypi:/var/www/html/sample.git/hooks $ sudo mv post-update.sample post-update pi@raspberrypi:/var/www/html/sample.git/hooks $ sudo chmod a+x post-update pi@raspberrypi:/var/www/html/sample.git/hooks $ cd .. pi@raspberrypi:/var/www/html/sample.git $ sudo git update-server-info because the directory: /var/www/html/ is the default apache2 http server's root directory. After we create the bare git repository under the server root directory, we should start the apache2 http server to make this repository been access by other in the same network. Before we start apache, we should configure it. We add the line: 1 ServerName localhost:80 into the top of the configuration file named: apache2.conf , which is under directory: /etc/apache2/ . We can use the vim editor the change it as follow: 1 sudo vi /etc/apache2/apache2.conf The apache2.conf be changed as follow: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 ServerName localhost:80 # This is the main Apache server configuration file. It contains the # configuration directives that give the server its instructions. # See http://httpd.apache.org/docs/2.4/ for detailed information about # the directives and /usr/share/doc/apache2/README.Debian about Debian specific # hints. # # # Summary of how the Apache 2 configuration works in Debian: # The Apache 2 web server configuration in Debian is quite different to # upstream s suggested way to configure the web server. This is because Debian s # default Apache2 installation attempts to make adding and removing modules, # virtual hosts, and extra configuration directives as flexible as possible, in # order to make automating the changes and administering the server as easy as # possible. # It is split into several files forming the configuration hierarchy outlined # below, all located in the /etc/apache2/ directory: # # /etc/apache2/ # |-- apache2.conf # | `-- ports.conf # |-- mods-enabled # | |-- *.load We save the changed file and exit with :wq vim command. Now, we shoud start the http serve using the command: 1 2 pi@raspberrypi:~ $ sudo /etc/init.d/apache2 restart [ ok ] Restarting apache2 (via systemctl): apache2.service. if you use your browser with url: http://192.168.0.121 and see some web page with title Apache2 Debian Default Page , congratulation! you web server is working. Note: The ip : 192.168 . 0.121 may be not the same as you, because I installed the Apache on my RPi3 and access from my notebook. Or you can use the 127.0.0.1 if you work in the same one computer) Then you can clone you repository from the apache http server with the command on another computer in the same network: 1 2 3 4 localhost:~ wangzhizhou$ git clone http://192.168.0.121/sample.git Cloning into sample ... warning: You appear to have cloned an empty repository. Checking connectivity... done. Of course, you can clone the repository under the same computer with the command: 1 2 3 4 pi@raspberrypi:~ $ git clone http://localhost/sample.git Cloning into sample ... warning: You appear to have cloned an empty repository. Checking connectivity... done. or 1 2 3 4 pi@raspberrypi:~ $ git clone http://127.0.0.1/sample.git Cloning into sample ... warning: You appear to have cloned an empty repository. Checking connectivity... done. Because, the localhost is equal the ip: 127.0.0.1 Now, you can pull repository from server, but you can not push your code to it, because the server directory access permission should be configured properly! This should be studied deeperly!","title":"Configure Git Server With Ubuntu and Apache 2"},{"location":"tech/Configure Git Server With Ubuntn and Apache 2/#configure-git-server-with-ubuntu-and-apache-2","text":"I always wanted to establish a local git server that I can push my code or other material on it. But there is no enough time for me to take it into practice. And This weekend, I make it working. So, I want to record this process for review. I have a Raspberry pi 3 Model B card computer, and Ubuntu system is hosted on it. So, I can manipulate it through the ssh protocol by my Mac Book Pro terminal. So, Let's start working! First, we should install the git and Apache Http Server , using command as follow: 1 sudo apt-get -y install git apache2 With git installed, we can create our repositories on local disk. With Apache2 Http Server installed, we can make the local disk repositories be access by other people connecting the same local network. So, we should go under the directory: /var/www/html/ to create our bare git repository and configure it with command: 1 2 3 4 5 6 7 pi@raspberrypi:~/Documents $ sudo git init --bare /var/www/html/sample.git Initialized empty Git repository in /var/www/html/sample.git/ pi@raspberrypi:~ $ cd /var/www/html/sample.git/hooks/ pi@raspberrypi:/var/www/html/sample.git/hooks $ sudo mv post-update.sample post-update pi@raspberrypi:/var/www/html/sample.git/hooks $ sudo chmod a+x post-update pi@raspberrypi:/var/www/html/sample.git/hooks $ cd .. pi@raspberrypi:/var/www/html/sample.git $ sudo git update-server-info because the directory: /var/www/html/ is the default apache2 http server's root directory. After we create the bare git repository under the server root directory, we should start the apache2 http server to make this repository been access by other in the same network. Before we start apache, we should configure it. We add the line: 1 ServerName localhost:80 into the top of the configuration file named: apache2.conf , which is under directory: /etc/apache2/ . We can use the vim editor the change it as follow: 1 sudo vi /etc/apache2/apache2.conf The apache2.conf be changed as follow: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 ServerName localhost:80 # This is the main Apache server configuration file. It contains the # configuration directives that give the server its instructions. # See http://httpd.apache.org/docs/2.4/ for detailed information about # the directives and /usr/share/doc/apache2/README.Debian about Debian specific # hints. # # # Summary of how the Apache 2 configuration works in Debian: # The Apache 2 web server configuration in Debian is quite different to # upstream s suggested way to configure the web server. This is because Debian s # default Apache2 installation attempts to make adding and removing modules, # virtual hosts, and extra configuration directives as flexible as possible, in # order to make automating the changes and administering the server as easy as # possible. # It is split into several files forming the configuration hierarchy outlined # below, all located in the /etc/apache2/ directory: # # /etc/apache2/ # |-- apache2.conf # | `-- ports.conf # |-- mods-enabled # | |-- *.load We save the changed file and exit with :wq vim command. Now, we shoud start the http serve using the command: 1 2 pi@raspberrypi:~ $ sudo /etc/init.d/apache2 restart [ ok ] Restarting apache2 (via systemctl): apache2.service. if you use your browser with url: http://192.168.0.121 and see some web page with title Apache2 Debian Default Page , congratulation! you web server is working. Note: The ip : 192.168 . 0.121 may be not the same as you, because I installed the Apache on my RPi3 and access from my notebook. Or you can use the 127.0.0.1 if you work in the same one computer) Then you can clone you repository from the apache http server with the command on another computer in the same network: 1 2 3 4 localhost:~ wangzhizhou$ git clone http://192.168.0.121/sample.git Cloning into sample ... warning: You appear to have cloned an empty repository. Checking connectivity... done. Of course, you can clone the repository under the same computer with the command: 1 2 3 4 pi@raspberrypi:~ $ git clone http://localhost/sample.git Cloning into sample ... warning: You appear to have cloned an empty repository. Checking connectivity... done. or 1 2 3 4 pi@raspberrypi:~ $ git clone http://127.0.0.1/sample.git Cloning into sample ... warning: You appear to have cloned an empty repository. Checking connectivity... done. Because, the localhost is equal the ip: 127.0.0.1 Now, you can pull repository from server, but you can not push your code to it, because the server directory access permission should be configured properly! This should be studied deeperly!","title":"Configure Git Server With Ubuntu and Apache 2"},{"location":"tech/Convert MP4 to GIF With FFmpeg/","text":"\u5b89\u88c5ffmpegffmpeg 1 sudo apt-get install ffmpeg \u4f7f\u7528 1 ffmpeg -t 3.6 -ss 00:00:01 -i Screencast_2016-01-13-17-01-38.mp4 small-clip.gif \u6ce8\u91ca\uff1a3.6\u662f\u79d2\u6570\uff0c00:00:01\u662f\u5f00\u59cb\u65f6\u95f4\u3002 FFmpeg\u4f7f\u7528\u8bf4\u660e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 $ ffmpeg -- help ffmpeg version 3.1.4 Copyright ( c ) 2000 - 2016 the FFmpeg developers built with Apple LLVM version 8.0.0 ( clang - 800.0.42.1 ) configuration : -- prefix =/ usr / local / Cellar / ffmpeg / 3.1.4 -- enable - shared -- enable - pthreads -- enable - gpl -- enable - version3 -- enable - hardcoded - tables -- enable - avresample -- cc = clang -- host - cflags = -- host - ldflags = -- enable - opencl -- enable - libx264 -- enable - libmp3lame -- enable - libxvid -- enable - libfreetype -- enable - libvorbis -- enable - libvpx -- enable - libass -- enable - libfdk - aac -- enable - libopus -- enable - libx265 -- disable - lzma -- enable - nonfree -- enable - vda libavutil 55. 28.100 / 55. 28.100 libavcodec 57. 48.101 / 57. 48.101 libavformat 57. 41.100 / 57. 41.100 libavdevice 57. 0.101 / 57. 0.101 libavfilter 6. 47.100 / 6. 47.100 libavresample 3. 0. 0 / 3. 0. 0 libswscale 4. 1.100 / 4. 1.100 libswresample 2. 1.100 / 2. 1.100 libpostproc 54. 0.100 / 54. 0.100 Hyper fast Audio and Video encoder usage : ffmpeg [ options ] [[ infile options ] - i infile ]... {[ outfile options ] outfile }... Getting help : - h -- print basic options - h long -- print more options - h full -- print all options ( including all format and codec specific options , very long ) - h type = name -- print all options for the named decoder / encoder / demuxer / muxer / filter See man ffmpeg for detailed description of the options . Print help / information / capabilities : - L show license - h topic show help -? topic show help - help topic show help -- help topic show help - version show version - buildconf show build configuration - formats show available formats - devices show available devices - codecs show available codecs - decoders show available decoders - encoders show available encoders - bsfs show available bit stream filters - protocols show available protocols - filters show available filters - pix_fmts show available pixel formats - layouts show standard channel layouts - sample_fmts show available audio sample formats - colors show available color names - opencl_bench run benchmark on all OpenCL devices and show results - sources device list sources of the input device - sinks device list sinks of the output device - hwaccels show available HW acceleration methods Global options ( affect whole program instead of just one file : - loglevel loglevel set logging level - v loglevel set logging level - report generate a report - max_alloc bytes set maximum size of a single allocated block - opencl_options set OpenCL environment options - y overwrite output files - n never overwrite output files - ignore_unknown Ignore unknown stream types - stats print progress report during encoding - max_error_rate ratio of errors ( 0.0 : no errors , 1.0 : 100 % error maximum error rate - bits_per_raw_sample number set the number of bits per raw sample - vol volume change audio volume ( 256 = normal ) Per - file main options : - f fmt force format - c codec codec name - codec codec codec name - pre preset preset name - map_metadata outfile [, metadata ] : infile [, metadata ] set metadata information of outfile from infile - t duration record or transcode duration seconds of audio / video - to time_stop record or transcode stop time - fs limit_size set the limit file size in bytes - ss time_off set the start time offset - sseof time_off set the start time offset relative to EOF - seek_timestamp enable / disable seeking by timestamp with - ss - timestamp time set the recording timestamp ( now to set the current time ) - metadata string = string add metadata - program title = string : st = number ... add program with specified streams - target type specify target file type ( vcd , svcd , dvd , dv or dv50 with optional prefixes pal- , ntsc- or film- ) - apad audio pad - frames number set the number of frames to output - filter filter_graph set stream filtergraph - filter_script filename read stream filtergraph description from a file - reinit_filter reinit filtergraph on input parameter changes - discard discard - disposition disposition Video options : - vframes number set the number of video frames to output - r rate set frame rate ( Hz value , fraction or abbreviation ) - s size set frame size ( WxH or abbreviation ) - aspect aspect set aspect ratio ( 4 : 3 , 16 : 9 or 1.3333 , 1.7777 ) - bits_per_raw_sample number set the number of bits per raw sample - vn disable video - vcodec codec force video codec ( copy to copy stream ) - timecode hh : mm : ss [ : ;.] ff set initial TimeCode value . - pass n select the pass number ( 1 to 3 ) - vf filter_graph set video filters - ab bitrate audio bitrate ( please use - b : a ) - b bitrate video bitrate ( please use - b : v ) - dn disable data Audio options : - aframes number set the number of audio frames to output - aq quality set audio quality ( codec - specific ) - ar rate set audio sampling rate ( in Hz ) - ac channels set number of audio channels - an disable audio - acodec codec force audio codec ( copy to copy stream ) - vol volume change audio volume ( 256 = normal ) - af filter_graph set audio filters Subtitle options : - s size set frame size ( WxH or abbreviation ) - sn disable subtitle - scodec codec force subtitle codec ( copy to copy stream ) - stag fourcc / tag force subtitle tag / fourcc - fix_sub_duration fix subtitles duration - canvas_size size set canvas size ( WxH or abbreviation ) - spre preset set the subtitle options to the indicated preset","title":"Convert MP4 to GIF With FFmpeg"},{"location":"tech/Convert MP4 to GIF With FFmpeg/#ffmpeg","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 $ ffmpeg -- help ffmpeg version 3.1.4 Copyright ( c ) 2000 - 2016 the FFmpeg developers built with Apple LLVM version 8.0.0 ( clang - 800.0.42.1 ) configuration : -- prefix =/ usr / local / Cellar / ffmpeg / 3.1.4 -- enable - shared -- enable - pthreads -- enable - gpl -- enable - version3 -- enable - hardcoded - tables -- enable - avresample -- cc = clang -- host - cflags = -- host - ldflags = -- enable - opencl -- enable - libx264 -- enable - libmp3lame -- enable - libxvid -- enable - libfreetype -- enable - libvorbis -- enable - libvpx -- enable - libass -- enable - libfdk - aac -- enable - libopus -- enable - libx265 -- disable - lzma -- enable - nonfree -- enable - vda libavutil 55. 28.100 / 55. 28.100 libavcodec 57. 48.101 / 57. 48.101 libavformat 57. 41.100 / 57. 41.100 libavdevice 57. 0.101 / 57. 0.101 libavfilter 6. 47.100 / 6. 47.100 libavresample 3. 0. 0 / 3. 0. 0 libswscale 4. 1.100 / 4. 1.100 libswresample 2. 1.100 / 2. 1.100 libpostproc 54. 0.100 / 54. 0.100 Hyper fast Audio and Video encoder usage : ffmpeg [ options ] [[ infile options ] - i infile ]... {[ outfile options ] outfile }... Getting help : - h -- print basic options - h long -- print more options - h full -- print all options ( including all format and codec specific options , very long ) - h type = name -- print all options for the named decoder / encoder / demuxer / muxer / filter See man ffmpeg for detailed description of the options . Print help / information / capabilities : - L show license - h topic show help -? topic show help - help topic show help -- help topic show help - version show version - buildconf show build configuration - formats show available formats - devices show available devices - codecs show available codecs - decoders show available decoders - encoders show available encoders - bsfs show available bit stream filters - protocols show available protocols - filters show available filters - pix_fmts show available pixel formats - layouts show standard channel layouts - sample_fmts show available audio sample formats - colors show available color names - opencl_bench run benchmark on all OpenCL devices and show results - sources device list sources of the input device - sinks device list sinks of the output device - hwaccels show available HW acceleration methods Global options ( affect whole program instead of just one file : - loglevel loglevel set logging level - v loglevel set logging level - report generate a report - max_alloc bytes set maximum size of a single allocated block - opencl_options set OpenCL environment options - y overwrite output files - n never overwrite output files - ignore_unknown Ignore unknown stream types - stats print progress report during encoding - max_error_rate ratio of errors ( 0.0 : no errors , 1.0 : 100 % error maximum error rate - bits_per_raw_sample number set the number of bits per raw sample - vol volume change audio volume ( 256 = normal ) Per - file main options : - f fmt force format - c codec codec name - codec codec codec name - pre preset preset name - map_metadata outfile [, metadata ] : infile [, metadata ] set metadata information of outfile from infile - t duration record or transcode duration seconds of audio / video - to time_stop record or transcode stop time - fs limit_size set the limit file size in bytes - ss time_off set the start time offset - sseof time_off set the start time offset relative to EOF - seek_timestamp enable / disable seeking by timestamp with - ss - timestamp time set the recording timestamp ( now to set the current time ) - metadata string = string add metadata - program title = string : st = number ... add program with specified streams - target type specify target file type ( vcd , svcd , dvd , dv or dv50 with optional prefixes pal- , ntsc- or film- ) - apad audio pad - frames number set the number of frames to output - filter filter_graph set stream filtergraph - filter_script filename read stream filtergraph description from a file - reinit_filter reinit filtergraph on input parameter changes - discard discard - disposition disposition Video options : - vframes number set the number of video frames to output - r rate set frame rate ( Hz value , fraction or abbreviation ) - s size set frame size ( WxH or abbreviation ) - aspect aspect set aspect ratio ( 4 : 3 , 16 : 9 or 1.3333 , 1.7777 ) - bits_per_raw_sample number set the number of bits per raw sample - vn disable video - vcodec codec force video codec ( copy to copy stream ) - timecode hh : mm : ss [ : ;.] ff set initial TimeCode value . - pass n select the pass number ( 1 to 3 ) - vf filter_graph set video filters - ab bitrate audio bitrate ( please use - b : a ) - b bitrate video bitrate ( please use - b : v ) - dn disable data Audio options : - aframes number set the number of audio frames to output - aq quality set audio quality ( codec - specific ) - ar rate set audio sampling rate ( in Hz ) - ac channels set number of audio channels - an disable audio - acodec codec force audio codec ( copy to copy stream ) - vol volume change audio volume ( 256 = normal ) - af filter_graph set audio filters Subtitle options : - s size set frame size ( WxH or abbreviation ) - sn disable subtitle - scodec codec force subtitle codec ( copy to copy stream ) - stag fourcc / tag force subtitle tag / fourcc - fix_sub_duration fix subtitles duration - canvas_size size set canvas size ( WxH or abbreviation ) - spre preset set the subtitle options to the indicated preset","title":"FFmpeg\u4f7f\u7528\u8bf4\u660e"},{"location":"tech/Develop DLNA Using Platinum Library/","text":"Develop DLNA Using Platinum Library \u8fd9\u51e0\u5929\u516c\u53f8\u7684\u5e94\u7528(iOS\u7aef)\u4e0a\u8981\u52a0\u4e00\u4e2a dlna \u7684\u529f\u80fd\uff0c\u5c31\u662f\u5c40\u57df\u7f51\u5185\u8bbe\u5907\u6295\u5c4f\u63a7\u5236\u7684\u4e00\u4e2a\u529f\u80fd\uff0c\u5e76\u63d0\u4f9b\u79fb\u52a8\u7aef\u63a7\u5236\u3002\u56e0\u4e3a\u4e09\u65b9\u5e93Platinum\u662f\u4f7f\u7528C++\u5199\u7684\uff0c\u6240\u4ee5\u6211\u88ab\u5206\u914d\u53bb\u505a\u5e93\u7684Objective-C\u5c01\u88c5\u7684\u5de5\u4f5c\u3002\u7b2c\u4e00\u6b21\u63a5\u624b\u8fd9\u79cd\u4e8b\uff0c\u5bf9\u4e00\u4e2a\u975e\u8ba1\u7b97\u673a\u4e13\u4e1a\u7684\u5b66\u751f\u6765\u8bf4\u8fd8\u662f\u86ee\u6709\u6311\u6218\u6027\u7684\u3002\u7ec4\u957f\u8bf4\u8981\u5148\u5199\u4e00\u4e2a\u63a5\u53e3\u8bbe\u8ba1\u6587\u6863\u6765\u63cf\u8ff0\u5c06\u8981\u5c01\u88c5\u7684\u63a5\u53e3\u548c\u8c03\u7528\u65b9\u5f0f\u3002\u53ea\u80fd\u7f51\u4e0a\u67e5\u770b\u5404\u79cd\u8d44\u6599\u55bd\uff01 \u8fd9\u91cc\u662f\u6211\u4e00\u987f\u72c2\u641c\u3001\u770b\u5404\u79cd\u535a\u5ba2\u540e\u641c\u96c6\u5230\u7684\u6709\u7528\u8d44\u6599\uff0c\u5217\u8868\u5982\u4e0b\uff1a \u94fe\u63a5 \u63cf\u8ff0 Open Connectivity Foundation (OCF)\u5b98\u7f51 \u8fd9\u91cc\u6709UPnP\u76f8\u5173\u7684\u6587\u6863\u548c\u5404\u5bb6\u516c\u53f8\u5f00\u53d1\u7684SDK\uff0c\u4f8b\u5982\uff1a Plutinosoft \u5f00\u53d1\u7684 Platinum\u5e93 \u4e5f\u53ef\u4ee5\u4ece\u8fd9\u91cc\u4e86\u987a\u85e4\u6478\u74dc\u627e\u5230 dlna\u5b98\u7f51 \u8fd9\u91cc\u6709\u5bf9dlna\u534f\u8bae\u63cf\u8ff0\u7684\u6587\u6863\u4e0b\u8f7d\uff0c\u53ef\u4ee5\u8bf4\u8981\u5168\u9762\u7684\u5b66\u4e60dlna\uff0c\u8fd9\u91cc\u7684\u6587\u6863\u662f\u4e0d\u53ef\u6216\u7f3a\u7684\uff0c\u5f53\u7136\uff0c\u5b9e\u9645\u4e2d\u6211\u4eec\u4e5f\u6ca1\u6709\u5fc5\u8981\u5b66\u592a\u6df1\uff0c\u4e0d\u8fc7\u77e5\u9053\u8fd9\u4e2a\u8d44\u6e90\uff0c\u5b66\u4e60\u65f6\u5c31\u6709\u5e95\u4e86;-) \u4e00\u4e2a\u5173\u4e8edlan\u4ecb\u7ecd\u7684\u535a\u5ba2 \u4e0a\u9762\u4e24\u4e2a\u7f51\u7ad9\u5c31\u662f\u901a\u8fc7\u9605\u8bfb\u8fd9\u4e2a\u535a\u5ba2\u300aDLNA UPnP\u5f00\u53d1\u7b14\u8bb0\u300b\u7cfb\u5217\u5171\u56db\u7bc7\u6587\u7ae0\u540e\u627e\u5230\u7684\uff0c\u503c\u7684\u9605\u8bfb \u597d\u4e86\uff0c\u6709\u4e86\u4ee5\u4e0a\u7684\u51e0\u4e2a\u8d44\u6e90\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u52a8\u4e86\u3002\u6211\u5de5\u4f5c\u4e2d\u4f7f\u7528\u4e86Platinum\u5e93\u8fdb\u884cdlna\u7684\u5a92\u4f53\u63a7\u5236\u5668( DMC )\u5f00\u53d1,\u6240\u4ee5\u4e5f\u6ca1\u6709\u5bf9dlna\u6709\u592a\u5168\u9762\u7684\u4e86\u89e3\uff0c\u4e00\u5207\u662f\u4ece\u5bf9Platinum\u5e93\u6240\u63d0\u4f9b\u7684\u793a\u4f8b\u7a0b\u5e8f\u548c\u9879\u76eeREADME\u6587\u4ef6\u8fdb\u884c\u7f16\u8bd1\u5e93\u548c\u76f8\u5173\u5f00\u53d1\u5b66\u4e60\u7684\u3002 \u90a3\u4e48\uff0c\u7b2c\u4e00\u6b65\u5c31\u662f\uff0c\u62c9\u4e0b\u9879\u76ee\u8fdb\u884c\u7f16\u8bd1\u548c\u8fd0\u884c\u793a\u4f8b\u4e86\u3002 \u7f16\u8bd1Platinum\u5e93 \u9996\u5148\uff0c\u4f7f\u7528git\u62c9\u4e0b\u9879\u76ee\u6700\u8fd1\u4e00\u6b21\u7684\u63d0\u4ea4 1 git clone --depth=1 https://github.com/plutinosoft/Platinum.git \u56e0\u4e3aPlatinum\u7684\u7f16\u8bd1\u9700\u8981\u4f9d\u8d56\u4e00\u4e2a\u540d\u4e3a Neptune \u7684C++\u8de8\u5e73\u53f0\u8fd0\u884c\u73af\u5883\uff0c\u5f53\u7136\u8fd9\u4e2a\u9879\u76ee\u91cc\u5df2\u7ecf\u6709\u89e3\u51b3\u65b9\u6cd5\uff0c\u4e0d\u9700\u8981\u6211\u4eec\u53e6\u5916\u4e0b\u8f7d\u6216\u7f16\u8bd1 Neptune \u5e93\uff0c\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7 Carthage \u5de5\u5177\uff0c\u5c06 Neptune \u7684framework\u4e0b\u8f7d\u5230Platinum\u7684\u9879\u76ee\u76ee\u5f55\u4e0b\u3002\u5177\u4f53\u8fc7\u7a0b\u5982\u4e0b\uff1a \u4f60\u8981\u5148\u8fdb\u884cPlatinum\u9879\u76ee\u76ee\u5f55\u4e0b\uff0c\u53d1\u73b0\u5176\u4e2d\u6709\u7740\u540d\u4e3a Cartfile \u6216 Cartfile.resolved \u8fd9\u6837\u7684\u6587\u4ef6\uff0c\u6587\u4ef6\u4e2d\u6307\u660e\u4e86 Carthage \u8fd9\u4e2a\u5de5\u5177\u8f6f\u4ef6\u6240\u8981\u4e0b\u8f7d\u7684framework\u540d\u79f0\u548c\u7248\u672c\uff0c\u5176\u5b9e carthage \u8fd9\u4e2a\u5de5\u5177\u7c7b\u4f3c\u4e8e CocoaPods \u8fd9\u4e2a\u5de5\u5177\u3002\u4e0d\u8fc7\u4f60\u7684Mac\u4e0a\u5f88\u53ef\u80fd\u5e76\u6ca1\u6709\u5b89\u88c5 carthage \uff0c\u6240\u4ee5\u4f60\u5176\u5b9e\u53ef\u4ee5\u901a\u8fc7\u5148\u5728Mac\u4e0a\u5b89\u88c5 homebrew \u8fd9\u4e2a\u5de5\u5177\uff0c\u7136\u540e\u4f7f\u7528 homebrew \u6765\u5b89\u88c5 carghage \u3002\u5982\u4e0b: 1 2 3 4 5 6 7 /usr/bin/ruby -e $(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install) # \u5b89\u88c5homebrew brew install carthage # homebrew \u5b89\u88c5\u6210\u529f\u540e\uff0c\u5b89\u88c5carthage cd Platinum/ # \u8fdb\u5165Platinum\u9879\u76ee\u76ee\u5f55\u4e0b carthage update # \u8fd0\u884ccarthage \u8ba9\u5176\u4e0b\u8f7d Carthfile\u6587\u4ef6\u4e2d\u6307\u5b9a\u7684framework \u5f53\u4ee5\u4e0a\u8fc7\u7a0b\u5b8c\u6210\u540e\uff0c\u4f60\u4f1a\u53d1\u73b0\u5728 Platinum/Carthage \u8fd9\u4e2a\u76ee\u5f55\u4e0b\u9762\uff0c\u5df2\u7ecf\u5b58\u5728 Neptune \u8fd9\u4e2aC++\u8de8\u5e73\u53f0\u8fd0\u884c\u73af\u5883\u7684\u5206\u522b\u9488\u5bf9Mac\u548ciOS\u7684frame\u001cwork\u4e86\uff0c\u4f60\u53ea\u8981\u786e\u4fdd\u4ee5\u4e0a\u7684\u547d\u4ee4\u8fd0\u884c\u6210\u529f\uff0c\u5e76\u6700\u7ec8\u5f97\u5230Neptune\u7684FrameWork\u5c31\u53ef\u4ee5\u7f16\u8bd1Platinum\u7684\u9488\u5bf9iOS\u7684\u9879\u76ee\u548c\u793a\u4f8b\u7a0b\u5e8f\u4e86\u3002 \u4f7f\u7528XCode\u6253\u5f00 /Platinum/Build/Targets/universal-apple-macosx/Platinum.xcodeproj \u9879\u76ee\u6587\u4ef6\uff0c\u7136\u540e\u5206\u522b\u8fd0\u884c\u5404 Target \uff0c\u5c31\u53ef\u4ee5\u751f\u6210\u76f8\u5173\u7684framework\u548c\u793a\u4f8b\u8fd0\u884c\u7a0b\u5e8f\u4e86\u3002 \u751f\u6210\u540c\u65f6\u652f\u6301\u771f\u673a\u548c\u6a21\u62df\u673a\u7684framework\u52a8\u6001\u94fe\u63a5\u5e93 \u9009\u62e9 Platinum-iOS \u7f16\u8bd1\u65b9\u6848(Scheme),\u5728\u7f16\u8f91\u65b9\u6848(Edit Scheme...)\u5bf9\u8bdd\u6846,\u8fd0\u884c(Run)\u5206\u7c7b\u4e2d\u7684\u4fe1\u606f(Info)\u9009\u9879\u5361\u4e0b\uff0c\u9009\u62e9\u7f16\u8bd1\u914d\u7f6e(Build Configuration)\u4e3a Release \u3002\u8bbe\u7f6e\u597d\u7f16\u8bd1\u65b9\u6848\u540e\uff0c\u9009\u62e9\u4efb\u4e00\u6a21\u62df\u5668(e.g: iphone SE)\u7f16\u8bd1\u4e00\u6b21\uff0c\u518d\u9009\u62e9\u901a\u7528iOS\u8bbe\u5907(Generic iOS Device)\u7f16\u8bd1\u4e00\u6b21\uff0c\u8fd9\u4e24\u6b21\u7f16\u8bd1\uff0c\u5206\u522b\u5f97\u5230\u5bf9\u5e94\u4e8e i386 x86_64 \u67b6\u6784\u7684\u6a21\u62df\u5668framework\u548c\u5bf9\u5e94\u4e8e\u771f\u673a armv7 arm64 \u67b6\u6784\u7684framework\uff0c\u6211\u4eec\u628a\u8fd9\u4e24\u4e2a\u5bf9\u5e94\u4e8e\u4e0d\u540c\u67b6\u6784\u7684framework\u5408\u5e76\u6210\u4e00\u4e2aframework\u5c31\u5b8c\u6210\u4e86\u540c\u65f6\u6ee1\u8db3\u771f\u673a\u8c03\u8bd5\u548c\u6a21\u62df\u5668\u8c03\u8bd5\u7684framework\u4e86\u3002 \u751f\u6210\u7684\u4e24\u4e2a\u9488\u5bf9\u4e0d\u540c\u67b6\u6784\u7684framework\u6240\u5728\u7684\u76ee\u5f55\u5982\u4e0b\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u53f3\u952e Show in Finder \u7684\u65b9\u5f0f\u627e\u5230\u5b83\u4eec\u7684\u4f4d\u7f6e, \u8fd9\u4e24\u4e2a\u76ee\u5f55\u8def\u5f84\u52a8\u6001\u53d8\u5316\uff0c\u4e0d\u5b8c\u5168\u4e0e\u6211\u7684\u4e00\u81f4\u3002 1 2 3 4 5 #\u8fd9\u4e2a\u76ee\u5f55\u5bf9\u5e94\u4e8e\u771f\u673a\u7684 armv7 arm64 \u67b6\u6784 /Users/JokerAtBaoFeng/Library/Developer/Xcode/DerivedData/Platinum-bawuiqxkhqixgybjjufqgvmduavh/Build/Products/Release-iphoneos #\u8fd9\u4e2a\u76ee\u5f55\u5bf9\u5e94\u4e8e\u6a21\u62df\u5668\u7684 i386 x86_64 \u67b6\u6784 /Users/JokerAtBaoFeng/Library/Developer/Xcode/DerivedData/Platinum-bawuiqxkhqixgybjjufqgvmduavh/Build/Products/Release-iphonesimulator \u4f60\u53ef\u4ee5\u5206\u522b\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u67e5\u770bframework\u4e2d\u7684\u6587\u4ef6\u652f\u6301\u7684\u67b6\u6784\uff0c\u5982\u4e0b\uff1a 1 lipo -info Release-iphoneos/Platinum.framework/Platinum \u8f93\u51fa\uff1a Architectures in the fat file: Release-iphoneos/Platinum.framework/Platinum are: armv7 arm64 1 lipo -info Release-iphonesimulator/Platinum.framework/Platinum \u8f93\u51fa\uff1a Architectures in the fat file: Release-iphonesimulator/Platinum.framework/Platinum are: i386 x86_64 \u5229\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5c06\u4e24\u4e2aframework\u5408\u5e76, \u5e76\u66ff\u6362 Release-iphoneos/Platinum.framework/Platinum \u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5c31\u662f\u5408\u5e76\u4e4b\u540e\u7684\u6587\u4ef6\uff1a 1 lipo -create Release-iphoneos/Platinum.framework/Platinum Release-iphonesimulator/Platinum.framework/Platinum -output Release-iphoneos/Platinum.framework/Platinum \u8fd9\u65f6\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 Release-iphoneos/Platinum.framework \u5bfc\u5165\u4f60\u8981\u7528\u5230\u7684\u9879\u76ee\u4e2d\u53bb\u4e86\u3002\u54e6\uff0c\u5bf9\u4e86\uff0c\u7531\u4e8ePlatinum.framework\u8fd0\u884c\u9700\u8981\u4f9d\u8d56 Neptune.framework \uff0c\u6240\u4ee5\u5bfc\u5165\u81ea\u5df1\u7684\u9879\u76ee\u65f6\uff0c\u8bb0\u5f97\u628acarthage\u4e0b\u8f7d\u7684 Neptune.framework \u4e00\u5e76\u5bfc\u5165\u3002 \u518d\u6b21\u67e5\u770b\u5408\u5e76\u540e\u7684framework\u6240\u652f\u6301\u7684\u67b6\u6784\uff1a 1 lipo -info Release-iphoneos/Platinum.framework/Platinum \u8f93\u51fa\uff1a Architectures in the fat file: Release-iphoneos/Platinum.framework/Platinum are: i386 x86_64 armv7 arm64 \u53ef\u4ee5\u770b\u5230\uff0c\u5b83\u5df2\u7ecf\u540c\u65f6\u652f\u6301 i386 x86_64 armv7 arm64 \u4e86\u3002 Platinum.framework\u548cNeptune.framework\u7684\u4f7f\u7528 \u4f60\u53ef\u4ee5\u76f4\u63a5\u628a\u8fd9\u4e24\u4e2aframework\u6587\u4ef6\u76f4\u63a5\u62d6\u5165\u9879\u76ee\u4e2d\uff0c\u5e76\u5728\u63d0\u793a\u65f6\u9009\u62e9 Copy Items if needed \uff0c\u7136\u540e\u70b9\u51fbfinished\u5b8c\u6210\u5bfc\u5165\u3002 \u7136\u540e\u5230\u9879\u76ee\u5bf9\u5e94Target\u4e0b\u7684\u001d Build Phases | Link Binary With Libraries \u4e0b\u786e\u4fdd Platinum \u548c Neptune \u4e24\u4e2aframework\u90fd\u5728\u5217\u8868\u4e2d\u3002 \u7531\u4e8eiOS\u65b0\u7248\u672c\u652f\u6301\u4e86\u52a8\u6001\u94fe\u63a5\u5e93\uff0c\u800c\u6211\u4eec\u4e0a\u8ff0\u8fc7\u7a0b\u9ed8\u8ba4\u751f\u6210\u7684\u4e5f\u662f\u52a8\u6001\u7684framework, \u6240\u4ee5\u8fd8\u9700\u8981\u5728Target\u7684 General | Embedded Binaries \u4e2d\u540c\u6837\u7684\u6dfb\u52a0\u4e0a\u8ff0\u7684\u4e24\u4e2aframework,\u4ee5\u4f7f\u6211\u4eec\u5728\u5b89\u88c5\u5e94\u7528\u7684\u540c\u65f6\uff0c\u4e5f\u5c06\u5bf9\u5e94\u7684\u52a8\u6001\u5e93\u62f7\u8d1d\u5230\u673a\u5668\u4e2d\u53bb\uff0c\u5426\u5219\u4f1a\u7531\u4e8e\u673a\u5668\u4e0a\u7f3a\u5c11\u5bf9\u5e94framework\u800c\u62a5\u9519\u3002 \u5728\u9879\u76ee\u4e2d\u4f7f\u7528framework\u7684\u5934\u6587\u4ef6\uff0c\u9700\u8981\u4f7f\u7528\u5c16\u62ec\u53f7 header.h \u800c\u975e\u53cc\u5f15\u53f7 header.h \u3002 \u8fd9\u6837\uff0c\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7f16\u8bd1\u597d\u7684framework\u4e86\u3002 \u5bf9\u5e93\u7684\u719f\u6089\u8fc7\u7a0b \u9996\u5148\u662f\u5bf9\u4e09\u65b9\u5e93\u7684\u4f7f\u7528\uff0c\u6765\u7406\u89e3\u63a5\u53e3\u8c03\u7528\u65b9\u5f0f\u3002\u8fd8\u597d\u5e93\u91cc\u63d0\u4f9b\u4e86\u51e0\u4e2a\u4f8b\u5b50\u7a0b\u5e8f\uff0c\u5148\u6162\u6162\u770b\u4e86\u4e09\u5929\u3002\u79fb\u690d\u4e86\u5176\u4e2d\u4e00\u4e2a\u5173\u4e8e\u5a92\u4f53\u63a7\u5236\u5668\u7684\u793a\u4f8b\u5230\u9879\u76ee\u4e2d\uff0c\u4ec5\u4ec5\u5b9e\u73b0\u4e86\u67e5\u627e\u9644\u8fd1\u8bbe\u5907\u7684\u529f\u80fd\u3002\u4f46\u8fd9\u662f\u4e2a\u597d\u7684\u5f00\u5934\uff0c\u5bf9\u6211\u6765\u8bf4\u6709\u76f8\u5f53\u7684\u9f13\u52b1\u4f5c\u7528\u3002\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4e3b\u8981\u662f\u53c2\u7167 MicroMediaController \u7684\u4ee3\u7801\u8fdb\u884c\u7684\u3002 \u6211\u53d1\u73b0\u5bf9\u4e8e\u4f18\u8d28C++\u5e93\u7684\u5b66\u4e60\uff0c\u771f\u662f\u4e00\u79cd\u8d4f\u5fc3\u60a6\u76ee\u7684\u4f53\u9a8c\uff0c\u5f53\u7136\u770b\u61c2C++\u7684\u7ec6\u8282\u8fd8\u662f\u76f8\u5f53\u75db\u82e6\u7684\u3002 \u8fd9\u4e2aPlatinum\u5e93\u5e94\u8be5\u662f\u9075\u5faadlna\u534f\u8bae\u7f16\u5199\u7684\uff0c\u76f8\u5173\u7684\u6587\u6863\u5f88\u5c11\uff0c\u9879\u76ee\u5c5e\u4e8e\u81ea\u6ce8\u91ca\u578b\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca\u5c31\u662f\u6587\u6863\u7684\u5927\u90e8\u5206\uff0c\u4e0d\u8fc7\u8981\u5b66\u4e60\u8fd9\u4e2a\u5e93\uff0cdlan\u534f\u8bae\u8fd8\u662f\u6709\u5fc5\u8981\u8be6\u7ec6\u770b\u770b\u7684\uff0c\u5426\u5219\u5373\u4f7f\u901a\u8fc7\u4fee\u6539\u7a0b\u5e8f\uff0c\u8fbe\u5230\u4e86\u6700\u521d\u8bbe\u5b9a\u7684\u529f\u80fd\u76ee\u6807\uff0c\u60f3\u8981\u6269\u5c55\u4e00\u4e9b\u529f\u80fd\uff0c\u5374\u662f\u4f1a\u8fb9\u53c2\u6570\u90fd\u4e0d\u4f1a\u4f20\u9012\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u53c2\u6570\u662f\u5728\u534f\u8bae\u662f\u89c4\u5b9a\u7684\u3002 \u5728\u63a5\u53e3\u5c01\u95ed\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53d1\u73b0\u53c2\u8003\u522b\u4eba\u7684\u5c01\u95ed\u65b9\u6cd5\u5b9e\u5728\u80fd\u591f\u5b66\u4e60\u5f88\u591a\uff0c\u6bd4\u4f8b\u6211\u5728\u7528Objective-C\u5c01C++\u63a5\u53e3\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5c31\u53c2\u8003\u4e86Platinum\u9879\u76ee\u76ee\u5f55\u4e0b Platinum/Source/Extras/ObjectiveC/ \u5bf9 MediaServer \u7684\u5c01\u88c5\u65b9\u6cd5\u3002 \u672a\u5b8c\uff0c\u5f85\u7eed... #issue1 \u5728\u8bc6\u522b\u5c0f\u7c73\u76d2\u5b50\u7684\u65f6\u5019\uff0c\u603b\u662f\u8bc6\u522b\u4e0d\u5230\uff0c\u4fee\u6539\u4e86Platinum\u4e2d\u7684\u90e8\u5206\u4ee3\u7801,\u5e76\u91cd\u65b0\u7f16\u8bd1\u540e\u5bfc\u5165\u9879\u76ee\uff0c\u5f97\u4ee5\u6b63\u5e38\u8bc6\u522b\uff1a \u4fee\u6539\u524d PltCtrlPoint.cpp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 class PLT_DeviceReadyIterator { public : PLT_DeviceReadyIterator () {} NPT_Result operator ()( PLT_DeviceDataReference device ) const { NPT_Result res = device - m_Services . ApplyUntil ( PLT_ServiceReadyIterator (), NPT_UntilResultNotEquals ( NPT_SUCCESS )); if ( NPT_FAILED ( res )) return res ; res = device - m_EmbeddedDevices . ApplyUntil ( PLT_DeviceReadyIterator (), NPT_UntilResultNotEquals ( NPT_SUCCESS )); if ( NPT_FAILED ( res )) return res ; // a device must have at least one service or embedded device // otherwise it s not ready if ( device - m_Services . GetItemCount () == 0 device - m_EmbeddedDevices . GetItemCount () == 0 ) { return NPT_FAILURE ; } return NPT_SUCCESS ; } }; \u4fee\u6539\u540e PltCtrlPoint.cpp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 class PLT_DeviceReadyIterator { public : PLT_DeviceReadyIterator () {} NPT_Result operator ()( PLT_DeviceDataReference device ) const { NPT_Result res = device - m_Services . ApplyUntil ( PLT_ServiceReadyIterator (), NPT_UntilResultNotEquals ( NPT_SUCCESS )); // if (NPT_FAILED(res)) return res; res = device - m_EmbeddedDevices . ApplyUntil ( PLT_DeviceReadyIterator (), NPT_UntilResultNotEquals ( NPT_SUCCESS )); // if (NPT_FAILED(res)) return res; if ( NPT_FAILED ( res ) NPT_FAILED ( res )) return res ; // a device must have at least one service or embedded device // otherwise it s not ready if ( device - m_Services . GetItemCount () == 0 device - m_EmbeddedDevices . GetItemCount () == 0 ) { return NPT_FAILURE ; } return NPT_SUCCESS ; } }; \u4fee\u6539\u539f\u56e0 \u6211\u53d1\u73b0\u5bf9\u4e8e\u641c\u7d22\u5230\u7684\u5c0f\u7c73\u76d2\u5b50\uff0c\u4ee3\u7801\u8fc7\u4e0d\u4e86\u4e0b\u9762\u8fd9\u4e2a\u51fd\u6570\u7684\u7b2c 53 \u884c\uff1a PltCtrlPoint.cpp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 NPT_Result PLT_CtrlPoint :: ProcessGetSCPDResponse ( NPT_Result res , const NPT_HttpRequest request , const NPT_HttpRequestContext context , NPT_HttpResponse * response , PLT_DeviceDataReference device ) { NPT_COMPILER_UNUSED ( context ); NPT_AutoLock lock ( m_Lock ); PLT_DeviceReadyIterator device_tester ; NPT_String scpd ; PLT_DeviceDataReference root_device ; PLT_Service * service ; NPT_String prefix = NPT_String :: Format ( PLT_CtrlPoint::ProcessGetSCPDResponse for a service of device \\ %s \\ @ % s ( result = % d , status = % d ) , ( const char * ) device - GetFriendlyName (), ( const char * ) request . GetUrl (). ToString (), res , response ? response - GetStatusCode () : 0 ); // verify response was ok NPT_CHECK_LABEL_FATAL ( res , bad_response ); NPT_CHECK_POINTER_LABEL_FATAL ( response , bad_response ); PLT_LOG_HTTP_RESPONSE ( NPT_LOG_LEVEL_FINER , prefix , response ); // make sure root device hasn t disappeared NPT_CHECK_LABEL_WARNING ( FindDevice ( device - GetUUID (), root_device , true ), bad_response ); res = device - FindServiceBySCPDURL ( request . GetUrl (). ToRequestString (), service ); NPT_CHECK_LABEL_SEVERE ( res , bad_response ); // get response body res = PLT_HttpHelper :: GetBody ( * response , scpd ); NPT_CHECK_LABEL_FATAL ( res , bad_response ); // DIAL support if ( root_device - GetType (). Compare ( urn:dial-multiscreen-org:device:dial:1 ) == 0 ) { AddDevice ( root_device ); return NPT_SUCCESS ; } // set the service scpd res = service - SetSCPDXML ( scpd ); NPT_CHECK_LABEL_SEVERE ( res , bad_response ); // if root device is ready, notify listeners about it and embedded devices if ( NPT_SUCCEEDED ( device_tester ( root_device ))) { AddDevice ( root_device ); //\u7b2c53\u884c } return NPT_SUCCESS ; bad_response : NPT_LOG_SEVERE_2 ( Bad SCPD response for device \\ %s \\ :%s , ( const char * ) device - GetFriendlyName (), ( const char * ) scpd ); if ( ! root_device . IsNull ()) RemoveDevice ( root_device ); return res ; } #issue2 \u4e2a\u4eba\u53d1\u73b0\u5c0f\u7c73\u76d2\u5b50\u5bf9\u4e8edlan\u534f\u8bae\u5b9e\u73b0\u90e8\u5206\u7684\u9759\u97f3\u63a7\u5236\u547d\u4ee4\u4f3c\u4e4e\u6709\u4e9b\u51fa\u5165\uff0c\u6211\u4f7f\u7528\u793a\u4f8b\u7a0b\u5e8f\u53d1\u9001\u9759\u97f3\u547d\u4ee4\u5230\u5c0f\u7c73\u76d2\u5b50\uff0c\u53d1\u73b0\u53ea\u80fd\u4f7f\u8bbe\u5907\u9759\u97f3\uff0c\u5374\u4e0d\u80fd\u4f7f\u8bbe\u5907\u6062\u590d\u58f0\u97f3\uff0c\u8fd9\u4e2a\u95ee\u9898\u6709\u5f85\u8fdb\u4e00\u6b65\u786e\u8ba4\u3002","title":"Develop DLNA Using Platinum Library"},{"location":"tech/Develop DLNA Using Platinum Library/#develop-dlna-using-platinum-library","text":"\u8fd9\u51e0\u5929\u516c\u53f8\u7684\u5e94\u7528(iOS\u7aef)\u4e0a\u8981\u52a0\u4e00\u4e2a dlna \u7684\u529f\u80fd\uff0c\u5c31\u662f\u5c40\u57df\u7f51\u5185\u8bbe\u5907\u6295\u5c4f\u63a7\u5236\u7684\u4e00\u4e2a\u529f\u80fd\uff0c\u5e76\u63d0\u4f9b\u79fb\u52a8\u7aef\u63a7\u5236\u3002\u56e0\u4e3a\u4e09\u65b9\u5e93Platinum\u662f\u4f7f\u7528C++\u5199\u7684\uff0c\u6240\u4ee5\u6211\u88ab\u5206\u914d\u53bb\u505a\u5e93\u7684Objective-C\u5c01\u88c5\u7684\u5de5\u4f5c\u3002\u7b2c\u4e00\u6b21\u63a5\u624b\u8fd9\u79cd\u4e8b\uff0c\u5bf9\u4e00\u4e2a\u975e\u8ba1\u7b97\u673a\u4e13\u4e1a\u7684\u5b66\u751f\u6765\u8bf4\u8fd8\u662f\u86ee\u6709\u6311\u6218\u6027\u7684\u3002\u7ec4\u957f\u8bf4\u8981\u5148\u5199\u4e00\u4e2a\u63a5\u53e3\u8bbe\u8ba1\u6587\u6863\u6765\u63cf\u8ff0\u5c06\u8981\u5c01\u88c5\u7684\u63a5\u53e3\u548c\u8c03\u7528\u65b9\u5f0f\u3002\u53ea\u80fd\u7f51\u4e0a\u67e5\u770b\u5404\u79cd\u8d44\u6599\u55bd\uff01 \u8fd9\u91cc\u662f\u6211\u4e00\u987f\u72c2\u641c\u3001\u770b\u5404\u79cd\u535a\u5ba2\u540e\u641c\u96c6\u5230\u7684\u6709\u7528\u8d44\u6599\uff0c\u5217\u8868\u5982\u4e0b\uff1a \u94fe\u63a5 \u63cf\u8ff0 Open Connectivity Foundation (OCF)\u5b98\u7f51 \u8fd9\u91cc\u6709UPnP\u76f8\u5173\u7684\u6587\u6863\u548c\u5404\u5bb6\u516c\u53f8\u5f00\u53d1\u7684SDK\uff0c\u4f8b\u5982\uff1a Plutinosoft \u5f00\u53d1\u7684 Platinum\u5e93 \u4e5f\u53ef\u4ee5\u4ece\u8fd9\u91cc\u4e86\u987a\u85e4\u6478\u74dc\u627e\u5230 dlna\u5b98\u7f51 \u8fd9\u91cc\u6709\u5bf9dlna\u534f\u8bae\u63cf\u8ff0\u7684\u6587\u6863\u4e0b\u8f7d\uff0c\u53ef\u4ee5\u8bf4\u8981\u5168\u9762\u7684\u5b66\u4e60dlna\uff0c\u8fd9\u91cc\u7684\u6587\u6863\u662f\u4e0d\u53ef\u6216\u7f3a\u7684\uff0c\u5f53\u7136\uff0c\u5b9e\u9645\u4e2d\u6211\u4eec\u4e5f\u6ca1\u6709\u5fc5\u8981\u5b66\u592a\u6df1\uff0c\u4e0d\u8fc7\u77e5\u9053\u8fd9\u4e2a\u8d44\u6e90\uff0c\u5b66\u4e60\u65f6\u5c31\u6709\u5e95\u4e86;-) \u4e00\u4e2a\u5173\u4e8edlan\u4ecb\u7ecd\u7684\u535a\u5ba2 \u4e0a\u9762\u4e24\u4e2a\u7f51\u7ad9\u5c31\u662f\u901a\u8fc7\u9605\u8bfb\u8fd9\u4e2a\u535a\u5ba2\u300aDLNA UPnP\u5f00\u53d1\u7b14\u8bb0\u300b\u7cfb\u5217\u5171\u56db\u7bc7\u6587\u7ae0\u540e\u627e\u5230\u7684\uff0c\u503c\u7684\u9605\u8bfb \u597d\u4e86\uff0c\u6709\u4e86\u4ee5\u4e0a\u7684\u51e0\u4e2a\u8d44\u6e90\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u52a8\u4e86\u3002\u6211\u5de5\u4f5c\u4e2d\u4f7f\u7528\u4e86Platinum\u5e93\u8fdb\u884cdlna\u7684\u5a92\u4f53\u63a7\u5236\u5668( DMC )\u5f00\u53d1,\u6240\u4ee5\u4e5f\u6ca1\u6709\u5bf9dlna\u6709\u592a\u5168\u9762\u7684\u4e86\u89e3\uff0c\u4e00\u5207\u662f\u4ece\u5bf9Platinum\u5e93\u6240\u63d0\u4f9b\u7684\u793a\u4f8b\u7a0b\u5e8f\u548c\u9879\u76eeREADME\u6587\u4ef6\u8fdb\u884c\u7f16\u8bd1\u5e93\u548c\u76f8\u5173\u5f00\u53d1\u5b66\u4e60\u7684\u3002 \u90a3\u4e48\uff0c\u7b2c\u4e00\u6b65\u5c31\u662f\uff0c\u62c9\u4e0b\u9879\u76ee\u8fdb\u884c\u7f16\u8bd1\u548c\u8fd0\u884c\u793a\u4f8b\u4e86\u3002","title":"Develop DLNA Using Platinum Library"},{"location":"tech/Develop DLNA Using Platinum Library/#platinum","text":"\u9996\u5148\uff0c\u4f7f\u7528git\u62c9\u4e0b\u9879\u76ee\u6700\u8fd1\u4e00\u6b21\u7684\u63d0\u4ea4 1 git clone --depth=1 https://github.com/plutinosoft/Platinum.git \u56e0\u4e3aPlatinum\u7684\u7f16\u8bd1\u9700\u8981\u4f9d\u8d56\u4e00\u4e2a\u540d\u4e3a Neptune \u7684C++\u8de8\u5e73\u53f0\u8fd0\u884c\u73af\u5883\uff0c\u5f53\u7136\u8fd9\u4e2a\u9879\u76ee\u91cc\u5df2\u7ecf\u6709\u89e3\u51b3\u65b9\u6cd5\uff0c\u4e0d\u9700\u8981\u6211\u4eec\u53e6\u5916\u4e0b\u8f7d\u6216\u7f16\u8bd1 Neptune \u5e93\uff0c\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7 Carthage \u5de5\u5177\uff0c\u5c06 Neptune \u7684framework\u4e0b\u8f7d\u5230Platinum\u7684\u9879\u76ee\u76ee\u5f55\u4e0b\u3002\u5177\u4f53\u8fc7\u7a0b\u5982\u4e0b\uff1a \u4f60\u8981\u5148\u8fdb\u884cPlatinum\u9879\u76ee\u76ee\u5f55\u4e0b\uff0c\u53d1\u73b0\u5176\u4e2d\u6709\u7740\u540d\u4e3a Cartfile \u6216 Cartfile.resolved \u8fd9\u6837\u7684\u6587\u4ef6\uff0c\u6587\u4ef6\u4e2d\u6307\u660e\u4e86 Carthage \u8fd9\u4e2a\u5de5\u5177\u8f6f\u4ef6\u6240\u8981\u4e0b\u8f7d\u7684framework\u540d\u79f0\u548c\u7248\u672c\uff0c\u5176\u5b9e carthage \u8fd9\u4e2a\u5de5\u5177\u7c7b\u4f3c\u4e8e CocoaPods \u8fd9\u4e2a\u5de5\u5177\u3002\u4e0d\u8fc7\u4f60\u7684Mac\u4e0a\u5f88\u53ef\u80fd\u5e76\u6ca1\u6709\u5b89\u88c5 carthage \uff0c\u6240\u4ee5\u4f60\u5176\u5b9e\u53ef\u4ee5\u901a\u8fc7\u5148\u5728Mac\u4e0a\u5b89\u88c5 homebrew \u8fd9\u4e2a\u5de5\u5177\uff0c\u7136\u540e\u4f7f\u7528 homebrew \u6765\u5b89\u88c5 carghage \u3002\u5982\u4e0b: 1 2 3 4 5 6 7 /usr/bin/ruby -e $(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install) # \u5b89\u88c5homebrew brew install carthage # homebrew \u5b89\u88c5\u6210\u529f\u540e\uff0c\u5b89\u88c5carthage cd Platinum/ # \u8fdb\u5165Platinum\u9879\u76ee\u76ee\u5f55\u4e0b carthage update # \u8fd0\u884ccarthage \u8ba9\u5176\u4e0b\u8f7d Carthfile\u6587\u4ef6\u4e2d\u6307\u5b9a\u7684framework \u5f53\u4ee5\u4e0a\u8fc7\u7a0b\u5b8c\u6210\u540e\uff0c\u4f60\u4f1a\u53d1\u73b0\u5728 Platinum/Carthage \u8fd9\u4e2a\u76ee\u5f55\u4e0b\u9762\uff0c\u5df2\u7ecf\u5b58\u5728 Neptune \u8fd9\u4e2aC++\u8de8\u5e73\u53f0\u8fd0\u884c\u73af\u5883\u7684\u5206\u522b\u9488\u5bf9Mac\u548ciOS\u7684frame\u001cwork\u4e86\uff0c\u4f60\u53ea\u8981\u786e\u4fdd\u4ee5\u4e0a\u7684\u547d\u4ee4\u8fd0\u884c\u6210\u529f\uff0c\u5e76\u6700\u7ec8\u5f97\u5230Neptune\u7684FrameWork\u5c31\u53ef\u4ee5\u7f16\u8bd1Platinum\u7684\u9488\u5bf9iOS\u7684\u9879\u76ee\u548c\u793a\u4f8b\u7a0b\u5e8f\u4e86\u3002 \u4f7f\u7528XCode\u6253\u5f00 /Platinum/Build/Targets/universal-apple-macosx/Platinum.xcodeproj \u9879\u76ee\u6587\u4ef6\uff0c\u7136\u540e\u5206\u522b\u8fd0\u884c\u5404 Target \uff0c\u5c31\u53ef\u4ee5\u751f\u6210\u76f8\u5173\u7684framework\u548c\u793a\u4f8b\u8fd0\u884c\u7a0b\u5e8f\u4e86\u3002","title":"\u7f16\u8bd1Platinum\u5e93"},{"location":"tech/Develop DLNA Using Platinum Library/#framework","text":"\u9009\u62e9 Platinum-iOS \u7f16\u8bd1\u65b9\u6848(Scheme),\u5728\u7f16\u8f91\u65b9\u6848(Edit Scheme...)\u5bf9\u8bdd\u6846,\u8fd0\u884c(Run)\u5206\u7c7b\u4e2d\u7684\u4fe1\u606f(Info)\u9009\u9879\u5361\u4e0b\uff0c\u9009\u62e9\u7f16\u8bd1\u914d\u7f6e(Build Configuration)\u4e3a Release \u3002\u8bbe\u7f6e\u597d\u7f16\u8bd1\u65b9\u6848\u540e\uff0c\u9009\u62e9\u4efb\u4e00\u6a21\u62df\u5668(e.g: iphone SE)\u7f16\u8bd1\u4e00\u6b21\uff0c\u518d\u9009\u62e9\u901a\u7528iOS\u8bbe\u5907(Generic iOS Device)\u7f16\u8bd1\u4e00\u6b21\uff0c\u8fd9\u4e24\u6b21\u7f16\u8bd1\uff0c\u5206\u522b\u5f97\u5230\u5bf9\u5e94\u4e8e i386 x86_64 \u67b6\u6784\u7684\u6a21\u62df\u5668framework\u548c\u5bf9\u5e94\u4e8e\u771f\u673a armv7 arm64 \u67b6\u6784\u7684framework\uff0c\u6211\u4eec\u628a\u8fd9\u4e24\u4e2a\u5bf9\u5e94\u4e8e\u4e0d\u540c\u67b6\u6784\u7684framework\u5408\u5e76\u6210\u4e00\u4e2aframework\u5c31\u5b8c\u6210\u4e86\u540c\u65f6\u6ee1\u8db3\u771f\u673a\u8c03\u8bd5\u548c\u6a21\u62df\u5668\u8c03\u8bd5\u7684framework\u4e86\u3002 \u751f\u6210\u7684\u4e24\u4e2a\u9488\u5bf9\u4e0d\u540c\u67b6\u6784\u7684framework\u6240\u5728\u7684\u76ee\u5f55\u5982\u4e0b\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u53f3\u952e Show in Finder \u7684\u65b9\u5f0f\u627e\u5230\u5b83\u4eec\u7684\u4f4d\u7f6e, \u8fd9\u4e24\u4e2a\u76ee\u5f55\u8def\u5f84\u52a8\u6001\u53d8\u5316\uff0c\u4e0d\u5b8c\u5168\u4e0e\u6211\u7684\u4e00\u81f4\u3002 1 2 3 4 5 #\u8fd9\u4e2a\u76ee\u5f55\u5bf9\u5e94\u4e8e\u771f\u673a\u7684 armv7 arm64 \u67b6\u6784 /Users/JokerAtBaoFeng/Library/Developer/Xcode/DerivedData/Platinum-bawuiqxkhqixgybjjufqgvmduavh/Build/Products/Release-iphoneos #\u8fd9\u4e2a\u76ee\u5f55\u5bf9\u5e94\u4e8e\u6a21\u62df\u5668\u7684 i386 x86_64 \u67b6\u6784 /Users/JokerAtBaoFeng/Library/Developer/Xcode/DerivedData/Platinum-bawuiqxkhqixgybjjufqgvmduavh/Build/Products/Release-iphonesimulator \u4f60\u53ef\u4ee5\u5206\u522b\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u67e5\u770bframework\u4e2d\u7684\u6587\u4ef6\u652f\u6301\u7684\u67b6\u6784\uff0c\u5982\u4e0b\uff1a 1 lipo -info Release-iphoneos/Platinum.framework/Platinum \u8f93\u51fa\uff1a Architectures in the fat file: Release-iphoneos/Platinum.framework/Platinum are: armv7 arm64 1 lipo -info Release-iphonesimulator/Platinum.framework/Platinum \u8f93\u51fa\uff1a Architectures in the fat file: Release-iphonesimulator/Platinum.framework/Platinum are: i386 x86_64 \u5229\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5c06\u4e24\u4e2aframework\u5408\u5e76, \u5e76\u66ff\u6362 Release-iphoneos/Platinum.framework/Platinum \u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5c31\u662f\u5408\u5e76\u4e4b\u540e\u7684\u6587\u4ef6\uff1a 1 lipo -create Release-iphoneos/Platinum.framework/Platinum Release-iphonesimulator/Platinum.framework/Platinum -output Release-iphoneos/Platinum.framework/Platinum \u8fd9\u65f6\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 Release-iphoneos/Platinum.framework \u5bfc\u5165\u4f60\u8981\u7528\u5230\u7684\u9879\u76ee\u4e2d\u53bb\u4e86\u3002\u54e6\uff0c\u5bf9\u4e86\uff0c\u7531\u4e8ePlatinum.framework\u8fd0\u884c\u9700\u8981\u4f9d\u8d56 Neptune.framework \uff0c\u6240\u4ee5\u5bfc\u5165\u81ea\u5df1\u7684\u9879\u76ee\u65f6\uff0c\u8bb0\u5f97\u628acarthage\u4e0b\u8f7d\u7684 Neptune.framework \u4e00\u5e76\u5bfc\u5165\u3002 \u518d\u6b21\u67e5\u770b\u5408\u5e76\u540e\u7684framework\u6240\u652f\u6301\u7684\u67b6\u6784\uff1a 1 lipo -info Release-iphoneos/Platinum.framework/Platinum \u8f93\u51fa\uff1a Architectures in the fat file: Release-iphoneos/Platinum.framework/Platinum are: i386 x86_64 armv7 arm64 \u53ef\u4ee5\u770b\u5230\uff0c\u5b83\u5df2\u7ecf\u540c\u65f6\u652f\u6301 i386 x86_64 armv7 arm64 \u4e86\u3002","title":"\u751f\u6210\u540c\u65f6\u652f\u6301\u771f\u673a\u548c\u6a21\u62df\u673a\u7684framework\u52a8\u6001\u94fe\u63a5\u5e93"},{"location":"tech/Develop DLNA Using Platinum Library/#platinumframeworkneptuneframework","text":"\u4f60\u53ef\u4ee5\u76f4\u63a5\u628a\u8fd9\u4e24\u4e2aframework\u6587\u4ef6\u76f4\u63a5\u62d6\u5165\u9879\u76ee\u4e2d\uff0c\u5e76\u5728\u63d0\u793a\u65f6\u9009\u62e9 Copy Items if needed \uff0c\u7136\u540e\u70b9\u51fbfinished\u5b8c\u6210\u5bfc\u5165\u3002 \u7136\u540e\u5230\u9879\u76ee\u5bf9\u5e94Target\u4e0b\u7684\u001d Build Phases | Link Binary With Libraries \u4e0b\u786e\u4fdd Platinum \u548c Neptune \u4e24\u4e2aframework\u90fd\u5728\u5217\u8868\u4e2d\u3002 \u7531\u4e8eiOS\u65b0\u7248\u672c\u652f\u6301\u4e86\u52a8\u6001\u94fe\u63a5\u5e93\uff0c\u800c\u6211\u4eec\u4e0a\u8ff0\u8fc7\u7a0b\u9ed8\u8ba4\u751f\u6210\u7684\u4e5f\u662f\u52a8\u6001\u7684framework, \u6240\u4ee5\u8fd8\u9700\u8981\u5728Target\u7684 General | Embedded Binaries \u4e2d\u540c\u6837\u7684\u6dfb\u52a0\u4e0a\u8ff0\u7684\u4e24\u4e2aframework,\u4ee5\u4f7f\u6211\u4eec\u5728\u5b89\u88c5\u5e94\u7528\u7684\u540c\u65f6\uff0c\u4e5f\u5c06\u5bf9\u5e94\u7684\u52a8\u6001\u5e93\u62f7\u8d1d\u5230\u673a\u5668\u4e2d\u53bb\uff0c\u5426\u5219\u4f1a\u7531\u4e8e\u673a\u5668\u4e0a\u7f3a\u5c11\u5bf9\u5e94framework\u800c\u62a5\u9519\u3002 \u5728\u9879\u76ee\u4e2d\u4f7f\u7528framework\u7684\u5934\u6587\u4ef6\uff0c\u9700\u8981\u4f7f\u7528\u5c16\u62ec\u53f7 header.h \u800c\u975e\u53cc\u5f15\u53f7 header.h \u3002 \u8fd9\u6837\uff0c\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7f16\u8bd1\u597d\u7684framework\u4e86\u3002","title":"Platinum.framework\u548cNeptune.framework\u7684\u4f7f\u7528"},{"location":"tech/Develop DLNA Using Platinum Library/#_1","text":"\u9996\u5148\u662f\u5bf9\u4e09\u65b9\u5e93\u7684\u4f7f\u7528\uff0c\u6765\u7406\u89e3\u63a5\u53e3\u8c03\u7528\u65b9\u5f0f\u3002\u8fd8\u597d\u5e93\u91cc\u63d0\u4f9b\u4e86\u51e0\u4e2a\u4f8b\u5b50\u7a0b\u5e8f\uff0c\u5148\u6162\u6162\u770b\u4e86\u4e09\u5929\u3002\u79fb\u690d\u4e86\u5176\u4e2d\u4e00\u4e2a\u5173\u4e8e\u5a92\u4f53\u63a7\u5236\u5668\u7684\u793a\u4f8b\u5230\u9879\u76ee\u4e2d\uff0c\u4ec5\u4ec5\u5b9e\u73b0\u4e86\u67e5\u627e\u9644\u8fd1\u8bbe\u5907\u7684\u529f\u80fd\u3002\u4f46\u8fd9\u662f\u4e2a\u597d\u7684\u5f00\u5934\uff0c\u5bf9\u6211\u6765\u8bf4\u6709\u76f8\u5f53\u7684\u9f13\u52b1\u4f5c\u7528\u3002\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4e3b\u8981\u662f\u53c2\u7167 MicroMediaController \u7684\u4ee3\u7801\u8fdb\u884c\u7684\u3002 \u6211\u53d1\u73b0\u5bf9\u4e8e\u4f18\u8d28C++\u5e93\u7684\u5b66\u4e60\uff0c\u771f\u662f\u4e00\u79cd\u8d4f\u5fc3\u60a6\u76ee\u7684\u4f53\u9a8c\uff0c\u5f53\u7136\u770b\u61c2C++\u7684\u7ec6\u8282\u8fd8\u662f\u76f8\u5f53\u75db\u82e6\u7684\u3002 \u8fd9\u4e2aPlatinum\u5e93\u5e94\u8be5\u662f\u9075\u5faadlna\u534f\u8bae\u7f16\u5199\u7684\uff0c\u76f8\u5173\u7684\u6587\u6863\u5f88\u5c11\uff0c\u9879\u76ee\u5c5e\u4e8e\u81ea\u6ce8\u91ca\u578b\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca\u5c31\u662f\u6587\u6863\u7684\u5927\u90e8\u5206\uff0c\u4e0d\u8fc7\u8981\u5b66\u4e60\u8fd9\u4e2a\u5e93\uff0cdlan\u534f\u8bae\u8fd8\u662f\u6709\u5fc5\u8981\u8be6\u7ec6\u770b\u770b\u7684\uff0c\u5426\u5219\u5373\u4f7f\u901a\u8fc7\u4fee\u6539\u7a0b\u5e8f\uff0c\u8fbe\u5230\u4e86\u6700\u521d\u8bbe\u5b9a\u7684\u529f\u80fd\u76ee\u6807\uff0c\u60f3\u8981\u6269\u5c55\u4e00\u4e9b\u529f\u80fd\uff0c\u5374\u662f\u4f1a\u8fb9\u53c2\u6570\u90fd\u4e0d\u4f1a\u4f20\u9012\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u53c2\u6570\u662f\u5728\u534f\u8bae\u662f\u89c4\u5b9a\u7684\u3002 \u5728\u63a5\u53e3\u5c01\u95ed\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53d1\u73b0\u53c2\u8003\u522b\u4eba\u7684\u5c01\u95ed\u65b9\u6cd5\u5b9e\u5728\u80fd\u591f\u5b66\u4e60\u5f88\u591a\uff0c\u6bd4\u4f8b\u6211\u5728\u7528Objective-C\u5c01C++\u63a5\u53e3\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5c31\u53c2\u8003\u4e86Platinum\u9879\u76ee\u76ee\u5f55\u4e0b Platinum/Source/Extras/ObjectiveC/ \u5bf9 MediaServer \u7684\u5c01\u88c5\u65b9\u6cd5\u3002 \u672a\u5b8c\uff0c\u5f85\u7eed...","title":"\u5bf9\u5e93\u7684\u719f\u6089\u8fc7\u7a0b"},{"location":"tech/Develop DLNA Using Platinum Library/#35issue1","text":"\u5728\u8bc6\u522b\u5c0f\u7c73\u76d2\u5b50\u7684\u65f6\u5019\uff0c\u603b\u662f\u8bc6\u522b\u4e0d\u5230\uff0c\u4fee\u6539\u4e86Platinum\u4e2d\u7684\u90e8\u5206\u4ee3\u7801,\u5e76\u91cd\u65b0\u7f16\u8bd1\u540e\u5bfc\u5165\u9879\u76ee\uff0c\u5f97\u4ee5\u6b63\u5e38\u8bc6\u522b\uff1a","title":"#issue1"},{"location":"tech/Develop DLNA Using Platinum Library/#_2","text":"PltCtrlPoint.cpp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 class PLT_DeviceReadyIterator { public : PLT_DeviceReadyIterator () {} NPT_Result operator ()( PLT_DeviceDataReference device ) const { NPT_Result res = device - m_Services . ApplyUntil ( PLT_ServiceReadyIterator (), NPT_UntilResultNotEquals ( NPT_SUCCESS )); if ( NPT_FAILED ( res )) return res ; res = device - m_EmbeddedDevices . ApplyUntil ( PLT_DeviceReadyIterator (), NPT_UntilResultNotEquals ( NPT_SUCCESS )); if ( NPT_FAILED ( res )) return res ; // a device must have at least one service or embedded device // otherwise it s not ready if ( device - m_Services . GetItemCount () == 0 device - m_EmbeddedDevices . GetItemCount () == 0 ) { return NPT_FAILURE ; } return NPT_SUCCESS ; } };","title":"\u4fee\u6539\u524d"},{"location":"tech/Develop DLNA Using Platinum Library/#_3","text":"PltCtrlPoint.cpp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 class PLT_DeviceReadyIterator { public : PLT_DeviceReadyIterator () {} NPT_Result operator ()( PLT_DeviceDataReference device ) const { NPT_Result res = device - m_Services . ApplyUntil ( PLT_ServiceReadyIterator (), NPT_UntilResultNotEquals ( NPT_SUCCESS )); // if (NPT_FAILED(res)) return res; res = device - m_EmbeddedDevices . ApplyUntil ( PLT_DeviceReadyIterator (), NPT_UntilResultNotEquals ( NPT_SUCCESS )); // if (NPT_FAILED(res)) return res; if ( NPT_FAILED ( res ) NPT_FAILED ( res )) return res ; // a device must have at least one service or embedded device // otherwise it s not ready if ( device - m_Services . GetItemCount () == 0 device - m_EmbeddedDevices . GetItemCount () == 0 ) { return NPT_FAILURE ; } return NPT_SUCCESS ; } };","title":"\u4fee\u6539\u540e"},{"location":"tech/Develop DLNA Using Platinum Library/#_4","text":"\u6211\u53d1\u73b0\u5bf9\u4e8e\u641c\u7d22\u5230\u7684\u5c0f\u7c73\u76d2\u5b50\uff0c\u4ee3\u7801\u8fc7\u4e0d\u4e86\u4e0b\u9762\u8fd9\u4e2a\u51fd\u6570\u7684\u7b2c 53 \u884c\uff1a PltCtrlPoint.cpp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 NPT_Result PLT_CtrlPoint :: ProcessGetSCPDResponse ( NPT_Result res , const NPT_HttpRequest request , const NPT_HttpRequestContext context , NPT_HttpResponse * response , PLT_DeviceDataReference device ) { NPT_COMPILER_UNUSED ( context ); NPT_AutoLock lock ( m_Lock ); PLT_DeviceReadyIterator device_tester ; NPT_String scpd ; PLT_DeviceDataReference root_device ; PLT_Service * service ; NPT_String prefix = NPT_String :: Format ( PLT_CtrlPoint::ProcessGetSCPDResponse for a service of device \\ %s \\ @ % s ( result = % d , status = % d ) , ( const char * ) device - GetFriendlyName (), ( const char * ) request . GetUrl (). ToString (), res , response ? response - GetStatusCode () : 0 ); // verify response was ok NPT_CHECK_LABEL_FATAL ( res , bad_response ); NPT_CHECK_POINTER_LABEL_FATAL ( response , bad_response ); PLT_LOG_HTTP_RESPONSE ( NPT_LOG_LEVEL_FINER , prefix , response ); // make sure root device hasn t disappeared NPT_CHECK_LABEL_WARNING ( FindDevice ( device - GetUUID (), root_device , true ), bad_response ); res = device - FindServiceBySCPDURL ( request . GetUrl (). ToRequestString (), service ); NPT_CHECK_LABEL_SEVERE ( res , bad_response ); // get response body res = PLT_HttpHelper :: GetBody ( * response , scpd ); NPT_CHECK_LABEL_FATAL ( res , bad_response ); // DIAL support if ( root_device - GetType (). Compare ( urn:dial-multiscreen-org:device:dial:1 ) == 0 ) { AddDevice ( root_device ); return NPT_SUCCESS ; } // set the service scpd res = service - SetSCPDXML ( scpd ); NPT_CHECK_LABEL_SEVERE ( res , bad_response ); // if root device is ready, notify listeners about it and embedded devices if ( NPT_SUCCEEDED ( device_tester ( root_device ))) { AddDevice ( root_device ); //\u7b2c53\u884c } return NPT_SUCCESS ; bad_response : NPT_LOG_SEVERE_2 ( Bad SCPD response for device \\ %s \\ :%s , ( const char * ) device - GetFriendlyName (), ( const char * ) scpd ); if ( ! root_device . IsNull ()) RemoveDevice ( root_device ); return res ; }","title":"\u4fee\u6539\u539f\u56e0"},{"location":"tech/Develop DLNA Using Platinum Library/#35issue2","text":"\u4e2a\u4eba\u53d1\u73b0\u5c0f\u7c73\u76d2\u5b50\u5bf9\u4e8edlan\u534f\u8bae\u5b9e\u73b0\u90e8\u5206\u7684\u9759\u97f3\u63a7\u5236\u547d\u4ee4\u4f3c\u4e4e\u6709\u4e9b\u51fa\u5165\uff0c\u6211\u4f7f\u7528\u793a\u4f8b\u7a0b\u5e8f\u53d1\u9001\u9759\u97f3\u547d\u4ee4\u5230\u5c0f\u7c73\u76d2\u5b50\uff0c\u53d1\u73b0\u53ea\u80fd\u4f7f\u8bbe\u5907\u9759\u97f3\uff0c\u5374\u4e0d\u80fd\u4f7f\u8bbe\u5907\u6062\u590d\u58f0\u97f3\uff0c\u8fd9\u4e2a\u95ee\u9898\u6709\u5f85\u8fdb\u4e00\u6b65\u786e\u8ba4\u3002","title":"#issue2"},{"location":"tech/FFmpeg and SDL tutorial 1/","text":"FFmpeg and SDL tutorial 1 \u600e\u6837\u7528\u4e0d\u52301000\u884c\u4ee3\u7801\u5199\u4e00\u4e2a\u89c6\u9891\u64ad\u653e\u5668 FFmpeg\u662f\u521b\u5efa\u89c6\u9891\u5e94\u7528\u548c\u901a\u7528\u7ec4\u4ef6\u7684\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u5e93\u3002FFmpeg\u5e93\u5c06\u89c6\u9891\u5904\u7406\u76f8\u5173\u7684\u89e3\u7801\u3001\u7f16\u7801\u3001\u88c5\u5305\u3001\u62c6\u5305\u7b49\u590d\u6742\u64cd\u4f5c\u90fd\u56ca\u62ec\u5728\u5176\u4e2d\uff0c\u8fd9\u6837\u6781\u5927\u7684\u7b80\u5316\u4e86\u5a92\u4f53\u5e94\u7528\u7684\u7f16\u5199\u3002\u5b83\u4f7f\u7528C\u8bed\u8a00\u5b9e\u73b0\uff0c\u5177\u6709\u7b80\u5355\u3001\u5feb\u901f\u3001\u53ef\u4ee5\u7f16\u89e3\u7801\u51e0\u4e4e\u6240\u6709\u5f53\u524d\u6d41\u884c\u7684\u89c6\u9891\u683c\u5f0f\u3002 \u552f\u4e00\u7684\u4e0d\u8db3\u5c31\u662f\u76f8\u5173\u7684\u6587\u6863\u4e0d\u662f\u5f88\u5b8c\u5584\uff0c\u5b66\u4e60\u8d77\u6765\u6bd4\u8f83\u8d39\u52b2\u3002\u8fd9\u4e2a\u7b80\u5355\u7684\u6559\u7a0b\u5c31\u662f\u6211\u5728\u5b66\u4e60FFmpeg\u7684\u65f6\u5019\uff0c\u53c2\u8003 \u5b98\u7f51\u63d0\u4f9b\u7684\u4e00\u5957\u6559\u7a0b \uff0c\u8bb0\u5f55\u4e00\u4e0b\u6211\u7684\u6574\u4e2a\u5b9e\u8df5\u8fc7\u7a0b\uff0c\u56e0\u4e3aFFmpeg\u4e5f\u5728\u4e0d\u65ad\u7684\u53d1\u5c55\uff0c\u8fd9\u671f\u95f4\uff0c\u4f1a\u6709\u4e00\u4e9bAPI\u540d\u79f0\u548c\u8c03\u7528\u65b9\u5f0f\u7684\u4fee\u6539\uff0c\u53ef\u80fd\u4e0e\u539f\u6765\u7684\u6559\u7a0b\u6240\u5217\u51fa\u7684\u4ee3\u7801\u4e0d\u4e00\u81f4\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u8f83\u65b0\u7248\u672c\u7684FFmpeg\uff0c\u53ef\u80fd\u4f1a\u6709\u7f16\u8bd1\u4e0d\u901a\u8fc7\u7684\u65f6\u5019\uff0c\u6240\u4ee5\uff0c\u5728\u6211\u5b9e\u8df5\u7684\u65f6\u5019\uff0c\u4e5f\u4f1a\u9488\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ea\u628a\u6211\u6539\u5199\u540e\u5e76\u4ee5\u5bf9\u5e94\u7248\u672c\u7f16\u8bd1\u901a\u8fc7\u7684\u4ee3\u7801\u8d34\u51fa\u6765\uff0c\u4ee5\u4f9b\u5927\u5bb6\u53c2\u8003\uff0c\u4e0d\u8fc7\u66f4\u4e3b\u8981\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u52a0\u6df1\u6211\u5bf9FFmpeg\u7684\u7406\u89e3\u3002 \u5f53\u8fd9\u4e2a\u6559\u7a0b\u5b66\u5b8c\u4e4b\u540e\uff0c\u4f60\u5c31\u4f1a\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u89c6\u9891\u64ad\u653e\u5668\u53ef\u4ee5\u4f7f\u7528\u4e86 ;-) \u8fd9\u4e2a\u89c6\u9891\u64ad\u653e\u5668\u4f7f\u7528SDL\u8f93\u51fa\u5a92\u4f53\u6587\u4ef6\u7684\u97f3\u9891\u548c\u89c6\u9891\u3002SDL\u662f\u9488\u5bf9MPEG\u64ad\u653e\u8f6f\u4ef6\u3001\u6a21\u62df\u5668\u6216\u89c6\u9891\u6e38\u620f\u7684\u4f18\u79c0\u8de8\u5e73\u53f0\u591a\u5a92\u4f53\u5e93\u3002\u4f60\u9700\u8981\u5b89\u88c5SDL\u5f00\u53d1\u5e93\u6765\u5b66\u4e60\u672c\u6559\u7a0b\u3002 \u8fd9\u4e2a\u6559\u7a0b\u9700\u8981\u8bfb\u8005\u6709C\u8bed\u8a00\u5f00\u53d1\u7ecf\u9a8c\uff0c\u4f60\u9700\u8981\u77e5\u9053\u8bf8\u5982\u961f\u5217\u3001\u62c6\u5305\u3001\u6ce2\u5f62\u4ee5\u53ca\u4e00\u4e9b\u591a\u5a92\u4f53\u76f8\u5173\u7684\u57fa\u672c\u672f\u8bed\uff0c\u672c\u6559\u7a0b\u8fdb\u884c\u4e2d\u4e5f\u4f1a\u5bf9\u76f8\u5173\u7684\u6982\u5ff5\u4f5c\u4e00\u4e9b\u89e3\u91ca\u3002","title":"FFmpeg and SDL tutorial 1"},{"location":"tech/FFmpeg and SDL tutorial 1/#ffmpeg-and-sdl-tutorial-1","text":"","title":"FFmpeg and SDL tutorial 1"},{"location":"tech/FFmpeg and SDL tutorial 1/#1000","text":"FFmpeg\u662f\u521b\u5efa\u89c6\u9891\u5e94\u7528\u548c\u901a\u7528\u7ec4\u4ef6\u7684\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u5e93\u3002FFmpeg\u5e93\u5c06\u89c6\u9891\u5904\u7406\u76f8\u5173\u7684\u89e3\u7801\u3001\u7f16\u7801\u3001\u88c5\u5305\u3001\u62c6\u5305\u7b49\u590d\u6742\u64cd\u4f5c\u90fd\u56ca\u62ec\u5728\u5176\u4e2d\uff0c\u8fd9\u6837\u6781\u5927\u7684\u7b80\u5316\u4e86\u5a92\u4f53\u5e94\u7528\u7684\u7f16\u5199\u3002\u5b83\u4f7f\u7528C\u8bed\u8a00\u5b9e\u73b0\uff0c\u5177\u6709\u7b80\u5355\u3001\u5feb\u901f\u3001\u53ef\u4ee5\u7f16\u89e3\u7801\u51e0\u4e4e\u6240\u6709\u5f53\u524d\u6d41\u884c\u7684\u89c6\u9891\u683c\u5f0f\u3002 \u552f\u4e00\u7684\u4e0d\u8db3\u5c31\u662f\u76f8\u5173\u7684\u6587\u6863\u4e0d\u662f\u5f88\u5b8c\u5584\uff0c\u5b66\u4e60\u8d77\u6765\u6bd4\u8f83\u8d39\u52b2\u3002\u8fd9\u4e2a\u7b80\u5355\u7684\u6559\u7a0b\u5c31\u662f\u6211\u5728\u5b66\u4e60FFmpeg\u7684\u65f6\u5019\uff0c\u53c2\u8003 \u5b98\u7f51\u63d0\u4f9b\u7684\u4e00\u5957\u6559\u7a0b \uff0c\u8bb0\u5f55\u4e00\u4e0b\u6211\u7684\u6574\u4e2a\u5b9e\u8df5\u8fc7\u7a0b\uff0c\u56e0\u4e3aFFmpeg\u4e5f\u5728\u4e0d\u65ad\u7684\u53d1\u5c55\uff0c\u8fd9\u671f\u95f4\uff0c\u4f1a\u6709\u4e00\u4e9bAPI\u540d\u79f0\u548c\u8c03\u7528\u65b9\u5f0f\u7684\u4fee\u6539\uff0c\u53ef\u80fd\u4e0e\u539f\u6765\u7684\u6559\u7a0b\u6240\u5217\u51fa\u7684\u4ee3\u7801\u4e0d\u4e00\u81f4\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u8f83\u65b0\u7248\u672c\u7684FFmpeg\uff0c\u53ef\u80fd\u4f1a\u6709\u7f16\u8bd1\u4e0d\u901a\u8fc7\u7684\u65f6\u5019\uff0c\u6240\u4ee5\uff0c\u5728\u6211\u5b9e\u8df5\u7684\u65f6\u5019\uff0c\u4e5f\u4f1a\u9488\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ea\u628a\u6211\u6539\u5199\u540e\u5e76\u4ee5\u5bf9\u5e94\u7248\u672c\u7f16\u8bd1\u901a\u8fc7\u7684\u4ee3\u7801\u8d34\u51fa\u6765\uff0c\u4ee5\u4f9b\u5927\u5bb6\u53c2\u8003\uff0c\u4e0d\u8fc7\u66f4\u4e3b\u8981\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u52a0\u6df1\u6211\u5bf9FFmpeg\u7684\u7406\u89e3\u3002 \u5f53\u8fd9\u4e2a\u6559\u7a0b\u5b66\u5b8c\u4e4b\u540e\uff0c\u4f60\u5c31\u4f1a\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u89c6\u9891\u64ad\u653e\u5668\u53ef\u4ee5\u4f7f\u7528\u4e86 ;-) \u8fd9\u4e2a\u89c6\u9891\u64ad\u653e\u5668\u4f7f\u7528SDL\u8f93\u51fa\u5a92\u4f53\u6587\u4ef6\u7684\u97f3\u9891\u548c\u89c6\u9891\u3002SDL\u662f\u9488\u5bf9MPEG\u64ad\u653e\u8f6f\u4ef6\u3001\u6a21\u62df\u5668\u6216\u89c6\u9891\u6e38\u620f\u7684\u4f18\u79c0\u8de8\u5e73\u53f0\u591a\u5a92\u4f53\u5e93\u3002\u4f60\u9700\u8981\u5b89\u88c5SDL\u5f00\u53d1\u5e93\u6765\u5b66\u4e60\u672c\u6559\u7a0b\u3002 \u8fd9\u4e2a\u6559\u7a0b\u9700\u8981\u8bfb\u8005\u6709C\u8bed\u8a00\u5f00\u53d1\u7ecf\u9a8c\uff0c\u4f60\u9700\u8981\u77e5\u9053\u8bf8\u5982\u961f\u5217\u3001\u62c6\u5305\u3001\u6ce2\u5f62\u4ee5\u53ca\u4e00\u4e9b\u591a\u5a92\u4f53\u76f8\u5173\u7684\u57fa\u672c\u672f\u8bed\uff0c\u672c\u6559\u7a0b\u8fdb\u884c\u4e2d\u4e5f\u4f1a\u5bf9\u76f8\u5173\u7684\u6982\u5ff5\u4f5c\u4e00\u4e9b\u89e3\u91ca\u3002","title":"\u600e\u6837\u7528\u4e0d\u52301000\u884c\u4ee3\u7801\u5199\u4e00\u4e2a\u89c6\u9891\u64ad\u653e\u5668"},{"location":"tech/FFmpeg compiled on MacOS/","text":"FFmpeg compiled on MacOS \u6700\u8fd1\u597d\u50cf\u5bf9\u97f3\u89c6\u9891\u7f16\u89e3\u7801\u6765\u4e86\u5174\u8da3\uff0c\u5c31\u6765\u5b66\u4e60\u4e00\u6ce2\u5427\u3002\u5728 FFmpeg\u5b98\u7f51 \u4e0a\u627e\u5230\u4e00\u7bc7\u5165\u95e8\u6559\u7a0b An FFmpeg and SDL Tutorial \uff0c\u6253\u7b97\u5148\u7167\u7740\u8fd9\u4e2a\u5b66\u4e60\uff0c\u5b8c\u6210\u4e00\u4e2a\u7b80\u5355\u7684\u89c6\u9891\u64ad\u653e\u5668\uff0c\u5e76\u5728\u5b66\u4e60\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5c06\u5b9e\u8df5\u7684\u4e00\u4e9b\u7ec6\u8282\u6574\u7406\u6210\u535a\u5ba2\uff0c\u987a\u4fbf\u57f9\u517b\u4e00\u4e0b\u6280\u672f\u60c5\u6000;-) \u90a3\u4e48\u9996\u5148\u5c31\u8981\u642d\u5efa\u5f00\u53d1\u73af\u5883\u4e86\uff0c\u9700\u8981\u7f16\u8bd1FFmpeg\u6e90\u7801\u3002\u672c\u6587\u53c2\u7167FFmpeg \u5b98\u65b9Wiki \u63d0\u4f9b\u7684\u7f16\u8bd1\u6587\u6863\u8fdb\u884c\u3002\u56e0\u4e3a\u662f\u5728Mac\u4e0a\u8fdb\u884c\uff0c\u6240\u4ee5\u53c2\u7167 \u9488\u5bf9MacOS\u7684\u6559\u7a0b \u7684\u8bf4\u660e\u4f7f\u7528 Homebrew \u8fdb\u884c\u81ea\u52a8\u7f16\u8bd1\u5b89\u88c5. \u53ef\u4ee5\u4f7f\u7528 brew info ffmpeg \u6765\u67e5\u770b\u7528\u54ea\u4e9b\u76f8\u5173\u7684\u9009\u9879\u3002 \u53ef\u4ee5\u4f7f\u7528 sudo chown -R whoami dir \u6765\u83b7\u5f97\u4e00\u4e9b\u76ee\u5f55\u7684\u8bbf\u95ee\u6743\u9650 \u6211\u4eec\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u5feb\u901f\u5b89\u88c5: 1 brew install ffmpeg --with-fdk-aac --with-sdl --with-freetype --with-libass --with-libquvi --with-libvorbis --with-libvpx --with-opus --with-x265 \u5b89\u88c5\u540e\u53ef\u80fd\u63d0\u793a\u4fe1\u606f\uff1a Warning : ffmpeg - 3.1 . 4 already installed , it s just not linked \uff0c\u8fd9\u8bf4\u660e\u8f6f\u4ef6\u5b89\u88c5\u4e86\uff0c\u4f46\u8fd8\u6ca1\u6709\u4e3a\u5176\u521b\u5efa\u76ee\u5f55\u94fe\u63a5\uff0c\u6240\u4ee5\u8f93\u5165\u547d\u4ee4\uff0c\u7cfb\u7edf\u53ef\u80fd\u4f1a\u641c\u7d22\u4e0d\u5230\u3002 \u901a\u8fc7\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u91cd\u5efabrew\u5bf9\u6240\u5b89\u88c5\u8f6f\u4ef6\u7684\u94fe\u63a5\uff1a brew link --overwrite ffmpeg \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u6d4b\u8bd5\u662f\u5426\u6210\u529f\uff1a 1 ffplay -f lavfi -i testsrc","title":"FFmpeg compiled on MacOS"},{"location":"tech/FFmpeg compiled on MacOS/#ffmpeg-compiled-on-macos","text":"\u6700\u8fd1\u597d\u50cf\u5bf9\u97f3\u89c6\u9891\u7f16\u89e3\u7801\u6765\u4e86\u5174\u8da3\uff0c\u5c31\u6765\u5b66\u4e60\u4e00\u6ce2\u5427\u3002\u5728 FFmpeg\u5b98\u7f51 \u4e0a\u627e\u5230\u4e00\u7bc7\u5165\u95e8\u6559\u7a0b An FFmpeg and SDL Tutorial \uff0c\u6253\u7b97\u5148\u7167\u7740\u8fd9\u4e2a\u5b66\u4e60\uff0c\u5b8c\u6210\u4e00\u4e2a\u7b80\u5355\u7684\u89c6\u9891\u64ad\u653e\u5668\uff0c\u5e76\u5728\u5b66\u4e60\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5c06\u5b9e\u8df5\u7684\u4e00\u4e9b\u7ec6\u8282\u6574\u7406\u6210\u535a\u5ba2\uff0c\u987a\u4fbf\u57f9\u517b\u4e00\u4e0b\u6280\u672f\u60c5\u6000;-) \u90a3\u4e48\u9996\u5148\u5c31\u8981\u642d\u5efa\u5f00\u53d1\u73af\u5883\u4e86\uff0c\u9700\u8981\u7f16\u8bd1FFmpeg\u6e90\u7801\u3002\u672c\u6587\u53c2\u7167FFmpeg \u5b98\u65b9Wiki \u63d0\u4f9b\u7684\u7f16\u8bd1\u6587\u6863\u8fdb\u884c\u3002\u56e0\u4e3a\u662f\u5728Mac\u4e0a\u8fdb\u884c\uff0c\u6240\u4ee5\u53c2\u7167 \u9488\u5bf9MacOS\u7684\u6559\u7a0b \u7684\u8bf4\u660e\u4f7f\u7528 Homebrew \u8fdb\u884c\u81ea\u52a8\u7f16\u8bd1\u5b89\u88c5. \u53ef\u4ee5\u4f7f\u7528 brew info ffmpeg \u6765\u67e5\u770b\u7528\u54ea\u4e9b\u76f8\u5173\u7684\u9009\u9879\u3002 \u53ef\u4ee5\u4f7f\u7528 sudo chown -R whoami dir \u6765\u83b7\u5f97\u4e00\u4e9b\u76ee\u5f55\u7684\u8bbf\u95ee\u6743\u9650 \u6211\u4eec\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u5feb\u901f\u5b89\u88c5: 1 brew install ffmpeg --with-fdk-aac --with-sdl --with-freetype --with-libass --with-libquvi --with-libvorbis --with-libvpx --with-opus --with-x265 \u5b89\u88c5\u540e\u53ef\u80fd\u63d0\u793a\u4fe1\u606f\uff1a Warning : ffmpeg - 3.1 . 4 already installed , it s just not linked \uff0c\u8fd9\u8bf4\u660e\u8f6f\u4ef6\u5b89\u88c5\u4e86\uff0c\u4f46\u8fd8\u6ca1\u6709\u4e3a\u5176\u521b\u5efa\u76ee\u5f55\u94fe\u63a5\uff0c\u6240\u4ee5\u8f93\u5165\u547d\u4ee4\uff0c\u7cfb\u7edf\u53ef\u80fd\u4f1a\u641c\u7d22\u4e0d\u5230\u3002 \u901a\u8fc7\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u91cd\u5efabrew\u5bf9\u6240\u5b89\u88c5\u8f6f\u4ef6\u7684\u94fe\u63a5\uff1a brew link --overwrite ffmpeg \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u6d4b\u8bd5\u662f\u5426\u6210\u529f\uff1a 1 ffplay -f lavfi -i testsrc","title":"FFmpeg compiled on MacOS"},{"location":"tech/FFmpeg version 3.1.4 example code/","text":"FFmpeg version 3.1.4 example code \u8fd9\u6bb5\u65f6\u95f4\u5b66\u4e60FFmpeg\u7f16\u89e3\u7801\uff0c\u7531\u4e8e\u5b89\u88c5\u7684\u662f\u5f53\u524d\u6700\u65b0\u7248\u7684\u5e93( 3.1.4 )\uff0c\u6309\u7740\u5b98\u7f51\u7ed9\u7684\u793a\u4f8b\u7a0b\u5e8f\u5b66\u4e60\uff0c\u5374\u603b\u662f\u53d1\u73b0\u7f16\u8bd1\u65f6\u63d0\u793aAPI\u88ab\u5f03\u7528\u7684\u95ee\u9898\uff0c\u5bfc\u81f4\u5b66\u4e60\u7684\u70ed\u60c5\u53d7\u5230\u6253\u51fb\u3002\u6240\u4ee5\u5c31\u60f3\u7740\u5728\u81ea\u5df1\u6539\u5199\u5e76\u4f7f\u7528\u6700\u65b0API\u8c03\u7528\u65f6\uff0c\u5c3d\u91cf\u4e5f\u7ed9\u5b98\u7f51\u7684\u793a\u4f8b\u4ee3\u7801\u66f4\u65b0\u4e00\u4e0b\uff0c\u653e\u5728\u81ea\u5df1\u7684\u535a\u5ba2\u4e0a\uff0c\u6216\u8005\u4e4b\u540e\u6709\u673a\u4f1a\u7684\u8bdd\uff0c\u63a8\u5230\u5b98\u7f51\u4e0a\u3002 \u4e0b\u9762\u6240\u5217\u4e2a\u8868\u683c\uff1a FFmpeg 3.1.4 \u9002\u914d \u5b98\u7f51\u63d0\u4f9b\u7684\u793a\u4f8b\u4ee3\u7801 avio_reading.c avio_reading.c \u7f16\u8bd1\u811a\u672c build.sh \u5185\u5bb9\u5982\u4e0b\uff1a 1 2 3 4 # !/usr/bin/env bash # -*- coding: utf-8 -*- gcc $1 -I/usr/local/inclue -L/usr/local/lib -lavformat -lavutil -lavcodec -lavfilter -lswscale \u7f16\u8bd1\u793a\u4f8b\uff1a 1 ./build avio_reading.c \u751f\u6210\u9ed8\u8ba4\u6587\u4ef6\u540d\u4e3a\uff1a a.out \u7f16\u8bd1\u524d\u8981\u786e\u4fdd\u5b89\u88c5\u4e86FFmpeg\u5f00\u53d1\u5e93\uff0c\u672c\u6587\u64b0\u5199\u65f6\uff0c\u5934\u6587\u4ef6\u5b89\u88c5\u5728 /usr/local/include \u4e0b\uff0c\u5e93\u6587\u4ef6\u5b89\u88c5\u5728 /usr/local/lib \u4e0b\u3002","title":"FFmpeg version 3.1.4 example code"},{"location":"tech/FFmpeg version 3.1.4 example code/#ffmpeg-version-314-example-code","text":"\u8fd9\u6bb5\u65f6\u95f4\u5b66\u4e60FFmpeg\u7f16\u89e3\u7801\uff0c\u7531\u4e8e\u5b89\u88c5\u7684\u662f\u5f53\u524d\u6700\u65b0\u7248\u7684\u5e93( 3.1.4 )\uff0c\u6309\u7740\u5b98\u7f51\u7ed9\u7684\u793a\u4f8b\u7a0b\u5e8f\u5b66\u4e60\uff0c\u5374\u603b\u662f\u53d1\u73b0\u7f16\u8bd1\u65f6\u63d0\u793aAPI\u88ab\u5f03\u7528\u7684\u95ee\u9898\uff0c\u5bfc\u81f4\u5b66\u4e60\u7684\u70ed\u60c5\u53d7\u5230\u6253\u51fb\u3002\u6240\u4ee5\u5c31\u60f3\u7740\u5728\u81ea\u5df1\u6539\u5199\u5e76\u4f7f\u7528\u6700\u65b0API\u8c03\u7528\u65f6\uff0c\u5c3d\u91cf\u4e5f\u7ed9\u5b98\u7f51\u7684\u793a\u4f8b\u4ee3\u7801\u66f4\u65b0\u4e00\u4e0b\uff0c\u653e\u5728\u81ea\u5df1\u7684\u535a\u5ba2\u4e0a\uff0c\u6216\u8005\u4e4b\u540e\u6709\u673a\u4f1a\u7684\u8bdd\uff0c\u63a8\u5230\u5b98\u7f51\u4e0a\u3002 \u4e0b\u9762\u6240\u5217\u4e2a\u8868\u683c\uff1a FFmpeg 3.1.4 \u9002\u914d \u5b98\u7f51\u63d0\u4f9b\u7684\u793a\u4f8b\u4ee3\u7801 avio_reading.c avio_reading.c \u7f16\u8bd1\u811a\u672c build.sh \u5185\u5bb9\u5982\u4e0b\uff1a 1 2 3 4 # !/usr/bin/env bash # -*- coding: utf-8 -*- gcc $1 -I/usr/local/inclue -L/usr/local/lib -lavformat -lavutil -lavcodec -lavfilter -lswscale \u7f16\u8bd1\u793a\u4f8b\uff1a 1 ./build avio_reading.c \u751f\u6210\u9ed8\u8ba4\u6587\u4ef6\u540d\u4e3a\uff1a a.out \u7f16\u8bd1\u524d\u8981\u786e\u4fdd\u5b89\u88c5\u4e86FFmpeg\u5f00\u53d1\u5e93\uff0c\u672c\u6587\u64b0\u5199\u65f6\uff0c\u5934\u6587\u4ef6\u5b89\u88c5\u5728 /usr/local/include \u4e0b\uff0c\u5e93\u6587\u4ef6\u5b89\u88c5\u5728 /usr/local/lib \u4e0b\u3002","title":"FFmpeg version 3.1.4 example code"},{"location":"tech/Fmpeg 2.8.6 example code - transcoding/","text":"FFmpeg 2.8.6 example code - transcoding \u6700\u8fd1\u5b66\u4e60ffmpeg\uff0c\u5b98\u7f51\u63d0\u4f9b\u7684\u793a\u4f8b\u4ee3\u7801 transcoding.c \u6f14\u793a\u4e86\u7f16\u89e3\u7801\u548c\u6ee4\u6ce2\u5668\u7684\u4f7f\u7528\uff0c\u4e0d\u8fc7\u7b2c\u4e00\u6b65\u7684\u7f16\u8bd1\u8fd0\u884c\u6d4b\u8bd5\u5c31\u5361\u4e86\u597d\u4e45\uff0c\u4eca\u5929\u7ec8\u4e8e\u627e\u5230\u4e86\u539f\u56e0\u4e86\uff0c\u8d76\u7d27\u8bb0\u5f55\u4e00\u4e0b\uff0c\u6211\u76f8\u4fe1\u548c\u6211\u9047\u5230\u540c\u6837\u95ee\u9898\u7684\u4eba\u4e0d\u5728\u5c11\u6570\uff0c\u6240\u4ee5\u5e0c\u671b\u80fd\u4e3a\u5927\u5bb6\u63d0\u4f9b\u4e00\u7bc7\u6709\u6548\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u51cf\u8f7b\u5165\u95e8\u65f6\u7684\u75db\u82e6\u3002 \u628a\u5b98\u7f51\u793a\u4f8b\u62f7\u4e00\u4efd\u5728\u672c\u5730\uff0c\u4ee5\u76f8\u540c\u7684\u540d\u5b57\u547d\u540d\u4e3a transcoding.c , \u56e0\u4e3a\u5b98\u7f51\u7684\u8fd9\u4e2a\u793a\u4f8b\uff0c\u7528\u7684\u662fffmpeg2.x\u7684API\uff0c\u56e0\u4e3a\u6211\u4e5f\u4e0d\u592a\u719f\u6089ffmpeg\uff0c\u7528ffmpeg3.x\u7f16\u8bd1\u65f6\uff0c\u63d0\u793a\u4e86\u6211\u51e0\u4e2aAPI\u8fc7\u65f6\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u88c5\u56de\u4e86ffmpeg2.8.6\u6765\u7f16\u8bd1\u8fd9\u4e2a\u793a\u4f8b\u3002\u4e0b\u9762\u662f\u6211\u7684\u7f16\u8bd1\u547d\u4ee4\uff1a 1 gcc -I /usr/local/include/ -L /usr/local/lib -lavformat -lavfilter -lavutil -lswscale -lavcodec transcoding.c -o transcoding \u751f\u6210\u4e86\u540d\u4e3a transcoding \u7684\u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u6211\u4f7f\u7528\u81ea\u5df1\u7684\u4e00\u4e2a\u6d4b\u8bd5\u89c6\u9891\u8fd0\u884c\u5b83\uff1a ./transcoding test.mp4 output.mp4 \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 Input #0, mov,mp4,m4a,3gp,3g2,mj2, from test.mp4 : Metadata: major_brand : isom minor_version : 1 compatible_brands: isomavc1 creation_time : 2016-01-10 07:17:18 encoder : FormatFactory : www.pcfreetime.com Duration: 00:01:41.49, start: 0.000000, bitrate: 863 kb/s Stream #0:0(und): Video: h264 (High) (avc1 / 0x31637661), yuv420p, 856x480 [SAR 480:481 DAR 856:481], 744 kb/s, SAR 427:428 DAR 427:240, 24 fps, 24 tbr, 24k tbn, 48 tbc (default) Metadata: creation_time : 2016-01-10 07:17:18 handler_name : video Stream #0:1(und): Audio: aac (LC) (mp4a / 0x6134706D), 44100 Hz, stereo, fltp, 116 kb/s (default) Metadata: creation_time : 2016-01-10 07:17:18 handler_name : sound [libx264 @ 0x7fe4ac851600] broken ffmpeg default settings detected [libx264 @ 0x7fe4ac851600] use an encoding preset (e.g. -vpre medium) [libx264 @ 0x7fe4ac851600] preset usage: -vpre speed -vpre profile [libx264 @ 0x7fe4ac851600] speed presets are listed in x264 --help [libx264 @ 0x7fe4ac851600] profile is optional; x264 defaults to high Cannot open video encoder for stream #0 Error occurred: Generic error in an external library #issue 1 - [libx264 @ 0x7fe4ac851600] broken ffmpeg default settings detected \u8fd9\u4e2a\u9519\u8bef\u53ca\u5176\u4e0b\u9762\u7684\u4fe1\u606f\u544a\u8bc9\u6211\u4eec\uff0c\u5728\u6253\u5f00\u8f93\u51fa\u6587\u4ef6\u7684\u89c6\u9891\u7f16\u7801\u5668\u65f6\u51fa\u73b0\u4e86\u9519\u8bef\uff0c\u8fd9\u901a\u5e38\u662f\u7531\u4e8e\u7f16\u7801\u5668\u53c2\u6570\u8bbe\u7f6e\u4e0d\u5f53\u9020\u6210\u7684\u3002\u901a\u8fc7\u641c\u7d22\uff0c\u53d1\u73b0\u4e86\u8fd9\u7bc7\u6587\u7ae0\u5bf9\u8fd9\u4e2a\u95ee\u9898\u89e3\u91ca\u7684\u6bd4\u8f83\u6e05\u695a: http://blog.csdn.net/cffishappy/article/details/7680097 \u89e3\u51b3\u65b9\u6cd5: \u5728 transcoding.c \u4e2d\u7684 open_output_file \u51fd\u6570\u4e2d\uff0c\u4fee\u6539\u7684\u90e8\u5206\u5982\u4e0b(\u53ea\u589e\u52a0\u4e86 13-17\u884c )\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 if ( dec_ctx - codec_type == AVMEDIA_TYPE_VIDEO ) { enc_ctx - height = dec_ctx - height ; enc_ctx - width = dec_ctx - width ; enc_ctx - sample_aspect_ratio = dec_ctx - sample_aspect_ratio ; /* take first format from list of supported formats */ if ( encoder - pix_fmts ) enc_ctx - pix_fmt = encoder - pix_fmts [ 0 ]; else enc_ctx - pix_fmt = dec_ctx - pix_fmt ; /* video time_base can be set to whatever is handy and supported by encoder */ enc_ctx - time_base = dec_ctx - time_base ; enc_ctx - me_range = 16 ; enc_ctx - max_qdiff = 4 ; enc_ctx - qmin = 10 ; enc_ctx - qmax = 51 ; enc_ctx - qcompress = 0.6 ; } else { enc_ctx - sample_rate = dec_ctx - sample_rate ; enc_ctx - channel_layout = dec_ctx - channel_layout ; enc_ctx - channels = av_get_channel_layout_nb_channels ( enc_ctx - channel_layout ); /* take first format from list of supported formats */ enc_ctx - sample_fmt = encoder - sample_fmts [ 0 ]; enc_ctx - time_base = ( AVRational ){ 1 , enc_ctx - sample_rate }; } \u4e4b\u540e\uff0c\u6211\u4eec\u4fdd\u5b58\u7f16\u8bd1\u518d\u6b21\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ... Encoding frame Pulling filtered frame from filters Pushing decoded frame to filters Pulling filtered frame from filters Encoding frame [mp4 @ 0x7fbe86803e00] Malformed AAC bitstream detected: use the audio bitstream filter aac_adtstoasc to fix it ( -bsf:a aac_adtstoasc option with ffmpeg) [libx264 @ 0x7fbe86804400] frame I:1 Avg QP:45.67 size: 5439 [libx264 @ 0x7fbe86804400] frame P:1 Avg QP:46.05 size: 174 [libx264 @ 0x7fbe86804400] mb I I16..4: 71.7% 26.7% 1.5% [libx264 @ 0x7fbe86804400] mb P I16..4: 0.2% 0.0% 0.0% P16..4: 5.2% 0.2% 0.0% 0.0% 0.0% skip:94.4% [libx264 @ 0x7fbe86804400] final ratefactor: 56.92 [libx264 @ 0x7fbe86804400] 8x8 transform intra:26.7% [libx264 @ 0x7fbe86804400] coded y,uvDC,uvAC intra: 8.4% 33.3% 10.1% inter: 0.0% 0.1% 0.0% [libx264 @ 0x7fbe86804400] i16 v,h,dc,p: 39% 34% 7% 19% [libx264 @ 0x7fbe86804400] i8 v,h,dc,ddl,ddr,vr,hd,vl,hu: 6% 15% 22% 10% 10% 7% 16% 5% 9% [libx264 @ 0x7fbe86804400] i4 v,h,dc,ddl,ddr,vr,hd,vl,hu: 8% 33% 12% 10% 8% 8% 15% 2% 4% [libx264 @ 0x7fbe86804400] i8c dc,h,v,p: 70% 16% 11% 3% [libx264 @ 0x7fbe86804400] Weighted P-Frames: Y:0.0% UV:0.0% [libx264 @ 0x7fbe86804400] kb/s:538.85 [libfaac @ 0x7fbe862d2600] 4 frames left in the queue on closing Error occurred: Operation not permitted \u8fd9\u6b21\u7684\u89c6\u9891\u7f16\u7801\u53ef\u4ee5\u6253\u5f00\u5e76\u6b63\u5e38\u7f16\u7801\u4e86\uff0c\u53ef\u662f\u97f3\u9891\u90e8\u5206\u53c8\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\u7684\u89e3\u7b54\u53ef\u4ee5\u770b\u8fd9\u4e2a\u6587\u7ae0\uff1a http://www.tuicool.com/articles/NNNVv2z \u535a\u4e3b\u8ddf\u8e2a\u53d1\u73b0\u4e86\u56f0\u6270\u6211\u8bb8\u4e45\u7684\u95ee\u9898\uff0c\u5728\u8fd9\u91cc\u987a\u4fbf\u611f\u8c22\u4e00\u4e0b\u3002 #issue2 - [mp4 @ 0x7fbe86803e00] Malformed AAC bitstream detected: use the audio bitstream filter 'aac_adtstoasc' to fix it ('-bsf:a aac_adtstoasc' option with ffmpeg) \u8fd9\u4e2a\u95ee\u9898\u5728\u7f51\u4e0a\u641c\u4e86\u597d\u4e45\uff0c stackoverflow \u4e2d\u63d0\u4f9b\u4e86 \u4e00\u79cd\u65b9\u6cd5 \uff0c\u53ef\u4ee5\u4f7f\u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\uff0c\u4f46\u5904\u7406\u7ed3\u679c\u4e2d\u53ea\u6709\u97f3\u9891\u88ab\u4fdd\u7559, \u8fd9\u663e\u7136\u4e0d\u662f\u6211\u60f3\u8981\u7684\u3002 \u5176\u5b9e\uff0c\u53ea\u9700\u8981\u8c03\u6574\u4e00\u4e0b\u4ee3\u7801\u987a\u5e8f\u5c31\u53ef\u4ee5\u4e86\u3002\u77e5\u9053\u771f\u76f8\u7684\u6211\u773c\u6cea\u6389\u4e0b\u6765\u3002 \u89e3\u51b3\u65b9\u6cd5 \u8fd8\u662f\u5728 transcoding.c \u4e2d\u7684 open_output_file \u51fd\u6570\u4e2d\uff0c\u53ea\u662f\u628a for\u5faa\u73af \u5c3e\u90e8\u7684\u90a3\u53e5\u4ee3\u7801\uff1a 1 2 if (ofmt_ctx- oformat- flags AVFMT_GLOBALHEADER) enc_ctx- flags |= AV_CODEC_FLAG_GLOBAL_HEADER; \u63d0\u524d\u5230 for\u5faa\u73af \u4e2d\u6574\u4e2a if\u5224\u65ad\u7ed3\u6784 \u7684\u524d\u9762\u5c31\u884c\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u6253\u5f00\u7f16\u7801\u5668\u524d\uff0c\u6ca1\u6709\u8bbe\u7f6e\u7f16\u7801\u5668\u4e0a\u4e0b\u6587\u4e2denc_ctx- flags\u8fd9\u4e2a\u53c2\u6570\uff0c\u6240\u4ee5\u628a\u8fd9\u53e5\u63d0\u524d\u4e86\u5c31\u89e3\u51b3\u95ee\u9898\u4e86\u3002\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 if ( ofmt_ctx - oformat - flags AVFMT_GLOBALHEADER ) enc_ctx - flags |= AV_CODEC_FLAG_GLOBAL_HEADER ; if ( dec_ctx - codec_type == AVMEDIA_TYPE_VIDEO ) { enc_ctx - height = dec_ctx - height ; enc_ctx - width = dec_ctx - width ; enc_ctx - sample_aspect_ratio = dec_ctx - sample_aspect_ratio ; /* take first format from list of supported formats */ if ( encoder - pix_fmts ) enc_ctx - pix_fmt = encoder - pix_fmts [ 0 ]; else enc_ctx - pix_fmt = dec_ctx - pix_fmt ; /* video time_base can be set to whatever is handy and supported by encoder */ enc_ctx - time_base = dec_ctx - time_base ; enc_ctx - me_range = 16 ; enc_ctx - max_qdiff = 4 ; enc_ctx - qmin = 10 ; enc_ctx - qmax = 51 ; enc_ctx - qcompress = 0.6 ; } else { enc_ctx - sample_rate = dec_ctx - sample_rate ; enc_ctx - channel_layout = dec_ctx - channel_layout ; enc_ctx - channels = av_get_channel_layout_nb_channels ( enc_ctx - channel_layout ); /* take first format from list of supported formats */ enc_ctx - sample_fmt = encoder - sample_fmts [ 0 ]; enc_ctx - time_base = ( AVRational ){ 1 , enc_ctx - sample_rate }; } #issue3 - \u5904\u7406\u540e\u7684\u7ed3\u679c\u6bd4\u539f\u89c6\u9891\u6a21\u7cca \u5728\u7ecf\u8fc7\u4ee5\u4e0a\u4e24\u4e2a\u95ee\u9898\u7684\u89e3\u51b3\u540e\uff0c\u7f16\u8bd1\u901a\u8fc7\u662f\u6ca1\u6709\u95ee\u9898\u4e86\uff0c\u4e0d\u8fc7\u4f60\u53ef\u80fd\u4f1a\u4e0d\u6ee1\u610f\u8f93\u51fa\u89c6\u9891\u7684\u8d28\u91cf\uff0c\u89c9\u5f97\u5b83\u6bd4\u539f\u89c6\u9891\u6a21\u7cca\u4e86\u8bb8\u591a\uff0c\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u8c03\u8282\u001d \\#issue1 \u4e2d\u7684\u4ee3\u7801\uff1a 1 enc_ctx- qmax = 51; \u628a\u8fd9\u4e2a\u53c2\u6570\u6539\u5c0f\u70b9\uff0c\u53ef\u4ee5\u51cf\u5c0f\u7f16\u7801\u65f6\u7684\u91cf\u5316\u95f4\u9694\uff0c\u63d0\u9ad8\u7f16\u7801\u89c6\u9891\u7684\u8d28\u91cf\uff0c\u4e0d\u8fc7\u4f60\u53ef\u80fd\u56e0\u6b64\u52a0\u957f\u6574\u4e2a\u7f16\u7801\u7684\u65f6\u95f4\u3002 \u4f8b\u5982\u6211\u5c06\u5176\u6539\u4e3a\uff1a 1 enc_ctx- qmax = 30; \u6700\u540e\u9644\u4e0a\u4fee\u6539\u540e\u7684\u5b8c\u6574\u4ee3\u7801\uff1a filename: transcoding.copyright (c) 2010 Nicolas George * Copyright (c) 2011 Stefano Sabatini * Copyright (c) 2014 Andrey Utkin * * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the Software ), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: * * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED AS IS , WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. */ /** * @file * API example for demuxing, decoding, filtering, encoding and muxing * @example transcoding.c */ #include libavcodec/avcodec.h #include libavformat/avformat.h #include libavfilter/avfiltergraph.h #include libavfilter/buffersink.h #include libavfilter/buffersrc.h #include libavutil/opt.h #include libavutil/pixdesc.h static AVFormatContext * ifmt_ctx ; static AVFormatContext * ofmt_ctx ; typedef struct FilteringContext { AVFilterContext * buffersink_ctx ; AVFilterContext * buffersrc_ctx ; AVFilterGraph * filter_graph ; } FilteringContext ; static FilteringContext * filter_ctx ; static int open_input_file ( const char * filename ) { int ret ; unsigned int i ; ifmt_ctx = NULL ; if (( ret = avformat_open_input ( ifmt_ctx , filename , NULL , NULL )) 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot open input file \\n ); return ret ; } if (( ret = avformat_find_stream_info ( ifmt_ctx , NULL )) 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot find stream information \\n ); return ret ; } for ( i = 0 ; i ifmt_ctx - nb_streams ; i ++ ) { AVStream * stream ; AVCodecContext * codec_ctx ; stream = ifmt_ctx - streams [ i ]; codec_ctx = stream - codec ; /* Reencode video audio and remux subtitles etc. */ if ( codec_ctx - codec_type == AVMEDIA_TYPE_VIDEO || codec_ctx - codec_type == AVMEDIA_TYPE_AUDIO ) { /* Open decoder */ ret = avcodec_open2 ( codec_ctx , avcodec_find_decoder ( codec_ctx - codec_id ), NULL ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Failed to open decoder for stream #%u \\n , i ); return ret ; } } } av_dump_format ( ifmt_ctx , 0 , filename , 0 ); return 0 ; } static int open_output_file ( const char * filename ) { AVStream * out_stream ; AVStream * in_stream ; AVCodecContext * dec_ctx , * enc_ctx ; AVCodec * encoder ; int ret ; unsigned int i ; ofmt_ctx = NULL ; avformat_alloc_output_context2 ( ofmt_ctx , NULL , NULL , filename ); if ( ! ofmt_ctx ) { av_log ( NULL , AV_LOG_ERROR , Could not create output context \\n ); return AVERROR_UNKNOWN ; } for ( i = 0 ; i ifmt_ctx - nb_streams ; i ++ ) { out_stream = avformat_new_stream ( ofmt_ctx , NULL ); if ( ! out_stream ) { av_log ( NULL , AV_LOG_ERROR , Failed allocating output stream \\n ); return AVERROR_UNKNOWN ; } in_stream = ifmt_ctx - streams [ i ]; dec_ctx = in_stream - codec ; enc_ctx = out_stream - codec ; if ( dec_ctx - codec_type == AVMEDIA_TYPE_VIDEO || dec_ctx - codec_type == AVMEDIA_TYPE_AUDIO ) { /* in this example, we choose transcoding to same codec */ encoder = avcodec_find_encoder ( dec_ctx - codec_id ); if ( ! encoder ) { av_log ( NULL , AV_LOG_FATAL , Necessary encoder not found \\n ); return AVERROR_INVALIDDATA ; } /* In this example, we transcode to same properties (picture size, * sample rate etc.). These properties can be changed for output * streams easily using filters */ if ( ofmt_ctx - oformat - flags AVFMT_GLOBALHEADER ) enc_ctx - flags |= AV_CODEC_FLAG_GLOBAL_HEADER ; if ( dec_ctx - codec_type == AVMEDIA_TYPE_VIDEO ) { enc_ctx - height = dec_ctx - height ; enc_ctx - width = dec_ctx - width ; enc_ctx - sample_aspect_ratio = dec_ctx - sample_aspect_ratio ; /* take first format from list of supported formats */ if ( encoder - pix_fmts ) enc_ctx - pix_fmt = encoder - pix_fmts [ 0 ]; else enc_ctx - pix_fmt = dec_ctx - pix_fmt ; /* video time_base can be set to whatever is handy and supported by encoder */ enc_ctx - time_base = dec_ctx - time_base ; enc_ctx - me_range = 16 ; enc_ctx - max_qdiff = 4 ; enc_ctx - qmin = 10 ; enc_ctx - qmax = 51 ; enc_ctx - qcompress = 0.6 ; } else { enc_ctx - sample_rate = dec_ctx - sample_rate ; enc_ctx - channel_layout = dec_ctx - channel_layout ; enc_ctx - channels = av_get_channel_layout_nb_channels ( enc_ctx - channel_layout ); /* take first format from list of supported formats */ enc_ctx - sample_fmt = encoder - sample_fmts [ 0 ]; enc_ctx - time_base = ( AVRational ){ 1 , enc_ctx - sample_rate }; } /* Third parameter can be used to pass settings to encoder */ ret = avcodec_open2 ( enc_ctx , encoder , NULL ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot open video encoder for stream #%u \\n , i ); return ret ; } } else if ( dec_ctx - codec_type == AVMEDIA_TYPE_UNKNOWN ) { av_log ( NULL , AV_LOG_FATAL , Elementary stream #%d is of unknown type, cannot proceed \\n , i ); return AVERROR_INVALIDDATA ; } else { /* if this stream must be remuxed */ ret = avcodec_copy_context ( ofmt_ctx - streams [ i ] - codec , ifmt_ctx - streams [ i ] - codec ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Copying stream context failed \\n ); return ret ; } } } av_dump_format ( ofmt_ctx , 0 , filename , 1 ); if ( ! ( ofmt_ctx - oformat - flags AVFMT_NOFILE )) { ret = avio_open ( ofmt_ctx - pb , filename , AVIO_FLAG_WRITE ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Could not open output file %s , filename ); return ret ; } } /* init muxer, write output file header */ ret = avformat_write_header ( ofmt_ctx , NULL ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Error occurred when opening output file \\n ); return ret ; } return 0 ; } static int init_filter ( FilteringContext * fctx , AVCodecContext * dec_ctx , AVCodecContext * enc_ctx , const char * filter_spec ) { char args [ 512 ]; int ret = 0 ; AVFilter * buffersrc = NULL ; AVFilter * buffersink = NULL ; AVFilterContext * buffersrc_ctx = NULL ; AVFilterContext * buffersink_ctx = NULL ; AVFilterInOut * outputs = avfilter_inout_alloc (); AVFilterInOut * inputs = avfilter_inout_alloc (); AVFilterGraph * filter_graph = avfilter_graph_alloc (); if ( ! outputs || ! inputs || ! filter_graph ) { ret = AVERROR ( ENOMEM ); goto end ; } if ( dec_ctx - codec_type == AVMEDIA_TYPE_VIDEO ) { buffersrc = avfilter_get_by_name ( buffer ); buffersink = avfilter_get_by_name ( buffersink ); if ( ! buffersrc || ! buffersink ) { av_log ( NULL , AV_LOG_ERROR , filtering source or sink element not found \\n ); ret = AVERROR_UNKNOWN ; goto end ; } snprintf ( args , sizeof ( args ), video_size=%dx%d:pix_fmt=%d:time_base=%d/%d:pixel_aspect=%d/%d , dec_ctx - width , dec_ctx - height , dec_ctx - pix_fmt , dec_ctx - time_base . num , dec_ctx - time_base . den , dec_ctx - sample_aspect_ratio . num , dec_ctx - sample_aspect_ratio . den ); ret = avfilter_graph_create_filter ( buffersrc_ctx , buffersrc , in , args , NULL , filter_graph ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot create buffer source \\n ); goto end ; } ret = avfilter_graph_create_filter ( buffersink_ctx , buffersink , out , NULL , NULL , filter_graph ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot create buffer sink \\n ); goto end ; } ret = av_opt_set_bin ( buffersink_ctx , pix_fmts , ( uint8_t * ) enc_ctx - pix_fmt , sizeof ( enc_ctx - pix_fmt ), AV_OPT_SEARCH_CHILDREN ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot set output pixel format \\n ); goto end ; } } else if ( dec_ctx - codec_type == AVMEDIA_TYPE_AUDIO ) { buffersrc = avfilter_get_by_name ( abuffer ); buffersink = avfilter_get_by_name ( abuffersink ); if ( ! buffersrc || ! buffersink ) { av_log ( NULL , AV_LOG_ERROR , filtering source or sink element not found \\n ); ret = AVERROR_UNKNOWN ; goto end ; } if ( ! dec_ctx - channel_layout ) dec_ctx - channel_layout = av_get_default_channel_layout ( dec_ctx - channels ); snprintf ( args , sizeof ( args ), time_base=%d/%d:sample_rate=%d:sample_fmt=%s:channel_layout=0x% PRIx64 , dec_ctx - time_base . num , dec_ctx - time_base . den , dec_ctx - sample_rate , av_get_sample_fmt_name ( dec_ctx - sample_fmt ), dec_ctx - channel_layout ); ret = avfilter_graph_create_filter ( buffersrc_ctx , buffersrc , in , args , NULL , filter_graph ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot create audio buffer source \\n ); goto end ; } ret = avfilter_graph_create_filter ( buffersink_ctx , buffersink , out , NULL , NULL , filter_graph ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot create audio buffer sink \\n ); goto end ; } ret = av_opt_set_bin ( buffersink_ctx , sample_fmts , ( uint8_t * ) enc_ctx - sample_fmt , sizeof ( enc_ctx - sample_fmt ), AV_OPT_SEARCH_CHILDREN ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot set output sample format \\n ); goto end ; } ret = av_opt_set_bin ( buffersink_ctx , channel_layouts , ( uint8_t * ) enc_ctx - channel_layout , sizeof ( enc_ctx - channel_layout ), AV_OPT_SEARCH_CHILDREN ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot set output channel layout \\n ); goto end ; } ret = av_opt_set_bin ( buffersink_ctx , sample_rates , ( uint8_t * ) enc_ctx - sample_rate , sizeof ( enc_ctx - sample_rate ), AV_OPT_SEARCH_CHILDREN ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot set output sample rate \\n ); goto end ; } } else { ret = AVERROR_UNKNOWN ; goto end ; } /* Endpoints for the filter graph. */ outputs - name = av_strdup ( in ); outputs - filter_ctx = buffersrc_ctx ; outputs - pad_idx = 0 ; outputs - next = NULL ; inputs - name = av_strdup ( out ); inputs - filter_ctx = buffersink_ctx ; inputs - pad_idx = 0 ; inputs - next = NULL ; if ( ! outputs - name || ! inputs - name ) { ret = AVERROR ( ENOMEM ); goto end ; } if (( ret = avfilter_graph_parse_ptr ( filter_graph , filter_spec , inputs , outputs , NULL )) 0 ) goto end ; if (( ret = avfilter_graph_config ( filter_graph , NULL )) 0 ) goto end ; /* Fill FilteringContext */ fctx - buffersrc_ctx = buffersrc_ctx ; fctx - buffersink_ctx = buffersink_ctx ; fctx - filter_graph = filter_graph ; end : avfilter_inout_free ( inputs ); avfilter_inout_free ( outputs ); return ret ; } static int init_filters ( void ) { const char * filter_spec ; unsigned int i ; int ret ; filter_ctx = av_malloc_array ( ifmt_ctx - nb_streams , sizeof ( * filter_ctx )); if ( ! filter_ctx ) return AVERROR ( ENOMEM ); for ( i = 0 ; i ifmt_ctx - nb_streams ; i ++ ) { filter_ctx [ i ]. buffersrc_ctx = NULL ; filter_ctx [ i ]. buffersink_ctx = NULL ; filter_ctx [ i ]. filter_graph = NULL ; if ( ! ( ifmt_ctx - streams [ i ] - codec - codec_type == AVMEDIA_TYPE_AUDIO || ifmt_ctx - streams [ i ] - codec - codec_type == AVMEDIA_TYPE_VIDEO )) continue ; if ( ifmt_ctx - streams [ i ] - codec - codec_type == AVMEDIA_TYPE_VIDEO ) filter_spec = null ; /* passthrough (dummy) filter for video */ else filter_spec = anull ; /* passthrough (dummy) filter for audio */ ret = init_filter ( filter_ctx [ i ], ifmt_ctx - streams [ i ] - codec , ofmt_ctx - streams [ i ] - codec , filter_spec ); if ( ret ) return ret ; } return 0 ; } static int encode_write_frame ( AVFrame * filt_frame , unsigned int stream_index , int * got_frame ) { int ret ; int got_frame_local ; AVPacket enc_pkt ; int ( * enc_func )( AVCodecContext * , AVPacket * , const AVFrame * , int * ) = ( ifmt_ctx - streams [ stream_index ] - codec - codec_type == AVMEDIA_TYPE_VIDEO ) ? avcodec_encode_video2 : avcodec_encode_audio2 ; if ( ! got_frame ) got_frame = got_frame_local ; av_log ( NULL , AV_LOG_INFO , Encoding frame \\n ); /* encode filtered frame */ enc_pkt . data = NULL ; enc_pkt . size = 0 ; av_init_packet ( enc_pkt ); ret = enc_func ( ofmt_ctx - streams [ stream_index ] - codec , enc_pkt , filt_frame , got_frame ); av_frame_free ( filt_frame ); if ( ret 0 ) return ret ; if ( ! ( * got_frame )) return 0 ; /* prepare packet for muxing */ enc_pkt . stream_index = stream_index ; av_packet_rescale_ts ( enc_pkt , ofmt_ctx - streams [ stream_index ] - codec - time_base , ofmt_ctx - streams [ stream_index ] - time_base ); av_log ( NULL , AV_LOG_DEBUG , Muxing frame \\n ); /* mux encoded frame */ ret = av_interleaved_write_frame ( ofmt_ctx , enc_pkt ); return ret ; } static int filter_encode_write_frame ( AVFrame * frame , unsigned int stream_index ) { int ret ; AVFrame * filt_frame ; av_log ( NULL , AV_LOG_INFO , Pushing decoded frame to filters \\n ); /* push the decoded frame into the filtergraph */ ret = av_buffersrc_add_frame_flags ( filter_ctx [ stream_index ]. buffersrc_ctx , frame , 0 ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Error while feeding the filtergraph \\n ); return ret ; } /* pull filtered frames from the filtergraph */ while ( 1 ) { filt_frame = av_frame_alloc (); if ( ! filt_frame ) { ret = AVERROR ( ENOMEM ); break ; } av_log ( NULL , AV_LOG_INFO , Pulling filtered frame from filters \\n ); ret = av_buffersink_get_frame ( filter_ctx [ stream_index ]. buffersink_ctx , filt_frame ); if ( ret 0 ) { /* if no more frames for output - returns AVERROR(EAGAIN) * if flushed and no more frames for output - returns AVERROR_EOF * rewrite retcode to 0 to show it as normal procedure completion */ if ( ret == AVERROR ( EAGAIN ) || ret == AVERROR_EOF ) ret = 0 ; av_frame_free ( filt_frame ); break ; } filt_frame - pict_type = AV_PICTURE_TYPE_NONE ; ret = encode_write_frame ( filt_frame , stream_index , NULL ); if ( ret 0 ) break ; } return ret ; } static int flush_encoder ( unsigned int stream_index ) { int ret ; int got_frame ; if ( ! ( ofmt_ctx - streams [ stream_index ] - codec - codec - capabilities AV_CODEC_CAP_DELAY )) return 0 ; while ( 1 ) { av_log ( NULL , AV_LOG_INFO , Flushing stream #%u encoder \\n , stream_index ); ret = encode_write_frame ( NULL , stream_index , got_frame ); if ( ret 0 ) break ; if ( ! got_frame ) return 0 ; } return ret ; } int main ( int argc , char ** argv ) { int ret ; AVPacket packet = { . data = NULL , . size = 0 }; AVFrame * frame = NULL ; enum AVMediaType type ; unsigned int stream_index ; unsigned int i ; int got_frame ; int ( * dec_func )( AVCodecContext * , AVFrame * , int * , const AVPacket * ); if ( argc != 3 ) { av_log ( NULL , AV_LOG_ERROR , Usage: %s input file output file \\n , argv [ 0 ]); return 1 ; } av_register_all (); avfilter_register_all (); if (( ret = open_input_file ( argv [ 1 ])) 0 ) goto end ; if (( ret = open_output_file ( argv [ 2 ])) 0 ) goto end ; if (( ret = init_filters ()) 0 ) goto end ; /* read all packets */ while ( 1 ) { if (( ret = av_read_frame ( ifmt_ctx , packet )) 0 ) break ; stream_index = packet . stream_index ; type = ifmt_ctx - streams [ packet . stream_index ] - codec - codec_type ; av_log ( NULL , AV_LOG_DEBUG , Demuxer gave frame of stream_index %u \\n , stream_index ); if ( filter_ctx [ stream_index ]. filter_graph ) { av_log ( NULL , AV_LOG_DEBUG , Going to reencode filter the frame \\n ); frame = av_frame_alloc (); if ( ! frame ) { ret = AVERROR ( ENOMEM ); break ; } av_packet_rescale_ts ( packet , ifmt_ctx - streams [ stream_index ] - time_base , ifmt_ctx - streams [ stream_index ] - codec - time_base ); dec_func = ( type == AVMEDIA_TYPE_VIDEO ) ? avcodec_decode_video2 : avcodec_decode_audio4 ; ret = dec_func ( ifmt_ctx - streams [ stream_index ] - codec , frame , got_frame , packet ); if ( ret 0 ) { av_frame_free ( frame ); av_log ( NULL , AV_LOG_ERROR , Decoding failed \\n ); break ; } if ( got_frame ) { frame - pts = av_frame_get_best_effort_timestamp ( frame ); ret = filter_encode_write_frame ( frame , stream_index ); av_frame_free ( frame ); if ( ret 0 ) goto end ; } else { av_frame_free ( frame ); } } else { /* remux this frame without reencoding */ av_packet_rescale_ts ( packet , ifmt_ctx - streams [ stream_index ] - time_base , ofmt_ctx - streams [ stream_index ] - time_base ); ret = av_interleaved_write_frame ( ofmt_ctx , packet ); if ( ret 0 ) goto end ; } av_packet_unref ( packet ); } /* flush filters and encoders */ for ( i = 0 ; i ifmt_ctx - nb_streams ; i ++ ) { /* flush filter */ if ( ! filter_ctx [ i ]. filter_graph ) continue ; ret = filter_encode_write_frame ( NULL , i ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Flushing filter failed \\n ); goto end ; } /* flush encoder */ ret = flush_encoder ( i ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Flushing encoder failed \\n ); goto end ; } } av_write_trailer ( ofmt_ctx ); end : av_packet_unref ( packet ); av_frame_free ( frame ); for ( i = 0 ; i ifmt_ctx - nb_streams ; i ++ ) { avcodec_close ( ifmt_ctx - streams [ i ] - codec ); if ( ofmt_ctx ofmt_ctx - nb_streams i ofmt_ctx - streams [ i ] ofmt_ctx - streams [ i ] - codec ) avcodec_close ( ofmt_ctx - streams [ i ] - codec ); if ( filter_ctx filter_ctx [ i ]. filter_graph ) avfilter_graph_free ( filter_ctx [ i ]. filter_graph ); } av_free ( filter_ctx ); avformat_close_input ( ifmt_ctx ); if ( ofmt_ctx ! ( ofmt_ctx - oformat - flags AVFMT_NOFILE )) avio_closep ( ofmt_ctx - pb ); avformat_free_context ( ofmt_ctx ); if ( ret 0 ) av_log ( NULL , AV_LOG_ERROR , Error occurred: %s \\n , av_err2str ( ret )); return ret ? 1 : 0 ; }","title":"FFmpeg 2.8.6 example code - transcoding"},{"location":"tech/Fmpeg 2.8.6 example code - transcoding/#ffmpeg-286-example-code-transcoding","text":"\u6700\u8fd1\u5b66\u4e60ffmpeg\uff0c\u5b98\u7f51\u63d0\u4f9b\u7684\u793a\u4f8b\u4ee3\u7801 transcoding.c \u6f14\u793a\u4e86\u7f16\u89e3\u7801\u548c\u6ee4\u6ce2\u5668\u7684\u4f7f\u7528\uff0c\u4e0d\u8fc7\u7b2c\u4e00\u6b65\u7684\u7f16\u8bd1\u8fd0\u884c\u6d4b\u8bd5\u5c31\u5361\u4e86\u597d\u4e45\uff0c\u4eca\u5929\u7ec8\u4e8e\u627e\u5230\u4e86\u539f\u56e0\u4e86\uff0c\u8d76\u7d27\u8bb0\u5f55\u4e00\u4e0b\uff0c\u6211\u76f8\u4fe1\u548c\u6211\u9047\u5230\u540c\u6837\u95ee\u9898\u7684\u4eba\u4e0d\u5728\u5c11\u6570\uff0c\u6240\u4ee5\u5e0c\u671b\u80fd\u4e3a\u5927\u5bb6\u63d0\u4f9b\u4e00\u7bc7\u6709\u6548\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u51cf\u8f7b\u5165\u95e8\u65f6\u7684\u75db\u82e6\u3002 \u628a\u5b98\u7f51\u793a\u4f8b\u62f7\u4e00\u4efd\u5728\u672c\u5730\uff0c\u4ee5\u76f8\u540c\u7684\u540d\u5b57\u547d\u540d\u4e3a transcoding.c , \u56e0\u4e3a\u5b98\u7f51\u7684\u8fd9\u4e2a\u793a\u4f8b\uff0c\u7528\u7684\u662fffmpeg2.x\u7684API\uff0c\u56e0\u4e3a\u6211\u4e5f\u4e0d\u592a\u719f\u6089ffmpeg\uff0c\u7528ffmpeg3.x\u7f16\u8bd1\u65f6\uff0c\u63d0\u793a\u4e86\u6211\u51e0\u4e2aAPI\u8fc7\u65f6\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u88c5\u56de\u4e86ffmpeg2.8.6\u6765\u7f16\u8bd1\u8fd9\u4e2a\u793a\u4f8b\u3002\u4e0b\u9762\u662f\u6211\u7684\u7f16\u8bd1\u547d\u4ee4\uff1a 1 gcc -I /usr/local/include/ -L /usr/local/lib -lavformat -lavfilter -lavutil -lswscale -lavcodec transcoding.c -o transcoding \u751f\u6210\u4e86\u540d\u4e3a transcoding \u7684\u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u6211\u4f7f\u7528\u81ea\u5df1\u7684\u4e00\u4e2a\u6d4b\u8bd5\u89c6\u9891\u8fd0\u884c\u5b83\uff1a ./transcoding test.mp4 output.mp4 \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 Input #0, mov,mp4,m4a,3gp,3g2,mj2, from test.mp4 : Metadata: major_brand : isom minor_version : 1 compatible_brands: isomavc1 creation_time : 2016-01-10 07:17:18 encoder : FormatFactory : www.pcfreetime.com Duration: 00:01:41.49, start: 0.000000, bitrate: 863 kb/s Stream #0:0(und): Video: h264 (High) (avc1 / 0x31637661), yuv420p, 856x480 [SAR 480:481 DAR 856:481], 744 kb/s, SAR 427:428 DAR 427:240, 24 fps, 24 tbr, 24k tbn, 48 tbc (default) Metadata: creation_time : 2016-01-10 07:17:18 handler_name : video Stream #0:1(und): Audio: aac (LC) (mp4a / 0x6134706D), 44100 Hz, stereo, fltp, 116 kb/s (default) Metadata: creation_time : 2016-01-10 07:17:18 handler_name : sound [libx264 @ 0x7fe4ac851600] broken ffmpeg default settings detected [libx264 @ 0x7fe4ac851600] use an encoding preset (e.g. -vpre medium) [libx264 @ 0x7fe4ac851600] preset usage: -vpre speed -vpre profile [libx264 @ 0x7fe4ac851600] speed presets are listed in x264 --help [libx264 @ 0x7fe4ac851600] profile is optional; x264 defaults to high Cannot open video encoder for stream #0 Error occurred: Generic error in an external library","title":"FFmpeg 2.8.6 example code - transcoding"},{"location":"tech/Fmpeg 2.8.6 example code - transcoding/#35issue-1-libx264-0x7fe4ac851600-broken-ffmpeg-default-settings-detected","text":"\u8fd9\u4e2a\u9519\u8bef\u53ca\u5176\u4e0b\u9762\u7684\u4fe1\u606f\u544a\u8bc9\u6211\u4eec\uff0c\u5728\u6253\u5f00\u8f93\u51fa\u6587\u4ef6\u7684\u89c6\u9891\u7f16\u7801\u5668\u65f6\u51fa\u73b0\u4e86\u9519\u8bef\uff0c\u8fd9\u901a\u5e38\u662f\u7531\u4e8e\u7f16\u7801\u5668\u53c2\u6570\u8bbe\u7f6e\u4e0d\u5f53\u9020\u6210\u7684\u3002\u901a\u8fc7\u641c\u7d22\uff0c\u53d1\u73b0\u4e86\u8fd9\u7bc7\u6587\u7ae0\u5bf9\u8fd9\u4e2a\u95ee\u9898\u89e3\u91ca\u7684\u6bd4\u8f83\u6e05\u695a: http://blog.csdn.net/cffishappy/article/details/7680097","title":"#issue 1 - [libx264 @ 0x7fe4ac851600] broken ffmpeg default settings detected"},{"location":"tech/Fmpeg 2.8.6 example code - transcoding/#_1","text":"\u5728 transcoding.c \u4e2d\u7684 open_output_file \u51fd\u6570\u4e2d\uff0c\u4fee\u6539\u7684\u90e8\u5206\u5982\u4e0b(\u53ea\u589e\u52a0\u4e86 13-17\u884c )\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 if ( dec_ctx - codec_type == AVMEDIA_TYPE_VIDEO ) { enc_ctx - height = dec_ctx - height ; enc_ctx - width = dec_ctx - width ; enc_ctx - sample_aspect_ratio = dec_ctx - sample_aspect_ratio ; /* take first format from list of supported formats */ if ( encoder - pix_fmts ) enc_ctx - pix_fmt = encoder - pix_fmts [ 0 ]; else enc_ctx - pix_fmt = dec_ctx - pix_fmt ; /* video time_base can be set to whatever is handy and supported by encoder */ enc_ctx - time_base = dec_ctx - time_base ; enc_ctx - me_range = 16 ; enc_ctx - max_qdiff = 4 ; enc_ctx - qmin = 10 ; enc_ctx - qmax = 51 ; enc_ctx - qcompress = 0.6 ; } else { enc_ctx - sample_rate = dec_ctx - sample_rate ; enc_ctx - channel_layout = dec_ctx - channel_layout ; enc_ctx - channels = av_get_channel_layout_nb_channels ( enc_ctx - channel_layout ); /* take first format from list of supported formats */ enc_ctx - sample_fmt = encoder - sample_fmts [ 0 ]; enc_ctx - time_base = ( AVRational ){ 1 , enc_ctx - sample_rate }; } \u4e4b\u540e\uff0c\u6211\u4eec\u4fdd\u5b58\u7f16\u8bd1\u518d\u6b21\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ... Encoding frame Pulling filtered frame from filters Pushing decoded frame to filters Pulling filtered frame from filters Encoding frame [mp4 @ 0x7fbe86803e00] Malformed AAC bitstream detected: use the audio bitstream filter aac_adtstoasc to fix it ( -bsf:a aac_adtstoasc option with ffmpeg) [libx264 @ 0x7fbe86804400] frame I:1 Avg QP:45.67 size: 5439 [libx264 @ 0x7fbe86804400] frame P:1 Avg QP:46.05 size: 174 [libx264 @ 0x7fbe86804400] mb I I16..4: 71.7% 26.7% 1.5% [libx264 @ 0x7fbe86804400] mb P I16..4: 0.2% 0.0% 0.0% P16..4: 5.2% 0.2% 0.0% 0.0% 0.0% skip:94.4% [libx264 @ 0x7fbe86804400] final ratefactor: 56.92 [libx264 @ 0x7fbe86804400] 8x8 transform intra:26.7% [libx264 @ 0x7fbe86804400] coded y,uvDC,uvAC intra: 8.4% 33.3% 10.1% inter: 0.0% 0.1% 0.0% [libx264 @ 0x7fbe86804400] i16 v,h,dc,p: 39% 34% 7% 19% [libx264 @ 0x7fbe86804400] i8 v,h,dc,ddl,ddr,vr,hd,vl,hu: 6% 15% 22% 10% 10% 7% 16% 5% 9% [libx264 @ 0x7fbe86804400] i4 v,h,dc,ddl,ddr,vr,hd,vl,hu: 8% 33% 12% 10% 8% 8% 15% 2% 4% [libx264 @ 0x7fbe86804400] i8c dc,h,v,p: 70% 16% 11% 3% [libx264 @ 0x7fbe86804400] Weighted P-Frames: Y:0.0% UV:0.0% [libx264 @ 0x7fbe86804400] kb/s:538.85 [libfaac @ 0x7fbe862d2600] 4 frames left in the queue on closing Error occurred: Operation not permitted \u8fd9\u6b21\u7684\u89c6\u9891\u7f16\u7801\u53ef\u4ee5\u6253\u5f00\u5e76\u6b63\u5e38\u7f16\u7801\u4e86\uff0c\u53ef\u662f\u97f3\u9891\u90e8\u5206\u53c8\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\u7684\u89e3\u7b54\u53ef\u4ee5\u770b\u8fd9\u4e2a\u6587\u7ae0\uff1a http://www.tuicool.com/articles/NNNVv2z \u535a\u4e3b\u8ddf\u8e2a\u53d1\u73b0\u4e86\u56f0\u6270\u6211\u8bb8\u4e45\u7684\u95ee\u9898\uff0c\u5728\u8fd9\u91cc\u987a\u4fbf\u611f\u8c22\u4e00\u4e0b\u3002","title":"\u89e3\u51b3\u65b9\u6cd5:"},{"location":"tech/Fmpeg 2.8.6 example code - transcoding/#35issue2-mp4-0x7fbe86803e00-malformed-aac-bitstream-detected-use-the-audio-bitstream-filter-aac_adtstoasc-to-fix-it-bsfa-aac_adtstoasc-option-with-ffmpeg","text":"\u8fd9\u4e2a\u95ee\u9898\u5728\u7f51\u4e0a\u641c\u4e86\u597d\u4e45\uff0c stackoverflow \u4e2d\u63d0\u4f9b\u4e86 \u4e00\u79cd\u65b9\u6cd5 \uff0c\u53ef\u4ee5\u4f7f\u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\uff0c\u4f46\u5904\u7406\u7ed3\u679c\u4e2d\u53ea\u6709\u97f3\u9891\u88ab\u4fdd\u7559, \u8fd9\u663e\u7136\u4e0d\u662f\u6211\u60f3\u8981\u7684\u3002 \u5176\u5b9e\uff0c\u53ea\u9700\u8981\u8c03\u6574\u4e00\u4e0b\u4ee3\u7801\u987a\u5e8f\u5c31\u53ef\u4ee5\u4e86\u3002\u77e5\u9053\u771f\u76f8\u7684\u6211\u773c\u6cea\u6389\u4e0b\u6765\u3002","title":"#issue2 - [mp4 @ 0x7fbe86803e00] Malformed AAC bitstream detected: use the audio bitstream filter 'aac_adtstoasc' to fix it ('-bsf:a aac_adtstoasc' option with ffmpeg)"},{"location":"tech/Fmpeg 2.8.6 example code - transcoding/#_2","text":"\u8fd8\u662f\u5728 transcoding.c \u4e2d\u7684 open_output_file \u51fd\u6570\u4e2d\uff0c\u53ea\u662f\u628a for\u5faa\u73af \u5c3e\u90e8\u7684\u90a3\u53e5\u4ee3\u7801\uff1a 1 2 if (ofmt_ctx- oformat- flags AVFMT_GLOBALHEADER) enc_ctx- flags |= AV_CODEC_FLAG_GLOBAL_HEADER; \u63d0\u524d\u5230 for\u5faa\u73af \u4e2d\u6574\u4e2a if\u5224\u65ad\u7ed3\u6784 \u7684\u524d\u9762\u5c31\u884c\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u6253\u5f00\u7f16\u7801\u5668\u524d\uff0c\u6ca1\u6709\u8bbe\u7f6e\u7f16\u7801\u5668\u4e0a\u4e0b\u6587\u4e2denc_ctx- flags\u8fd9\u4e2a\u53c2\u6570\uff0c\u6240\u4ee5\u628a\u8fd9\u53e5\u63d0\u524d\u4e86\u5c31\u89e3\u51b3\u95ee\u9898\u4e86\u3002\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 if ( ofmt_ctx - oformat - flags AVFMT_GLOBALHEADER ) enc_ctx - flags |= AV_CODEC_FLAG_GLOBAL_HEADER ; if ( dec_ctx - codec_type == AVMEDIA_TYPE_VIDEO ) { enc_ctx - height = dec_ctx - height ; enc_ctx - width = dec_ctx - width ; enc_ctx - sample_aspect_ratio = dec_ctx - sample_aspect_ratio ; /* take first format from list of supported formats */ if ( encoder - pix_fmts ) enc_ctx - pix_fmt = encoder - pix_fmts [ 0 ]; else enc_ctx - pix_fmt = dec_ctx - pix_fmt ; /* video time_base can be set to whatever is handy and supported by encoder */ enc_ctx - time_base = dec_ctx - time_base ; enc_ctx - me_range = 16 ; enc_ctx - max_qdiff = 4 ; enc_ctx - qmin = 10 ; enc_ctx - qmax = 51 ; enc_ctx - qcompress = 0.6 ; } else { enc_ctx - sample_rate = dec_ctx - sample_rate ; enc_ctx - channel_layout = dec_ctx - channel_layout ; enc_ctx - channels = av_get_channel_layout_nb_channels ( enc_ctx - channel_layout ); /* take first format from list of supported formats */ enc_ctx - sample_fmt = encoder - sample_fmts [ 0 ]; enc_ctx - time_base = ( AVRational ){ 1 , enc_ctx - sample_rate }; }","title":"\u89e3\u51b3\u65b9\u6cd5"},{"location":"tech/Fmpeg 2.8.6 example code - transcoding/#35issue3-","text":"\u5728\u7ecf\u8fc7\u4ee5\u4e0a\u4e24\u4e2a\u95ee\u9898\u7684\u89e3\u51b3\u540e\uff0c\u7f16\u8bd1\u901a\u8fc7\u662f\u6ca1\u6709\u95ee\u9898\u4e86\uff0c\u4e0d\u8fc7\u4f60\u53ef\u80fd\u4f1a\u4e0d\u6ee1\u610f\u8f93\u51fa\u89c6\u9891\u7684\u8d28\u91cf\uff0c\u89c9\u5f97\u5b83\u6bd4\u539f\u89c6\u9891\u6a21\u7cca\u4e86\u8bb8\u591a\uff0c\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u8c03\u8282\u001d \\#issue1 \u4e2d\u7684\u4ee3\u7801\uff1a 1 enc_ctx- qmax = 51; \u628a\u8fd9\u4e2a\u53c2\u6570\u6539\u5c0f\u70b9\uff0c\u53ef\u4ee5\u51cf\u5c0f\u7f16\u7801\u65f6\u7684\u91cf\u5316\u95f4\u9694\uff0c\u63d0\u9ad8\u7f16\u7801\u89c6\u9891\u7684\u8d28\u91cf\uff0c\u4e0d\u8fc7\u4f60\u53ef\u80fd\u56e0\u6b64\u52a0\u957f\u6574\u4e2a\u7f16\u7801\u7684\u65f6\u95f4\u3002 \u4f8b\u5982\u6211\u5c06\u5176\u6539\u4e3a\uff1a 1 enc_ctx- qmax = 30;","title":"#issue3 - \u5904\u7406\u540e\u7684\u7ed3\u679c\u6bd4\u539f\u89c6\u9891\u6a21\u7cca"},{"location":"tech/Fmpeg 2.8.6 example code - transcoding/#_3","text":"filename: transcoding.copyright (c) 2010 Nicolas George * Copyright (c) 2011 Stefano Sabatini * Copyright (c) 2014 Andrey Utkin * * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the Software ), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: * * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED AS IS , WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. */ /** * @file * API example for demuxing, decoding, filtering, encoding and muxing * @example transcoding.c */ #include libavcodec/avcodec.h #include libavformat/avformat.h #include libavfilter/avfiltergraph.h #include libavfilter/buffersink.h #include libavfilter/buffersrc.h #include libavutil/opt.h #include libavutil/pixdesc.h static AVFormatContext * ifmt_ctx ; static AVFormatContext * ofmt_ctx ; typedef struct FilteringContext { AVFilterContext * buffersink_ctx ; AVFilterContext * buffersrc_ctx ; AVFilterGraph * filter_graph ; } FilteringContext ; static FilteringContext * filter_ctx ; static int open_input_file ( const char * filename ) { int ret ; unsigned int i ; ifmt_ctx = NULL ; if (( ret = avformat_open_input ( ifmt_ctx , filename , NULL , NULL )) 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot open input file \\n ); return ret ; } if (( ret = avformat_find_stream_info ( ifmt_ctx , NULL )) 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot find stream information \\n ); return ret ; } for ( i = 0 ; i ifmt_ctx - nb_streams ; i ++ ) { AVStream * stream ; AVCodecContext * codec_ctx ; stream = ifmt_ctx - streams [ i ]; codec_ctx = stream - codec ; /* Reencode video audio and remux subtitles etc. */ if ( codec_ctx - codec_type == AVMEDIA_TYPE_VIDEO || codec_ctx - codec_type == AVMEDIA_TYPE_AUDIO ) { /* Open decoder */ ret = avcodec_open2 ( codec_ctx , avcodec_find_decoder ( codec_ctx - codec_id ), NULL ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Failed to open decoder for stream #%u \\n , i ); return ret ; } } } av_dump_format ( ifmt_ctx , 0 , filename , 0 ); return 0 ; } static int open_output_file ( const char * filename ) { AVStream * out_stream ; AVStream * in_stream ; AVCodecContext * dec_ctx , * enc_ctx ; AVCodec * encoder ; int ret ; unsigned int i ; ofmt_ctx = NULL ; avformat_alloc_output_context2 ( ofmt_ctx , NULL , NULL , filename ); if ( ! ofmt_ctx ) { av_log ( NULL , AV_LOG_ERROR , Could not create output context \\n ); return AVERROR_UNKNOWN ; } for ( i = 0 ; i ifmt_ctx - nb_streams ; i ++ ) { out_stream = avformat_new_stream ( ofmt_ctx , NULL ); if ( ! out_stream ) { av_log ( NULL , AV_LOG_ERROR , Failed allocating output stream \\n ); return AVERROR_UNKNOWN ; } in_stream = ifmt_ctx - streams [ i ]; dec_ctx = in_stream - codec ; enc_ctx = out_stream - codec ; if ( dec_ctx - codec_type == AVMEDIA_TYPE_VIDEO || dec_ctx - codec_type == AVMEDIA_TYPE_AUDIO ) { /* in this example, we choose transcoding to same codec */ encoder = avcodec_find_encoder ( dec_ctx - codec_id ); if ( ! encoder ) { av_log ( NULL , AV_LOG_FATAL , Necessary encoder not found \\n ); return AVERROR_INVALIDDATA ; } /* In this example, we transcode to same properties (picture size, * sample rate etc.). These properties can be changed for output * streams easily using filters */ if ( ofmt_ctx - oformat - flags AVFMT_GLOBALHEADER ) enc_ctx - flags |= AV_CODEC_FLAG_GLOBAL_HEADER ; if ( dec_ctx - codec_type == AVMEDIA_TYPE_VIDEO ) { enc_ctx - height = dec_ctx - height ; enc_ctx - width = dec_ctx - width ; enc_ctx - sample_aspect_ratio = dec_ctx - sample_aspect_ratio ; /* take first format from list of supported formats */ if ( encoder - pix_fmts ) enc_ctx - pix_fmt = encoder - pix_fmts [ 0 ]; else enc_ctx - pix_fmt = dec_ctx - pix_fmt ; /* video time_base can be set to whatever is handy and supported by encoder */ enc_ctx - time_base = dec_ctx - time_base ; enc_ctx - me_range = 16 ; enc_ctx - max_qdiff = 4 ; enc_ctx - qmin = 10 ; enc_ctx - qmax = 51 ; enc_ctx - qcompress = 0.6 ; } else { enc_ctx - sample_rate = dec_ctx - sample_rate ; enc_ctx - channel_layout = dec_ctx - channel_layout ; enc_ctx - channels = av_get_channel_layout_nb_channels ( enc_ctx - channel_layout ); /* take first format from list of supported formats */ enc_ctx - sample_fmt = encoder - sample_fmts [ 0 ]; enc_ctx - time_base = ( AVRational ){ 1 , enc_ctx - sample_rate }; } /* Third parameter can be used to pass settings to encoder */ ret = avcodec_open2 ( enc_ctx , encoder , NULL ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot open video encoder for stream #%u \\n , i ); return ret ; } } else if ( dec_ctx - codec_type == AVMEDIA_TYPE_UNKNOWN ) { av_log ( NULL , AV_LOG_FATAL , Elementary stream #%d is of unknown type, cannot proceed \\n , i ); return AVERROR_INVALIDDATA ; } else { /* if this stream must be remuxed */ ret = avcodec_copy_context ( ofmt_ctx - streams [ i ] - codec , ifmt_ctx - streams [ i ] - codec ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Copying stream context failed \\n ); return ret ; } } } av_dump_format ( ofmt_ctx , 0 , filename , 1 ); if ( ! ( ofmt_ctx - oformat - flags AVFMT_NOFILE )) { ret = avio_open ( ofmt_ctx - pb , filename , AVIO_FLAG_WRITE ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Could not open output file %s , filename ); return ret ; } } /* init muxer, write output file header */ ret = avformat_write_header ( ofmt_ctx , NULL ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Error occurred when opening output file \\n ); return ret ; } return 0 ; } static int init_filter ( FilteringContext * fctx , AVCodecContext * dec_ctx , AVCodecContext * enc_ctx , const char * filter_spec ) { char args [ 512 ]; int ret = 0 ; AVFilter * buffersrc = NULL ; AVFilter * buffersink = NULL ; AVFilterContext * buffersrc_ctx = NULL ; AVFilterContext * buffersink_ctx = NULL ; AVFilterInOut * outputs = avfilter_inout_alloc (); AVFilterInOut * inputs = avfilter_inout_alloc (); AVFilterGraph * filter_graph = avfilter_graph_alloc (); if ( ! outputs || ! inputs || ! filter_graph ) { ret = AVERROR ( ENOMEM ); goto end ; } if ( dec_ctx - codec_type == AVMEDIA_TYPE_VIDEO ) { buffersrc = avfilter_get_by_name ( buffer ); buffersink = avfilter_get_by_name ( buffersink ); if ( ! buffersrc || ! buffersink ) { av_log ( NULL , AV_LOG_ERROR , filtering source or sink element not found \\n ); ret = AVERROR_UNKNOWN ; goto end ; } snprintf ( args , sizeof ( args ), video_size=%dx%d:pix_fmt=%d:time_base=%d/%d:pixel_aspect=%d/%d , dec_ctx - width , dec_ctx - height , dec_ctx - pix_fmt , dec_ctx - time_base . num , dec_ctx - time_base . den , dec_ctx - sample_aspect_ratio . num , dec_ctx - sample_aspect_ratio . den ); ret = avfilter_graph_create_filter ( buffersrc_ctx , buffersrc , in , args , NULL , filter_graph ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot create buffer source \\n ); goto end ; } ret = avfilter_graph_create_filter ( buffersink_ctx , buffersink , out , NULL , NULL , filter_graph ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot create buffer sink \\n ); goto end ; } ret = av_opt_set_bin ( buffersink_ctx , pix_fmts , ( uint8_t * ) enc_ctx - pix_fmt , sizeof ( enc_ctx - pix_fmt ), AV_OPT_SEARCH_CHILDREN ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot set output pixel format \\n ); goto end ; } } else if ( dec_ctx - codec_type == AVMEDIA_TYPE_AUDIO ) { buffersrc = avfilter_get_by_name ( abuffer ); buffersink = avfilter_get_by_name ( abuffersink ); if ( ! buffersrc || ! buffersink ) { av_log ( NULL , AV_LOG_ERROR , filtering source or sink element not found \\n ); ret = AVERROR_UNKNOWN ; goto end ; } if ( ! dec_ctx - channel_layout ) dec_ctx - channel_layout = av_get_default_channel_layout ( dec_ctx - channels ); snprintf ( args , sizeof ( args ), time_base=%d/%d:sample_rate=%d:sample_fmt=%s:channel_layout=0x% PRIx64 , dec_ctx - time_base . num , dec_ctx - time_base . den , dec_ctx - sample_rate , av_get_sample_fmt_name ( dec_ctx - sample_fmt ), dec_ctx - channel_layout ); ret = avfilter_graph_create_filter ( buffersrc_ctx , buffersrc , in , args , NULL , filter_graph ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot create audio buffer source \\n ); goto end ; } ret = avfilter_graph_create_filter ( buffersink_ctx , buffersink , out , NULL , NULL , filter_graph ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot create audio buffer sink \\n ); goto end ; } ret = av_opt_set_bin ( buffersink_ctx , sample_fmts , ( uint8_t * ) enc_ctx - sample_fmt , sizeof ( enc_ctx - sample_fmt ), AV_OPT_SEARCH_CHILDREN ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot set output sample format \\n ); goto end ; } ret = av_opt_set_bin ( buffersink_ctx , channel_layouts , ( uint8_t * ) enc_ctx - channel_layout , sizeof ( enc_ctx - channel_layout ), AV_OPT_SEARCH_CHILDREN ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot set output channel layout \\n ); goto end ; } ret = av_opt_set_bin ( buffersink_ctx , sample_rates , ( uint8_t * ) enc_ctx - sample_rate , sizeof ( enc_ctx - sample_rate ), AV_OPT_SEARCH_CHILDREN ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Cannot set output sample rate \\n ); goto end ; } } else { ret = AVERROR_UNKNOWN ; goto end ; } /* Endpoints for the filter graph. */ outputs - name = av_strdup ( in ); outputs - filter_ctx = buffersrc_ctx ; outputs - pad_idx = 0 ; outputs - next = NULL ; inputs - name = av_strdup ( out ); inputs - filter_ctx = buffersink_ctx ; inputs - pad_idx = 0 ; inputs - next = NULL ; if ( ! outputs - name || ! inputs - name ) { ret = AVERROR ( ENOMEM ); goto end ; } if (( ret = avfilter_graph_parse_ptr ( filter_graph , filter_spec , inputs , outputs , NULL )) 0 ) goto end ; if (( ret = avfilter_graph_config ( filter_graph , NULL )) 0 ) goto end ; /* Fill FilteringContext */ fctx - buffersrc_ctx = buffersrc_ctx ; fctx - buffersink_ctx = buffersink_ctx ; fctx - filter_graph = filter_graph ; end : avfilter_inout_free ( inputs ); avfilter_inout_free ( outputs ); return ret ; } static int init_filters ( void ) { const char * filter_spec ; unsigned int i ; int ret ; filter_ctx = av_malloc_array ( ifmt_ctx - nb_streams , sizeof ( * filter_ctx )); if ( ! filter_ctx ) return AVERROR ( ENOMEM ); for ( i = 0 ; i ifmt_ctx - nb_streams ; i ++ ) { filter_ctx [ i ]. buffersrc_ctx = NULL ; filter_ctx [ i ]. buffersink_ctx = NULL ; filter_ctx [ i ]. filter_graph = NULL ; if ( ! ( ifmt_ctx - streams [ i ] - codec - codec_type == AVMEDIA_TYPE_AUDIO || ifmt_ctx - streams [ i ] - codec - codec_type == AVMEDIA_TYPE_VIDEO )) continue ; if ( ifmt_ctx - streams [ i ] - codec - codec_type == AVMEDIA_TYPE_VIDEO ) filter_spec = null ; /* passthrough (dummy) filter for video */ else filter_spec = anull ; /* passthrough (dummy) filter for audio */ ret = init_filter ( filter_ctx [ i ], ifmt_ctx - streams [ i ] - codec , ofmt_ctx - streams [ i ] - codec , filter_spec ); if ( ret ) return ret ; } return 0 ; } static int encode_write_frame ( AVFrame * filt_frame , unsigned int stream_index , int * got_frame ) { int ret ; int got_frame_local ; AVPacket enc_pkt ; int ( * enc_func )( AVCodecContext * , AVPacket * , const AVFrame * , int * ) = ( ifmt_ctx - streams [ stream_index ] - codec - codec_type == AVMEDIA_TYPE_VIDEO ) ? avcodec_encode_video2 : avcodec_encode_audio2 ; if ( ! got_frame ) got_frame = got_frame_local ; av_log ( NULL , AV_LOG_INFO , Encoding frame \\n ); /* encode filtered frame */ enc_pkt . data = NULL ; enc_pkt . size = 0 ; av_init_packet ( enc_pkt ); ret = enc_func ( ofmt_ctx - streams [ stream_index ] - codec , enc_pkt , filt_frame , got_frame ); av_frame_free ( filt_frame ); if ( ret 0 ) return ret ; if ( ! ( * got_frame )) return 0 ; /* prepare packet for muxing */ enc_pkt . stream_index = stream_index ; av_packet_rescale_ts ( enc_pkt , ofmt_ctx - streams [ stream_index ] - codec - time_base , ofmt_ctx - streams [ stream_index ] - time_base ); av_log ( NULL , AV_LOG_DEBUG , Muxing frame \\n ); /* mux encoded frame */ ret = av_interleaved_write_frame ( ofmt_ctx , enc_pkt ); return ret ; } static int filter_encode_write_frame ( AVFrame * frame , unsigned int stream_index ) { int ret ; AVFrame * filt_frame ; av_log ( NULL , AV_LOG_INFO , Pushing decoded frame to filters \\n ); /* push the decoded frame into the filtergraph */ ret = av_buffersrc_add_frame_flags ( filter_ctx [ stream_index ]. buffersrc_ctx , frame , 0 ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Error while feeding the filtergraph \\n ); return ret ; } /* pull filtered frames from the filtergraph */ while ( 1 ) { filt_frame = av_frame_alloc (); if ( ! filt_frame ) { ret = AVERROR ( ENOMEM ); break ; } av_log ( NULL , AV_LOG_INFO , Pulling filtered frame from filters \\n ); ret = av_buffersink_get_frame ( filter_ctx [ stream_index ]. buffersink_ctx , filt_frame ); if ( ret 0 ) { /* if no more frames for output - returns AVERROR(EAGAIN) * if flushed and no more frames for output - returns AVERROR_EOF * rewrite retcode to 0 to show it as normal procedure completion */ if ( ret == AVERROR ( EAGAIN ) || ret == AVERROR_EOF ) ret = 0 ; av_frame_free ( filt_frame ); break ; } filt_frame - pict_type = AV_PICTURE_TYPE_NONE ; ret = encode_write_frame ( filt_frame , stream_index , NULL ); if ( ret 0 ) break ; } return ret ; } static int flush_encoder ( unsigned int stream_index ) { int ret ; int got_frame ; if ( ! ( ofmt_ctx - streams [ stream_index ] - codec - codec - capabilities AV_CODEC_CAP_DELAY )) return 0 ; while ( 1 ) { av_log ( NULL , AV_LOG_INFO , Flushing stream #%u encoder \\n , stream_index ); ret = encode_write_frame ( NULL , stream_index , got_frame ); if ( ret 0 ) break ; if ( ! got_frame ) return 0 ; } return ret ; } int main ( int argc , char ** argv ) { int ret ; AVPacket packet = { . data = NULL , . size = 0 }; AVFrame * frame = NULL ; enum AVMediaType type ; unsigned int stream_index ; unsigned int i ; int got_frame ; int ( * dec_func )( AVCodecContext * , AVFrame * , int * , const AVPacket * ); if ( argc != 3 ) { av_log ( NULL , AV_LOG_ERROR , Usage: %s input file output file \\n , argv [ 0 ]); return 1 ; } av_register_all (); avfilter_register_all (); if (( ret = open_input_file ( argv [ 1 ])) 0 ) goto end ; if (( ret = open_output_file ( argv [ 2 ])) 0 ) goto end ; if (( ret = init_filters ()) 0 ) goto end ; /* read all packets */ while ( 1 ) { if (( ret = av_read_frame ( ifmt_ctx , packet )) 0 ) break ; stream_index = packet . stream_index ; type = ifmt_ctx - streams [ packet . stream_index ] - codec - codec_type ; av_log ( NULL , AV_LOG_DEBUG , Demuxer gave frame of stream_index %u \\n , stream_index ); if ( filter_ctx [ stream_index ]. filter_graph ) { av_log ( NULL , AV_LOG_DEBUG , Going to reencode filter the frame \\n ); frame = av_frame_alloc (); if ( ! frame ) { ret = AVERROR ( ENOMEM ); break ; } av_packet_rescale_ts ( packet , ifmt_ctx - streams [ stream_index ] - time_base , ifmt_ctx - streams [ stream_index ] - codec - time_base ); dec_func = ( type == AVMEDIA_TYPE_VIDEO ) ? avcodec_decode_video2 : avcodec_decode_audio4 ; ret = dec_func ( ifmt_ctx - streams [ stream_index ] - codec , frame , got_frame , packet ); if ( ret 0 ) { av_frame_free ( frame ); av_log ( NULL , AV_LOG_ERROR , Decoding failed \\n ); break ; } if ( got_frame ) { frame - pts = av_frame_get_best_effort_timestamp ( frame ); ret = filter_encode_write_frame ( frame , stream_index ); av_frame_free ( frame ); if ( ret 0 ) goto end ; } else { av_frame_free ( frame ); } } else { /* remux this frame without reencoding */ av_packet_rescale_ts ( packet , ifmt_ctx - streams [ stream_index ] - time_base , ofmt_ctx - streams [ stream_index ] - time_base ); ret = av_interleaved_write_frame ( ofmt_ctx , packet ); if ( ret 0 ) goto end ; } av_packet_unref ( packet ); } /* flush filters and encoders */ for ( i = 0 ; i ifmt_ctx - nb_streams ; i ++ ) { /* flush filter */ if ( ! filter_ctx [ i ]. filter_graph ) continue ; ret = filter_encode_write_frame ( NULL , i ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Flushing filter failed \\n ); goto end ; } /* flush encoder */ ret = flush_encoder ( i ); if ( ret 0 ) { av_log ( NULL , AV_LOG_ERROR , Flushing encoder failed \\n ); goto end ; } } av_write_trailer ( ofmt_ctx ); end : av_packet_unref ( packet ); av_frame_free ( frame ); for ( i = 0 ; i ifmt_ctx - nb_streams ; i ++ ) { avcodec_close ( ifmt_ctx - streams [ i ] - codec ); if ( ofmt_ctx ofmt_ctx - nb_streams i ofmt_ctx - streams [ i ] ofmt_ctx - streams [ i ] - codec ) avcodec_close ( ofmt_ctx - streams [ i ] - codec ); if ( filter_ctx filter_ctx [ i ]. filter_graph ) avfilter_graph_free ( filter_ctx [ i ]. filter_graph ); } av_free ( filter_ctx ); avformat_close_input ( ifmt_ctx ); if ( ofmt_ctx ! ( ofmt_ctx - oformat - flags AVFMT_NOFILE )) avio_closep ( ofmt_ctx - pb ); avformat_free_context ( ofmt_ctx ); if ( ret 0 ) av_log ( NULL , AV_LOG_ERROR , Error occurred: %s \\n , av_err2str ( ret )); return ret ? 1 : 0 ; }","title":"\u6700\u540e\u9644\u4e0a\u4fee\u6539\u540e\u7684\u5b8c\u6574\u4ee3\u7801\uff1a"},{"location":"tech/Installation of Ubuntu 16.04 On UDisk/","text":"Installation of Ubuntu 16.04 On UDisk \u5b89\u88c5Ubuntu 16.04 \u6211\u662f\u5728Mac\u7535\u8111\u4e0b\u5de5\u4f5c\u7684\uff0c\u9996\u5148\u9700\u8981\u5236\u4f5c\u4e00\u4e2aU\u76d8\u5b89\u88c5\u76d8\u3002\u56e0\u4e3aMac\u7535\u8111\u662f\u901a\u8fc7UEFI\u5f15\u5bfc\u7684\uff0c\u6240\u4ee5\u9700\u8981\u5c06U\u76d8\u5206\u533a\u4e3aGUID\u683c\u5f0f\u7684\uff0c\u5f53\u7136\u5982\u679c\u4f60\u4e0d\u662f\u5728Mac\u4e0b\u5de5\u4f5c\uff0c\u5c31\u4e0d\u5fc5\u5206\u533a\u4e3aGUID\u4e86\uff0c\u8fd9\u6837\u5206\u533a\u53ea\u662f\u4e3a\u4e86\u8ba9UEFI\u53ef\u4ee5\u5728\u5f15\u5bfc\u83dc\u5355\u4e2d\u663e\u793a\u5236\u4f5c\u597d\u7684U\u76d8\u5b89\u88c5\u76d8\u3002 \u5728Mac\u4e0b\u5236U\u76d8\u5b89\u88c5\u76d8\uff0c\u9996\u5148\u8981\u5c06\u4e0b\u8f7d\u597d\u7684IOS\u955c\u50cf\u6587\u4ef6\u8f6c\u5316\u6210\u4e3aIMG\u683c\u5f0f\uff0c\u5047\u8bbe\u6211\u7684Ubuntu\u7cfb\u7edfIOS\u6587\u4ef6\u540d\u4e3a\uff1a ubuntu-16.04-desktop-i386.iso , \u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u683c\u5f0f\u8f6c\u5316: 1 localhost : Downloads wangzhizhou$ hdiutil convert - format UDRW - o ubuntu - 16.04 - desktop - i386 . img ubuntu - 16.04 - desktop - i386 . iso \u8f6c\u5316\u540e\u7684\u6587\u4ef6\u540d\u4e3a\uff1a ubuntu-16.04-desktop-i386.img.dmg \uff0c\u8fd9\u4e2a\u5176\u5b9e\u540d\u5b57\u6ca1\u4ec0\u4e48\u5173\u7cfb\uff0c\u91cd\u8981\u7684\u662f\u955c\u50cf\u7684\u5185\u5bb9\u6309\u7167Mac\u53ef\u8bc6\u522b\u7684\u683c\u5f0f\u5f97\u5230\u4e86\u8f6c\u5316\uff0c\u4e4b\u540e\u6211\u4eec\u5c31\u5c06\u8f6c\u5316\u540e\u7684\u6587\u4ef6\u5199\u5165U\u76d8\u3002 \u5199\u5165U\u76d8\u524d\uff0c\u9996\u5148\u8981\u627e\u5230U\u76d8\uff0c\u6211\u4eec\u4f7f\u7528 diskutil list \u5c06\u5f53\u524d\u63d2\u5165\u7535\u8111\u7684\u6240\u6709\u78c1\u76d8\u663e\u793a\u51fa\u6765\uff0c\u627e\u51fa\u6211\u4eec\u60f3\u8981\u5199\u5165\u7684\u90a3\u4e2a,\u6211\u8fd9\u91cc\u663e\u793a\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 localhost : Downloads wangzhizhou$ diskutil list /dev/ disk0 ( internal , physical ): # : TYPE NAME SIZE IDENTIFIER 0 : GUID_partition_scheme * 121.3 GB disk0 1 : EFI EFI 209.7 MB disk0s1 2 : Apple_CoreStorage Macintosh HD 120.5 GB disk0s2 3 : Apple_Boot Recovery HD 650.0 MB disk0s3 /dev/ disk1 ( internal , virtual ): # : TYPE NAME SIZE IDENTIFIER 0 : Apple_HFS Macintosh HD + 120.1 GB disk1 Logical Volume on disk0s2 DA03CC12 - 7 D54 - 44 AA - ADC8 - 424073352296 Unlocked Encrypted /dev/ disk2 ( external , physical ): # : TYPE NAME SIZE IDENTIFIER 0 : GUID_partition_scheme * 61.9 GB disk2 1 : EFI EFI 209.7 MB disk2s1 2 : Apple_HFS 61.6 GB disk2s2 \u4ece\u4e0a\u9762\u770b\u51fa\uff0c\u6211\u8981\u5199\u5165\u7684U\u76d8\u662f /dev/disk2 ,\u56e0\u4e3a\u5b83\u662f\u5916\u90e8\u7269\u7406\u76d8\uff0c\u5e76\u78c1\u76d8\u5927\u5c0f\u4e0e\u6211\u7684U\u76d8\u5927\u5c0f\u4e00\u81f4\uff0c64GB\u5de6\u53f3\u3002\u6211\u5df2\u7ecf\u4f7f\u7528\u78c1\u76d8\u5de5\u5177\u628a\u5b83\u683c\u5f0f\u5316\u6210GUID\u5206\u533a\uff0c\u6240\u4ee5\u652f\u6301UEFI\u5f15\u5bfc\u3002 \u6211\u4eec\u5148\u7528\u547d\u4ee4\u628aU\u76d8\u63a8\u51fa\uff0c\u8fd9\u6837\u4e5f\u80fd\u8fdb\u884c\u5199\u5165\u64cd\u4f5c\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u5199\u5165\u7cfb\u7edf\u955c\u50cf\uff0c\u5982\u679c\u4e0d\u63a8\u51fa\u5c31\u5199\u5165\u7684\u8bdd\uff0c\u4e0d\u80fd\u5199\u5230\u78c1\u76d8\u7684\u6700\u5f00\u59cb\u90e8\u5206\uff0c\u4e5f\u5c31\u65e0\u6cd5\u8fdb\u884c\u5f15\u5bfc\u3002\u6211U\u76d8\u7684\u6302\u8f7d\u70b9\u4e3a /Volumes/Ubuntu/ \uff0c\u6240\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff1a 1 2 localhost : Downloads wangzhizhou$ diskutil unmount /Volumes/Ubuntu/ Volume Ubuntu on disk2s2 unmounted \u65e2\u7136U\u76d8\u5df2\u4ece\u6302\u8f7d\u70b9\u5378\u8f7d\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5199\u5165\u7cfb\u7edf\u955c\u50cf\u6587\u4ef6\u4e86\uff0c\u6ce8\u610f\u662f\u8f6c\u5316\u540e\u7684\u6587\u4ef6 ubuntu-16.04-desktop-i386.img.dmg : 1 2 3 4 5 localhost : Downloads wangzhizhou$ sudo dd if = ubuntu - 16.04 - desktop - i386 . img . dmg of =/ dev / rdisk2 bs = 1024 m Password : 1 + 1 records in 1 + 1 records out 1504051200 bytes transferred in 96.270441 secs ( 15623188 bytes / sec ) \u6ce8\u610f\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 /dev/rdisk2 \u4f5c\u4e3a\u5199\u5165\u7684\u76ee\u6807\u78c1\u76d8\uff0crdisk2\u5bf9\u5e94\u4e8edisk2\uff0c\u901a\u5e38\u4f7f\u7528\u5b83\u80fd\u591f\u4ee5\u66f4\u5feb\u7684\u901f\u5ea6\u5199\u5165U\u76d8\uff0cr\u4ee3\u8868removeable\uff0c\u5373\u53ef\u79fb\u52a8\u78c1\u76d8\u7684\u610f\u601d\u3002 \u73b0\u5728\u6211\u4eec\u91cd\u542fMac\uff0c\u5e76\u5728\u91cd\u542f\u8fc7\u7a0b\u4e2d\u6309\u4e0b option \u4e0d\u653e\u76f4\u5230\u542f\u52a8\u83dc\u5355\u51fa\u73b0\u6211\u4eec\u7684U\u76d8\u5b89\u88c5\u76d8\uff0c\u5982\u679c\u6ca1\u6709\u51fa\u73b0\uff0c\u8bf4\u660e\u6ca1\u6709\u5236\u4f5c\u6210\u529f\uff0c\u4e00\u5b9a\u662f\u54ea\u4e2a\u73af\u8282\u6ca1\u6709\u6309\u6b65\u9aa4\u6765\uff0c\u9700\u8981\u91cd\u5934\u6765\u4e00\u904d\u3002\u6ce8\u610fU\u76d8\u8981\u63d2\u5728\u7535\u8111\u4e0a\u3002 1 localhost : Downloads wangzhizhou$ sudo reboot \u91cd\u542f\u7535\u8111 \u4e4b\u540e\u5c31\u662f\u6b63\u5e38\u7684\u5b89\u88c5Ubuntu\u4e86\uff0c\u81ea\u5df1\u53bb\u6478\u7d22\u5427\uff5e \u6211\u9760\uff0c\u5f00\u673a\u540e\u5c45\u7136\u4e0d\u80fd\u5f15\u5bfc\uff0c\u7ecf\u8fc7\u4e0d\u65ad\u7684\u767e\u5ea6\uff0c\u6709\u7f51\u53cb\u79f0Ubuntu\u53ea\u5bf964\u4f4d\u7248\u672c\u63d0\u4f9bUEFI\u5f15\u5bfc\u6a21\u5f0f\uff0c\u545c\u547c\uff0c\u53c8\u5f97\u91cd\u65b0\u6765\u4e00\u904d\u3002\u5148\u4e0b\u8f7d\u4e00\u4e2a64\u4f4d\u7248\u7684Ubuntu\u5b89\u88c5\u955c\u50cf\uff0c\u7136\u540e\u518d\u91cd\u65b0\u6765\u4e00\u6b21\u5427\u3002\u5982\u679c\u4f7f\u7528\u4f20\u7edfBIOS\u5f15\u5bfc\u5b8c\u5168\u4e0d\u5b58\u5728\u8fd9\u79cd\u60c5\u51b5\u3002 \u8fd9\u6b21\u6587\u4ef6\u540d\u4e3a\uff1a ubuntu-16.04-desktop-amd64.iso ,\u5c31\u4e0d\u4e00\u4e00\u8bf4\u660e\u4e86\uff0c\u76f4\u63a5\u8d34\u547d\u4ee4\u884c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 localhost : Downloads JokerAtBaoFeng$ diskutil list /dev/ disk0 ( internal , physical ): # : TYPE NAME SIZE IDENTIFIER 0 : GUID_partition_scheme * 251.0 GB disk0 1 : EFI EFI 209.7 MB disk0s1 2 : Apple_CoreStorage Macintosh HD 250.1 GB disk0s2 3 : Apple_Boot Recovery HD 650.0 MB disk0s3 /dev/ disk1 ( internal , virtual ): # : TYPE NAME SIZE IDENTIFIER 0 : Apple_HFS Macintosh HD + 249.8 GB disk1 Logical Volume on disk0s2 3 B2115D8 - 1852 - 411 F - 9052 - ABA876FD6128 Unencrypted /dev/ disk2 ( external , physical ): # : TYPE NAME SIZE IDENTIFIER 0 : GUID_partition_scheme * 61.9 GB disk2 1 : EFI EFI 209.7 MB disk2s1 2 : Apple_HFS Ubuntu16 . 04 _64 61.6 GB disk2s2 localhost : Downloads JokerAtBaoFeng$ diskutil unmountDisk /dev/ disk2 Unmount of all volumes on disk2 was successful localhost : Downloads JokerAtBaoFeng$ hdiutil convert - format UDRW - o ubuntu - 16.04 - desktop - amd64 ubuntu - 16.04 - desktop - amd64 . iso \u6b63\u5728\u8bfb\u53d6 Driver Descriptor Map \uff08 DDM \uff1a 0 \uff09\u2026 \u6b63\u5728\u8bfb\u53d6 Ubuntu 16.04 LTS amd64 \uff08 Apple_ISO \uff1a 1 \uff09\u2026 \u6b63\u5728\u8bfb\u53d6 Apple \uff08 Apple_partition_map \uff1a 2 \uff09\u2026 \u6b63\u5728\u8bfb\u53d6 Ubuntu 16.04 LTS amd64 \uff08 Apple_ISO \uff1a 3 \uff09\u2026 .............................................................................. \u6b63\u5728\u8bfb\u53d6 EFI \uff08 Apple_HFS \uff1a 4 \uff09\u2026 .............................................................................. \u6b63\u5728\u8bfb\u53d6 Ubuntu 16.04 LTS amd64 \uff08 Apple_ISO \uff1a 5 \uff09\u2026 .............................................................................. \u5df2\u8017\u65f6\uff1a 3.304 s \u901f\u5ea6\uff1a 428.8 M \u5b57\u8282 / \u79d2 \u8282\u7701\uff1a 0.0 % created : /Users/JokerAtBaoFeng/Downloads/ ubuntu - 16.04 - desktop - amd64 . dmg localhost : Downloads JokerAtBaoFeng$ sudo dd if = ubuntu - 16.04 - desktop - amd64 . dmg of =/ dev / rdisk2 bs = 1024 m Password : 1 + 1 records in 1 + 1 records out 1485881344 bytes transferred in 95.220324 secs ( 15604666 bytes / sec ) \u7cfb\u7edf\u955c\u50cf\u5199\u5165\u5b8c\u6210\u540e\uff0c\u4f1a\u5f39\u51fa\u4e00\u4e2a\u5bf9\u8bdd\u6846\uff0c\u9009\u62e9\u5ffd\u7565\u5373\u53ef\u3002\u8fd9\u6b21\u5e94\u8be5\u53ef\u4ee5\u4e86\uff0c64\u4f4dUbuntu\u652f\u6301UEFI\u542f\u52a8\uff0c\u5e76\u4e14\u6211\u4eec\u7684U\u76d8\u5df2\u7ecf\u6309GUID\u5206\u533a\u65b9\u6848\u5206\u8fc7\u533a\uff0c\u73b0\u5728\u91cd\u542fMac\uff0c\u5e76\u6309\u4f4f option \u4e0d\u653e\u5373\u53ef\u3002\u542f\u52a8\u83dc\u5355\u8fd9\u6b21\u4f1a\u5f39\u51faU\u76d8\u5b89\u88c5\u76d8\u9009\u9879\u4e86\u3002 \u54e6\u8fd9\u91cc\u53c8\u51fa\u73b0\u95ee\u9898\u4e86\uff0c\u6309\u4f4f option \u91cd\u542f\u540e\u4f9d\u7136\u6ca1\u6709\u5f15\u5bfc\u9879\uff0c\u8fd9\u662f\u56e0\u4e3a\u5b89\u88c5\u8fc7\u7a0b\u4e2d\uff0cEFI\u5f15\u5bfc\u6587\u4ef6\u88ab\u5b89\u88c5\u5230\u4e86\u7cfb\u7edf\u78c1\u76d8\u7684EFI\u5206\u533a\u4e86\uff0c\u6211\u4eec\u9700\u8981\u628a\u90a3\u4e2a\u6587\u4ef6\u62f7\u5230\u5b89\u88c5\u7cfb\u7edf\u7684U\u76d8\u4e0a\u7684\u90a3\u4e2aEFI\u5206\u533a\u3002\u6211\u4eec\u8fdb\u5165Mactonish HD\uff0c\u542f\u52a8OS X\uff0c\u5728\u547d\u4ee4\u884c\u4e2d\u628a\u6240\u6709\u78c1\u76d8\u90fd\u5217\u51fa\u6765\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 localhost : ubuntu wangzhizhou$ diskutil list /dev/ disk0 ( internal , physical ): # : TYPE NAME SIZE IDENTIFIER 0 : GUID_partition_scheme * 121.3 GB disk0 1 : EFI EFI 209.7 MB disk0s1 2 : Apple_CoreStorage Macintosh HD 120.5 GB disk0s2 3 : Apple_Boot Recovery HD 650.0 MB disk0s3 /dev/ disk1 ( internal , virtual ): # : TYPE NAME SIZE IDENTIFIER 0 : Apple_HFS Macintosh HD + 120.1 GB disk1 Logical Volume on disk0s2 DA03CC12 - 7 D54 - 44 AA - ADC8 - 424073352296 Unlocked Encrypted /dev/ disk2 ( external , physical ): # : TYPE NAME SIZE IDENTIFIER 0 : GUID_partition_scheme * 62.6 GB disk2 1 : EFI NO NAME 499.1 MB disk2s1 2 : Bios Boot Partition 127.9 MB disk2s2 3 : Linux Swap 4.1 GB disk2s3 4 : Linux Filesystem 57.9 GB disk2s4 \u6211\u4eec\u5c06EFI\u5206\u533a\uff1a\u001d /dev/disk0s1 \u548c /dev/disk2s1 \u90fd\u6302\u8f7d\u5230\u8def\u5f84 /Volumes \u4e0b\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\uff1a 1 2 3 4 5 6 7 8 9 10 localhost :~ wangzhizhou $ diskutil mount / dev / disk0s1 ; diskutil mount / dev / disk2s1 Volume EFI on / dev / disk0s1 mounted Volume NO NAME on / dev / disk2s1 mounted localhost :~ wangzhizhou $ ls / Volumes / EFI Macintosh HD NO NAME localhost : NO NAME wangzhizhou $ ls / Volumes / EFI / / Volumes / NO \\ NAME / / Volumes / EFI /: EFI / Volumes / NO NAME /: /Volumes \u4e0b EFI \u548c NO NAME \u76ee\u5f55\u5c31\u662f\u4e24\u4e2aEFI\u5206\u533a\u7684\u6302\u8f7d\u70b9\uff0c\u4f60\u53d1\u73b0 /Volumes/NO NAME/ \u76ee\u5f55\u4e0b\u9762\u4ec0\u4e48\u4e5f\u6ca1\u6709\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48U\u76d8\u7cfb\u7edf\u76d8\u5df2\u7ecf\u5b89\u88c5\u6210\u529f\u4e86\u5374\u6ca1\u6cd5\u5f15\u5bfc\u3002\u56e0\u4e3a\u5b83\u4eec\u9519\u8bef\u7684\u5b89\u88c5\u5728\u4e86 /dev/disk0s1 \u4e0b\u4e86,\u4e5f\u5c31\u662f\u6302\u8f7d\u70b9 /Volumes/EFI \u4e0b\u4e86,\u6211\u4eec\u9700\u8981\u628a\u8fd9\u4e9b\u6587\u4ef6\u590d\u5236\u5230 /Volumes/NO NAME/ ,\u4e0b\uff0c\u5e76\u4f5c\u4e00\u4e9b\u8c03\u6574\uff0c\u7528\u547d\u4ee4\u884c\u8bf4\u660e\u5427\uff0c\u6587\u5b57\u6709\u70b9\u4e0d\u592a\u6e05\u695a\u4e86\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 localhost : NO NAME wangzhizhou$ cp - r /Volumes/EFI/* /Volumes/NO\\ NAME/ localhost : EFI wangzhizhou$ cd /Volumes/NO\\ NAME/EFI/ localhost : EFI wangzhizhou$ ls APPLE ubuntu localhost : EFI wangzhizhou$ pwd /Volumes/NO NAME/ EFI localhost : EFI wangzhizhou$ rm - rf APPLE / localhost : EFI wangzhizhou$ mkdir boot localhost : EFI wangzhizhou$ cp ubuntu /grubx64.efi boot/ bootx64 . efi localhost : EFI wangzhizhou$ cd /Volumes/EFI/EFI/ localhost : EFI wangzhizhou$ ls APPLE ubuntu localhost : EFI wangzhizhou$ rm - rf ubuntu / localhost : EFI wangzhizhou$ cd /Volumes/ localhost : Volumes wangzhizhou$ diskutil umount EFI ; diskutil umount NO \\ NAME / Volume EFI on disk0s1 unmounted Unmount successful for NO NAME / \u597d\u4e86\u6211\u4eec\u7684\u7cfb\u7edfU\u76d8\u4e0a\u7684EFI\u5206\u533a\u5df2\u7ecf\u6709\u4e86\u5f15\u5bfc\u4fe1\u606f\uff0c\u8fd9\u6b21\u6309\u4f4f option \u5e76\u91cd\u542f\u5e94\u8be5\u80fd\u591f\u5f15\u5bfcUbuntu\u542f\u52a8\u4e86\u3002 1 localhost : Volumes wangzhizhou$ sudo reboot","title":"Installation of Ubuntu 16.04 On UDisk"},{"location":"tech/Installation of Ubuntu 16.04 On UDisk/#installation-of-ubuntu-1604-on-udisk","text":"","title":"Installation of Ubuntu 16.04 On UDisk"},{"location":"tech/Installation of Ubuntu 16.04 On UDisk/#ubuntu-1604","text":"\u6211\u662f\u5728Mac\u7535\u8111\u4e0b\u5de5\u4f5c\u7684\uff0c\u9996\u5148\u9700\u8981\u5236\u4f5c\u4e00\u4e2aU\u76d8\u5b89\u88c5\u76d8\u3002\u56e0\u4e3aMac\u7535\u8111\u662f\u901a\u8fc7UEFI\u5f15\u5bfc\u7684\uff0c\u6240\u4ee5\u9700\u8981\u5c06U\u76d8\u5206\u533a\u4e3aGUID\u683c\u5f0f\u7684\uff0c\u5f53\u7136\u5982\u679c\u4f60\u4e0d\u662f\u5728Mac\u4e0b\u5de5\u4f5c\uff0c\u5c31\u4e0d\u5fc5\u5206\u533a\u4e3aGUID\u4e86\uff0c\u8fd9\u6837\u5206\u533a\u53ea\u662f\u4e3a\u4e86\u8ba9UEFI\u53ef\u4ee5\u5728\u5f15\u5bfc\u83dc\u5355\u4e2d\u663e\u793a\u5236\u4f5c\u597d\u7684U\u76d8\u5b89\u88c5\u76d8\u3002 \u5728Mac\u4e0b\u5236U\u76d8\u5b89\u88c5\u76d8\uff0c\u9996\u5148\u8981\u5c06\u4e0b\u8f7d\u597d\u7684IOS\u955c\u50cf\u6587\u4ef6\u8f6c\u5316\u6210\u4e3aIMG\u683c\u5f0f\uff0c\u5047\u8bbe\u6211\u7684Ubuntu\u7cfb\u7edfIOS\u6587\u4ef6\u540d\u4e3a\uff1a ubuntu-16.04-desktop-i386.iso , \u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u683c\u5f0f\u8f6c\u5316: 1 localhost : Downloads wangzhizhou$ hdiutil convert - format UDRW - o ubuntu - 16.04 - desktop - i386 . img ubuntu - 16.04 - desktop - i386 . iso \u8f6c\u5316\u540e\u7684\u6587\u4ef6\u540d\u4e3a\uff1a ubuntu-16.04-desktop-i386.img.dmg \uff0c\u8fd9\u4e2a\u5176\u5b9e\u540d\u5b57\u6ca1\u4ec0\u4e48\u5173\u7cfb\uff0c\u91cd\u8981\u7684\u662f\u955c\u50cf\u7684\u5185\u5bb9\u6309\u7167Mac\u53ef\u8bc6\u522b\u7684\u683c\u5f0f\u5f97\u5230\u4e86\u8f6c\u5316\uff0c\u4e4b\u540e\u6211\u4eec\u5c31\u5c06\u8f6c\u5316\u540e\u7684\u6587\u4ef6\u5199\u5165U\u76d8\u3002 \u5199\u5165U\u76d8\u524d\uff0c\u9996\u5148\u8981\u627e\u5230U\u76d8\uff0c\u6211\u4eec\u4f7f\u7528 diskutil list \u5c06\u5f53\u524d\u63d2\u5165\u7535\u8111\u7684\u6240\u6709\u78c1\u76d8\u663e\u793a\u51fa\u6765\uff0c\u627e\u51fa\u6211\u4eec\u60f3\u8981\u5199\u5165\u7684\u90a3\u4e2a,\u6211\u8fd9\u91cc\u663e\u793a\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 localhost : Downloads wangzhizhou$ diskutil list /dev/ disk0 ( internal , physical ): # : TYPE NAME SIZE IDENTIFIER 0 : GUID_partition_scheme * 121.3 GB disk0 1 : EFI EFI 209.7 MB disk0s1 2 : Apple_CoreStorage Macintosh HD 120.5 GB disk0s2 3 : Apple_Boot Recovery HD 650.0 MB disk0s3 /dev/ disk1 ( internal , virtual ): # : TYPE NAME SIZE IDENTIFIER 0 : Apple_HFS Macintosh HD + 120.1 GB disk1 Logical Volume on disk0s2 DA03CC12 - 7 D54 - 44 AA - ADC8 - 424073352296 Unlocked Encrypted /dev/ disk2 ( external , physical ): # : TYPE NAME SIZE IDENTIFIER 0 : GUID_partition_scheme * 61.9 GB disk2 1 : EFI EFI 209.7 MB disk2s1 2 : Apple_HFS 61.6 GB disk2s2 \u4ece\u4e0a\u9762\u770b\u51fa\uff0c\u6211\u8981\u5199\u5165\u7684U\u76d8\u662f /dev/disk2 ,\u56e0\u4e3a\u5b83\u662f\u5916\u90e8\u7269\u7406\u76d8\uff0c\u5e76\u78c1\u76d8\u5927\u5c0f\u4e0e\u6211\u7684U\u76d8\u5927\u5c0f\u4e00\u81f4\uff0c64GB\u5de6\u53f3\u3002\u6211\u5df2\u7ecf\u4f7f\u7528\u78c1\u76d8\u5de5\u5177\u628a\u5b83\u683c\u5f0f\u5316\u6210GUID\u5206\u533a\uff0c\u6240\u4ee5\u652f\u6301UEFI\u5f15\u5bfc\u3002 \u6211\u4eec\u5148\u7528\u547d\u4ee4\u628aU\u76d8\u63a8\u51fa\uff0c\u8fd9\u6837\u4e5f\u80fd\u8fdb\u884c\u5199\u5165\u64cd\u4f5c\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u5199\u5165\u7cfb\u7edf\u955c\u50cf\uff0c\u5982\u679c\u4e0d\u63a8\u51fa\u5c31\u5199\u5165\u7684\u8bdd\uff0c\u4e0d\u80fd\u5199\u5230\u78c1\u76d8\u7684\u6700\u5f00\u59cb\u90e8\u5206\uff0c\u4e5f\u5c31\u65e0\u6cd5\u8fdb\u884c\u5f15\u5bfc\u3002\u6211U\u76d8\u7684\u6302\u8f7d\u70b9\u4e3a /Volumes/Ubuntu/ \uff0c\u6240\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff1a 1 2 localhost : Downloads wangzhizhou$ diskutil unmount /Volumes/Ubuntu/ Volume Ubuntu on disk2s2 unmounted \u65e2\u7136U\u76d8\u5df2\u4ece\u6302\u8f7d\u70b9\u5378\u8f7d\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5199\u5165\u7cfb\u7edf\u955c\u50cf\u6587\u4ef6\u4e86\uff0c\u6ce8\u610f\u662f\u8f6c\u5316\u540e\u7684\u6587\u4ef6 ubuntu-16.04-desktop-i386.img.dmg : 1 2 3 4 5 localhost : Downloads wangzhizhou$ sudo dd if = ubuntu - 16.04 - desktop - i386 . img . dmg of =/ dev / rdisk2 bs = 1024 m Password : 1 + 1 records in 1 + 1 records out 1504051200 bytes transferred in 96.270441 secs ( 15623188 bytes / sec ) \u6ce8\u610f\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 /dev/rdisk2 \u4f5c\u4e3a\u5199\u5165\u7684\u76ee\u6807\u78c1\u76d8\uff0crdisk2\u5bf9\u5e94\u4e8edisk2\uff0c\u901a\u5e38\u4f7f\u7528\u5b83\u80fd\u591f\u4ee5\u66f4\u5feb\u7684\u901f\u5ea6\u5199\u5165U\u76d8\uff0cr\u4ee3\u8868removeable\uff0c\u5373\u53ef\u79fb\u52a8\u78c1\u76d8\u7684\u610f\u601d\u3002 \u73b0\u5728\u6211\u4eec\u91cd\u542fMac\uff0c\u5e76\u5728\u91cd\u542f\u8fc7\u7a0b\u4e2d\u6309\u4e0b option \u4e0d\u653e\u76f4\u5230\u542f\u52a8\u83dc\u5355\u51fa\u73b0\u6211\u4eec\u7684U\u76d8\u5b89\u88c5\u76d8\uff0c\u5982\u679c\u6ca1\u6709\u51fa\u73b0\uff0c\u8bf4\u660e\u6ca1\u6709\u5236\u4f5c\u6210\u529f\uff0c\u4e00\u5b9a\u662f\u54ea\u4e2a\u73af\u8282\u6ca1\u6709\u6309\u6b65\u9aa4\u6765\uff0c\u9700\u8981\u91cd\u5934\u6765\u4e00\u904d\u3002\u6ce8\u610fU\u76d8\u8981\u63d2\u5728\u7535\u8111\u4e0a\u3002 1 localhost : Downloads wangzhizhou$ sudo reboot \u91cd\u542f\u7535\u8111 \u4e4b\u540e\u5c31\u662f\u6b63\u5e38\u7684\u5b89\u88c5Ubuntu\u4e86\uff0c\u81ea\u5df1\u53bb\u6478\u7d22\u5427\uff5e \u6211\u9760\uff0c\u5f00\u673a\u540e\u5c45\u7136\u4e0d\u80fd\u5f15\u5bfc\uff0c\u7ecf\u8fc7\u4e0d\u65ad\u7684\u767e\u5ea6\uff0c\u6709\u7f51\u53cb\u79f0Ubuntu\u53ea\u5bf964\u4f4d\u7248\u672c\u63d0\u4f9bUEFI\u5f15\u5bfc\u6a21\u5f0f\uff0c\u545c\u547c\uff0c\u53c8\u5f97\u91cd\u65b0\u6765\u4e00\u904d\u3002\u5148\u4e0b\u8f7d\u4e00\u4e2a64\u4f4d\u7248\u7684Ubuntu\u5b89\u88c5\u955c\u50cf\uff0c\u7136\u540e\u518d\u91cd\u65b0\u6765\u4e00\u6b21\u5427\u3002\u5982\u679c\u4f7f\u7528\u4f20\u7edfBIOS\u5f15\u5bfc\u5b8c\u5168\u4e0d\u5b58\u5728\u8fd9\u79cd\u60c5\u51b5\u3002 \u8fd9\u6b21\u6587\u4ef6\u540d\u4e3a\uff1a ubuntu-16.04-desktop-amd64.iso ,\u5c31\u4e0d\u4e00\u4e00\u8bf4\u660e\u4e86\uff0c\u76f4\u63a5\u8d34\u547d\u4ee4\u884c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 localhost : Downloads JokerAtBaoFeng$ diskutil list /dev/ disk0 ( internal , physical ): # : TYPE NAME SIZE IDENTIFIER 0 : GUID_partition_scheme * 251.0 GB disk0 1 : EFI EFI 209.7 MB disk0s1 2 : Apple_CoreStorage Macintosh HD 250.1 GB disk0s2 3 : Apple_Boot Recovery HD 650.0 MB disk0s3 /dev/ disk1 ( internal , virtual ): # : TYPE NAME SIZE IDENTIFIER 0 : Apple_HFS Macintosh HD + 249.8 GB disk1 Logical Volume on disk0s2 3 B2115D8 - 1852 - 411 F - 9052 - ABA876FD6128 Unencrypted /dev/ disk2 ( external , physical ): # : TYPE NAME SIZE IDENTIFIER 0 : GUID_partition_scheme * 61.9 GB disk2 1 : EFI EFI 209.7 MB disk2s1 2 : Apple_HFS Ubuntu16 . 04 _64 61.6 GB disk2s2 localhost : Downloads JokerAtBaoFeng$ diskutil unmountDisk /dev/ disk2 Unmount of all volumes on disk2 was successful localhost : Downloads JokerAtBaoFeng$ hdiutil convert - format UDRW - o ubuntu - 16.04 - desktop - amd64 ubuntu - 16.04 - desktop - amd64 . iso \u6b63\u5728\u8bfb\u53d6 Driver Descriptor Map \uff08 DDM \uff1a 0 \uff09\u2026 \u6b63\u5728\u8bfb\u53d6 Ubuntu 16.04 LTS amd64 \uff08 Apple_ISO \uff1a 1 \uff09\u2026 \u6b63\u5728\u8bfb\u53d6 Apple \uff08 Apple_partition_map \uff1a 2 \uff09\u2026 \u6b63\u5728\u8bfb\u53d6 Ubuntu 16.04 LTS amd64 \uff08 Apple_ISO \uff1a 3 \uff09\u2026 .............................................................................. \u6b63\u5728\u8bfb\u53d6 EFI \uff08 Apple_HFS \uff1a 4 \uff09\u2026 .............................................................................. \u6b63\u5728\u8bfb\u53d6 Ubuntu 16.04 LTS amd64 \uff08 Apple_ISO \uff1a 5 \uff09\u2026 .............................................................................. \u5df2\u8017\u65f6\uff1a 3.304 s \u901f\u5ea6\uff1a 428.8 M \u5b57\u8282 / \u79d2 \u8282\u7701\uff1a 0.0 % created : /Users/JokerAtBaoFeng/Downloads/ ubuntu - 16.04 - desktop - amd64 . dmg localhost : Downloads JokerAtBaoFeng$ sudo dd if = ubuntu - 16.04 - desktop - amd64 . dmg of =/ dev / rdisk2 bs = 1024 m Password : 1 + 1 records in 1 + 1 records out 1485881344 bytes transferred in 95.220324 secs ( 15604666 bytes / sec ) \u7cfb\u7edf\u955c\u50cf\u5199\u5165\u5b8c\u6210\u540e\uff0c\u4f1a\u5f39\u51fa\u4e00\u4e2a\u5bf9\u8bdd\u6846\uff0c\u9009\u62e9\u5ffd\u7565\u5373\u53ef\u3002\u8fd9\u6b21\u5e94\u8be5\u53ef\u4ee5\u4e86\uff0c64\u4f4dUbuntu\u652f\u6301UEFI\u542f\u52a8\uff0c\u5e76\u4e14\u6211\u4eec\u7684U\u76d8\u5df2\u7ecf\u6309GUID\u5206\u533a\u65b9\u6848\u5206\u8fc7\u533a\uff0c\u73b0\u5728\u91cd\u542fMac\uff0c\u5e76\u6309\u4f4f option \u4e0d\u653e\u5373\u53ef\u3002\u542f\u52a8\u83dc\u5355\u8fd9\u6b21\u4f1a\u5f39\u51faU\u76d8\u5b89\u88c5\u76d8\u9009\u9879\u4e86\u3002 \u54e6\u8fd9\u91cc\u53c8\u51fa\u73b0\u95ee\u9898\u4e86\uff0c\u6309\u4f4f option \u91cd\u542f\u540e\u4f9d\u7136\u6ca1\u6709\u5f15\u5bfc\u9879\uff0c\u8fd9\u662f\u56e0\u4e3a\u5b89\u88c5\u8fc7\u7a0b\u4e2d\uff0cEFI\u5f15\u5bfc\u6587\u4ef6\u88ab\u5b89\u88c5\u5230\u4e86\u7cfb\u7edf\u78c1\u76d8\u7684EFI\u5206\u533a\u4e86\uff0c\u6211\u4eec\u9700\u8981\u628a\u90a3\u4e2a\u6587\u4ef6\u62f7\u5230\u5b89\u88c5\u7cfb\u7edf\u7684U\u76d8\u4e0a\u7684\u90a3\u4e2aEFI\u5206\u533a\u3002\u6211\u4eec\u8fdb\u5165Mactonish HD\uff0c\u542f\u52a8OS X\uff0c\u5728\u547d\u4ee4\u884c\u4e2d\u628a\u6240\u6709\u78c1\u76d8\u90fd\u5217\u51fa\u6765\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 localhost : ubuntu wangzhizhou$ diskutil list /dev/ disk0 ( internal , physical ): # : TYPE NAME SIZE IDENTIFIER 0 : GUID_partition_scheme * 121.3 GB disk0 1 : EFI EFI 209.7 MB disk0s1 2 : Apple_CoreStorage Macintosh HD 120.5 GB disk0s2 3 : Apple_Boot Recovery HD 650.0 MB disk0s3 /dev/ disk1 ( internal , virtual ): # : TYPE NAME SIZE IDENTIFIER 0 : Apple_HFS Macintosh HD + 120.1 GB disk1 Logical Volume on disk0s2 DA03CC12 - 7 D54 - 44 AA - ADC8 - 424073352296 Unlocked Encrypted /dev/ disk2 ( external , physical ): # : TYPE NAME SIZE IDENTIFIER 0 : GUID_partition_scheme * 62.6 GB disk2 1 : EFI NO NAME 499.1 MB disk2s1 2 : Bios Boot Partition 127.9 MB disk2s2 3 : Linux Swap 4.1 GB disk2s3 4 : Linux Filesystem 57.9 GB disk2s4 \u6211\u4eec\u5c06EFI\u5206\u533a\uff1a\u001d /dev/disk0s1 \u548c /dev/disk2s1 \u90fd\u6302\u8f7d\u5230\u8def\u5f84 /Volumes \u4e0b\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\uff1a 1 2 3 4 5 6 7 8 9 10 localhost :~ wangzhizhou $ diskutil mount / dev / disk0s1 ; diskutil mount / dev / disk2s1 Volume EFI on / dev / disk0s1 mounted Volume NO NAME on / dev / disk2s1 mounted localhost :~ wangzhizhou $ ls / Volumes / EFI Macintosh HD NO NAME localhost : NO NAME wangzhizhou $ ls / Volumes / EFI / / Volumes / NO \\ NAME / / Volumes / EFI /: EFI / Volumes / NO NAME /: /Volumes \u4e0b EFI \u548c NO NAME \u76ee\u5f55\u5c31\u662f\u4e24\u4e2aEFI\u5206\u533a\u7684\u6302\u8f7d\u70b9\uff0c\u4f60\u53d1\u73b0 /Volumes/NO NAME/ \u76ee\u5f55\u4e0b\u9762\u4ec0\u4e48\u4e5f\u6ca1\u6709\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48U\u76d8\u7cfb\u7edf\u76d8\u5df2\u7ecf\u5b89\u88c5\u6210\u529f\u4e86\u5374\u6ca1\u6cd5\u5f15\u5bfc\u3002\u56e0\u4e3a\u5b83\u4eec\u9519\u8bef\u7684\u5b89\u88c5\u5728\u4e86 /dev/disk0s1 \u4e0b\u4e86,\u4e5f\u5c31\u662f\u6302\u8f7d\u70b9 /Volumes/EFI \u4e0b\u4e86,\u6211\u4eec\u9700\u8981\u628a\u8fd9\u4e9b\u6587\u4ef6\u590d\u5236\u5230 /Volumes/NO NAME/ ,\u4e0b\uff0c\u5e76\u4f5c\u4e00\u4e9b\u8c03\u6574\uff0c\u7528\u547d\u4ee4\u884c\u8bf4\u660e\u5427\uff0c\u6587\u5b57\u6709\u70b9\u4e0d\u592a\u6e05\u695a\u4e86\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 localhost : NO NAME wangzhizhou$ cp - r /Volumes/EFI/* /Volumes/NO\\ NAME/ localhost : EFI wangzhizhou$ cd /Volumes/NO\\ NAME/EFI/ localhost : EFI wangzhizhou$ ls APPLE ubuntu localhost : EFI wangzhizhou$ pwd /Volumes/NO NAME/ EFI localhost : EFI wangzhizhou$ rm - rf APPLE / localhost : EFI wangzhizhou$ mkdir boot localhost : EFI wangzhizhou$ cp ubuntu /grubx64.efi boot/ bootx64 . efi localhost : EFI wangzhizhou$ cd /Volumes/EFI/EFI/ localhost : EFI wangzhizhou$ ls APPLE ubuntu localhost : EFI wangzhizhou$ rm - rf ubuntu / localhost : EFI wangzhizhou$ cd /Volumes/ localhost : Volumes wangzhizhou$ diskutil umount EFI ; diskutil umount NO \\ NAME / Volume EFI on disk0s1 unmounted Unmount successful for NO NAME / \u597d\u4e86\u6211\u4eec\u7684\u7cfb\u7edfU\u76d8\u4e0a\u7684EFI\u5206\u533a\u5df2\u7ecf\u6709\u4e86\u5f15\u5bfc\u4fe1\u606f\uff0c\u8fd9\u6b21\u6309\u4f4f option \u5e76\u91cd\u542f\u5e94\u8be5\u80fd\u591f\u5f15\u5bfcUbuntu\u542f\u52a8\u4e86\u3002 1 localhost : Volumes wangzhizhou$ sudo reboot","title":"\u5b89\u88c5Ubuntu 16.04"},{"location":"tech/Learn STL In 30 Minutes/","text":"Learn STL In 30 Minutes \u4e09\u5341\u5206\u949f\u638c\u63e1 STL \u8fd9\u7bc7\u6587\u7ae0\u662f\u6211\u4ece\u5317\u5927BBS\u4e0a\u8f6c\u6765\u7684\uff0c\u56e0\u4e3aBBS\u4e0a\u7684\u683c\u5f0f\u5f88\u4e71\uff0c\u5c31\u81ea\u5df1\u7528Markdown\u91cd\u65b0\u5199\u4e86\u4e00\u904d\uff0c\u4e00\u6765\u52a0\u6df1\u8bb0\u5fc6\uff0c\u4e8c\u6765\u4f5c\u4e3a\u4e2a\u4eba\u6536\u85cf\uff0c\u5982\u679c\u4f60\u89c9\u5f97\u5f88\u6709\u7528\uff0c\u90a3\u5c31\u8db3\u591f\u4e86\u3002\u4ee5\u4e0b\u4e3a\u6b63\u6587\u3002 \u8fd9\u662f\u672c\u5c0f\u4eba\u4e66\u3002\u539f\u540d\u662f \u300aUsing STL\u300b \uff0c\u4e0d\u77e5\u9053\u662f\u8c01\u5199\u7684\u3002\u4e0d\u8fc7\u6211\u5012\u89c9\u5f97\u5f88\u6709\u8da3\uff0c\u6240\u4ee5\u82b1\u4e86\u4e24\u4e2a\u665a\u4e0a\u628a\u5b83\u7ffb\u8bd1\u51fa\u6765\u3002\u6211\u6ca1\u6709\u5bf9\u7ffb\u8bd1\u51fa\u7684\u5185\u5bb9\u6821\u9a8c\u8fc7\u3002\u5982\u679c\u4f60\u6ca1\u6cd5\u5728\u4e09\u5341\u5206\u949f\u5185\u89c9\u5f97\u6709\u6240\u6536\u83b7\uff0c\u90a3\u4e48\u8d76\u7d27\u6254\u4e86\u5b83\u3002\u6587\u4e2d\u6211\u7701\u7565\u4e86\u5f88\u591a\u4e1c\u897f\u3002\u5fc3\u75bc\u5450\uff01\u6d6a\u8d39\u6211\u4e24\u4e2a\u665a\u4e0a\u3002 \u8bd1\u8005\uff1akary contact: STL \u6982\u8ff0 STL \u7684\u4e00\u4e2a\u91cd\u8981\u7279\u70b9\u662f\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u7684\u5206\u79bb\u3002\u5c3d\u7ba1\u8fd9\u662f\u4e2a\u7b80\u5355\u7684\u6982\u5ff5\uff0c\u4f46\u8fd9\u79cd\u5206\u79bb\u786e\u5b9e\u4f7f\u5f97STL\u53d8\u5f97\u975e\u5e38\u901a\u7528\u3002\u4f8b\u5982\uff0c\u7531\u4e8eSTL\u7684sort()\u51fd\u6570\u662f\u5b8c\u5168\u901a\u7528\u7684\uff0c\u4f60\u53ef\u4ee5\u7528\u5b83\u6765\u64cd\u4f5c\u51e0\u4e4e\u4efb\u4f55\u6570\u636e\u96c6\u5408\uff0c\u5305\u62ec\u94fe\u8868\uff0c\u5bb9\u5668\u548c\u6570\u7ec4\u3002 \u8981\u70b9 STL\u7b97\u6cd5\u4f5c\u4e3a\u6a21\u677f\u51fd\u6570\u63d0\u4f9b\u3002 \u4e3a\u4e86\u548c\u5176\u4ed6\u7ec4\u4ef6\u76f8\u533a\u522b\uff0c\u5728\u672c\u4e66\u4e2dSTL\u7b97\u6cd5\u7528\u540e\u63a5\u4e00\u5bf9\u5706\u62ec\u5f27\u7684\u65b9\u5f0f\u8868\u793a\uff0c\u4f8b\u5982sort()\u3002 STL\u53e6\u4e00\u4e2a\u91cd\u8981\u7279\u6027\u662f\u5b83\u4e0d\u662f\u9762\u5411\u5bf9\u8c61\u7684\u3002\u4e3a\u4e86\u5177\u6709\u8db3\u591f\u901a\u7528\u6027\uff0cSTL\u4e3b\u8981\u4f9d\u8d56\u4e8e\u6a21\u677f\u800c\u4e0d\u662f\u5c01\u88c5\u3001\u7ee7\u627f\u548c\u865a\u51fd\u6570\uff08\u591a\u6001\u6027\uff09\u2014\u2014 OOP\u7684\u4e09\u4e2a\u8981\u7d20\u3002\u4f60\u5728STL\u4e2d\u627e\u4e0d\u5230\u4efb\u4f55\u660e\u663e\u7684\u7c7b\u7ee7\u627f\u5173\u7cfb\u3002\u8fd9\u597d\u50cf\u662f\u4e00\u79cd\u5012\u9000\uff0c\u4f46\u8fd9\u6b63\u597d\u662f\u4f7f\u5f97STL\u7684\u7ec4\u4ef6\u5177\u6709\u5e7f\u6cdb\u901a\u7528\u6027\u7684\u5e95\u5c42\u7279\u5f81\u3002\u53e6\u5916\uff0c\u7531\u4e8eSTL\u662f\u57fa\u4e8e\u6a21\u677f\uff0c\u5185\u8054\u51fd\u6570\u7684\u4f7f\u7528\u4f7f\u5f97\u751f\u6210\u7684\u4ee3\u7801\u77ed\u5c0f\u9ad8\u6548\u3002 \u63d0\u793a \u786e\u4fdd\u5728\u7f16\u8bd1\u4f7f\u7528\u4e86STL\u7684\u7a0b\u5e8f\u4e2d\u81f3\u5c11\u8981\u4f7f\u7528 -O \u4f18\u5316\u6765\u4fdd\u8bc1\u5185\u8054\u6269\u5c55\u3002STL\u63d0\u4f9b\u5927\u91cf\u7684\u6a21\u677f\u7c7b\u548c\u51fd\u6570\uff0c\u53ef\u4ee5\u5728OOP\u548c\u5e38\u89c4\u7f16\u7a0b\u4e2d\u4f7f\u7528\u3002\u6240\u6709\u7684STL\u7684\u5927\u7ea650\u4e2a\u7b97\u6cd5\u90fd\u662f\u5b8c\u5168\u901a\u7528\u7684\uff0c\u800c\u4e14\u4e0d\u4f9d\u8d56\u4e8e\u4efb\u4f55\u7279\u5b9a\u7684\u6570\u636e\u7c7b\u578b\u3002 \u4e0b\u9762\u7684\u5c0f\u8282\u8bf4\u660e\u4e86\u4e09\u4e2a\u57fa\u672c\u7684STL\u7ec4\u4ef6\uff1a \u8fed\u4ee3\u5668\u63d0\u4f9b\u4e86\u8bbf\u95ee\u5bb9\u5668\u4e2d\u5bf9\u8c61\u7684\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u5bf9\u8fed\u4ee3\u5668\u6307\u5b9alist\u6216vector\u4e2d\u7684\u4e00\u5b9a\u8303\u56f4\u7684\u5bf9\u8c61\u3002\u8fed\u4ee3\u5668\u5c31\u5982\u540c\u4e00\u4e2a\u6307\u9488\u3002\u4e8b\u5b9e\u4e0a\uff0cC++\u7684\u6307\u9488\u4e5f\u662f\u4e00\u79cd\u8fed\u4ee3\u5668\u3002\u4f46\u662f\uff0c\u8fed\u4ee3\u5668\u4e5f\u53ef\u4ee5\u662f\u90a3\u4e9b\u5b9a\u4e49\u4e86operator*()\u4ee5\u53ca\u5176\u4ed6\u7c7b\u4f3c\u4e8e\u6307\u9488\u7684\u64cd\u4f5c\u7b26\u7684\u65b9\u6cd5\u7684\u7c7b\u5bf9\u8c61\u3002 \u5bb9\u5668\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5982list\uff0cvector\u548cdeques\uff0c\u4ee5\u6a21\u677f\u7c7b\u7684\u65b9\u6cd5\u63d0\u4f9b\u3002\u4e3a\u4e86\u8bbf\u95ee\u5bb9\u5668\u4e2d\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u7531\u5bb9\u5668\u7c7b\u8f93\u51fa\u7684\u8fed\u4ee3\u5668\u3002 \u7b97\u6cd5\u662f\u7528\u6765\u64cd\u4f5c\u5bb9\u5668\u4e2d\u7684\u6570\u636e\u7684\u6a21\u677f\u51fd\u6570\u3002\u4f8b\u5982\uff0cSTL\u7528sort()\u6765\u5bf9\u4e00\u4e2avector\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u6392\u5e8f\uff0c\u7528find()\u6765\u641c\u7d22\u4e00\u4e2alist\u4e2d\u7684\u5bf9\u8c61\u3002\u51fd\u6570\u672c\u8eab\u4e0e\u4ed6\u4eec\u64cd\u4f5c\u7684\u6570\u636e\u7684\u7ed3\u6784\u548c\u7c7b\u578b\u65e0\u5173\uff0c\u56e0\u6b64\u4ed6\u4eec\u53ef\u4ee5\u5728\u4ece\u7b80\u5355\u6570\u7ec4\u5230\u9ad8\u5ea6\u590d\u6742\u5bb9\u5668\u7684\u4efb\u4f55\u6570\u636e\u7ed3\u6784\u4e0a\u4f7f\u7528\u3002 \u5934\u6587\u4ef6 \u4e3a\u4e86\u907f\u514d\u548c\u5176\u4ed6\u5934\u6587\u4ef6\u51b2\u7a81\uff0cSTL\u7684\u5934\u6587\u4ef6\u4e0d\u518d\u4f7f\u7528\u5e38\u89c4\u7684.h\u6269\u5c55\u3002\u4e3a\u4e86\u5305\u542b\u6807\u51c6\u7684string\u7c7b\uff0c\u8fed\u4ee3\u5668\u548c\u7b97\u6cd5\uff0c\u7528\u4e0b\u9762\u7684\u6307\u793a\u7b26\uff1a 1 2 3 #include string #include iterator #include algorithm \u5982\u679c\u4f60\u67e5\u770bSTL\u7684\u5934\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u50cfiterator.h\u548cstl_iterator.h\u8fd9\u6837\u7684\u5934\u6587\u4ef6\u3002\u7531\u4e8e\u8fd9\u4e9b\u540d\u5b57\u5728\u5404\u79cdSTL\u5b9e\u73b0\u4e4b\u95f4\u90fd\u53ef\u80fd\u4e0d\u540c\uff0c\u4f60\u5e94\u8be5\u907f\u514d\u4f7f\u7528\u8fd9\u4e9b\u540d\u5b57\u6765\u5f15\u7528\u8fd9\u4e9b\u5934\u6587\u4ef6\u3002\u4e3a\u4e86\u786e\u4fdd\u53ef\u79fb\u690d\u6027\uff0c\u4f7f\u7528\u76f8\u5e94\u7684\u6ca1\u6709.h\u540e\u7f00\u7684\u6587\u4ef6\u540d\u3002\u88681\u5217\u51fa\u4e86\u6700\u5e38\u4f7f\u7528\u7684\u5404\u79cd\u5bb9\u5668\u7c7b\u7684\u5934\u6587\u4ef6\u3002\u8be5\u8868\u5e76\u4e0d\u5b8c\u6574\uff0c\u5bf9\u4e8e\u5176\u4ed6\u5934\u6587\u4ef6\uff0c\u6211\u5c06\u5728\u672c\u7ae0\u548c\u540e\u9762\u7684\u4e24\u7ae0\u4e2d\u4ecb\u7ecd\u3002 \u88681 STL\u5934\u6587\u4ef6\u548c\u5bb9\u5668\u7c7b #include Container Class deque deque list list map map, multimap queue queue, priority_queue set set, multiset stack stack vector vector, vector bool \u540d\u5b57\u7a7a\u95f4 \u4f60\u7684\u7f16\u8bd1\u5668\u53ef\u80fd\u4e0d\u80fd\u8bc6\u522b\u540d\u5b57\u7a7a\u95f4\u3002\u540d\u5b57\u7a7a\u95f4\u5c31\u597d\u50cf\u4e00\u4e2a\u4fe1\u5c01\uff0c\u5c06\u6807\u5fd7\u7b26\u5c01\u88c5\u5728\u53e6\u4e00\u4e2a\u540d\u5b57\u4e2d\u3002\u6807\u5fd7\u7b26\u53ea\u5728\u540d\u5b57\u7a7a\u95f4\u4e2d\u5b58\u5728\uff0c\u56e0\u800c\u907f\u514d\u4e86\u548c\u5176\u4ed6\u6807\u5fd7\u7b26\u51b2\u7a81\u3002\u4f8b\u5982\uff0c\u53ef\u80fd\u6709\u5176\u4ed6\u5e93\u548c\u7a0b\u5e8f\u6a21\u5757\u5b9a\u4e49\u4e86sort()\u51fd\u6570\uff0c\u4e3a\u4e86\u907f\u514d\u548cSTL\u7684sort()\u51b2\u7a81\uff0cSTL\u7684sort()\u7b97\u6cd5\u7f16\u8bd1\u4e3astd::sort()\uff0c\u4ece\u800c\u907f\u514d\u4e86\u540d\u5b57\u51b2\u7a81\u3002 \u5c3d\u7ba1\u4f60\u7684\u7f16\u8bd1\u5668\u53ef\u80fd\u6ca1\u6709\u5b9e\u73b0\u540d\u5b57\u7a7a\u95f4\uff0c\u4f60\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u4ed6\u4eec\u3002\u4e3a\u4e86\u4f7f\u7528STL\uff0c\u53ef\u4ee5\u5c06\u4e0b\u9762\u7684\u6307\u793a\u7b26\u63d2\u5165\u5230\u4f60\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\u4e2d\uff0c\u5178\u578b\u7684\u662f\u5728\u6240\u6709\u7684#include\u6307\u793a\u7b26\u7684\u540e\u9762\uff1a 1 using namespace std ; \u8fed\u4ee3\u5668 \u8fed\u4ee3\u5668\u63d0\u4f9b\u5bf9\u4e00\u4e2a\u5bb9\u5668\u4e2d\u7684\u5bf9\u8c61\u7684\u8bbf\u95ee\u65b9\u6cd5\uff0c\u5e76\u4e14\u5b9a\u4e49\u4e86\u5bb9\u5668\u4e2d\u5bf9\u8c61\u7684\u8303\u56f4\u3002\u8fed\u4ee3\u5668\u5c31\u5982\u540c\u4e00\u4e2a\u6307\u9488\u3002\u4e8b\u5b9e\u4e0a\uff0cC++\u7684\u6307\u9488\u4e5f\u662f\u4e00\u79cd\u8fed\u4ee3\u5668\u3002\u4f46\u662f\uff0c\u8fed\u4ee3\u5668\u4e0d\u4ec5\u4ec5\u662f\u6307\u9488\uff0c\u56e0\u6b64\u4f60\u4e0d\u80fd\u8ba4\u4e3a\u4ed6\u4eec\u4e00\u5b9a\u5177\u6709\u5730\u5740\u503c\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u6570\u7ec4\u7d22\u5f15\uff0c\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u79cd\u8fed\u4ee3\u5668\u3002 \u8fed\u4ee3\u5668\u6709\u5404\u79cd\u4e0d\u540c\u7684\u521b\u5efa\u65b9\u6cd5\u3002\u7a0b\u5e8f\u53ef\u80fd\u628a\u8fed\u4ee3\u5668\u4f5c\u4e3a\u4e00\u4e2a\u53d8\u91cf\u521b\u5efa\u3002\u4e00\u4e2aSTL\u5bb9\u5668\u7c7b\u53ef\u80fd\u4e3a\u4e86\u4f7f\u7528\u4e00\u4e2a\u7279\u5b9a\u7c7b\u578b\u7684\u6570\u636e\u800c\u521b\u5efa\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002\u4f5c\u4e3a\u6307\u9488\uff0c\u5fc5\u987b\u80fd\u591f\u4f7f\u7528 * \u64cd\u4f5c\u7b26\u83b7\u53d6\u6570\u636e\u3002\u4f60\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u6570\u5b66\u64cd\u4f5c\u7b26\u5982 ++ \u3002\u5178\u578b\u7684\uff0c++\u64cd\u4f5c\u7b26\u7528\u6765\u9012\u589e\u8fed\u4ee3\u5668\uff0c\u4ee5\u8bbf\u95ee\u5bb9\u5668\u4e2d\u7684\u4e0b\u4e00\u4e2a\u5bf9\u8c61\u3002\u5982\u679c\u8fed\u4ee3\u5668\u5230\u8fbe\u4e86\u5bb9\u5668\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u540e\u9762\uff0c\u5219\u8fed\u4ee3\u5668\u53d8\u6210past-the-end\u503c\u3002\u4f7f\u7528\u4e00\u4e2apast-the-end\u503c\u7684\u6307\u9488\u6765\u8bbf\u95ee\u5bf9\u8c61\u662f\u975e\u6cd5\u7684\uff0c\u5c31\u597d\u50cf\u4f7f\u7528NULL\u6216\u672a\u521d\u59cb\u5316\u7684\u6307\u9488\u4e00\u6837\u3002 \u63d0\u793a STL\u4e0d\u4fdd\u8bc1\u53ef\u4ee5\u4ece\u53e6\u4e00\u4e2a\u8fed\u4ee3\u5668\u6765\u62b5\u8fbe\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002\u4f8b\u5982\uff0c\u5f53\u5bf9\u4e00\u4e2a\u96c6\u5408\u4e2d\u7684\u5bf9\u8c61\u6392\u5e8f\u65f6\uff0c\u5982\u679c\u4f60\u5728\u4e0d\u540c\u7684\u7ed3\u6784\u4e2d\u6307\u5b9a\u4e86\u4e24\u4e2a\u8fed\u4ee3\u5668\uff0c\u7b2c\u4e8c\u4e2a\u8fed\u4ee3\u5668\u65e0\u6cd5\u4ece\u7b2c\u4e00\u4e2a\u8fed\u4ee3\u5668\u62b5\u8fbe\uff0c\u6b64\u65f6\u7a0b\u5e8f\u6ce8\u5b9a\u8981\u5931\u8d25\u3002\u8fd9\u662fSTL\u7075\u6d3b\u6027\u7684\u4e00\u4e2a\u4ee3\u4ef7\u3002STL\u4e0d\u4fdd\u8bc1\u68c0\u6d4b\u6beb\u65e0\u9053\u7406\u7684\u9519\u8bef\u3002 \u8fed\u4ee3\u5668\u7684\u7c7b\u578b \u5bf9\u4e8eSTL\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e94\u79cd\u8fed\u4ee3\u5668\u3002\u4e0b\u9762\u7b80\u8981\u8bf4\u660e\u4e86\u8fd9\u4e94\u79cd\u7c7b\u578b\uff1a Input iterators \u63d0\u4f9b\u5bf9\u6570\u636e\u7684\u53ea\u8bfb\u8bbf\u95ee\u3002 Output iterators \u63d0\u4f9b\u5bf9\u6570\u636e\u7684\u53ea\u5199\u8bbf\u95ee\u3002 Forward iterators \u63d0\u4f9b\u8bfb\u5199\u64cd\u4f5c\uff0c\u5e76\u80fd\u5411\u524d\u63a8\u8fdb\u8fed\u4ee3\u5668 Bidirectional iterators \u63d0\u4f9b\u8bfb\u5199\u64cd\u4f5c\uff0c\u5e76\u80fd\u5411\u524d\u548c\u5411\u540e\u64cd\u4f5c\u3002 Random access iterators \u63d0\u4f9b\u8bfb\u5199\u64cd\u4f5c\uff0c\u5e76\u80fd\u5728\u6570\u636e\u4e2d\u968f\u673a\u79fb\u52a8\u3002 \u5c3d\u7ba1\u5404\u79cd\u4e0d\u540c\u7684STL\u5b9e\u73b0\u7ec6\u8282\u65b9\u9762\u6709\u6240\u4e0d\u540c\uff0c\u8fd8\u662f\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684\u8fed\u4ee3\u5668\u60f3\u50cf\u4e3a\u4e00\u79cd\u7c7b\u7ee7\u627f\u5173\u7cfb\u3002\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bf4\u6211\uff0c\u4e0b\u9762\u7684\u8fed\u4ee3\u5668\u7ee7\u627f\u81ea\u4e0a\u9762\u7684\u8fed\u4ee3\u5668\u3002\u7531\u4e8e\u8fd9\u79cd\u7ee7\u627f\u5173\u7cfb\uff0c\u4f60\u53ef\u4ee5\u5c06\u4e00\u4e2aForward\u8fed\u4ee3\u5668\u4f5c\u4e3a\u4e00\u4e2aoutput\u6216input\u8fed\u4ee3\u5668\u4f7f\u7528\u3002\u540c\u6837\uff0c\u5982\u679c\u4e00\u4e2a\u7b97\u6cd5\u8981\u6c42\u662f\u4e00\u4e2abidirectional\u8fed\u4ee3\u5668\uff0c\u90a3\u4e48\u53ea\u80fd\u4f7f\u7528\u8be5\u79cd\u7c7b\u578b\u548c\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\u3002 \u6307\u9488\u8fed\u4ee3\u5668 \u6b63\u5982\u4e0b\u9762\u7684\u5c0f\u7a0b\u5e8f\u663e\u793a\u7684\uff0c\u4e00\u4e2a\u6307\u9488\u4e5f\u662f\u4e00\u79cd\u8fed\u4ee3\u5668\u3002\u8be5\u7a0b\u5e8f\u540c\u6837\u663e\u793a\u4e86STL\u7684\u4e00\u4e2a\u4e3b\u8981\u7279\u5f81\u2014\u2014\u5b83\u4e0d\u53ea\u662f\u80fd\u591f\u7528\u4e8e\u5b83\u81ea\u5df1\u7684\u7c7b\u7c7b\u578b\uff0c\u800c\u4e14\u4e5f\u80fd\u7528\u4e8e\u4efb\u4f55C\u6216C++\u7c7b\u578b\u3002iterdemo.cpp\u663e\u793a\u4e86\u5982\u4f55\u628a\u6307\u9488\u4f5c\u4e3a\u8fed\u4ee3\u5668\u7528\u4e8eSTL\u7684find()\u7b97\u6cd5\u6765\u641c\u7d22\u666e\u901a\u7684\u6570\u7ec4\u3002 iterdemo.cpp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include iostream #include algorithm using namespace std ; #define SIZE 100 int iarray [ SIZE ]; int main () { iarray [ 20 ] = 50 ; int * ip = find ( iarray , iarray + SIZE , 50 ); if ( ip == iarray + SIZE ) cout 50 not found in array endl ; else cout * ip found in array endl ; return 0 ; } \u5728\u5f15\u7528\u4e86I/O\u6d41\u5e93\u548cSTL\u7b97\u6cd5\u5934\u6587\u4ef6\uff08\u6ce8\u610f\u6ca1\u6709.h\u540e\u7f00\uff09\uff0c\u8be5\u7a0b\u5e8f\u544a\u8bc9\u7f16\u8bd1\u5668\u4f7f\u7528std\u540d\u5b57\u7a7a\u95f4\u3002 \u7a0b\u5e8f\u4e2d\u5b9a\u4e49\u4e86\u5c3a\u5bf8\u4e3aSIZE\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u6240\u4ee5\u8fd0\u884c\u65f6\u6570\u7ec4\u81ea\u52a8\u521d\u59cb\u5316\u4e3a\u96f6\u3002\u4e0b\u9762\u7684\u8bed\u53e5\u5c06\u5728\u7d22\u5f1520\u4f4d\u7f6e\u5904\u7684\u5143\u7d20\u8bbe\u7f6e\u4e3a50\uff0c\u5e76\u4f7f\u7528find()\u7b97\u6cd5\u6765\u641c\u7d22\u503c50: 1 2 iarray [ 20 ] = 50 ; int * ip = find ( iarray , iarray + SIZE , 50 ); find()\u51fd\u6570\u63a5\u53d7\u4e09\u4e2a\u53c2\u6570\u3002\u5934\u4e24\u4e2a\u5b9a\u4e49\u4e86\u641c\u7d22\u7684\u8303\u56f4\u3002\u7531\u4e8eC\u548cC++\u6570\u7ec4\u7b49\u540c\u4e8e\u6307\u9488\uff0c\u8868\u8fbe\u5f0fiarray\u6307\u5411\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002\u800c\u7b2c\u4e8c\u4e2a\u53c2\u6570iarray+SIZE\u7b49\u540c\u4e8epast-the-end\u503c\uff0c\u4e5f\u5c31\u662f\u6570\u7ec4\u4e2d\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u540e\u9762\u4f4d\u7f6e\u3002\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u5f85\u5b9a\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f50. find()\u51fd\u6570\u8fd4\u56de\u548c\u524d\u4e24\u4e2a\u53c2\u6570\u76f8\u540c\u7c7b\u578b\u7684\u8fed\u4ee3\u5668\uff0c\u8fd9\u513f\u662f\u4e00\u4e2a\u6307\u5411\u6574\u6570\u7684\u6307\u9488ip\u3002 \u63d0\u793a \u5fc5\u987b\u8bb0\u4f4fSTL\u4f7f\u7528\u6a21\u677f\u3002\u56e0\u6b64\uff0cSTL\u51fd\u6570\u81ea\u52a8\u6839\u636e\u5b83\u4eec\u4f7f\u7528\u6570\u636e\u7c7b\u578b\u6765\u6784\u9020\u3002 \u4e3a\u4e86\u5224\u65adfind()\u662f\u5426\u6210\u529f\uff0c\u4f8b\u5b50\u4e2d\u6d4b\u8bd5ip\u548cpast-the-end\u503c\u662f\u5426\u76f8\u7b49: 1 if ( ip == iarray + SIZE ) ... \u5982\u679c\u8868\u8fbe\u5f0f\u4e3a\u771f\uff0c\u5219\u8868\u793a\u5728\u641c\u7d22\u8303\u56f4\u5185\u6ca1\u6709\u6307\u5b9a\u7684\u503c\u3002\u5426\u5219\u5c31\u662f\u6307\u5411\u4e00\u4e2a\u5408\u6cd5\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8fd9\u65f6\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u8bed\u53e5\u663e\u793a\uff1a 1 cout * ip found in array endl ; \u6d4b\u8bd5\u51fd\u6570\u8fd4\u56de\u503c\u548cNULL\u662f\u5426\u76f8\u7b49\u662f\u4e0d\u6b63\u786e\u7684\u3002\u4e0d\u8981\u50cf\u4e0b\u9762\u8fd9\u6837\u4f7f\u7528\uff1a 1 2 int * ip = find ( iarray , iarray + SIZE , 50 ); if ( ip != NULL ) ... //incorrect \u5f53\u4f7f\u7528STL\u51fd\u6570\u65f6\uff0c\u53ea\u80fd\u6d4b\u8bd5ip\u662f\u5426\u548cpast-the-end\u503c\u76f8\u7b49\u3002\u5c3d\u7ba1\u5728\u672c\u4f8b\u4e2dip\u662f\u4e00\u4e2aC++\u6307\u9488\uff0c\u5176\u7528\u6cd5\u4e5f\u5fc5\u987b\u7b26\u5408STL\u8fed\u4ee3\u5668\u7684\u539f\u5219\u3002 \u5bb9\u5668\u8fed\u4ee3\u5668 \u5c3d\u7ba1C++\u6307\u9488\u4e5f\u662f\u8fed\u4ee3\u5668\uff0c\u4f46\u7528\u7684\u66f4\u591a\u7684\u662f\u5bb9\u5668\u8fed\u4ee3\u5668\u3002\u5bb9\u5668\u8fed\u4ee3\u5668\u7528\u6cd5\u548citerdemo.cpp\u4e00\u6837\uff0c\u4f46\u548c\u5c06\u8fed\u4ee3\u5668\u58f0\u660e\u4e3a\u6307\u9488\u53d8\u91cf\u4e0d\u540c\u7684\u662f\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u5bb9\u5668\u7c7b\u65b9\u6cd5\u6765\u83b7\u53d6\u8fed\u4ee3\u5668\u5bf9\u8c61\u3002 \u4e24\u4e2a\u5178\u578b\u7684\u5bb9\u5668\u7c7b\u65b9\u6cd5\u662fbegin()\u548cend()\u3002\u5b83\u4eec\u5728\u5927\u591a\u6570\u5bb9\u5668\u4e2d\u8868\u793a\u6574\u4e2a\u5bb9\u5668\u8303\u56f4\u3002\u5176\u4ed6\u4e00\u4e9b\u5bb9\u5668\u8fd8\u4f7f\u7528rbegin()\u548crend()\u65b9\u6cd5\u63d0\u4f9b\u53cd\u5411\u8fed\u4ee3\u5668\uff0c\u4ee5\u6309\u53cd\u5411\u987a\u5e8f\u6307\u5b9a\u5bf9\u8c61\u8303\u56f4\u3002 \u4e0b\u9762\u7684\u7a0b\u5e8f\u521b\u5efa\u4e86\u4e00\u4e2a\u77e2\u91cf\u5bb9\u5668\uff08STL\u4e2d\u548c\u6570\u7ec4\u7b49\u4ef7\u7684\u5bf9\u8c61\uff09\uff0c\u4f7f\u7528\u8fed\u4ee3\u5668\u5728\u5176\u4e2d\u641c\u7d22\u3002\u8be5\u7a0b\u5e8f\u548c\u524d\u4e00\u7ae0\u4e2d\u7684\u7a0b\u5e8f\u76f8\u540c\u3002 vectdemo.cpp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #include iostream #include algorithm #include vector using namespace std ; vector int intVector ( 100 ); void main () { intVector [ 20 ] = 50 ; vector int :: iterator intIter = find ( intVector . begin (), intVector . end (), 50 ); if ( intIter != intVector . end ()) cout Vector contains value * intIter endl ; else cout Vector does not contain 50 endl ; } \u6ce8\u610f\u7528\u4e0b\u9762\u7684\u65b9\u6cd5\u663e\u793a\u641c\u7d22\u5230\u7684\u6570\u636e\uff1a 1 cout Vector contains value * intIter endl ; \u5e38\u91cf\u8fed\u4ee3\u5668 \u548c\u6307\u9488\u4e00\u6837\uff0c\u4f60\u53ef\u4ee5\u7ed9\u4e00\u4e2a\u8fed\u4ee3\u5668\u8d4b\u503c\u3002\u4f8b\u5982\uff0c\u9996\u5148\u58f0\u660e\u4e00\u4e2a\u8fed\u4ee3\u5668\uff1a 1 vector int :: iterator first ; \u8be5\u8bed\u53e5\u521b\u5efa\u4e86\u4e00\u4e2a vector int \u7c7b\u7684\u8fed\u4ee3\u5668\u3002\u4e0b\u9762\u7684\u8bed\u53e5\u5c06\u8be5\u8fed\u4ee3\u5668\u8bbe\u7f6e\u5230intVector\u7684\u7b2c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5e76\u5c06\u5b83\u6307\u5411\u7684\u5bf9\u8c61\u503c\u8bbe\u7f6e\u4e3a123: 1 2 first = intVector . begin (); * first = 123 ; \u8fd9\u79cd\u8d4b\u503c\u5bf9\u4e8e\u5927\u591a\u6570\u5bb9\u5668\u7c7b\u90fd\u662f\u5141\u8bb8\u7684\uff0c\u9664\u4e86\u53ea\u8bfb\u53d8\u91cf\u3002\u4e3a\u4e86\u9632\u6b62\u9519\u8bef\u8d4b\u503c\uff0c\u53ef\u4ee5\u58f0\u660e\u8fed\u4ee3\u5668\u4e3a\uff1a 1 2 3 4 const vector int :: const_iterator result ; result = find ( intVector . begin (), intVector . end (), value ); if ( result != intVector . end ()) * result = 123 ; //\u53d1\u751f\u9519\u8bef\uff0c\u4e0d\u80fd\u7ed9\u5e38\u91cf\u8d4b\u503c \u8b66\u544a \u53e6\u4e00\u79cd\u9632\u6b62\u6570\u636e\u88ab\u6539\u53d8\u7684\u65b9\u6cd5\u662f\u5c06\u5bb9\u5668\u58f0\u660e\u4e3aconst\u7c7b\u578b. \u4f7f\u7528\u8fed\u4ee3\u5668\u7f16\u7a0b \u4f60\u5df2\u7ecf\u89c1\u5230\u4e86\u8fed\u4ee3\u5668\u7684\u4e00\u4e9b\u4f8b\u5b50\uff0c\u73b0\u5728\u6211\u4eec\u5c06\u5173\u6ce8\u6bcf\u79cd\u7279\u5b9a\u7684\u8fed\u4ee3\u5668\u5982\u4f55\u4f7f\u7528\u3002\u7531\u4e8e\u4f7f\u7528\u8fed\u4ee3\u5668\u9700\u8981\u5173\u4e8eSTL\u5bb9\u5668\u7c7b\u548c\u7b97\u6cd5\u7684\u77e5\u8bc6\uff0c\u5728\u9605\u8bfb\u4e86\u540e\u9762\u7684\u4e24\u7ae0\u540e\u4f60\u53ef\u80fd\u9700\u8981\u91cd\u65b0\u590d\u4e60\u4e00\u4e0b\u672c\u7ae0\u5185\u5bb9\u3002 \u8f93\u5165\u8fed\u4ee3\u5668 \u8f93\u5165\u8fed\u4ee3\u5668\u662f\u6700\u666e\u901a\u7684\u7c7b\u578b\u3002\u8f93\u5165\u8fed\u4ee3\u5668\u81f3\u5c11\u80fd\u591f\u4f7f\u7528==\u548c!=\u6d4b\u8bd5\u662f\u5426\u76f8\u7b49;\u4f7f\u7528*\u6765\u8bbf\u95ee\u6570\u636e\uff1b\u4f7f\u7528++\u64cd\u4f5c\u6765\u9012\u63a8\u8fed\u4ee3\u5668\u5230\u4e0b\u4e00\u4e2a\u5143\u7d20\u6216\u5230\u8fbepast-the-end\u503c\u3002 \u4e3a\u4e86\u7406\u89e3\u8fed\u4ee3\u5668\u4ee5\u53caSTL\u51fd\u6570\u662f\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\u7684\uff0c\u73b0\u5728\u6765\u770b\u4e00\u4e0bfind()\u6a21\u677f\u51fd\u6570\u7684\u5b9a\u4e49: 1 2 3 4 5 6 7 template class InputIterator , class T InputIterator find ( InputIterator first , InputIterator last , const T value ) { while ( first != last * first != value ) ++ first ; return first ; } \u6ce8\u610f \u5728find()\u7b97\u6cd5\u4e2d\uff0c\u6ce8\u610f\u5982\u679cfirst\u548clast\u6307\u5411\u4e0d\u540c\u7684\u5bb9\u5668\uff0c\u8be5\u7b97\u6cd5\u53ef\u80fd\u9677\u5165\u6b7b\u5faa\u73af\u3002 \u8f93\u51fa\u8fed\u4ee3\u5668 \u8f93\u51fa\u8fed\u4ee3\u5668\u7f3a\u7701\u53ea\u5199\uff0c\u901a\u5e38\u7528\u4e8e\u5c06\u6570\u636e\u4ece\u4e00\u4e2a\u4f4d\u7f6e\u62f7\u8d1d\u5230\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u3002\u7531\u4e8e\u8f93\u51fa\u8fed\u4ee3\u5668\u65e0\u6cd5\u8bfb\u53d6\u5bf9\u8c61\uff0c\u56e0\u4e9b\u4f60\u4e0d\u4f1a\u5728\u4efb\u4f55\u641c\u7d22\u548c\u5176\u4ed6\u7b97\u6cd5\u4e2d\u4f7f\u7528\u5b83\u3002\u8981\u60f3\u8bfb\u53d6\u4e00\u4e2a\u62f7\u8d1d\u7684\u503c\uff0c\u5fc5\u987b\u4f7f\u7528\u53e6\u4e00\u4e2a\u8f93\u5165\u8fed\u4ee3\u5668\uff08\u6216\u5b83\u7684\u7ee7\u627f\u8fed\u4ee3\u5668\uff09\u3002 outIter.cpp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include iostream #include algorithm //need copy() #include vector //need vector using namespace std ; double darray [ 10 ] = { 1.0 , 1.1 , 1.2 , 1.3 , 1.4 , 1.5 , 1.6 , 1.7 , 1.8 , 1.9 }; vector double vdouble ( 10 ); int main () { vector double :: iterator outputIterator = vdouble . begin (); copy ( darray , darray + 10 , outputIterator ); while ( outputIterator != vdouble . end ()) { cout * outputIterator endl ; outputIterator ++ ; } return 0 ; } \u6ce8\u610f \u5f53\u4f7f\u7528copy()\u7b97\u6cd5\u7684\u65f6\u5019\uff0c\u4f60\u5fc5\u987b\u786e\u4fdd\u76ee\u6807\u5bb9\u5668\u6709\u8db3\u591f\u5927\u7684\u7a7a\u95f4\uff0c\u6216\u8005\u5bb9\u5668\u672c\u8eab\u662f\u81ea\u52a8\u6269\u5c55\u7684\u3002 \u524d\u63a8\u8fed\u4ee3\u5668 \u524d\u63a8\u8fed\u4ee3\u5668\u80fd\u591f\u8bfb\u5199\u6570\u636e\u503c\uff0c\u5e76\u80fd\u591f\u5411\u524d\u63a8\u8fdb\u5230\u4e0b\u4e00\u4e2a\u503c\u3002\u4f46\u662f\u6ca1\u6cd5\u9012\u51cf\u3002replace()\u7b97\u6cd5\u663e\u793a\u4e86\u524d\u63a8\u8fed\u4ee3\u5668\u7684\u4f7f\u7528\u65b9\u6cd5\u3002 1 2 template class ForwardIterator , class T void replace ( ForwardIterator first , ForwardIterator last , const T old_value , const T new_value ); \u4f7f\u7528 replace()\u5c06[first, last]\u8303\u56f4\u5185\u7684\u6240\u6709\u503c\u4e3aold_value\u7684\u5bf9\u8c61\u66ff\u6362\u4e3anew_value\uff1a 1 replace ( vdouble . begin (), vdouble . end (), 1.5 , 3.1415926 ); \u53cc\u5411\u8fed\u4ee3\u5668 \u53cc\u5411\u8fed\u4ee3\u5668\u8981\u6c42\u80fd\u591f\u589e\u51cf\u3002\u5982reverse()\u7b97\u6cd5\u8981\u6c42\u4e24\u4e2a\u53cc\u5411\u8fed\u4ee3\u5668\u4f5c\u4e3a\u53c2\u6570\uff1a 1 2 template class BidirectionalIterator void reverse ( BidirectionalIterator first , BidirectionalIterator last ); \u4f7f\u7528 reverse()\u51fd\u6570\u6765\u5bf9\u5bb9\u5668\u8fdb\u884c\u9006\u5411\u6392\u5e8f\uff1a 1 reverse ( vdoule . begin (), vdouble . end ()); \u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668 \u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\u80fd\u591f\u4ee5\u4efb\u610f\u987a\u5e8f\u8bbf\u95ee\u6570\u636e\uff0c\u5e76\u80fd\u7528\u4e8e\u8bfb\u5199\u6570\u636e\uff08\u4e0d\u662fconst\u7684C++\u6307\u9488\u4e5f\u662f\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\uff09\u3002STL\u7684\u6392\u5e8f\u548c\u641c\u7d22\u51fd\u6570\u4f7f\u7528\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\u3002\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\u53ef\u4ee5\u4f7f\u7528\u5173\u7cfb\u64cd\u4f5c\u7b26\u4f5c\u6bd4\u8f83\u3002 1 random_shuffle () \u51fd\u6570\u968f\u673a\u6253\u4e71\u539f\u5148\u7684\u987a\u5e8f\u58f0\u660e\u4e3a\uff1a 1 2 template class RandomAccessIterator void random_shuffle ( RandomAccessIterator first , RandomAccessIterator last ); \u4f7f\u7528\u65b9\u6cd5 1 random_shuffle ( vdouble . begin (), vdouble . end ()); \u8fed\u4ee3\u5668\u6280\u672f \u8981\u5b66\u4f1a\u4f7f\u7528\u8fed\u4ee3\u5668\u548c\u5bb9\u5668\u4ee5\u53ca\u7b97\u6cd5\uff0c\u9700\u8981\u5b66\u4e60\u4e0b\u9762\u7684\u65b0\u6280\u672f\u3002 \u6d41\u548c\u8fed\u4ee3\u5668 \u672c\u4e66\u7684\u5f88\u591a\u4f8b\u5b50\u7a0b\u5e8f\u4f7f\u7528I/O\u6d41\u8bed\u53e5\u6765\u8bfb\u5199\u6570\u636e\u3002\u4f8b\u5982\uff1a 1 2 3 4 int value ; cout Enter value: ; cin value ; cout You entered value endl ; \u5bf9\u4e8e\u8fed\u4ee3\u5668\uff0c\u6709\u53e6\u4e00\u79cd\u65b9\u6cd5\u4f7f\u7528\u6d41\u548c\u6807\u51c6\u51fd\u6570\u3002\u7406\u89e3\u7684\u8981\u70b9\u662f\u5c06\u8f93\u5165/\u8f93\u51fa\u6d41\u4f5c\u4e3a \u5bb9\u5668\u770b\u5f85\u3002\u56e0\u6b64\uff0c\u4efb\u4f55\u63a5\u53d7\u8fed\u4ee3\u5668\u53c2\u6570\u7684\u7b97\u6cd5\u90fd\u53ef\u4ee5\u548c\u6d41\u4e00\u8d77\u5de5\u4f5c\u3002 outStrm.cpp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 #include iostream #include stdlib.h // need rand(), srand() #include time.h //need time() #include algorithm //need sort(),copy() #include vector //need vector #include iterator using namespace std ; void Display ( vector int v , const char * s ); int main () { srand ( time ( NULL )); vector int collection ( 10 ); for ( int i = 0 ; i 10 ; i ++ ) collection [ i ] = rand () % 10000 ; Display ( collection , Before sorting ); sort ( collection . begin (), collection . end ()); Display ( collection , After sorting ); return 0 ; } void Display ( vector int v , const char * s ) { cout endl s endl ; copy ( v . begin (), v . end (), ostream_iterator int ( cout , \\t )); cout endl ; } \u51fd\u6570Display()\u663e\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u4e00\u4e2a\u8f93\u51fa\u6d41\u8fed\u4ee3\u5668\u3002\u4e0b\u9762\u7684\u8bed\u53e5\u5c06\u5bb9\u5668\u4e2d\u7684\u503c\u4f20\u8f93\u5230cout\u8f93\u51fa\u6d41\u5bf9\u8c61\u4e2d\uff1a 1 copy ( v . begin (), v . end (), ostream_iterator int ( cout , \\t )); \u7b2c\u4e09\u4e2a\u53c2\u6570\u5b9e\u4f8b\u5316\u4e86 ostream_iterator int \u7c7b\u578b\uff0c\u5e76\u5c06\u5b83\u4f5c\u4e3acopy()\u51fd\u6570\u7684\u8f93\u51fa\u76ee\u6807\u8fed\u4ee3\u5668\u5bf9\u8c61\u3002\"\\t\"\u5b57\u7b26\u4e32\u662f\u4f5c\u4e3a\u5206\u9694\u7b26\u3002\u8fd0\u884c\u7ed3\u679c\uff1a 1 2 3 4 5 6 7 8 $ g++ outstrm.cpp $ ./a.out Before sorting 7136 8210 8265 5185 519 2906 2032 2273 101 4642 After sorting 101 519 2032 2273 2906 4642 5185 7136 8210 8265 \u8fd9\u662fSTL\u795e\u5947\u7684\u4e00\u9762\u3002\u4e3a\u5b9a\u4e49\u8f93\u51fa\u6d41\u8fed\u4ee3\u5668\uff0cSTL\u63d0\u4f9b\u4e86\u6a21\u677f\u7c7bostream_iterator\u3002\u8fd9\u4e2a\u7c7b\u7684\u6784\u9020\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570\uff1a\u4e00\u4e2aostream\u5bf9\u8c61\u548c\u4e00\u4e2astring\u503c\u3002\u56e0\u6b64\u53ef\u4ee5\u8c61\u4e0b\u9762\u4e00\u6837\u7b80\u5355\u5730\u521b\u5efa\u4e00\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61\uff1a 1 ostream_iterator int ( cout , \\n ) \u8be5\u8fed\u4ee3\u5668\u53ef\u4ee5\u548c\u4efb\u4f55\u63a5\u53d7\u4e00\u4e2a\u8f93\u51fa\u8fed\u4ee3\u5668\u7684\u51fd\u6570\u4e00\u8d77\u4f7f\u7528\u3002 \u63d2\u5165\u8fed\u4ee3\u5668 \u63d2\u5165\u8fed\u4ee3\u5668\u7528\u4e8e\u5c06\u503c\u63d2\u5165\u5230\u5bb9\u5668\u4e2d\u3002\u5b83\u4eec\u4e5f\u53eb\u9002\u914d\u5668\uff0c\u56e0\u4e3a\u5b83\u4eec\u5c06\u5bb9\u5668\u9002\u914d\u6216\u8f6c\u5316\u4e3a\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u5e76\u7528\u4e8ecopy()\u8fd9\u6837\u7684\u7b97\u6cd5\u4e2d\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u7a0b\u5e8f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u94fe\u8868\u548c\u4e00\u4e2a\u77e2\u91cf\u5bb9\u5668\uff1a 1 2 list double dList ; vector double dVector ; \u901a\u8fc7\u4f7f\u7528front_inserter\u8fed\u4ee3\u5668\u5bf9\u8c61\uff0c\u53ef\u4ee5\u53ea\u7528\u5355\u4e2acopy()\u8bed\u53e5\u5c31\u5b8c\u6210\u5c06\u77e2\u91cf\u4e2d\u7684\u5bf9\u8c61\u63d2\u5165\u5230\u94fe\u8868\u524d\u7aef\u7684\u64cd\u4f5c\uff1a 1 copy ( dVector . begin (), dVector . end (), front_inserter ( dList )); \u4e09\u79cd\u63d2\u5165\u8fed\u4ee3\u5668\u5982\u4e0b\uff1a \u666e\u901a\u63d2\u5165\u8fed\u4ee3\u5668\u5c06\u5bf9\u8c61\u63d2\u5165\u5230\u5bb9\u5668\u6307\u5b9a\u5bf9\u8c61\u7684\u524d\u9762 Front inserters\u5c06\u5bf9\u8c61\u63d2\u5165\u5230\u6570\u636e\u96c6\u7684\u524d\u9762\u2014\u2014\u4f8b\u5982\uff0c\u94fe\u8868\u8868\u5934\u3002 Back inserters\u5c06\u5bf9\u8c61\u63d2\u5165\u5230\u96c6\u5408\u7684\u5c3e\u90e8\u2014\u2014\u4f8b\u5982\uff0c\u77e2\u91cf\u7684\u5c3e\u90e8\uff0c\u5bfc\u81f4\u77e2\u91cf\u5bb9\u5668\u6269\u5c55\u3002 \u4f7f\u7528\u63d2\u5165\u8fed\u4ee3\u5668\u53ef\u80fd\u5bfc\u81f4\u5bb9\u5668\u4e2d\u7684\u5176\u4ed6\u5bf9\u8c61\u79fb\u52a8\u4f4d\u7f6e\uff0c\u56e0\u800c\u4f7f\u5f97\u73b0\u5b58\u7684\u8fed\u4ee3\u5668\u975e\u6cd5\u3002\u4f8b\u5982\uff0c\u5c06\u4e00\u4e2a\u5bf9\u8c61\u63d2\u5165\u5230\u77e2\u91cf\u5bb9\u5668\u5c06\u5bfc\u81f4\u5176\u4ed6\u503c\u79fb\u52a8\u4f4d\u7f6e\u4ee5\u817e\u51fa\u7a7a\u95f4\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u63d2\u5165\u5230\u50cf\u94fe\u8868\u8fd9\u6837\u7684\u7ed3\u6784\u4e2d\u66f4\u4e3a\u6709\u6548\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u4f1a\u5bfc\u81f4\u5176\u4ed6\u5bf9\u8c61\u79fb\u52a8\u3002 insert.cpp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #include iostream #include algorithm #include list #include iterator using namespace std ; int iArray [ 5 ] = { 1 , 2 , 3 , 4 , 5 }; void Display ( list int v , const char * s ); int main () { list int iList ; copy ( iArray , iArray + 5 , front_inserter ( iList )); Display ( iList , Before find and copy ); list int :: iterator p = find ( iList . begin (), iList . end (), 3 ); copy ( iArray , iArray + 2 , inserter ( iList , p )); Display ( iList , After find and copy ); return 0 ; } void Display ( list int v , const char * s ) { cout s endl ; copy ( v . begin (), v . end (), ostream_iterator int ( cout , )); cout endl ; } \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a 1 2 3 4 5 6 $ g++ insert.cpp $ ./a.out Before find and copy 5 4 3 2 1 After find and copy 5 4 1 2 3 2 1 \u53ef\u4ee5\u5c06front_inserter\u66ff\u6362\u4e3aback_inserter\u8bd5\u8bd5\u3002 \u5982\u679c\u7528find()\u53bb\u67e5\u627e\u5728\u5217\u8868\u4e2d\u4e0d\u5b58\u5728\u7684\u503c\uff0c\u4f8b\u598299\u3002\u7531\u4e8e\u8fd9\u65f6p\u5c06\u88ab\u8bbe\u7f6e\u4e3apast-the-end\u503c\uff0c\u6700\u540e\u7684copy()\u51fd\u6570\u5c06iArray\u7684\u503c\u9644\u52a0\u5230\u94fe\u8868\u7684\u540e\u90e8\u3002 \u6df7\u5408\u8fed\u4ee3\u5668\u51fd\u6570 \u5728\u6d89\u53ca\u5230\u5bb9\u5668\u548c\u7b97\u6cd5\u7684\u64cd\u4f5c\u4e2d\uff0c\u8fd8\u6709\u4e24\u4e2a\u8fed\u4ee3\u5668\u51fd\u6570\u975e\u5e38\u6709\u7528\uff1a advance() \u6309\u6307\u5b9a\u7684\u6570\u76ee\u589e\u51cf\u8fed\u4ee3\u5668 distance() \u8fd4\u56de\u5230\u8fbe\u4e00\u4e2a\u8fed\u4ee3\u5668\u6240\u9700\uff08\u9012\u589e\uff09\u64cd\u4f5c\u7684\u6570\u76ee\u3002 \u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 list int iList ; list int :: iterator p = find ( iList . begin (), iList . end (), 2 ); cout before: p == * p endl ; advance ( p , 2 ); cout after: p == * p endl ; int k = 0 ; distance ( p , iList . end (), k ); cout k == k endl ; advance()\u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5411\u524d\u63a8\u8fdb\u7684\u6570\u76ee\u3002\u5bf9\u4e8e\u524d\u63a8\u8fed\u4ee3\u5668\uff0c\u8be5\u503c\u5fc5\u987b\u4e3a\u6b63\uff0c\u800c\u5bf9\u4e8e\u53cc\u5411\u8fed\u4ee3\u5668\u548c\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\uff0c\u8be5\u503c\u53ef\u4ee5\u4e3a\u8d1f\u3002 \u4f7f\u7528distance()\u51fd\u6570\u8fd4\u56de\u5230\u8fbe\u53e6\u4e00\u4e2a\u8fed\u4ee3\u5668\u6240\u9700\u8981\u7684\u6b65\u6570\u3002 \u6ce8\u610f distance()\u51fd\u6570\u662f\u8fed\u4ee3\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u9012\u589e\u7b2c\u4e09\u4e2a\u53c2\u6570\u3002\u56e0\u6b64\uff0c\u4f60\u5fc5\u987b\u521d\u59cb\u5316\u53c2\u6570\u3002\u672a\u521d\u59cb\u5316\u8be5\u53c2\u6570\u51e0\u4e4e\u6ce8\u5b9a\u8981\u5931\u8d25\u3002 \u51fd\u6570\u548c\u51fd\u6570\u5bf9\u8c61 STL\u4e2d\uff0c\u51fd\u6570\u88ab\u79f0\u4e3a\u7b97\u6cd5\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u4eec\u548c\u6807\u51c6C\u5e93\u51fd\u6570\u76f8\u6bd4\uff0c\u5b83\u4eec\u66f4\u4e3a\u901a\u7528\u3002STL\u7b97\u6cd5\u901a\u8fc7\u91cd\u8f7doperator()\u51fd\u6570\u5b9e\u73b0\u4e3a\u6a21\u677f\u7c7b\u6216\u6a21\u677f\u51fd\u6570\u3002\u8fd9\u4e9b\u7c7b\u7528\u4e8e\u521b\u5efa\u51fd\u6570\u5bf9\u8c61\uff0c\u5bf9\u5bb9\u5668\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u5404\u79cd\u5404\u6837\u7684\u64cd\u4f5c\u3002\u4e0b\u9762\u7684\u51e0\u8282\u89e3\u91ca\u5982\u4f55\u4f7f\u7528\u51fd\u6570\u548c\u51fd\u6570\u5bf9\u8c61\u3002 \u51fd\u6570\u548c\u65ad\u8a00 \u7ecf\u5e38\u9700\u8981\u5bf9\u5bb9\u5668\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u64cd\u4f5c\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u80fd\u5e0c\u671b\u904d\u5386\u4e00\u4e2a\u5bb9\u5668\u4e2d\u6240\u6709\u5bf9\u8c61\u7684STL\u7b97\u6cd5\u80fd\u591f\u56de\u8c03\u81ea\u5df1\u7684\u51fd\u6570\u3002\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 #include iostream #include stdlib.h #include time.h #include vector #include algorithm using namespace std ; #define VSIZE 24 vector long v ( VSIZE ); void initialize ( long ri ); void show ( const long ri ); bool isMinus ( const long ri ); int main () { srand ( time ( NULL )); for_each ( v . begin (), v . end (), initialize ); cout Vector of signed long integers endl ; for_each ( v . begin (), v . end (), show ); cout endl ; int count = 0 ; vector long :: iterator p ; p = find_if ( v . begin (), v . end (), isMinus ); while ( p != v . end ()) { count ++ ; p = find_if ( p + 1 , v . end (), isMinus ); } cout Number of values: VSIZE endl ; cout Negative values: count endl ; return 0 ; } void initialize ( long ri ) { ri = ( rand () - ( RAND_MAX / 2 )); } void show ( const long ri ) { cout ri ; } bool isMinus ( const long ri ) { return ( ri 0 ); } \u6240\u8c13\u65ad\u8a00\u51fd\u6570\uff0c\u5c31\u662f\u8fd4\u56debool\u503c\u7684\u51fd\u6570\u3002 \u51fd\u6570\u5bf9\u8c61 \u9664\u4e86\u7ed9STL\u7b97\u6cd5\u4f20\u9012\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u4f60\u8fd8\u53ef\u80fd\u9700\u8981\u4f20\u9012\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u4ee5\u4fbf\u6267\u884c\u66f4\u590d\u6742\u7684\u64cd\u4f5c\u3002\u8fd9\u6837\u4e00\u4e2a\u5bf9\u8c61\u5c31\u53eb\u505a\u51fd\u6570\u5bf9\u8c61\u3002\u5b9e\u9645\u4e0a\u51fd\u6570\u5bf9\u8c61\u5c31\u662f\u4e00\u4e2a\u7c7b\uff0c\u4f46\u5b83\u548c\u56de\u8c03\u51fd\u6570\u4e00\u6837\u53ef\u4ee5\u88ab\u56de\u8c03\u3002\u4f8b\u5982\uff0c\u5728\u51fd\u6570\u5bf9\u8c61\u6bcf\u6b21\u88abfor_each()\u6216find_if()\u51fd\u6570\u8c03\u7528\u65f6\u53ef\u4ee5\u4fdd\u7559\u7edf\u8ba1\u4fe1\u606f\u3002\u51fd\u6570\u5bf9\u8c61\u662f\u901a\u8fc7\u91cd\u8f7doperator()()\u5b9e\u73b0\u7684\u3002\u5982\u679cTanyClass\u5b9a\u4e49\u4e86operator()()\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u8fd9\u4e48\u4f7f\u7528\uff1a 1 2 3 TanyClass object ; object (); for_each ( v . begin (), v . end (), object ); STL\u5b9a\u4e49\u4e86\u51e0\u4e2a\u51fd\u6570\u5bf9\u8c61\u3002\u7531\u4e8e\u5b83\u4eec\u662f\u6a21\u677f\uff0c\u6240\u4ee5\u80fd\u591f\u7528\u4e8e\u4efb\u4f55\u7c7b\u578b\uff0c\u5305\u62ecC/C++\u56fa\u6709\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982long\u3002\u6709\u4e9b\u51fd\u6570\u5bf9\u8c61\u4ece\u540d\u5b57\u4e2d\u5c31\u53ef\u4ee5\u770b\u51fa\u5b83\u7684\u7528\u9014\uff0c\u5982plus()\u548cmultiplies()\u3002\u7c7b\u4f3c\u7684greater()\u548cless-equal()\u7528\u4e8e\u6bd4\u8f83\u4e24\u4e2a\u503c\u3002 \u6ce8\u610f \u6709\u4e9b\u7248\u672c\u7684ANSI C++ \u5b9a\u4e49\u4e86times()\u51fd\u6570\u5bf9\u8c61\uff0c\u800cGNU C++\u628a\u5b83\u547d\u540d\u4e3amultiplies()\u3002\u4f7f\u7528\u65f6\u5fc5\u987b\u5305\u542b\u5934\u6587\u4ef6 functional \u3002 \u4e00\u4e2a\u6709\u7528\u7684\u51fd\u6570\u5bf9\u8c61\u7684\u5e94\u7528\u662faccumulate()\u7b97\u6cd5\u3002\u8be5\u51fd\u6570\u8ba1\u7b97\u5bb9\u5668\u4e2d\u6240\u6709\u503c\u7684\u603b\u548c\u3002\u8bb0\u4f4f\u8fd9\u6837\u7684\u503c\u4e0d\u4e00\u5b9a\u662f\u7b80\u5355\u7684\u7c7b\u578b\uff0c\u901a\u8fc7\u91cd\u8f7doperator+()\uff0c\u4e5f\u53ef\u4ee5\u662f\u7c7b\u5bf9\u8c61\u3002 accum.cpp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include iostream #include numeric //need accumulate() #include vector //need vector #include functional //need multiplies() or times() using namespace std ; #define MAX 10 vector long v ( MAX ); int main () { for ( int i = 0 ; i MAX ; i ++ ) v [ i ] = i + 1 ; long sum = accumulate ( v . begin (), v . end (), 0 ); cout Sum of values == sum endl ; long product = accumulate ( v . begin (), v . end (), 1 , multiplies long ()); cout Product of values == product endl ; return 0 ; } \u7f16\u8bd1\u8f93\u51fa\u5982\u4e0b\uff1a 1 2 3 4 $ g++ accum.cpp $ ./a.out Sum of values == 55 Product of values == 3628800 \u6ce8\u610f\u4f7f\u7528\u4e86\u51fd\u6570\u5bf9\u8c61\u7684accumulate()\u7b97\u6cd5\u7684\u7528\u6cd5\u3002accumulate()\u5728\u5185\u90e8\u5c06\u6bcf\u4e2a\u5bb9\u5668\u4e2d\u7684\u5bf9\u8c61\u548c\u7b2c\u4e09\u4e2a\u53c2\u6570\u4f5c\u4e3amultiplies\u51fd\u6570\u5bf9\u8c61\u7684\u53c2\u6570\uff0cmultiplies(1,v)\u8ba1\u7b97\u4e58\u79ef\u3002VC\u4e2d\u7684\u8fd9\u4e9b\u6a21\u677f\u7684\u6e90\u4ee3\u7801\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 template class _II , class _Ty inline _Ty accumulate ( _II _F , _II _L , _Ty _V ) { for (; _F != _L ; ++ _F ) _V = _V + * _F ; return ( _V ); } template class _II , class _Ty , class _Bop inline _Ty accumulate ( _II _F , _II _L , _Ty _V , _Bop _B ) { for (; _F != _L ; ++ _F ) _V = _B ( _V , * _F ); return ( _V ); } template class _A1 , class _A2 , class _R struct binary_function { typedef _A1 first_argument_type ; typedef _A2 second_argument_type ; typedef _R result_type ; }; template class _Ty struct multiplies : binary_function _Ty , _Ty , _Ty { _Ty operator ()( const _Ty _X , const _Ty _Y ) const { return ( _X * _Y ); } }; \u5f15\u8a00\uff1a\u5982\u679c\u4f60\u60f3\u6df1\u5165\u4e86\u89e3STL\u5230\u5e95\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff0c\u6700\u597d\u7684\u529e\u6cd5\u662f\u5199\u4e2a\u7b80\u5355\u7684\u7a0b\u5e8f\uff0c\u5c06\u7a0b\u5e8f\u4e2d\u6d89\u53ca\u5230\u7684\u6a21\u677f\u6e90\u7801\u7ed9copy\u4e0b\u6765\uff0c\u7a0d\u4f5c\u6574\u7406\uff0c\u5c31\u80fd\u770b\u61c2\u4e86\u3002\u6240\u4ee5\u6ca1\u6709\u5fc5\u8981\u53bb\u4e70\u4ec0\u4e48\u300aSTL\u6e90\u7801\u5256\u6790\u300b\u4e4b\u7c7b\u7684\u4e66\u7c4d\uff0c\u90a3\u4e9b\u4e66\u53ef\u80fd\u53cd\u800c\u6d6a\u8d39\u65f6\u95f4\u3002 \u53d1\u751f\u5668\u51fd\u6570\u5bf9\u8c61 \u6709\u4e00\u7c7b\u6709\u7528\u7684\u51fd\u6570\u5bf9\u8c61\u662f\u201c\u53d1\u751f\u5668\u201d(generator)\u3002\u8fd9\u7c7b\u51fd\u6570\u6709\u81ea\u5df1\u7684\u5185\u5b58\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u80fd\u591f\u4ece\u5148\u524d\u7684\u8c03\u7528\u4e2d\u8bb0\u4f4f\u4e00\u4e2a\u503c\u3002\u4f8b\u5982\u968f\u673a\u6570\u53d1\u751f\u5668\u51fd\u6570\u3002 \u666e\u901a\u7684C\u7a0b\u5e8f\u5458\u4f7f\u7528\u9759\u6001\u6216\u5168\u5c40\u53d8\u91cf\u201c\u8bb0\u5fc6\u201d\u4e0a\u6b21\u8c03\u7528\u7684\u7ed3\u679c\u3002\u4f46\u8fd9\u6837\u505a\u7684\u7f3a\u70b9\u662f\u8be5\u51fd\u6570\u65e0\u6cd5\u548c\u5b83\u7684\u6570\u636e\u76f8\u5206\u79bb\uff0c\u8fd8\u6709\u4e2a\u7f3a\u70b9\u662f\u8981\u7528TLS\u624d\u80fd\u7ebf\u7a0b\u5b89\u5168\u3002\u663e\u7136\uff0c\u4f7f\u7528\u7c7b\u6765\u5c01\u88c5\u4e00\u5757:\u201c\u5185\u5b58\u201d\u66f4\u5b89\u5168\u53ef\u9760\u3002\u5148\u770b\u4e00\u4e0b\u4f8b\u5b50\uff1a randfunc.cpp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 #include iostream #include stdlib.h //need rand(), srand() #include time.h //need random_shuffle() #include vector //need vector #include functional //need ptr_fun() #include algorithm #include iterator using namespace std ; int iarray [ 10 ] = { 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 }; vector int v ( iarray , iarray + 10 ); void Display ( vector int vr , const char * s ); unsigned int RandInt ( const unsigned int n ); int main () { srand ( time ( NULL )); Display ( v , Before shuffle: ); pointer_to_unary_function unsigned int , unsigned int ptr_RandInt = ptr_fun ( RandInt ); random_shuffle ( v . begin (), v . end (), ptr_RandInt ); Display ( v , After shuffle: ); return 0 ; } void Display ( vector int vr , const char * s ) { cout endl s endl ; copy ( vr . begin (), vr . end (), ostream_iterator int ( cout , )); cout endl ; } unsigned int RandInt ( const unsigned int n ) { return rand () % n ; } \u7f16\u8bd1\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 $ g++ randfunc.cpp $ ./a.out Before shuffle: 1 2 3 4 5 6 7 8 9 10 After shuffle: 6 7 2 8 3 5 10 1 9 4 \u9996\u5148\u7528\u4e0b\u9762\u7684\u8bed\u53e5\u58f0\u660e\u4e00\u4e2a\u5bf9\u8c61 pointer_to_unary_function unsigned int, unsigned int ptr_RandInt = ptr_fun ( RandInt ) ; \u8fd9\u513f\u4f7f\u7528STL\u7684\u5355\u76ee\u51fd\u6570\u6a21\u677f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u91cfptr_RandInt, \u5e76\u5c06\u5730\u5740\u521d\u59cb\u5316\u5230\u6211\u4eec\u7684\u51fd\u6570RandInt()\u3002\u5355\u76ee\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u503c\u3002\u73b0\u5728random_shuffle()\u53ef\u4ee5\u5982\u4e0b\u8c03\u7528: 1 random_shuffle ( v . begin (), v . end (), ptr_RandInt ); \u5728\u672c\u4f8b\u5b50\u4e2d\uff0c\u53d1\u751f\u5668\u53ea\u662f\u7b80\u5355\u7684\u8c03\u7528rand()\u51fd\u6570\u3002 \u53d1\u751f\u5668\u51fd\u6570\u7c7b\u5bf9\u8c61 \u4e0b\u9762\u7684\u4f8b\u5b50\u8bf4\u660e\u53d1\u751f\u5668\u51fd\u6570\u7c7b\u5bf9\u8c61\u7684\u4f7f\u7528\u3002 fiborand.cpp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 #include iostream #include algorithm //need rand_shuffle() #include vector //need vector #include functional //need unary_function #include iterator using namespace std ; int iarray [ 10 ] = { 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 }; vector int v ( iarray , iarray + 10 ); void Display ( vector int vr , const char * s ); template class Arg class FiboRand : public unary_function Arg , Arg { int i , j ; Arg sequence [ 18 ]; public : FiboRand (); Arg operator ()( const Arg arg ); }; void main () { FiboRand int fibogen ; cout Fibonacci random number generator endl ; cout using random_shuffle and a function object endl ; Display ( v , Before shuffle: ); random_shuffle ( v . begin (), v . end (), fibogen ); Display ( v , After shuffle: ); } void Display ( vector int vr , const char * s ) { cout endl s endl ; copy ( vr . begin (), vr . end (), ostream_iterator int ( cout , )); cout endl ; } template class Arg FiboRand Arg :: FiboRand () { sequence [ 17 ] = 1 ; sequence [ 16 ] = 2 ; for ( int n = 15 ; n 0 ; n -- ) sequence [ n ] = sequence [ n + 1 ] + sequence [ n + 2 ]; i = 17 ; j = 5 ; } template class Arg Arg FiboRand Arg :: operator ()( const Arg arg ) { Arg k = sequence [ i ] + sequence [ j ]; sequence [ i ] = k ; i -- ; j -- ; if ( i == 0 ) i = 17 ; if ( j == 0 ) j = 17 ; return k % arg ; } \u7f16\u8bd1\u8fd0\u884c\u8f93\u51fa\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 $ g ++ fiborand . cpp $ . / a . out Fibonacci random number generator using random_shuffle and a function object Before shuffle : 1 2 3 4 5 6 7 8 9 10 After shuffle : 6 8 5 4 3 7 10 1 9 \u8be5\u7a0b\u5e8f\u7528\u5b8c\u5168\u4e0d\u540c\u7684\u65b9\u6cd5\u4f7f\u7528rand_shuffle\u3002Fibonacci\u53d1\u751f\u5668\u5c01\u88c5\u5728\u4e00\u4e2a\u7c7b\u4e2d\uff0c\u8be5\u7c7b\u80fd\u4ece\u5148\u524d\u7684\u201c\u4f7f\u7528\u201d\u4e2d\u8bb0\u5fc6\u8fd0\u884c\u7ed3\u679c\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u7c7bFiboRand\u7ef4\u62a4\u4e86\u4e00\u4e2a\u6570\u7ec4\u548c\u4e24\u4e2a\u7d22\u5f15\u53d8\u91cfi\u548cj\u3002 FiboRand\u7c7b\u7ee7\u627f\u81eaunary_function()\u6a21\u677f\uff1a 1 2 template class Arg class FiboRand : public unary_function Arg , Arg { ... Arg\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\u3002\u8be5\u7c7b\u8fd8\u5b9a\u4e49\u4e86\u4e24\u4e2a\u6210\u5458\u51fd\u6570\uff0c\u4e00\u4e2a\u662f\u6784\u9020\u51fd\u6570\uff0c\u53e6\u4e00\u4e2a\u662foperator()()\u51fd\u6570\uff0c\u8be5\u64cd\u4f5c\u7b26\u5141\u8bb8random_shuffle()\u7b97\u6cd5\u50cf\u4e00\u4e2a\u51fd\u6570\u4e00\u6837\u201c\u8c03\u7528\u201d\u4e00\u4e2aFiboRand\u5bf9\u8c61\u3002 \u7ed1\u5b9a\u5668\u51fd\u6570\u5bf9\u8c61 \u4e00\u4e2a\u7ed1\u5b9a\u5668\u4f7f\u7528\u53e6\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61f()\u548c\u53c2\u6570\u503cV\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u3002\u88ab\u7ed1\u5b9a\u51fd\u6570\u5bf9\u8c61\u5fc5\u987b\u4e3a\u53cc\u76ee\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u6709\u4e24\u4e2a\u53c2\u6570\uff0cA\u548cB\u3002STL\u4e2d\u7684\u7ed1\u5b9a\u5668\u6709\uff1a bind1st() \u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\uff0c\u8be5\u51fd\u6570\u5bf9\u8c61\u5c06\u503cV\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570A\u3002 bind2nd() \u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\uff0c\u8be5\u51fd\u6570\u5bf9\u8c61\u5c06\u503cV\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570B\u3002 \u4e3e\u4f8b\u5982\u4e0b: binder.cpp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #include iostream #include algorithm #include functional #include list using namespace std ; int iarray [ 10 ] = { 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 }; list int aList ( iarray , iarray + 10 ); int main () { int k = 0 ; k = count_if ( aList . begin (), aList . end (), bind1st ( greater int (), 8 )); cout Number elements 8 == k endl ; return 0 ; } count_if()\u8ba1\u7b97\u6ee1\u8db3\u7279\u5b9a\u6761\u4ef6\u7684\u5143\u7d20\u7684\u6570\u76ee\u3002 \u8fd9\u662f\u901a\u8fc7\u5c06\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u548c\u4e00\u4e2a\u53c2\u6570\u6346\u7ed1\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5e76\u5c06\u8be5\u5bf9\u8c61\u4f5c\u4e3a\u7b97\u6cd5\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u5b9e\u73b0\u7684\u3002\u6ce8\u610f\u8fd9\u4e2a\u8868\u8fbe\u5f0f\uff1a 1 bind1st ( greater int (), 8 ) \u8be5\u8868\u8fbe\u5f0f\u5c06 greater int () \u548c\u4e00\u4e2a\u53c2\u6570\u503c8\u6346\u7ed1\u4e3a\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u3002\u7531\u4e8e\u4f7f\u7528\u4e86bind1st()\uff0c\u6240\u4ee5\u8be5\u51fd\u6570\u76f8\u5f53\u4e8e\u8ba1\u7b97\u4e0b\u8ff0\u8868\u8fbe\u5f0f\uff1a 1 8 q \u8868\u8fbe\u5f0f\u4e2d\u7684q\u662f\u5bb9\u5668\u4e2d\u7684\u5bf9\u8c61\u3002\u56e0\u6b64\uff0c\u5b8c\u6574\u7684\u8868\u8fbe\u5f0f 1 k = count_if ( aList . begin (), aList . end (), bind1st ( greater int (), 8 )); \u8ba1\u7b97\u6240\u6709\u5c0f\u4e8e\u6216\u7b49\u4e8e8\u7684\u5bf9\u8c61\u7684\u6570\u76ee\u3002 \u5426\u5b9a\u51fd\u6570\u5bf9\u8c61 \u6240\u8c13\u5426\u5b9a(negator)\u51fd\u6570\u5bf9\u8c61\uff0c\u5c31\u662f\u5b83\u4ece\u53e6\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u521b\u5efa\u800c\u6765\uff0c\u5982\u679c\u539f\u5148\u7684\u51fd\u6570\u8fd4\u56de\u771f\uff0c\u5219\u5426\u5b9a\u51fd\u6570\u5bf9\u8c61\u8fd4\u56de\u5047\u3002\u6709\u4e24\u4e2a\u5426\u5b9a\u51fd\u6570\u5bf9\u8c61\uff1anot1()\u548cnot2()\u3002 not1()\u6388\u53d7\u5355\u76ee\u51fd\u6570\u5bf9\u8c61\uff0cnot2()\u63a5\u53d7\u53cc\u76ee\u51fd\u6570\u5bf9\u8c61\u3002\u5426\u5b9a\u51fd\u6570\u5bf9\u8c61\u901a\u5e38\u548c\u7ed1\u5b9a\u5668\u4e00\u8d77\u4f7f\u7528\u3002\u4f8b\u5982\uff0c\u4e0a\u8282\u4e2d\u7528bind1nd\u6765\u641c\u7d22q =8\u7684\u503c\uff1a 1 k = count_if ( aList . begin (), aList . end (), bind1st ( greater int (), 8 )); \u5982\u679c\u8981\u641c\u7d22q 8\u7684\u5bf9\u8c61\uff0c\u5219\u7528bind2st\u3002\u800c\u73b0\u5728\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a 1 strat = find_if ( aList . begin (), aList . end (), not1 ( bind1st ( greater int (), 8 ))); \u4f60\u5fc5\u987b\u4f7f\u7528not1\uff0c\u56e0\u4e3abind1st\u8fd4\u56de\u5355\u76ee\u51fd\u6570\u3002 \u603b\u7ed3\uff1a\u4f7f\u7528\u6807\u51c6\u6a21\u677f\u5e93\uff08STL\uff09 \u5c3d\u7ba1\u5f88\u591a\u7a0b\u5e8f\u5458\u4ecd\u7136\u5728\u4f7f\u7528\u6807\u51c6C\u51fd\u6570\uff0c\u4f46\u662f\u8fd9\u5c31\u597d\u50cf\u9a91\u7740\u6bdb\u9a74\u5bfb\u627eMercedes\u4e00\u6837\u3002\u4f60\u5f53\u7136\u6700\u7ec8\u4e5f\u4f1a\u5230\u8fbe\u76ee\u6807\uff0c\u4f46\u662f\u4f60\u6d6a\u8d39\u4e86\u5f88\u591a\u65f6\u95f4\u3002 \u5c3d\u7ba1\u6709\u65f6\u5019\u4f7f\u7528\u6807\u51c6C\u51fd\u6570\u786e\u5b9e\u65b9\u4fbf\uff08\u5982\u4f7f\u7528sprintf()\u8fdb\u884c\u683c\u5f0f\u5316\u8f93\u51fa\uff09\u3002\u4f46\u662fC\u51fd\u6570\u4e0d\u4f7f\u7528\u5f02\u5e38\u673a\u5236\u6765\u62a5\u544a\u9519\u8bef\uff0c\u4e5f\u4e0d\u9002\u5408\u5904\u7406\u65b0\u7684\u6570\u636e\u7c7b\u578b\u3002\u800c\u4e14\u6807\u51c6C\u51fd\u6570\u7ecf\u5e38\u4f7f\u7528\u5185\u5b58\u5206\u914d\u6280\u672f\uff0c\u6ca1\u6709\u7ecf\u9a8c\u7684\u7a0b\u5e8f\u5458\u5f88\u5bb9\u6613\u5199\u51fabug\u6765\u3002 C++\u6807\u51c6\u5e93\u5219\u63d0\u4f9b\u4e86\u66f4\u4e3a\u5b89\u5168\uff0c\u66f4\u4e3a\u7075\u6d3b\u7684\u6570\u636e\u96c6\u5904\u7406\u65b9\u5f0f\u3002STL\u6700\u521d\u7531HP\u5b9e\u9a8c\u5ba4\u7684Alexander Stepanov\u548cMeng Lee\u5f00\u53d1\u3002\u6700\u8fd1\uff0cC++\u6807\u51c6\u59d4\u5458\u4f1a\u91c7\u7eb3\u4e86STL\uff0c\u5c3d\u7ba1\u5728\u4e0d\u540c\u7684\u5b9e\u73b0\u4e4b\u95f4\u4ecd\u6709\u7ec6\u8282\u5dee\u522b\u3002 STL\u7684\u6700\u4e3b\u8981\u7684\u4e24\u4e2a\u7279\u70b9\uff1a\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u5206\u79bb\uff0c\u975e\u9762\u5411\u5bf9\u8c61\u672c\u8d28\u3002\u8bbf\u95ee\u5bf9\u8c61\u662f\u901a\u8fc7\u50cf\u6307\u9488\u4e00\u6837\u7684\u8fed\u4ee3\u5668\u5b9e\u73b0\u7684\uff0c\u5bb9\u5668\u662f\u50cf\u94fe\u8868\u3001\u77e2\u91cf\u4e4b\u7c7b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u6309\u6a21\u677f\u65b9\u5f0f\u63d0\u4f9b\u3002\u7b97\u6cd5\u662f\u51fd\u6570\u6a21\u677f\uff0c\u7528\u4e8e\u64cd\u4f5c\u5bb9\u5668\u4e2d\u7684\u6570\u636e\u3002\u7531\u4e8eSTL\u4ee5\u6a21\u677f\u4e3a\u57fa\u7840\uff0c\u6240\u4ee5\u80fd\u7528\u4e8e\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u548c\u7ed3\u6784\u3002","title":"Learn STL In 30 Minutes"},{"location":"tech/Learn STL In 30 Minutes/#learn-stl-in-30-minutes","text":"","title":"Learn STL In 30 Minutes"},{"location":"tech/Learn STL In 30 Minutes/#stl","text":"\u8fd9\u7bc7\u6587\u7ae0\u662f\u6211\u4ece\u5317\u5927BBS\u4e0a\u8f6c\u6765\u7684\uff0c\u56e0\u4e3aBBS\u4e0a\u7684\u683c\u5f0f\u5f88\u4e71\uff0c\u5c31\u81ea\u5df1\u7528Markdown\u91cd\u65b0\u5199\u4e86\u4e00\u904d\uff0c\u4e00\u6765\u52a0\u6df1\u8bb0\u5fc6\uff0c\u4e8c\u6765\u4f5c\u4e3a\u4e2a\u4eba\u6536\u85cf\uff0c\u5982\u679c\u4f60\u89c9\u5f97\u5f88\u6709\u7528\uff0c\u90a3\u5c31\u8db3\u591f\u4e86\u3002\u4ee5\u4e0b\u4e3a\u6b63\u6587\u3002 \u8fd9\u662f\u672c\u5c0f\u4eba\u4e66\u3002\u539f\u540d\u662f \u300aUsing STL\u300b \uff0c\u4e0d\u77e5\u9053\u662f\u8c01\u5199\u7684\u3002\u4e0d\u8fc7\u6211\u5012\u89c9\u5f97\u5f88\u6709\u8da3\uff0c\u6240\u4ee5\u82b1\u4e86\u4e24\u4e2a\u665a\u4e0a\u628a\u5b83\u7ffb\u8bd1\u51fa\u6765\u3002\u6211\u6ca1\u6709\u5bf9\u7ffb\u8bd1\u51fa\u7684\u5185\u5bb9\u6821\u9a8c\u8fc7\u3002\u5982\u679c\u4f60\u6ca1\u6cd5\u5728\u4e09\u5341\u5206\u949f\u5185\u89c9\u5f97\u6709\u6240\u6536\u83b7\uff0c\u90a3\u4e48\u8d76\u7d27\u6254\u4e86\u5b83\u3002\u6587\u4e2d\u6211\u7701\u7565\u4e86\u5f88\u591a\u4e1c\u897f\u3002\u5fc3\u75bc\u5450\uff01\u6d6a\u8d39\u6211\u4e24\u4e2a\u665a\u4e0a\u3002 \u8bd1\u8005\uff1akary contact:","title":"\u4e09\u5341\u5206\u949f\u638c\u63e1 STL"},{"location":"tech/Learn STL In 30 Minutes/#stl_1","text":"STL \u7684\u4e00\u4e2a\u91cd\u8981\u7279\u70b9\u662f\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u7684\u5206\u79bb\u3002\u5c3d\u7ba1\u8fd9\u662f\u4e2a\u7b80\u5355\u7684\u6982\u5ff5\uff0c\u4f46\u8fd9\u79cd\u5206\u79bb\u786e\u5b9e\u4f7f\u5f97STL\u53d8\u5f97\u975e\u5e38\u901a\u7528\u3002\u4f8b\u5982\uff0c\u7531\u4e8eSTL\u7684sort()\u51fd\u6570\u662f\u5b8c\u5168\u901a\u7528\u7684\uff0c\u4f60\u53ef\u4ee5\u7528\u5b83\u6765\u64cd\u4f5c\u51e0\u4e4e\u4efb\u4f55\u6570\u636e\u96c6\u5408\uff0c\u5305\u62ec\u94fe\u8868\uff0c\u5bb9\u5668\u548c\u6570\u7ec4\u3002","title":"STL \u6982\u8ff0"},{"location":"tech/Learn STL In 30 Minutes/#_1","text":"","title":"\u8981\u70b9"},{"location":"tech/Learn STL In 30 Minutes/#stl_2","text":"\u4e3a\u4e86\u548c\u5176\u4ed6\u7ec4\u4ef6\u76f8\u533a\u522b\uff0c\u5728\u672c\u4e66\u4e2dSTL\u7b97\u6cd5\u7528\u540e\u63a5\u4e00\u5bf9\u5706\u62ec\u5f27\u7684\u65b9\u5f0f\u8868\u793a\uff0c\u4f8b\u5982sort()\u3002 STL\u53e6\u4e00\u4e2a\u91cd\u8981\u7279\u6027\u662f\u5b83\u4e0d\u662f\u9762\u5411\u5bf9\u8c61\u7684\u3002\u4e3a\u4e86\u5177\u6709\u8db3\u591f\u901a\u7528\u6027\uff0cSTL\u4e3b\u8981\u4f9d\u8d56\u4e8e\u6a21\u677f\u800c\u4e0d\u662f\u5c01\u88c5\u3001\u7ee7\u627f\u548c\u865a\u51fd\u6570\uff08\u591a\u6001\u6027\uff09\u2014\u2014 OOP\u7684\u4e09\u4e2a\u8981\u7d20\u3002\u4f60\u5728STL\u4e2d\u627e\u4e0d\u5230\u4efb\u4f55\u660e\u663e\u7684\u7c7b\u7ee7\u627f\u5173\u7cfb\u3002\u8fd9\u597d\u50cf\u662f\u4e00\u79cd\u5012\u9000\uff0c\u4f46\u8fd9\u6b63\u597d\u662f\u4f7f\u5f97STL\u7684\u7ec4\u4ef6\u5177\u6709\u5e7f\u6cdb\u901a\u7528\u6027\u7684\u5e95\u5c42\u7279\u5f81\u3002\u53e6\u5916\uff0c\u7531\u4e8eSTL\u662f\u57fa\u4e8e\u6a21\u677f\uff0c\u5185\u8054\u51fd\u6570\u7684\u4f7f\u7528\u4f7f\u5f97\u751f\u6210\u7684\u4ee3\u7801\u77ed\u5c0f\u9ad8\u6548\u3002","title":"STL\u7b97\u6cd5\u4f5c\u4e3a\u6a21\u677f\u51fd\u6570\u63d0\u4f9b\u3002"},{"location":"tech/Learn STL In 30 Minutes/#_2","text":"\u786e\u4fdd\u5728\u7f16\u8bd1\u4f7f\u7528\u4e86STL\u7684\u7a0b\u5e8f\u4e2d\u81f3\u5c11\u8981\u4f7f\u7528 -O \u4f18\u5316\u6765\u4fdd\u8bc1\u5185\u8054\u6269\u5c55\u3002STL\u63d0\u4f9b\u5927\u91cf\u7684\u6a21\u677f\u7c7b\u548c\u51fd\u6570\uff0c\u53ef\u4ee5\u5728OOP\u548c\u5e38\u89c4\u7f16\u7a0b\u4e2d\u4f7f\u7528\u3002\u6240\u6709\u7684STL\u7684\u5927\u7ea650\u4e2a\u7b97\u6cd5\u90fd\u662f\u5b8c\u5168\u901a\u7528\u7684\uff0c\u800c\u4e14\u4e0d\u4f9d\u8d56\u4e8e\u4efb\u4f55\u7279\u5b9a\u7684\u6570\u636e\u7c7b\u578b\u3002 \u4e0b\u9762\u7684\u5c0f\u8282\u8bf4\u660e\u4e86\u4e09\u4e2a\u57fa\u672c\u7684STL\u7ec4\u4ef6\uff1a \u8fed\u4ee3\u5668\u63d0\u4f9b\u4e86\u8bbf\u95ee\u5bb9\u5668\u4e2d\u5bf9\u8c61\u7684\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u5bf9\u8fed\u4ee3\u5668\u6307\u5b9alist\u6216vector\u4e2d\u7684\u4e00\u5b9a\u8303\u56f4\u7684\u5bf9\u8c61\u3002\u8fed\u4ee3\u5668\u5c31\u5982\u540c\u4e00\u4e2a\u6307\u9488\u3002\u4e8b\u5b9e\u4e0a\uff0cC++\u7684\u6307\u9488\u4e5f\u662f\u4e00\u79cd\u8fed\u4ee3\u5668\u3002\u4f46\u662f\uff0c\u8fed\u4ee3\u5668\u4e5f\u53ef\u4ee5\u662f\u90a3\u4e9b\u5b9a\u4e49\u4e86operator*()\u4ee5\u53ca\u5176\u4ed6\u7c7b\u4f3c\u4e8e\u6307\u9488\u7684\u64cd\u4f5c\u7b26\u7684\u65b9\u6cd5\u7684\u7c7b\u5bf9\u8c61\u3002 \u5bb9\u5668\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5982list\uff0cvector\u548cdeques\uff0c\u4ee5\u6a21\u677f\u7c7b\u7684\u65b9\u6cd5\u63d0\u4f9b\u3002\u4e3a\u4e86\u8bbf\u95ee\u5bb9\u5668\u4e2d\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u7531\u5bb9\u5668\u7c7b\u8f93\u51fa\u7684\u8fed\u4ee3\u5668\u3002 \u7b97\u6cd5\u662f\u7528\u6765\u64cd\u4f5c\u5bb9\u5668\u4e2d\u7684\u6570\u636e\u7684\u6a21\u677f\u51fd\u6570\u3002\u4f8b\u5982\uff0cSTL\u7528sort()\u6765\u5bf9\u4e00\u4e2avector\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u6392\u5e8f\uff0c\u7528find()\u6765\u641c\u7d22\u4e00\u4e2alist\u4e2d\u7684\u5bf9\u8c61\u3002\u51fd\u6570\u672c\u8eab\u4e0e\u4ed6\u4eec\u64cd\u4f5c\u7684\u6570\u636e\u7684\u7ed3\u6784\u548c\u7c7b\u578b\u65e0\u5173\uff0c\u56e0\u6b64\u4ed6\u4eec\u53ef\u4ee5\u5728\u4ece\u7b80\u5355\u6570\u7ec4\u5230\u9ad8\u5ea6\u590d\u6742\u5bb9\u5668\u7684\u4efb\u4f55\u6570\u636e\u7ed3\u6784\u4e0a\u4f7f\u7528\u3002","title":"\u63d0\u793a"},{"location":"tech/Learn STL In 30 Minutes/#_3","text":"\u4e3a\u4e86\u907f\u514d\u548c\u5176\u4ed6\u5934\u6587\u4ef6\u51b2\u7a81\uff0cSTL\u7684\u5934\u6587\u4ef6\u4e0d\u518d\u4f7f\u7528\u5e38\u89c4\u7684.h\u6269\u5c55\u3002\u4e3a\u4e86\u5305\u542b\u6807\u51c6\u7684string\u7c7b\uff0c\u8fed\u4ee3\u5668\u548c\u7b97\u6cd5\uff0c\u7528\u4e0b\u9762\u7684\u6307\u793a\u7b26\uff1a 1 2 3 #include string #include iterator #include algorithm \u5982\u679c\u4f60\u67e5\u770bSTL\u7684\u5934\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u50cfiterator.h\u548cstl_iterator.h\u8fd9\u6837\u7684\u5934\u6587\u4ef6\u3002\u7531\u4e8e\u8fd9\u4e9b\u540d\u5b57\u5728\u5404\u79cdSTL\u5b9e\u73b0\u4e4b\u95f4\u90fd\u53ef\u80fd\u4e0d\u540c\uff0c\u4f60\u5e94\u8be5\u907f\u514d\u4f7f\u7528\u8fd9\u4e9b\u540d\u5b57\u6765\u5f15\u7528\u8fd9\u4e9b\u5934\u6587\u4ef6\u3002\u4e3a\u4e86\u786e\u4fdd\u53ef\u79fb\u690d\u6027\uff0c\u4f7f\u7528\u76f8\u5e94\u7684\u6ca1\u6709.h\u540e\u7f00\u7684\u6587\u4ef6\u540d\u3002\u88681\u5217\u51fa\u4e86\u6700\u5e38\u4f7f\u7528\u7684\u5404\u79cd\u5bb9\u5668\u7c7b\u7684\u5934\u6587\u4ef6\u3002\u8be5\u8868\u5e76\u4e0d\u5b8c\u6574\uff0c\u5bf9\u4e8e\u5176\u4ed6\u5934\u6587\u4ef6\uff0c\u6211\u5c06\u5728\u672c\u7ae0\u548c\u540e\u9762\u7684\u4e24\u7ae0\u4e2d\u4ecb\u7ecd\u3002","title":"\u5934\u6587\u4ef6"},{"location":"tech/Learn STL In 30 Minutes/#1-stl","text":"#include Container Class deque deque list list map map, multimap queue queue, priority_queue set set, multiset stack stack vector vector, vector bool","title":"\u88681 STL\u5934\u6587\u4ef6\u548c\u5bb9\u5668\u7c7b"},{"location":"tech/Learn STL In 30 Minutes/#_4","text":"\u4f60\u7684\u7f16\u8bd1\u5668\u53ef\u80fd\u4e0d\u80fd\u8bc6\u522b\u540d\u5b57\u7a7a\u95f4\u3002\u540d\u5b57\u7a7a\u95f4\u5c31\u597d\u50cf\u4e00\u4e2a\u4fe1\u5c01\uff0c\u5c06\u6807\u5fd7\u7b26\u5c01\u88c5\u5728\u53e6\u4e00\u4e2a\u540d\u5b57\u4e2d\u3002\u6807\u5fd7\u7b26\u53ea\u5728\u540d\u5b57\u7a7a\u95f4\u4e2d\u5b58\u5728\uff0c\u56e0\u800c\u907f\u514d\u4e86\u548c\u5176\u4ed6\u6807\u5fd7\u7b26\u51b2\u7a81\u3002\u4f8b\u5982\uff0c\u53ef\u80fd\u6709\u5176\u4ed6\u5e93\u548c\u7a0b\u5e8f\u6a21\u5757\u5b9a\u4e49\u4e86sort()\u51fd\u6570\uff0c\u4e3a\u4e86\u907f\u514d\u548cSTL\u7684sort()\u51b2\u7a81\uff0cSTL\u7684sort()\u7b97\u6cd5\u7f16\u8bd1\u4e3astd::sort()\uff0c\u4ece\u800c\u907f\u514d\u4e86\u540d\u5b57\u51b2\u7a81\u3002 \u5c3d\u7ba1\u4f60\u7684\u7f16\u8bd1\u5668\u53ef\u80fd\u6ca1\u6709\u5b9e\u73b0\u540d\u5b57\u7a7a\u95f4\uff0c\u4f60\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u4ed6\u4eec\u3002\u4e3a\u4e86\u4f7f\u7528STL\uff0c\u53ef\u4ee5\u5c06\u4e0b\u9762\u7684\u6307\u793a\u7b26\u63d2\u5165\u5230\u4f60\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\u4e2d\uff0c\u5178\u578b\u7684\u662f\u5728\u6240\u6709\u7684#include\u6307\u793a\u7b26\u7684\u540e\u9762\uff1a 1 using namespace std ;","title":"\u540d\u5b57\u7a7a\u95f4"},{"location":"tech/Learn STL In 30 Minutes/#_5","text":"\u8fed\u4ee3\u5668\u63d0\u4f9b\u5bf9\u4e00\u4e2a\u5bb9\u5668\u4e2d\u7684\u5bf9\u8c61\u7684\u8bbf\u95ee\u65b9\u6cd5\uff0c\u5e76\u4e14\u5b9a\u4e49\u4e86\u5bb9\u5668\u4e2d\u5bf9\u8c61\u7684\u8303\u56f4\u3002\u8fed\u4ee3\u5668\u5c31\u5982\u540c\u4e00\u4e2a\u6307\u9488\u3002\u4e8b\u5b9e\u4e0a\uff0cC++\u7684\u6307\u9488\u4e5f\u662f\u4e00\u79cd\u8fed\u4ee3\u5668\u3002\u4f46\u662f\uff0c\u8fed\u4ee3\u5668\u4e0d\u4ec5\u4ec5\u662f\u6307\u9488\uff0c\u56e0\u6b64\u4f60\u4e0d\u80fd\u8ba4\u4e3a\u4ed6\u4eec\u4e00\u5b9a\u5177\u6709\u5730\u5740\u503c\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u6570\u7ec4\u7d22\u5f15\uff0c\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u79cd\u8fed\u4ee3\u5668\u3002 \u8fed\u4ee3\u5668\u6709\u5404\u79cd\u4e0d\u540c\u7684\u521b\u5efa\u65b9\u6cd5\u3002\u7a0b\u5e8f\u53ef\u80fd\u628a\u8fed\u4ee3\u5668\u4f5c\u4e3a\u4e00\u4e2a\u53d8\u91cf\u521b\u5efa\u3002\u4e00\u4e2aSTL\u5bb9\u5668\u7c7b\u53ef\u80fd\u4e3a\u4e86\u4f7f\u7528\u4e00\u4e2a\u7279\u5b9a\u7c7b\u578b\u7684\u6570\u636e\u800c\u521b\u5efa\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002\u4f5c\u4e3a\u6307\u9488\uff0c\u5fc5\u987b\u80fd\u591f\u4f7f\u7528 * \u64cd\u4f5c\u7b26\u83b7\u53d6\u6570\u636e\u3002\u4f60\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u6570\u5b66\u64cd\u4f5c\u7b26\u5982 ++ \u3002\u5178\u578b\u7684\uff0c++\u64cd\u4f5c\u7b26\u7528\u6765\u9012\u589e\u8fed\u4ee3\u5668\uff0c\u4ee5\u8bbf\u95ee\u5bb9\u5668\u4e2d\u7684\u4e0b\u4e00\u4e2a\u5bf9\u8c61\u3002\u5982\u679c\u8fed\u4ee3\u5668\u5230\u8fbe\u4e86\u5bb9\u5668\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u540e\u9762\uff0c\u5219\u8fed\u4ee3\u5668\u53d8\u6210past-the-end\u503c\u3002\u4f7f\u7528\u4e00\u4e2apast-the-end\u503c\u7684\u6307\u9488\u6765\u8bbf\u95ee\u5bf9\u8c61\u662f\u975e\u6cd5\u7684\uff0c\u5c31\u597d\u50cf\u4f7f\u7528NULL\u6216\u672a\u521d\u59cb\u5316\u7684\u6307\u9488\u4e00\u6837\u3002","title":"\u8fed\u4ee3\u5668"},{"location":"tech/Learn STL In 30 Minutes/#_6","text":"STL\u4e0d\u4fdd\u8bc1\u53ef\u4ee5\u4ece\u53e6\u4e00\u4e2a\u8fed\u4ee3\u5668\u6765\u62b5\u8fbe\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002\u4f8b\u5982\uff0c\u5f53\u5bf9\u4e00\u4e2a\u96c6\u5408\u4e2d\u7684\u5bf9\u8c61\u6392\u5e8f\u65f6\uff0c\u5982\u679c\u4f60\u5728\u4e0d\u540c\u7684\u7ed3\u6784\u4e2d\u6307\u5b9a\u4e86\u4e24\u4e2a\u8fed\u4ee3\u5668\uff0c\u7b2c\u4e8c\u4e2a\u8fed\u4ee3\u5668\u65e0\u6cd5\u4ece\u7b2c\u4e00\u4e2a\u8fed\u4ee3\u5668\u62b5\u8fbe\uff0c\u6b64\u65f6\u7a0b\u5e8f\u6ce8\u5b9a\u8981\u5931\u8d25\u3002\u8fd9\u662fSTL\u7075\u6d3b\u6027\u7684\u4e00\u4e2a\u4ee3\u4ef7\u3002STL\u4e0d\u4fdd\u8bc1\u68c0\u6d4b\u6beb\u65e0\u9053\u7406\u7684\u9519\u8bef\u3002","title":"\u63d0\u793a"},{"location":"tech/Learn STL In 30 Minutes/#_7","text":"\u5bf9\u4e8eSTL\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e94\u79cd\u8fed\u4ee3\u5668\u3002\u4e0b\u9762\u7b80\u8981\u8bf4\u660e\u4e86\u8fd9\u4e94\u79cd\u7c7b\u578b\uff1a Input iterators \u63d0\u4f9b\u5bf9\u6570\u636e\u7684\u53ea\u8bfb\u8bbf\u95ee\u3002 Output iterators \u63d0\u4f9b\u5bf9\u6570\u636e\u7684\u53ea\u5199\u8bbf\u95ee\u3002 Forward iterators \u63d0\u4f9b\u8bfb\u5199\u64cd\u4f5c\uff0c\u5e76\u80fd\u5411\u524d\u63a8\u8fdb\u8fed\u4ee3\u5668 Bidirectional iterators \u63d0\u4f9b\u8bfb\u5199\u64cd\u4f5c\uff0c\u5e76\u80fd\u5411\u524d\u548c\u5411\u540e\u64cd\u4f5c\u3002 Random access iterators \u63d0\u4f9b\u8bfb\u5199\u64cd\u4f5c\uff0c\u5e76\u80fd\u5728\u6570\u636e\u4e2d\u968f\u673a\u79fb\u52a8\u3002 \u5c3d\u7ba1\u5404\u79cd\u4e0d\u540c\u7684STL\u5b9e\u73b0\u7ec6\u8282\u65b9\u9762\u6709\u6240\u4e0d\u540c\uff0c\u8fd8\u662f\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684\u8fed\u4ee3\u5668\u60f3\u50cf\u4e3a\u4e00\u79cd\u7c7b\u7ee7\u627f\u5173\u7cfb\u3002\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bf4\u6211\uff0c\u4e0b\u9762\u7684\u8fed\u4ee3\u5668\u7ee7\u627f\u81ea\u4e0a\u9762\u7684\u8fed\u4ee3\u5668\u3002\u7531\u4e8e\u8fd9\u79cd\u7ee7\u627f\u5173\u7cfb\uff0c\u4f60\u53ef\u4ee5\u5c06\u4e00\u4e2aForward\u8fed\u4ee3\u5668\u4f5c\u4e3a\u4e00\u4e2aoutput\u6216input\u8fed\u4ee3\u5668\u4f7f\u7528\u3002\u540c\u6837\uff0c\u5982\u679c\u4e00\u4e2a\u7b97\u6cd5\u8981\u6c42\u662f\u4e00\u4e2abidirectional\u8fed\u4ee3\u5668\uff0c\u90a3\u4e48\u53ea\u80fd\u4f7f\u7528\u8be5\u79cd\u7c7b\u578b\u548c\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\u3002","title":"\u8fed\u4ee3\u5668\u7684\u7c7b\u578b"},{"location":"tech/Learn STL In 30 Minutes/#_8","text":"\u6b63\u5982\u4e0b\u9762\u7684\u5c0f\u7a0b\u5e8f\u663e\u793a\u7684\uff0c\u4e00\u4e2a\u6307\u9488\u4e5f\u662f\u4e00\u79cd\u8fed\u4ee3\u5668\u3002\u8be5\u7a0b\u5e8f\u540c\u6837\u663e\u793a\u4e86STL\u7684\u4e00\u4e2a\u4e3b\u8981\u7279\u5f81\u2014\u2014\u5b83\u4e0d\u53ea\u662f\u80fd\u591f\u7528\u4e8e\u5b83\u81ea\u5df1\u7684\u7c7b\u7c7b\u578b\uff0c\u800c\u4e14\u4e5f\u80fd\u7528\u4e8e\u4efb\u4f55C\u6216C++\u7c7b\u578b\u3002iterdemo.cpp\u663e\u793a\u4e86\u5982\u4f55\u628a\u6307\u9488\u4f5c\u4e3a\u8fed\u4ee3\u5668\u7528\u4e8eSTL\u7684find()\u7b97\u6cd5\u6765\u641c\u7d22\u666e\u901a\u7684\u6570\u7ec4\u3002","title":"\u6307\u9488\u8fed\u4ee3\u5668"},{"location":"tech/Learn STL In 30 Minutes/#iterdemocpp","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include iostream #include algorithm using namespace std ; #define SIZE 100 int iarray [ SIZE ]; int main () { iarray [ 20 ] = 50 ; int * ip = find ( iarray , iarray + SIZE , 50 ); if ( ip == iarray + SIZE ) cout 50 not found in array endl ; else cout * ip found in array endl ; return 0 ; } \u5728\u5f15\u7528\u4e86I/O\u6d41\u5e93\u548cSTL\u7b97\u6cd5\u5934\u6587\u4ef6\uff08\u6ce8\u610f\u6ca1\u6709.h\u540e\u7f00\uff09\uff0c\u8be5\u7a0b\u5e8f\u544a\u8bc9\u7f16\u8bd1\u5668\u4f7f\u7528std\u540d\u5b57\u7a7a\u95f4\u3002 \u7a0b\u5e8f\u4e2d\u5b9a\u4e49\u4e86\u5c3a\u5bf8\u4e3aSIZE\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u6240\u4ee5\u8fd0\u884c\u65f6\u6570\u7ec4\u81ea\u52a8\u521d\u59cb\u5316\u4e3a\u96f6\u3002\u4e0b\u9762\u7684\u8bed\u53e5\u5c06\u5728\u7d22\u5f1520\u4f4d\u7f6e\u5904\u7684\u5143\u7d20\u8bbe\u7f6e\u4e3a50\uff0c\u5e76\u4f7f\u7528find()\u7b97\u6cd5\u6765\u641c\u7d22\u503c50: 1 2 iarray [ 20 ] = 50 ; int * ip = find ( iarray , iarray + SIZE , 50 ); find()\u51fd\u6570\u63a5\u53d7\u4e09\u4e2a\u53c2\u6570\u3002\u5934\u4e24\u4e2a\u5b9a\u4e49\u4e86\u641c\u7d22\u7684\u8303\u56f4\u3002\u7531\u4e8eC\u548cC++\u6570\u7ec4\u7b49\u540c\u4e8e\u6307\u9488\uff0c\u8868\u8fbe\u5f0fiarray\u6307\u5411\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002\u800c\u7b2c\u4e8c\u4e2a\u53c2\u6570iarray+SIZE\u7b49\u540c\u4e8epast-the-end\u503c\uff0c\u4e5f\u5c31\u662f\u6570\u7ec4\u4e2d\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u540e\u9762\u4f4d\u7f6e\u3002\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u5f85\u5b9a\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f50. find()\u51fd\u6570\u8fd4\u56de\u548c\u524d\u4e24\u4e2a\u53c2\u6570\u76f8\u540c\u7c7b\u578b\u7684\u8fed\u4ee3\u5668\uff0c\u8fd9\u513f\u662f\u4e00\u4e2a\u6307\u5411\u6574\u6570\u7684\u6307\u9488ip\u3002","title":"iterdemo.cpp"},{"location":"tech/Learn STL In 30 Minutes/#_9","text":"\u5fc5\u987b\u8bb0\u4f4fSTL\u4f7f\u7528\u6a21\u677f\u3002\u56e0\u6b64\uff0cSTL\u51fd\u6570\u81ea\u52a8\u6839\u636e\u5b83\u4eec\u4f7f\u7528\u6570\u636e\u7c7b\u578b\u6765\u6784\u9020\u3002 \u4e3a\u4e86\u5224\u65adfind()\u662f\u5426\u6210\u529f\uff0c\u4f8b\u5b50\u4e2d\u6d4b\u8bd5ip\u548cpast-the-end\u503c\u662f\u5426\u76f8\u7b49: 1 if ( ip == iarray + SIZE ) ... \u5982\u679c\u8868\u8fbe\u5f0f\u4e3a\u771f\uff0c\u5219\u8868\u793a\u5728\u641c\u7d22\u8303\u56f4\u5185\u6ca1\u6709\u6307\u5b9a\u7684\u503c\u3002\u5426\u5219\u5c31\u662f\u6307\u5411\u4e00\u4e2a\u5408\u6cd5\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8fd9\u65f6\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u8bed\u53e5\u663e\u793a\uff1a 1 cout * ip found in array endl ; \u6d4b\u8bd5\u51fd\u6570\u8fd4\u56de\u503c\u548cNULL\u662f\u5426\u76f8\u7b49\u662f\u4e0d\u6b63\u786e\u7684\u3002\u4e0d\u8981\u50cf\u4e0b\u9762\u8fd9\u6837\u4f7f\u7528\uff1a 1 2 int * ip = find ( iarray , iarray + SIZE , 50 ); if ( ip != NULL ) ... //incorrect \u5f53\u4f7f\u7528STL\u51fd\u6570\u65f6\uff0c\u53ea\u80fd\u6d4b\u8bd5ip\u662f\u5426\u548cpast-the-end\u503c\u76f8\u7b49\u3002\u5c3d\u7ba1\u5728\u672c\u4f8b\u4e2dip\u662f\u4e00\u4e2aC++\u6307\u9488\uff0c\u5176\u7528\u6cd5\u4e5f\u5fc5\u987b\u7b26\u5408STL\u8fed\u4ee3\u5668\u7684\u539f\u5219\u3002","title":"\u63d0\u793a"},{"location":"tech/Learn STL In 30 Minutes/#_10","text":"\u5c3d\u7ba1C++\u6307\u9488\u4e5f\u662f\u8fed\u4ee3\u5668\uff0c\u4f46\u7528\u7684\u66f4\u591a\u7684\u662f\u5bb9\u5668\u8fed\u4ee3\u5668\u3002\u5bb9\u5668\u8fed\u4ee3\u5668\u7528\u6cd5\u548citerdemo.cpp\u4e00\u6837\uff0c\u4f46\u548c\u5c06\u8fed\u4ee3\u5668\u58f0\u660e\u4e3a\u6307\u9488\u53d8\u91cf\u4e0d\u540c\u7684\u662f\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u5bb9\u5668\u7c7b\u65b9\u6cd5\u6765\u83b7\u53d6\u8fed\u4ee3\u5668\u5bf9\u8c61\u3002 \u4e24\u4e2a\u5178\u578b\u7684\u5bb9\u5668\u7c7b\u65b9\u6cd5\u662fbegin()\u548cend()\u3002\u5b83\u4eec\u5728\u5927\u591a\u6570\u5bb9\u5668\u4e2d\u8868\u793a\u6574\u4e2a\u5bb9\u5668\u8303\u56f4\u3002\u5176\u4ed6\u4e00\u4e9b\u5bb9\u5668\u8fd8\u4f7f\u7528rbegin()\u548crend()\u65b9\u6cd5\u63d0\u4f9b\u53cd\u5411\u8fed\u4ee3\u5668\uff0c\u4ee5\u6309\u53cd\u5411\u987a\u5e8f\u6307\u5b9a\u5bf9\u8c61\u8303\u56f4\u3002 \u4e0b\u9762\u7684\u7a0b\u5e8f\u521b\u5efa\u4e86\u4e00\u4e2a\u77e2\u91cf\u5bb9\u5668\uff08STL\u4e2d\u548c\u6570\u7ec4\u7b49\u4ef7\u7684\u5bf9\u8c61\uff09\uff0c\u4f7f\u7528\u8fed\u4ee3\u5668\u5728\u5176\u4e2d\u641c\u7d22\u3002\u8be5\u7a0b\u5e8f\u548c\u524d\u4e00\u7ae0\u4e2d\u7684\u7a0b\u5e8f\u76f8\u540c\u3002","title":"\u5bb9\u5668\u8fed\u4ee3\u5668"},{"location":"tech/Learn STL In 30 Minutes/#vectdemocpp","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #include iostream #include algorithm #include vector using namespace std ; vector int intVector ( 100 ); void main () { intVector [ 20 ] = 50 ; vector int :: iterator intIter = find ( intVector . begin (), intVector . end (), 50 ); if ( intIter != intVector . end ()) cout Vector contains value * intIter endl ; else cout Vector does not contain 50 endl ; } \u6ce8\u610f\u7528\u4e0b\u9762\u7684\u65b9\u6cd5\u663e\u793a\u641c\u7d22\u5230\u7684\u6570\u636e\uff1a 1 cout Vector contains value * intIter endl ;","title":"vectdemo.cpp"},{"location":"tech/Learn STL In 30 Minutes/#_11","text":"\u548c\u6307\u9488\u4e00\u6837\uff0c\u4f60\u53ef\u4ee5\u7ed9\u4e00\u4e2a\u8fed\u4ee3\u5668\u8d4b\u503c\u3002\u4f8b\u5982\uff0c\u9996\u5148\u58f0\u660e\u4e00\u4e2a\u8fed\u4ee3\u5668\uff1a 1 vector int :: iterator first ; \u8be5\u8bed\u53e5\u521b\u5efa\u4e86\u4e00\u4e2a vector int \u7c7b\u7684\u8fed\u4ee3\u5668\u3002\u4e0b\u9762\u7684\u8bed\u53e5\u5c06\u8be5\u8fed\u4ee3\u5668\u8bbe\u7f6e\u5230intVector\u7684\u7b2c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5e76\u5c06\u5b83\u6307\u5411\u7684\u5bf9\u8c61\u503c\u8bbe\u7f6e\u4e3a123: 1 2 first = intVector . begin (); * first = 123 ; \u8fd9\u79cd\u8d4b\u503c\u5bf9\u4e8e\u5927\u591a\u6570\u5bb9\u5668\u7c7b\u90fd\u662f\u5141\u8bb8\u7684\uff0c\u9664\u4e86\u53ea\u8bfb\u53d8\u91cf\u3002\u4e3a\u4e86\u9632\u6b62\u9519\u8bef\u8d4b\u503c\uff0c\u53ef\u4ee5\u58f0\u660e\u8fed\u4ee3\u5668\u4e3a\uff1a 1 2 3 4 const vector int :: const_iterator result ; result = find ( intVector . begin (), intVector . end (), value ); if ( result != intVector . end ()) * result = 123 ; //\u53d1\u751f\u9519\u8bef\uff0c\u4e0d\u80fd\u7ed9\u5e38\u91cf\u8d4b\u503c","title":"\u5e38\u91cf\u8fed\u4ee3\u5668"},{"location":"tech/Learn STL In 30 Minutes/#_12","text":"\u53e6\u4e00\u79cd\u9632\u6b62\u6570\u636e\u88ab\u6539\u53d8\u7684\u65b9\u6cd5\u662f\u5c06\u5bb9\u5668\u58f0\u660e\u4e3aconst\u7c7b\u578b.","title":"\u8b66\u544a"},{"location":"tech/Learn STL In 30 Minutes/#_13","text":"\u4f60\u5df2\u7ecf\u89c1\u5230\u4e86\u8fed\u4ee3\u5668\u7684\u4e00\u4e9b\u4f8b\u5b50\uff0c\u73b0\u5728\u6211\u4eec\u5c06\u5173\u6ce8\u6bcf\u79cd\u7279\u5b9a\u7684\u8fed\u4ee3\u5668\u5982\u4f55\u4f7f\u7528\u3002\u7531\u4e8e\u4f7f\u7528\u8fed\u4ee3\u5668\u9700\u8981\u5173\u4e8eSTL\u5bb9\u5668\u7c7b\u548c\u7b97\u6cd5\u7684\u77e5\u8bc6\uff0c\u5728\u9605\u8bfb\u4e86\u540e\u9762\u7684\u4e24\u7ae0\u540e\u4f60\u53ef\u80fd\u9700\u8981\u91cd\u65b0\u590d\u4e60\u4e00\u4e0b\u672c\u7ae0\u5185\u5bb9\u3002","title":"\u4f7f\u7528\u8fed\u4ee3\u5668\u7f16\u7a0b"},{"location":"tech/Learn STL In 30 Minutes/#_14","text":"\u8f93\u5165\u8fed\u4ee3\u5668\u662f\u6700\u666e\u901a\u7684\u7c7b\u578b\u3002\u8f93\u5165\u8fed\u4ee3\u5668\u81f3\u5c11\u80fd\u591f\u4f7f\u7528==\u548c!=\u6d4b\u8bd5\u662f\u5426\u76f8\u7b49;\u4f7f\u7528*\u6765\u8bbf\u95ee\u6570\u636e\uff1b\u4f7f\u7528++\u64cd\u4f5c\u6765\u9012\u63a8\u8fed\u4ee3\u5668\u5230\u4e0b\u4e00\u4e2a\u5143\u7d20\u6216\u5230\u8fbepast-the-end\u503c\u3002 \u4e3a\u4e86\u7406\u89e3\u8fed\u4ee3\u5668\u4ee5\u53caSTL\u51fd\u6570\u662f\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\u7684\uff0c\u73b0\u5728\u6765\u770b\u4e00\u4e0bfind()\u6a21\u677f\u51fd\u6570\u7684\u5b9a\u4e49: 1 2 3 4 5 6 7 template class InputIterator , class T InputIterator find ( InputIterator first , InputIterator last , const T value ) { while ( first != last * first != value ) ++ first ; return first ; }","title":"\u8f93\u5165\u8fed\u4ee3\u5668"},{"location":"tech/Learn STL In 30 Minutes/#_15","text":"\u5728find()\u7b97\u6cd5\u4e2d\uff0c\u6ce8\u610f\u5982\u679cfirst\u548clast\u6307\u5411\u4e0d\u540c\u7684\u5bb9\u5668\uff0c\u8be5\u7b97\u6cd5\u53ef\u80fd\u9677\u5165\u6b7b\u5faa\u73af\u3002","title":"\u6ce8\u610f"},{"location":"tech/Learn STL In 30 Minutes/#_16","text":"\u8f93\u51fa\u8fed\u4ee3\u5668\u7f3a\u7701\u53ea\u5199\uff0c\u901a\u5e38\u7528\u4e8e\u5c06\u6570\u636e\u4ece\u4e00\u4e2a\u4f4d\u7f6e\u62f7\u8d1d\u5230\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u3002\u7531\u4e8e\u8f93\u51fa\u8fed\u4ee3\u5668\u65e0\u6cd5\u8bfb\u53d6\u5bf9\u8c61\uff0c\u56e0\u4e9b\u4f60\u4e0d\u4f1a\u5728\u4efb\u4f55\u641c\u7d22\u548c\u5176\u4ed6\u7b97\u6cd5\u4e2d\u4f7f\u7528\u5b83\u3002\u8981\u60f3\u8bfb\u53d6\u4e00\u4e2a\u62f7\u8d1d\u7684\u503c\uff0c\u5fc5\u987b\u4f7f\u7528\u53e6\u4e00\u4e2a\u8f93\u5165\u8fed\u4ee3\u5668\uff08\u6216\u5b83\u7684\u7ee7\u627f\u8fed\u4ee3\u5668\uff09\u3002","title":"\u8f93\u51fa\u8fed\u4ee3\u5668"},{"location":"tech/Learn STL In 30 Minutes/#outitercpp","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include iostream #include algorithm //need copy() #include vector //need vector using namespace std ; double darray [ 10 ] = { 1.0 , 1.1 , 1.2 , 1.3 , 1.4 , 1.5 , 1.6 , 1.7 , 1.8 , 1.9 }; vector double vdouble ( 10 ); int main () { vector double :: iterator outputIterator = vdouble . begin (); copy ( darray , darray + 10 , outputIterator ); while ( outputIterator != vdouble . end ()) { cout * outputIterator endl ; outputIterator ++ ; } return 0 ; }","title":"outIter.cpp"},{"location":"tech/Learn STL In 30 Minutes/#_17","text":"\u5f53\u4f7f\u7528copy()\u7b97\u6cd5\u7684\u65f6\u5019\uff0c\u4f60\u5fc5\u987b\u786e\u4fdd\u76ee\u6807\u5bb9\u5668\u6709\u8db3\u591f\u5927\u7684\u7a7a\u95f4\uff0c\u6216\u8005\u5bb9\u5668\u672c\u8eab\u662f\u81ea\u52a8\u6269\u5c55\u7684\u3002","title":"\u6ce8\u610f"},{"location":"tech/Learn STL In 30 Minutes/#_18","text":"\u524d\u63a8\u8fed\u4ee3\u5668\u80fd\u591f\u8bfb\u5199\u6570\u636e\u503c\uff0c\u5e76\u80fd\u591f\u5411\u524d\u63a8\u8fdb\u5230\u4e0b\u4e00\u4e2a\u503c\u3002\u4f46\u662f\u6ca1\u6cd5\u9012\u51cf\u3002replace()\u7b97\u6cd5\u663e\u793a\u4e86\u524d\u63a8\u8fed\u4ee3\u5668\u7684\u4f7f\u7528\u65b9\u6cd5\u3002 1 2 template class ForwardIterator , class T void replace ( ForwardIterator first , ForwardIterator last , const T old_value , const T new_value );","title":"\u524d\u63a8\u8fed\u4ee3\u5668"},{"location":"tech/Learn STL In 30 Minutes/#_19","text":"replace()\u5c06[first, last]\u8303\u56f4\u5185\u7684\u6240\u6709\u503c\u4e3aold_value\u7684\u5bf9\u8c61\u66ff\u6362\u4e3anew_value\uff1a 1 replace ( vdouble . begin (), vdouble . end (), 1.5 , 3.1415926 );","title":"\u4f7f\u7528"},{"location":"tech/Learn STL In 30 Minutes/#_20","text":"\u53cc\u5411\u8fed\u4ee3\u5668\u8981\u6c42\u80fd\u591f\u589e\u51cf\u3002\u5982reverse()\u7b97\u6cd5\u8981\u6c42\u4e24\u4e2a\u53cc\u5411\u8fed\u4ee3\u5668\u4f5c\u4e3a\u53c2\u6570\uff1a 1 2 template class BidirectionalIterator void reverse ( BidirectionalIterator first , BidirectionalIterator last );","title":"\u53cc\u5411\u8fed\u4ee3\u5668"},{"location":"tech/Learn STL In 30 Minutes/#_21","text":"reverse()\u51fd\u6570\u6765\u5bf9\u5bb9\u5668\u8fdb\u884c\u9006\u5411\u6392\u5e8f\uff1a 1 reverse ( vdoule . begin (), vdouble . end ());","title":"\u4f7f\u7528"},{"location":"tech/Learn STL In 30 Minutes/#_22","text":"\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\u80fd\u591f\u4ee5\u4efb\u610f\u987a\u5e8f\u8bbf\u95ee\u6570\u636e\uff0c\u5e76\u80fd\u7528\u4e8e\u8bfb\u5199\u6570\u636e\uff08\u4e0d\u662fconst\u7684C++\u6307\u9488\u4e5f\u662f\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\uff09\u3002STL\u7684\u6392\u5e8f\u548c\u641c\u7d22\u51fd\u6570\u4f7f\u7528\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\u3002\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\u53ef\u4ee5\u4f7f\u7528\u5173\u7cfb\u64cd\u4f5c\u7b26\u4f5c\u6bd4\u8f83\u3002 1 random_shuffle () \u51fd\u6570\u968f\u673a\u6253\u4e71\u539f\u5148\u7684\u987a\u5e8f\u58f0\u660e\u4e3a\uff1a 1 2 template class RandomAccessIterator void random_shuffle ( RandomAccessIterator first , RandomAccessIterator last );","title":"\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668"},{"location":"tech/Learn STL In 30 Minutes/#_23","text":"1 random_shuffle ( vdouble . begin (), vdouble . end ());","title":"\u4f7f\u7528\u65b9\u6cd5"},{"location":"tech/Learn STL In 30 Minutes/#_24","text":"\u8981\u5b66\u4f1a\u4f7f\u7528\u8fed\u4ee3\u5668\u548c\u5bb9\u5668\u4ee5\u53ca\u7b97\u6cd5\uff0c\u9700\u8981\u5b66\u4e60\u4e0b\u9762\u7684\u65b0\u6280\u672f\u3002","title":"\u8fed\u4ee3\u5668\u6280\u672f"},{"location":"tech/Learn STL In 30 Minutes/#_25","text":"\u672c\u4e66\u7684\u5f88\u591a\u4f8b\u5b50\u7a0b\u5e8f\u4f7f\u7528I/O\u6d41\u8bed\u53e5\u6765\u8bfb\u5199\u6570\u636e\u3002\u4f8b\u5982\uff1a 1 2 3 4 int value ; cout Enter value: ; cin value ; cout You entered value endl ; \u5bf9\u4e8e\u8fed\u4ee3\u5668\uff0c\u6709\u53e6\u4e00\u79cd\u65b9\u6cd5\u4f7f\u7528\u6d41\u548c\u6807\u51c6\u51fd\u6570\u3002\u7406\u89e3\u7684\u8981\u70b9\u662f\u5c06\u8f93\u5165/\u8f93\u51fa\u6d41\u4f5c\u4e3a \u5bb9\u5668\u770b\u5f85\u3002\u56e0\u6b64\uff0c\u4efb\u4f55\u63a5\u53d7\u8fed\u4ee3\u5668\u53c2\u6570\u7684\u7b97\u6cd5\u90fd\u53ef\u4ee5\u548c\u6d41\u4e00\u8d77\u5de5\u4f5c\u3002","title":"\u6d41\u548c\u8fed\u4ee3\u5668"},{"location":"tech/Learn STL In 30 Minutes/#outstrmcpp","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 #include iostream #include stdlib.h // need rand(), srand() #include time.h //need time() #include algorithm //need sort(),copy() #include vector //need vector #include iterator using namespace std ; void Display ( vector int v , const char * s ); int main () { srand ( time ( NULL )); vector int collection ( 10 ); for ( int i = 0 ; i 10 ; i ++ ) collection [ i ] = rand () % 10000 ; Display ( collection , Before sorting ); sort ( collection . begin (), collection . end ()); Display ( collection , After sorting ); return 0 ; } void Display ( vector int v , const char * s ) { cout endl s endl ; copy ( v . begin (), v . end (), ostream_iterator int ( cout , \\t )); cout endl ; } \u51fd\u6570Display()\u663e\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u4e00\u4e2a\u8f93\u51fa\u6d41\u8fed\u4ee3\u5668\u3002\u4e0b\u9762\u7684\u8bed\u53e5\u5c06\u5bb9\u5668\u4e2d\u7684\u503c\u4f20\u8f93\u5230cout\u8f93\u51fa\u6d41\u5bf9\u8c61\u4e2d\uff1a 1 copy ( v . begin (), v . end (), ostream_iterator int ( cout , \\t )); \u7b2c\u4e09\u4e2a\u53c2\u6570\u5b9e\u4f8b\u5316\u4e86 ostream_iterator int \u7c7b\u578b\uff0c\u5e76\u5c06\u5b83\u4f5c\u4e3acopy()\u51fd\u6570\u7684\u8f93\u51fa\u76ee\u6807\u8fed\u4ee3\u5668\u5bf9\u8c61\u3002\"\\t\"\u5b57\u7b26\u4e32\u662f\u4f5c\u4e3a\u5206\u9694\u7b26\u3002\u8fd0\u884c\u7ed3\u679c\uff1a 1 2 3 4 5 6 7 8 $ g++ outstrm.cpp $ ./a.out Before sorting 7136 8210 8265 5185 519 2906 2032 2273 101 4642 After sorting 101 519 2032 2273 2906 4642 5185 7136 8210 8265 \u8fd9\u662fSTL\u795e\u5947\u7684\u4e00\u9762\u3002\u4e3a\u5b9a\u4e49\u8f93\u51fa\u6d41\u8fed\u4ee3\u5668\uff0cSTL\u63d0\u4f9b\u4e86\u6a21\u677f\u7c7bostream_iterator\u3002\u8fd9\u4e2a\u7c7b\u7684\u6784\u9020\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570\uff1a\u4e00\u4e2aostream\u5bf9\u8c61\u548c\u4e00\u4e2astring\u503c\u3002\u56e0\u6b64\u53ef\u4ee5\u8c61\u4e0b\u9762\u4e00\u6837\u7b80\u5355\u5730\u521b\u5efa\u4e00\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61\uff1a 1 ostream_iterator int ( cout , \\n ) \u8be5\u8fed\u4ee3\u5668\u53ef\u4ee5\u548c\u4efb\u4f55\u63a5\u53d7\u4e00\u4e2a\u8f93\u51fa\u8fed\u4ee3\u5668\u7684\u51fd\u6570\u4e00\u8d77\u4f7f\u7528\u3002","title":"outStrm.cpp"},{"location":"tech/Learn STL In 30 Minutes/#_26","text":"\u63d2\u5165\u8fed\u4ee3\u5668\u7528\u4e8e\u5c06\u503c\u63d2\u5165\u5230\u5bb9\u5668\u4e2d\u3002\u5b83\u4eec\u4e5f\u53eb\u9002\u914d\u5668\uff0c\u56e0\u4e3a\u5b83\u4eec\u5c06\u5bb9\u5668\u9002\u914d\u6216\u8f6c\u5316\u4e3a\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u5e76\u7528\u4e8ecopy()\u8fd9\u6837\u7684\u7b97\u6cd5\u4e2d\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u7a0b\u5e8f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u94fe\u8868\u548c\u4e00\u4e2a\u77e2\u91cf\u5bb9\u5668\uff1a 1 2 list double dList ; vector double dVector ; \u901a\u8fc7\u4f7f\u7528front_inserter\u8fed\u4ee3\u5668\u5bf9\u8c61\uff0c\u53ef\u4ee5\u53ea\u7528\u5355\u4e2acopy()\u8bed\u53e5\u5c31\u5b8c\u6210\u5c06\u77e2\u91cf\u4e2d\u7684\u5bf9\u8c61\u63d2\u5165\u5230\u94fe\u8868\u524d\u7aef\u7684\u64cd\u4f5c\uff1a 1 copy ( dVector . begin (), dVector . end (), front_inserter ( dList )); \u4e09\u79cd\u63d2\u5165\u8fed\u4ee3\u5668\u5982\u4e0b\uff1a \u666e\u901a\u63d2\u5165\u8fed\u4ee3\u5668\u5c06\u5bf9\u8c61\u63d2\u5165\u5230\u5bb9\u5668\u6307\u5b9a\u5bf9\u8c61\u7684\u524d\u9762 Front inserters\u5c06\u5bf9\u8c61\u63d2\u5165\u5230\u6570\u636e\u96c6\u7684\u524d\u9762\u2014\u2014\u4f8b\u5982\uff0c\u94fe\u8868\u8868\u5934\u3002 Back inserters\u5c06\u5bf9\u8c61\u63d2\u5165\u5230\u96c6\u5408\u7684\u5c3e\u90e8\u2014\u2014\u4f8b\u5982\uff0c\u77e2\u91cf\u7684\u5c3e\u90e8\uff0c\u5bfc\u81f4\u77e2\u91cf\u5bb9\u5668\u6269\u5c55\u3002 \u4f7f\u7528\u63d2\u5165\u8fed\u4ee3\u5668\u53ef\u80fd\u5bfc\u81f4\u5bb9\u5668\u4e2d\u7684\u5176\u4ed6\u5bf9\u8c61\u79fb\u52a8\u4f4d\u7f6e\uff0c\u56e0\u800c\u4f7f\u5f97\u73b0\u5b58\u7684\u8fed\u4ee3\u5668\u975e\u6cd5\u3002\u4f8b\u5982\uff0c\u5c06\u4e00\u4e2a\u5bf9\u8c61\u63d2\u5165\u5230\u77e2\u91cf\u5bb9\u5668\u5c06\u5bfc\u81f4\u5176\u4ed6\u503c\u79fb\u52a8\u4f4d\u7f6e\u4ee5\u817e\u51fa\u7a7a\u95f4\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u63d2\u5165\u5230\u50cf\u94fe\u8868\u8fd9\u6837\u7684\u7ed3\u6784\u4e2d\u66f4\u4e3a\u6709\u6548\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u4f1a\u5bfc\u81f4\u5176\u4ed6\u5bf9\u8c61\u79fb\u52a8\u3002","title":"\u63d2\u5165\u8fed\u4ee3\u5668"},{"location":"tech/Learn STL In 30 Minutes/#insertcpp","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #include iostream #include algorithm #include list #include iterator using namespace std ; int iArray [ 5 ] = { 1 , 2 , 3 , 4 , 5 }; void Display ( list int v , const char * s ); int main () { list int iList ; copy ( iArray , iArray + 5 , front_inserter ( iList )); Display ( iList , Before find and copy ); list int :: iterator p = find ( iList . begin (), iList . end (), 3 ); copy ( iArray , iArray + 2 , inserter ( iList , p )); Display ( iList , After find and copy ); return 0 ; } void Display ( list int v , const char * s ) { cout s endl ; copy ( v . begin (), v . end (), ostream_iterator int ( cout , )); cout endl ; } \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a 1 2 3 4 5 6 $ g++ insert.cpp $ ./a.out Before find and copy 5 4 3 2 1 After find and copy 5 4 1 2 3 2 1 \u53ef\u4ee5\u5c06front_inserter\u66ff\u6362\u4e3aback_inserter\u8bd5\u8bd5\u3002 \u5982\u679c\u7528find()\u53bb\u67e5\u627e\u5728\u5217\u8868\u4e2d\u4e0d\u5b58\u5728\u7684\u503c\uff0c\u4f8b\u598299\u3002\u7531\u4e8e\u8fd9\u65f6p\u5c06\u88ab\u8bbe\u7f6e\u4e3apast-the-end\u503c\uff0c\u6700\u540e\u7684copy()\u51fd\u6570\u5c06iArray\u7684\u503c\u9644\u52a0\u5230\u94fe\u8868\u7684\u540e\u90e8\u3002","title":"insert.cpp"},{"location":"tech/Learn STL In 30 Minutes/#_27","text":"\u5728\u6d89\u53ca\u5230\u5bb9\u5668\u548c\u7b97\u6cd5\u7684\u64cd\u4f5c\u4e2d\uff0c\u8fd8\u6709\u4e24\u4e2a\u8fed\u4ee3\u5668\u51fd\u6570\u975e\u5e38\u6709\u7528\uff1a advance() \u6309\u6307\u5b9a\u7684\u6570\u76ee\u589e\u51cf\u8fed\u4ee3\u5668 distance() \u8fd4\u56de\u5230\u8fbe\u4e00\u4e2a\u8fed\u4ee3\u5668\u6240\u9700\uff08\u9012\u589e\uff09\u64cd\u4f5c\u7684\u6570\u76ee\u3002 \u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 list int iList ; list int :: iterator p = find ( iList . begin (), iList . end (), 2 ); cout before: p == * p endl ; advance ( p , 2 ); cout after: p == * p endl ; int k = 0 ; distance ( p , iList . end (), k ); cout k == k endl ; advance()\u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5411\u524d\u63a8\u8fdb\u7684\u6570\u76ee\u3002\u5bf9\u4e8e\u524d\u63a8\u8fed\u4ee3\u5668\uff0c\u8be5\u503c\u5fc5\u987b\u4e3a\u6b63\uff0c\u800c\u5bf9\u4e8e\u53cc\u5411\u8fed\u4ee3\u5668\u548c\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\uff0c\u8be5\u503c\u53ef\u4ee5\u4e3a\u8d1f\u3002 \u4f7f\u7528distance()\u51fd\u6570\u8fd4\u56de\u5230\u8fbe\u53e6\u4e00\u4e2a\u8fed\u4ee3\u5668\u6240\u9700\u8981\u7684\u6b65\u6570\u3002","title":"\u6df7\u5408\u8fed\u4ee3\u5668\u51fd\u6570"},{"location":"tech/Learn STL In 30 Minutes/#_28","text":"distance()\u51fd\u6570\u662f\u8fed\u4ee3\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u9012\u589e\u7b2c\u4e09\u4e2a\u53c2\u6570\u3002\u56e0\u6b64\uff0c\u4f60\u5fc5\u987b\u521d\u59cb\u5316\u53c2\u6570\u3002\u672a\u521d\u59cb\u5316\u8be5\u53c2\u6570\u51e0\u4e4e\u6ce8\u5b9a\u8981\u5931\u8d25\u3002","title":"\u6ce8\u610f"},{"location":"tech/Learn STL In 30 Minutes/#_29","text":"STL\u4e2d\uff0c\u51fd\u6570\u88ab\u79f0\u4e3a\u7b97\u6cd5\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u4eec\u548c\u6807\u51c6C\u5e93\u51fd\u6570\u76f8\u6bd4\uff0c\u5b83\u4eec\u66f4\u4e3a\u901a\u7528\u3002STL\u7b97\u6cd5\u901a\u8fc7\u91cd\u8f7doperator()\u51fd\u6570\u5b9e\u73b0\u4e3a\u6a21\u677f\u7c7b\u6216\u6a21\u677f\u51fd\u6570\u3002\u8fd9\u4e9b\u7c7b\u7528\u4e8e\u521b\u5efa\u51fd\u6570\u5bf9\u8c61\uff0c\u5bf9\u5bb9\u5668\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u5404\u79cd\u5404\u6837\u7684\u64cd\u4f5c\u3002\u4e0b\u9762\u7684\u51e0\u8282\u89e3\u91ca\u5982\u4f55\u4f7f\u7528\u51fd\u6570\u548c\u51fd\u6570\u5bf9\u8c61\u3002","title":"\u51fd\u6570\u548c\u51fd\u6570\u5bf9\u8c61"},{"location":"tech/Learn STL In 30 Minutes/#_30","text":"\u7ecf\u5e38\u9700\u8981\u5bf9\u5bb9\u5668\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u64cd\u4f5c\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u80fd\u5e0c\u671b\u904d\u5386\u4e00\u4e2a\u5bb9\u5668\u4e2d\u6240\u6709\u5bf9\u8c61\u7684STL\u7b97\u6cd5\u80fd\u591f\u56de\u8c03\u81ea\u5df1\u7684\u51fd\u6570\u3002\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 #include iostream #include stdlib.h #include time.h #include vector #include algorithm using namespace std ; #define VSIZE 24 vector long v ( VSIZE ); void initialize ( long ri ); void show ( const long ri ); bool isMinus ( const long ri ); int main () { srand ( time ( NULL )); for_each ( v . begin (), v . end (), initialize ); cout Vector of signed long integers endl ; for_each ( v . begin (), v . end (), show ); cout endl ; int count = 0 ; vector long :: iterator p ; p = find_if ( v . begin (), v . end (), isMinus ); while ( p != v . end ()) { count ++ ; p = find_if ( p + 1 , v . end (), isMinus ); } cout Number of values: VSIZE endl ; cout Negative values: count endl ; return 0 ; } void initialize ( long ri ) { ri = ( rand () - ( RAND_MAX / 2 )); } void show ( const long ri ) { cout ri ; } bool isMinus ( const long ri ) { return ( ri 0 ); } \u6240\u8c13\u65ad\u8a00\u51fd\u6570\uff0c\u5c31\u662f\u8fd4\u56debool\u503c\u7684\u51fd\u6570\u3002","title":"\u51fd\u6570\u548c\u65ad\u8a00"},{"location":"tech/Learn STL In 30 Minutes/#_31","text":"\u9664\u4e86\u7ed9STL\u7b97\u6cd5\u4f20\u9012\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u4f60\u8fd8\u53ef\u80fd\u9700\u8981\u4f20\u9012\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u4ee5\u4fbf\u6267\u884c\u66f4\u590d\u6742\u7684\u64cd\u4f5c\u3002\u8fd9\u6837\u4e00\u4e2a\u5bf9\u8c61\u5c31\u53eb\u505a\u51fd\u6570\u5bf9\u8c61\u3002\u5b9e\u9645\u4e0a\u51fd\u6570\u5bf9\u8c61\u5c31\u662f\u4e00\u4e2a\u7c7b\uff0c\u4f46\u5b83\u548c\u56de\u8c03\u51fd\u6570\u4e00\u6837\u53ef\u4ee5\u88ab\u56de\u8c03\u3002\u4f8b\u5982\uff0c\u5728\u51fd\u6570\u5bf9\u8c61\u6bcf\u6b21\u88abfor_each()\u6216find_if()\u51fd\u6570\u8c03\u7528\u65f6\u53ef\u4ee5\u4fdd\u7559\u7edf\u8ba1\u4fe1\u606f\u3002\u51fd\u6570\u5bf9\u8c61\u662f\u901a\u8fc7\u91cd\u8f7doperator()()\u5b9e\u73b0\u7684\u3002\u5982\u679cTanyClass\u5b9a\u4e49\u4e86operator()()\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u8fd9\u4e48\u4f7f\u7528\uff1a 1 2 3 TanyClass object ; object (); for_each ( v . begin (), v . end (), object ); STL\u5b9a\u4e49\u4e86\u51e0\u4e2a\u51fd\u6570\u5bf9\u8c61\u3002\u7531\u4e8e\u5b83\u4eec\u662f\u6a21\u677f\uff0c\u6240\u4ee5\u80fd\u591f\u7528\u4e8e\u4efb\u4f55\u7c7b\u578b\uff0c\u5305\u62ecC/C++\u56fa\u6709\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982long\u3002\u6709\u4e9b\u51fd\u6570\u5bf9\u8c61\u4ece\u540d\u5b57\u4e2d\u5c31\u53ef\u4ee5\u770b\u51fa\u5b83\u7684\u7528\u9014\uff0c\u5982plus()\u548cmultiplies()\u3002\u7c7b\u4f3c\u7684greater()\u548cless-equal()\u7528\u4e8e\u6bd4\u8f83\u4e24\u4e2a\u503c\u3002","title":"\u51fd\u6570\u5bf9\u8c61"},{"location":"tech/Learn STL In 30 Minutes/#_32","text":"\u6709\u4e9b\u7248\u672c\u7684ANSI C++ \u5b9a\u4e49\u4e86times()\u51fd\u6570\u5bf9\u8c61\uff0c\u800cGNU C++\u628a\u5b83\u547d\u540d\u4e3amultiplies()\u3002\u4f7f\u7528\u65f6\u5fc5\u987b\u5305\u542b\u5934\u6587\u4ef6 functional \u3002 \u4e00\u4e2a\u6709\u7528\u7684\u51fd\u6570\u5bf9\u8c61\u7684\u5e94\u7528\u662faccumulate()\u7b97\u6cd5\u3002\u8be5\u51fd\u6570\u8ba1\u7b97\u5bb9\u5668\u4e2d\u6240\u6709\u503c\u7684\u603b\u548c\u3002\u8bb0\u4f4f\u8fd9\u6837\u7684\u503c\u4e0d\u4e00\u5b9a\u662f\u7b80\u5355\u7684\u7c7b\u578b\uff0c\u901a\u8fc7\u91cd\u8f7doperator+()\uff0c\u4e5f\u53ef\u4ee5\u662f\u7c7b\u5bf9\u8c61\u3002","title":"\u6ce8\u610f"},{"location":"tech/Learn STL In 30 Minutes/#accumcpp","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include iostream #include numeric //need accumulate() #include vector //need vector #include functional //need multiplies() or times() using namespace std ; #define MAX 10 vector long v ( MAX ); int main () { for ( int i = 0 ; i MAX ; i ++ ) v [ i ] = i + 1 ; long sum = accumulate ( v . begin (), v . end (), 0 ); cout Sum of values == sum endl ; long product = accumulate ( v . begin (), v . end (), 1 , multiplies long ()); cout Product of values == product endl ; return 0 ; } \u7f16\u8bd1\u8f93\u51fa\u5982\u4e0b\uff1a 1 2 3 4 $ g++ accum.cpp $ ./a.out Sum of values == 55 Product of values == 3628800 \u6ce8\u610f\u4f7f\u7528\u4e86\u51fd\u6570\u5bf9\u8c61\u7684accumulate()\u7b97\u6cd5\u7684\u7528\u6cd5\u3002accumulate()\u5728\u5185\u90e8\u5c06\u6bcf\u4e2a\u5bb9\u5668\u4e2d\u7684\u5bf9\u8c61\u548c\u7b2c\u4e09\u4e2a\u53c2\u6570\u4f5c\u4e3amultiplies\u51fd\u6570\u5bf9\u8c61\u7684\u53c2\u6570\uff0cmultiplies(1,v)\u8ba1\u7b97\u4e58\u79ef\u3002VC\u4e2d\u7684\u8fd9\u4e9b\u6a21\u677f\u7684\u6e90\u4ee3\u7801\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 template class _II , class _Ty inline _Ty accumulate ( _II _F , _II _L , _Ty _V ) { for (; _F != _L ; ++ _F ) _V = _V + * _F ; return ( _V ); } template class _II , class _Ty , class _Bop inline _Ty accumulate ( _II _F , _II _L , _Ty _V , _Bop _B ) { for (; _F != _L ; ++ _F ) _V = _B ( _V , * _F ); return ( _V ); } template class _A1 , class _A2 , class _R struct binary_function { typedef _A1 first_argument_type ; typedef _A2 second_argument_type ; typedef _R result_type ; }; template class _Ty struct multiplies : binary_function _Ty , _Ty , _Ty { _Ty operator ()( const _Ty _X , const _Ty _Y ) const { return ( _X * _Y ); } }; \u5f15\u8a00\uff1a\u5982\u679c\u4f60\u60f3\u6df1\u5165\u4e86\u89e3STL\u5230\u5e95\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff0c\u6700\u597d\u7684\u529e\u6cd5\u662f\u5199\u4e2a\u7b80\u5355\u7684\u7a0b\u5e8f\uff0c\u5c06\u7a0b\u5e8f\u4e2d\u6d89\u53ca\u5230\u7684\u6a21\u677f\u6e90\u7801\u7ed9copy\u4e0b\u6765\uff0c\u7a0d\u4f5c\u6574\u7406\uff0c\u5c31\u80fd\u770b\u61c2\u4e86\u3002\u6240\u4ee5\u6ca1\u6709\u5fc5\u8981\u53bb\u4e70\u4ec0\u4e48\u300aSTL\u6e90\u7801\u5256\u6790\u300b\u4e4b\u7c7b\u7684\u4e66\u7c4d\uff0c\u90a3\u4e9b\u4e66\u53ef\u80fd\u53cd\u800c\u6d6a\u8d39\u65f6\u95f4\u3002","title":"accum.cpp"},{"location":"tech/Learn STL In 30 Minutes/#_33","text":"\u6709\u4e00\u7c7b\u6709\u7528\u7684\u51fd\u6570\u5bf9\u8c61\u662f\u201c\u53d1\u751f\u5668\u201d(generator)\u3002\u8fd9\u7c7b\u51fd\u6570\u6709\u81ea\u5df1\u7684\u5185\u5b58\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u80fd\u591f\u4ece\u5148\u524d\u7684\u8c03\u7528\u4e2d\u8bb0\u4f4f\u4e00\u4e2a\u503c\u3002\u4f8b\u5982\u968f\u673a\u6570\u53d1\u751f\u5668\u51fd\u6570\u3002 \u666e\u901a\u7684C\u7a0b\u5e8f\u5458\u4f7f\u7528\u9759\u6001\u6216\u5168\u5c40\u53d8\u91cf\u201c\u8bb0\u5fc6\u201d\u4e0a\u6b21\u8c03\u7528\u7684\u7ed3\u679c\u3002\u4f46\u8fd9\u6837\u505a\u7684\u7f3a\u70b9\u662f\u8be5\u51fd\u6570\u65e0\u6cd5\u548c\u5b83\u7684\u6570\u636e\u76f8\u5206\u79bb\uff0c\u8fd8\u6709\u4e2a\u7f3a\u70b9\u662f\u8981\u7528TLS\u624d\u80fd\u7ebf\u7a0b\u5b89\u5168\u3002\u663e\u7136\uff0c\u4f7f\u7528\u7c7b\u6765\u5c01\u88c5\u4e00\u5757:\u201c\u5185\u5b58\u201d\u66f4\u5b89\u5168\u53ef\u9760\u3002\u5148\u770b\u4e00\u4e0b\u4f8b\u5b50\uff1a","title":"\u53d1\u751f\u5668\u51fd\u6570\u5bf9\u8c61"},{"location":"tech/Learn STL In 30 Minutes/#randfunccpp","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 #include iostream #include stdlib.h //need rand(), srand() #include time.h //need random_shuffle() #include vector //need vector #include functional //need ptr_fun() #include algorithm #include iterator using namespace std ; int iarray [ 10 ] = { 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 }; vector int v ( iarray , iarray + 10 ); void Display ( vector int vr , const char * s ); unsigned int RandInt ( const unsigned int n ); int main () { srand ( time ( NULL )); Display ( v , Before shuffle: ); pointer_to_unary_function unsigned int , unsigned int ptr_RandInt = ptr_fun ( RandInt ); random_shuffle ( v . begin (), v . end (), ptr_RandInt ); Display ( v , After shuffle: ); return 0 ; } void Display ( vector int vr , const char * s ) { cout endl s endl ; copy ( vr . begin (), vr . end (), ostream_iterator int ( cout , )); cout endl ; } unsigned int RandInt ( const unsigned int n ) { return rand () % n ; } \u7f16\u8bd1\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 $ g++ randfunc.cpp $ ./a.out Before shuffle: 1 2 3 4 5 6 7 8 9 10 After shuffle: 6 7 2 8 3 5 10 1 9 4 \u9996\u5148\u7528\u4e0b\u9762\u7684\u8bed\u53e5\u58f0\u660e\u4e00\u4e2a\u5bf9\u8c61 pointer_to_unary_function unsigned int, unsigned int ptr_RandInt = ptr_fun ( RandInt ) ; \u8fd9\u513f\u4f7f\u7528STL\u7684\u5355\u76ee\u51fd\u6570\u6a21\u677f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u91cfptr_RandInt, \u5e76\u5c06\u5730\u5740\u521d\u59cb\u5316\u5230\u6211\u4eec\u7684\u51fd\u6570RandInt()\u3002\u5355\u76ee\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u503c\u3002\u73b0\u5728random_shuffle()\u53ef\u4ee5\u5982\u4e0b\u8c03\u7528: 1 random_shuffle ( v . begin (), v . end (), ptr_RandInt ); \u5728\u672c\u4f8b\u5b50\u4e2d\uff0c\u53d1\u751f\u5668\u53ea\u662f\u7b80\u5355\u7684\u8c03\u7528rand()\u51fd\u6570\u3002","title":"randfunc.cpp"},{"location":"tech/Learn STL In 30 Minutes/#_34","text":"\u4e0b\u9762\u7684\u4f8b\u5b50\u8bf4\u660e\u53d1\u751f\u5668\u51fd\u6570\u7c7b\u5bf9\u8c61\u7684\u4f7f\u7528\u3002","title":"\u53d1\u751f\u5668\u51fd\u6570\u7c7b\u5bf9\u8c61"},{"location":"tech/Learn STL In 30 Minutes/#fiborandcpp","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 #include iostream #include algorithm //need rand_shuffle() #include vector //need vector #include functional //need unary_function #include iterator using namespace std ; int iarray [ 10 ] = { 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 }; vector int v ( iarray , iarray + 10 ); void Display ( vector int vr , const char * s ); template class Arg class FiboRand : public unary_function Arg , Arg { int i , j ; Arg sequence [ 18 ]; public : FiboRand (); Arg operator ()( const Arg arg ); }; void main () { FiboRand int fibogen ; cout Fibonacci random number generator endl ; cout using random_shuffle and a function object endl ; Display ( v , Before shuffle: ); random_shuffle ( v . begin (), v . end (), fibogen ); Display ( v , After shuffle: ); } void Display ( vector int vr , const char * s ) { cout endl s endl ; copy ( vr . begin (), vr . end (), ostream_iterator int ( cout , )); cout endl ; } template class Arg FiboRand Arg :: FiboRand () { sequence [ 17 ] = 1 ; sequence [ 16 ] = 2 ; for ( int n = 15 ; n 0 ; n -- ) sequence [ n ] = sequence [ n + 1 ] + sequence [ n + 2 ]; i = 17 ; j = 5 ; } template class Arg Arg FiboRand Arg :: operator ()( const Arg arg ) { Arg k = sequence [ i ] + sequence [ j ]; sequence [ i ] = k ; i -- ; j -- ; if ( i == 0 ) i = 17 ; if ( j == 0 ) j = 17 ; return k % arg ; } \u7f16\u8bd1\u8fd0\u884c\u8f93\u51fa\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 $ g ++ fiborand . cpp $ . / a . out Fibonacci random number generator using random_shuffle and a function object Before shuffle : 1 2 3 4 5 6 7 8 9 10 After shuffle : 6 8 5 4 3 7 10 1 9 \u8be5\u7a0b\u5e8f\u7528\u5b8c\u5168\u4e0d\u540c\u7684\u65b9\u6cd5\u4f7f\u7528rand_shuffle\u3002Fibonacci\u53d1\u751f\u5668\u5c01\u88c5\u5728\u4e00\u4e2a\u7c7b\u4e2d\uff0c\u8be5\u7c7b\u80fd\u4ece\u5148\u524d\u7684\u201c\u4f7f\u7528\u201d\u4e2d\u8bb0\u5fc6\u8fd0\u884c\u7ed3\u679c\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u7c7bFiboRand\u7ef4\u62a4\u4e86\u4e00\u4e2a\u6570\u7ec4\u548c\u4e24\u4e2a\u7d22\u5f15\u53d8\u91cfi\u548cj\u3002 FiboRand\u7c7b\u7ee7\u627f\u81eaunary_function()\u6a21\u677f\uff1a 1 2 template class Arg class FiboRand : public unary_function Arg , Arg { ... Arg\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\u3002\u8be5\u7c7b\u8fd8\u5b9a\u4e49\u4e86\u4e24\u4e2a\u6210\u5458\u51fd\u6570\uff0c\u4e00\u4e2a\u662f\u6784\u9020\u51fd\u6570\uff0c\u53e6\u4e00\u4e2a\u662foperator()()\u51fd\u6570\uff0c\u8be5\u64cd\u4f5c\u7b26\u5141\u8bb8random_shuffle()\u7b97\u6cd5\u50cf\u4e00\u4e2a\u51fd\u6570\u4e00\u6837\u201c\u8c03\u7528\u201d\u4e00\u4e2aFiboRand\u5bf9\u8c61\u3002","title":"fiborand.cpp"},{"location":"tech/Learn STL In 30 Minutes/#_35","text":"\u4e00\u4e2a\u7ed1\u5b9a\u5668\u4f7f\u7528\u53e6\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61f()\u548c\u53c2\u6570\u503cV\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u3002\u88ab\u7ed1\u5b9a\u51fd\u6570\u5bf9\u8c61\u5fc5\u987b\u4e3a\u53cc\u76ee\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u6709\u4e24\u4e2a\u53c2\u6570\uff0cA\u548cB\u3002STL\u4e2d\u7684\u7ed1\u5b9a\u5668\u6709\uff1a bind1st() \u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\uff0c\u8be5\u51fd\u6570\u5bf9\u8c61\u5c06\u503cV\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570A\u3002 bind2nd() \u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\uff0c\u8be5\u51fd\u6570\u5bf9\u8c61\u5c06\u503cV\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570B\u3002 \u4e3e\u4f8b\u5982\u4e0b:","title":"\u7ed1\u5b9a\u5668\u51fd\u6570\u5bf9\u8c61"},{"location":"tech/Learn STL In 30 Minutes/#bindercpp","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #include iostream #include algorithm #include functional #include list using namespace std ; int iarray [ 10 ] = { 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 }; list int aList ( iarray , iarray + 10 ); int main () { int k = 0 ; k = count_if ( aList . begin (), aList . end (), bind1st ( greater int (), 8 )); cout Number elements 8 == k endl ; return 0 ; } count_if()\u8ba1\u7b97\u6ee1\u8db3\u7279\u5b9a\u6761\u4ef6\u7684\u5143\u7d20\u7684\u6570\u76ee\u3002 \u8fd9\u662f\u901a\u8fc7\u5c06\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u548c\u4e00\u4e2a\u53c2\u6570\u6346\u7ed1\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5e76\u5c06\u8be5\u5bf9\u8c61\u4f5c\u4e3a\u7b97\u6cd5\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u5b9e\u73b0\u7684\u3002\u6ce8\u610f\u8fd9\u4e2a\u8868\u8fbe\u5f0f\uff1a 1 bind1st ( greater int (), 8 ) \u8be5\u8868\u8fbe\u5f0f\u5c06 greater int () \u548c\u4e00\u4e2a\u53c2\u6570\u503c8\u6346\u7ed1\u4e3a\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u3002\u7531\u4e8e\u4f7f\u7528\u4e86bind1st()\uff0c\u6240\u4ee5\u8be5\u51fd\u6570\u76f8\u5f53\u4e8e\u8ba1\u7b97\u4e0b\u8ff0\u8868\u8fbe\u5f0f\uff1a 1 8 q \u8868\u8fbe\u5f0f\u4e2d\u7684q\u662f\u5bb9\u5668\u4e2d\u7684\u5bf9\u8c61\u3002\u56e0\u6b64\uff0c\u5b8c\u6574\u7684\u8868\u8fbe\u5f0f 1 k = count_if ( aList . begin (), aList . end (), bind1st ( greater int (), 8 )); \u8ba1\u7b97\u6240\u6709\u5c0f\u4e8e\u6216\u7b49\u4e8e8\u7684\u5bf9\u8c61\u7684\u6570\u76ee\u3002","title":"binder.cpp"},{"location":"tech/Learn STL In 30 Minutes/#_36","text":"\u6240\u8c13\u5426\u5b9a(negator)\u51fd\u6570\u5bf9\u8c61\uff0c\u5c31\u662f\u5b83\u4ece\u53e6\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u521b\u5efa\u800c\u6765\uff0c\u5982\u679c\u539f\u5148\u7684\u51fd\u6570\u8fd4\u56de\u771f\uff0c\u5219\u5426\u5b9a\u51fd\u6570\u5bf9\u8c61\u8fd4\u56de\u5047\u3002\u6709\u4e24\u4e2a\u5426\u5b9a\u51fd\u6570\u5bf9\u8c61\uff1anot1()\u548cnot2()\u3002 not1()\u6388\u53d7\u5355\u76ee\u51fd\u6570\u5bf9\u8c61\uff0cnot2()\u63a5\u53d7\u53cc\u76ee\u51fd\u6570\u5bf9\u8c61\u3002\u5426\u5b9a\u51fd\u6570\u5bf9\u8c61\u901a\u5e38\u548c\u7ed1\u5b9a\u5668\u4e00\u8d77\u4f7f\u7528\u3002\u4f8b\u5982\uff0c\u4e0a\u8282\u4e2d\u7528bind1nd\u6765\u641c\u7d22q =8\u7684\u503c\uff1a 1 k = count_if ( aList . begin (), aList . end (), bind1st ( greater int (), 8 )); \u5982\u679c\u8981\u641c\u7d22q 8\u7684\u5bf9\u8c61\uff0c\u5219\u7528bind2st\u3002\u800c\u73b0\u5728\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a 1 strat = find_if ( aList . begin (), aList . end (), not1 ( bind1st ( greater int (), 8 ))); \u4f60\u5fc5\u987b\u4f7f\u7528not1\uff0c\u56e0\u4e3abind1st\u8fd4\u56de\u5355\u76ee\u51fd\u6570\u3002","title":"\u5426\u5b9a\u51fd\u6570\u5bf9\u8c61"},{"location":"tech/Learn STL In 30 Minutes/#stl_3","text":"\u5c3d\u7ba1\u5f88\u591a\u7a0b\u5e8f\u5458\u4ecd\u7136\u5728\u4f7f\u7528\u6807\u51c6C\u51fd\u6570\uff0c\u4f46\u662f\u8fd9\u5c31\u597d\u50cf\u9a91\u7740\u6bdb\u9a74\u5bfb\u627eMercedes\u4e00\u6837\u3002\u4f60\u5f53\u7136\u6700\u7ec8\u4e5f\u4f1a\u5230\u8fbe\u76ee\u6807\uff0c\u4f46\u662f\u4f60\u6d6a\u8d39\u4e86\u5f88\u591a\u65f6\u95f4\u3002 \u5c3d\u7ba1\u6709\u65f6\u5019\u4f7f\u7528\u6807\u51c6C\u51fd\u6570\u786e\u5b9e\u65b9\u4fbf\uff08\u5982\u4f7f\u7528sprintf()\u8fdb\u884c\u683c\u5f0f\u5316\u8f93\u51fa\uff09\u3002\u4f46\u662fC\u51fd\u6570\u4e0d\u4f7f\u7528\u5f02\u5e38\u673a\u5236\u6765\u62a5\u544a\u9519\u8bef\uff0c\u4e5f\u4e0d\u9002\u5408\u5904\u7406\u65b0\u7684\u6570\u636e\u7c7b\u578b\u3002\u800c\u4e14\u6807\u51c6C\u51fd\u6570\u7ecf\u5e38\u4f7f\u7528\u5185\u5b58\u5206\u914d\u6280\u672f\uff0c\u6ca1\u6709\u7ecf\u9a8c\u7684\u7a0b\u5e8f\u5458\u5f88\u5bb9\u6613\u5199\u51fabug\u6765\u3002 C++\u6807\u51c6\u5e93\u5219\u63d0\u4f9b\u4e86\u66f4\u4e3a\u5b89\u5168\uff0c\u66f4\u4e3a\u7075\u6d3b\u7684\u6570\u636e\u96c6\u5904\u7406\u65b9\u5f0f\u3002STL\u6700\u521d\u7531HP\u5b9e\u9a8c\u5ba4\u7684Alexander Stepanov\u548cMeng Lee\u5f00\u53d1\u3002\u6700\u8fd1\uff0cC++\u6807\u51c6\u59d4\u5458\u4f1a\u91c7\u7eb3\u4e86STL\uff0c\u5c3d\u7ba1\u5728\u4e0d\u540c\u7684\u5b9e\u73b0\u4e4b\u95f4\u4ecd\u6709\u7ec6\u8282\u5dee\u522b\u3002 STL\u7684\u6700\u4e3b\u8981\u7684\u4e24\u4e2a\u7279\u70b9\uff1a\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u5206\u79bb\uff0c\u975e\u9762\u5411\u5bf9\u8c61\u672c\u8d28\u3002\u8bbf\u95ee\u5bf9\u8c61\u662f\u901a\u8fc7\u50cf\u6307\u9488\u4e00\u6837\u7684\u8fed\u4ee3\u5668\u5b9e\u73b0\u7684\uff0c\u5bb9\u5668\u662f\u50cf\u94fe\u8868\u3001\u77e2\u91cf\u4e4b\u7c7b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u6309\u6a21\u677f\u65b9\u5f0f\u63d0\u4f9b\u3002\u7b97\u6cd5\u662f\u51fd\u6570\u6a21\u677f\uff0c\u7528\u4e8e\u64cd\u4f5c\u5bb9\u5668\u4e2d\u7684\u6570\u636e\u3002\u7531\u4e8eSTL\u4ee5\u6a21\u677f\u4e3a\u57fa\u7840\uff0c\u6240\u4ee5\u80fd\u7528\u4e8e\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u548c\u7ed3\u6784\u3002","title":"\u603b\u7ed3\uff1a\u4f7f\u7528\u6807\u51c6\u6a21\u677f\u5e93\uff08STL\uff09"},{"location":"tech/Network Simulator 2 Installation Guide for Ubuntu/","text":"Network Simulator 2 Installation Guide for Ubuntu You can checkout my repo for this document, and get related files. 1 2 sudo apt-get install git-core git clone https://github.com/wangzhizhou2014GitHub/Network-Simulator-Installation-Guideline-For-Ubuntu This Installation of Network Simulator 2 on the Ubuntu 16.04 Live CD UDisk After you intall your Ubuntu System, you should use command: sudo apt-get update to update your system software repos sites. Then you can use apt-get command to install the software that you want on your system. Firstly, you should download the ns2 all-in-one file package from it's offical website NS2-Network simulator , and the link of download file is: NS 2.35 released Nov 4 2011 . 1 You can use the web browser or download tools such as XunLei. After that, you should get a file named: ns-allinone-2.35.tar.gz . You can use the command line to decompress the downloaded file: 1 tar zxvf ns-allinone-2.35.tar.gz Now, you get a directory which contain the Network Simulator 2 source files, then you should compile these files manually. Enter the uncompressed directory with command line: cd ns-allinone-2.35/ and run the compile script: sudo ./install , you will find there are some error exist: 1 2 /ns-allinone-2.35/tk8.5.10/unix/../generic/tk.h:76:23: fatal error: X11/Xlib.h: No such file or directory, this is because your system has no X11 dev-lib, so we should install them firstly You can use command to search related libs should be installed: 1 2 3 sudo apt-cache search x11-dev libx11-dev - X11 client-side library (development headers) libxkbcommon-x11-dev - library to create keymaps with the XKB X11 protocol - development files so, we should install the libx11-dev(headers) and libxkbcommon-x11-dev as follow: 1 sudo apt-get install libx11-dev libxkbcommon-x11-dev Then you run the sudo ./install command again. And You may find there appear another configuration fails as follow: 1 2 3 4 can t find X includes otcl-1.14 configuration failed! Exiting ... Please check http://www.isi.edu/nsnam/ns/ns-problems.html for common problems and bug fixes. You should install another software to suppress this fail: 1 sudo apt-get install libxt-dev Again, run sudo run ./intall . Ops~, you run into the third problem when compile the source file: 1 2 3 4 5 6 7 8 9 linkstate / ls . h : 137 : 25 : error : \u2018 erase \u2019 was not declared in this scope , and no declarations were found by argument-dependent lookup at the point of instantiation [ -fpermissive ] void eraseAll () { erase( baseMap : : begin (), baseMap :: end ()); } linkstate / ls . h : 137 : 25 : note : declarations in dependent base \u2018 std :: map int , LsIdSeq , std :: less int , std :: allocator std :: pair const int , LsIdSeq \u2019 are not found by unqualified lookup linkstate / ls . h : 137 : 25 : note : use \u2018 this- erase \u2019 instead Makefile : 93 : recipe for target linkstate/ls.o failed make : *** [ linkstate / ls.o ] Error 1 Ns make failed ! See http :// www . isi . edu / nsnam / ns / ns-problems . html for problems After search on the internet a while, I find the solution. We should change a file located in the ns2 directory: ns-allinone-2.35/ns-2.35/linkstate/ls.h , in the line 137 , we should change the line frome 1 void eraseAll () { erase( baseMap : : begin (), baseMap :: end ()); } to 1 void eraseAll () { this- erase( baseMap : : begin (), baseMap :: end ()); } You can use vim or other plain text editor to do this task. After that, run the command sudo ./install again under the directory : ns-allinone-2.35/ . This time, we compile the NS2 source file successfully! You can get these message on the screen to demostrate the compile process is completed: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 Please put /home/ubuntu/Downloads/ns-allinone-2.35/bin:/home/ubuntu/Downloads/ns-allinone-2.35/tcl8.5.10/unix:/home/ubuntu/Downloads/ns-allinone-2.35/tk8.5.10/unix into your PATH environment; so that you ll be able to run itm/tclsh/wish/xgraph. IMPORTANT NOTICES: (1) You MUST put /home/ubuntu/Downloads/ns-allinone-2.35/otcl-1.14, /home/ubuntu/Downloads/ns-allinone-2.35/lib, into your LD_LIBRARY_PATH environment variable. If it complains about X libraries, add path to your X libraries into LD_LIBRARY_PATH. If you are using csh, you can set it like: setenv LD_LIBRARY_PATH paths If you are using sh, you can set it like: export LD_LIBRARY_PATH= paths (2) You MUST put /home/ubuntu/Downloads/ns-allinone-2.35/tcl8.5.10/library into your TCL_LIBRARY environmental variable. Otherwise ns/nam will complain during startup. After these steps, you can now run the ns validation suite with cd ns-2.35; ./validate For trouble shooting, please first read ns problems page http://www.isi.edu/nsnam/ns/ns-problems.html. Also search the ns mailing list archive for related posts. As above message said, we should add some environment variables into the end of your user configure file: .bashrc , which is under the directory: ~/.bashrc 1 2 3 4 export NS2_HOME=/home/ubuntu/Downloads/ns-allinone-2.35 export PATH=$PATH:$NS2_HOME/bin:$NS2_HOME/tcl8.5.10/unix:$NS2_HOME/tk8.5.10/unix export LD_LIBRARY_PATH=$NS2_HOME/otcl-1.14:$NS_HOME/lib export TCL_LIBRARY=$NS2_HOME/tcl8.5.10/library And you should use the command to make the change take effect: 1 source ~/.bashrc Then you can validate the NS2 as the compile successful message said, buy run ./invalidate in the ns-allinone-2.35/ns-2.35 directory. This step may take a long time, because there are so many test examples should been passed. Of course, you can skip this validate step to continue. After run these test examples, those failed examples will been listed out in bash as follow: 1 2 3 validate overall report: some tests failed: ./test-all-tcp ./test-all-testReno ./test-all-newreno ./test-all-sack ./test-all-tcpOptions ./test-all-tcpReset ./test-all-testReno-full ./test-all-testReno-bayfull ./test-all-sack-full ./test-all-tcp-init-win ./test-all-tcpVariants ./test-all-LimTransmit ./test-all-aimd ./test-all-rfc793edu ./test-all-rfc2581 ./test-all-rbp ./test-all-frto ./test-all-ecn ./test-all-ecn-ack ./test-all-ecn-full ./test-all-quickstart ./test-all-manual-routing ./test-all-red ./test-all-adaptive-red ./test-all-red-pd ./test-all-rio ./test-all-vq ./test-all-rem ./test-all-gk ./test-all-pi ./test-all-cbq ./test-all-schedule ./test-all-links ./test-all-oddBehaviors to re-run a specific test, cd tcl/test; ./test-all-TEST-NAME Add MPTCP module into the NS2 In this project, there is a patch file named mptcp.patch-for-ns2.35-20130810 , you should copy the mptcp.patch-for-ns2.35-20130810 under directory: ns-allinone-2.35/ns-2.35/ , then change directory into /ns-allinone-2.35/ns-2.35/ and apply this patch file with command: 1 patch -p1 mptcp.patch-for-ns2.35-20130810 the bash ouput as follow, demostrate we added the mptcp source file into directory /ns-allinone-2.35/ns-2.35/tcp/ : 1 2 3 4 5 6 7 8 patch -p1 mptcp.patch-for-ns2.35-20130810 patching file Makefile.in patching file tcp/mptcp.cc patching file tcp/mptcp-full.cc patching file tcp/mptcp-full.h patching file tcp/mptcp.h patching file tcp/tcp.h patching file trace/trace.cc Then, you run configure command as follow: 1 sudo ./configure --with-tcl-ver=8.5 Lastly, you should make the ns-2.35 with command: 1 sudo make the last output of command is as follow: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 for i in indep-utils/cmu-scen-gen/setdest indep-utils/webtrace-conv/dec indep-utils/webtrace-conv/epa indep-utils/webtrace-conv/nlanr indep-utils/webtrace-conv/ucb; do ( cd $i; make all; ) done make[1]: Entering directory /home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/cmu-scen-gen/setdest make[1]: Nothing to be done for all . make[1]: Leaving directory /home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/cmu-scen-gen/setdest make[1]: Entering directory /home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/dec make[1]: Nothing to be done for all . make[1]: Leaving directory /home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/dec make[1]: Entering directory /home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/epa make[1]: Nothing to be done for all . make[1]: Leaving directory /home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/epa make[1]: Entering directory /home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/nlanr make[1]: Nothing to be done for all . make[1]: Leaving directory /home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/nlanr make[1]: Entering directory /home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/ucb make[1]: Nothing to be done for all . make[1]: Leaving directory /home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/ucb This means there is not fatal errors occurred. Then you can think your MPTCP installed successfully! And we can run a mptcp sample script file to valide this installation. This project contained a test tcl script file mptcp-sample.tcl , you can run with ns command as follow: 1 ns mptcp-sample.tcl After run this script as above, there will be a xgraph plot pop out, that demonstrate the addition of MPTCP is successful. Configuration of Eclipse Debug Environment Firstly, if you want debug ns2, you should make it support debug. Change directory into: /ns-allinone-2.35/ns-2.35/ ,and using vim open the Makefile , change the 56 line from 1 CCOPT = -Wall -Wno-write-strings to 1 CCOPT = -g -Wall -Wno-write-strings save and exit the Makefile, then run: 1 sudo make to recompile the ns2. Now the ns2 can support debug. Then, you should Download the Eclipse IDE for C/C++ Developers on the Web Site: http://www.eclipse.org/downloads/ Because eclipse don't need to install, after we decompress the tar.gz file, we can use is directly under it's directory. But if we want use it anywhere in our ubuntu file system, we should add the eclipse binary path to the environment variable PATH to tell our system where to locate elipse and startup it. Use command decompress *.tar.gz file: 1 tar zxvf eclipse-cpp-mars-2-linux-gtk-x86_64.tar.gz Then there will be a directory named : eclipse under current directory, we add one line in the ~/.bashrc file as we done early: 1 export PATH=$PATH:/home/ubuntu/Downloads/eclipse and use: source ~/.bashrc to make the change take effect. Ok, you can run eclipse anywhere in your file system. If you run eclipse in bash, you will find that, there is a problem said that eclipse need the java run environment to startup, because this software is developed by java. we should do more thing to make it work: You can download the JRE from website: http://www.oracle.com/technetwork/java/javase/downloads/index-jsp-138363.html Make sure download the correct edition JRE corresponding to your system. Linux 64 Edition for my condition. use command: tar zxvf jre-8u91-linux-x64.tar.gz decompress the file and move the decompressed directory under directory: eclipse/ , and rename it to **jre** , now you can start eclipse without error about JRE. From there, we start configure the debug environment of ns2 with Eclipse Because there are so many issues should been care, and I recommend you to learn from this blog: http://blog.sina.com.cn/s/blog_5d2054d90100za8e.html , there are detail description, but images can also demostrate the operation about eclipse. Enjoy It! The process is on Ubuntu 14.04 (simple record the hack process, mostly same as Ubuntu 16.04) You should first update ubuntu to get the latest software with command : 1 2 3 4 sudo apt-get update sudo apt-get upgrade sudo apt-get dist-upgrade sudo apt-get install g++ After install Ubuntu14.04, I downloaded the ns-allinone2.35 from it's offical website and use the tar zxvf ns-allinone2.35.tar.gz decompress the file. Then I use the vim to edit the file ns-allinone2.35/ns-2.35/linkstate/ls.h , change the line 137 , added a this pointer. Use the command: sudo ./install to compile the ns2, but there are some error, there are hints say that there is no X11.h header file. If you upgrade you ubuntu firstly, you may not encount this error. But who know it. So, I should install relate program with command: 1 2 3 sudo apt-get install libx11-dev sudo apt-get install libxkbcommon-x11-deud sudo apt-get install libghc-x11-dev After apply the patch file mptcp.patch-for-ns2.35-20130810 under /ns-allinone-2.35/ns-2.35/ , then use command: sudo ./configure --with-tcl-ver=8.5 to configure the project, after that, use command: sudo make the make the project, then change directory to the parent directory of ns-2.35 and run the command: sudo ./install to complete! Written By Joker, 2016-05-07, copy left","title":"Network Simulator 2 Installation Guide for Ubuntu"},{"location":"tech/Network Simulator 2 Installation Guide for Ubuntu/#network-simulator-2-installation-guide-for-ubuntu","text":"You can checkout my repo for this document, and get related files. 1 2 sudo apt-get install git-core git clone https://github.com/wangzhizhou2014GitHub/Network-Simulator-Installation-Guideline-For-Ubuntu","title":"Network Simulator 2 Installation Guide for Ubuntu"},{"location":"tech/Network Simulator 2 Installation Guide for Ubuntu/#this-installation-of-network-simulator-2-on-the-ubuntu-1604-live-cd-udisk","text":"After you intall your Ubuntu System, you should use command: sudo apt-get update to update your system software repos sites. Then you can use apt-get command to install the software that you want on your system. Firstly, you should download the ns2 all-in-one file package from it's offical website NS2-Network simulator , and the link of download file is: NS 2.35 released Nov 4 2011 . 1 You can use the web browser or download tools such as XunLei. After that, you should get a file named: ns-allinone-2.35.tar.gz . You can use the command line to decompress the downloaded file: 1 tar zxvf ns-allinone-2.35.tar.gz Now, you get a directory which contain the Network Simulator 2 source files, then you should compile these files manually. Enter the uncompressed directory with command line: cd ns-allinone-2.35/ and run the compile script: sudo ./install , you will find there are some error exist: 1 2 /ns-allinone-2.35/tk8.5.10/unix/../generic/tk.h:76:23: fatal error: X11/Xlib.h: No such file or directory, this is because your system has no X11 dev-lib, so we should install them firstly You can use command to search related libs should be installed: 1 2 3 sudo apt-cache search x11-dev libx11-dev - X11 client-side library (development headers) libxkbcommon-x11-dev - library to create keymaps with the XKB X11 protocol - development files so, we should install the libx11-dev(headers) and libxkbcommon-x11-dev as follow: 1 sudo apt-get install libx11-dev libxkbcommon-x11-dev Then you run the sudo ./install command again. And You may find there appear another configuration fails as follow: 1 2 3 4 can t find X includes otcl-1.14 configuration failed! Exiting ... Please check http://www.isi.edu/nsnam/ns/ns-problems.html for common problems and bug fixes. You should install another software to suppress this fail: 1 sudo apt-get install libxt-dev Again, run sudo run ./intall . Ops~, you run into the third problem when compile the source file: 1 2 3 4 5 6 7 8 9 linkstate / ls . h : 137 : 25 : error : \u2018 erase \u2019 was not declared in this scope , and no declarations were found by argument-dependent lookup at the point of instantiation [ -fpermissive ] void eraseAll () { erase( baseMap : : begin (), baseMap :: end ()); } linkstate / ls . h : 137 : 25 : note : declarations in dependent base \u2018 std :: map int , LsIdSeq , std :: less int , std :: allocator std :: pair const int , LsIdSeq \u2019 are not found by unqualified lookup linkstate / ls . h : 137 : 25 : note : use \u2018 this- erase \u2019 instead Makefile : 93 : recipe for target linkstate/ls.o failed make : *** [ linkstate / ls.o ] Error 1 Ns make failed ! See http :// www . isi . edu / nsnam / ns / ns-problems . html for problems After search on the internet a while, I find the solution. We should change a file located in the ns2 directory: ns-allinone-2.35/ns-2.35/linkstate/ls.h , in the line 137 , we should change the line frome 1 void eraseAll () { erase( baseMap : : begin (), baseMap :: end ()); } to 1 void eraseAll () { this- erase( baseMap : : begin (), baseMap :: end ()); } You can use vim or other plain text editor to do this task. After that, run the command sudo ./install again under the directory : ns-allinone-2.35/ . This time, we compile the NS2 source file successfully! You can get these message on the screen to demostrate the compile process is completed: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 Please put /home/ubuntu/Downloads/ns-allinone-2.35/bin:/home/ubuntu/Downloads/ns-allinone-2.35/tcl8.5.10/unix:/home/ubuntu/Downloads/ns-allinone-2.35/tk8.5.10/unix into your PATH environment; so that you ll be able to run itm/tclsh/wish/xgraph. IMPORTANT NOTICES: (1) You MUST put /home/ubuntu/Downloads/ns-allinone-2.35/otcl-1.14, /home/ubuntu/Downloads/ns-allinone-2.35/lib, into your LD_LIBRARY_PATH environment variable. If it complains about X libraries, add path to your X libraries into LD_LIBRARY_PATH. If you are using csh, you can set it like: setenv LD_LIBRARY_PATH paths If you are using sh, you can set it like: export LD_LIBRARY_PATH= paths (2) You MUST put /home/ubuntu/Downloads/ns-allinone-2.35/tcl8.5.10/library into your TCL_LIBRARY environmental variable. Otherwise ns/nam will complain during startup. After these steps, you can now run the ns validation suite with cd ns-2.35; ./validate For trouble shooting, please first read ns problems page http://www.isi.edu/nsnam/ns/ns-problems.html. Also search the ns mailing list archive for related posts. As above message said, we should add some environment variables into the end of your user configure file: .bashrc , which is under the directory: ~/.bashrc 1 2 3 4 export NS2_HOME=/home/ubuntu/Downloads/ns-allinone-2.35 export PATH=$PATH:$NS2_HOME/bin:$NS2_HOME/tcl8.5.10/unix:$NS2_HOME/tk8.5.10/unix export LD_LIBRARY_PATH=$NS2_HOME/otcl-1.14:$NS_HOME/lib export TCL_LIBRARY=$NS2_HOME/tcl8.5.10/library And you should use the command to make the change take effect: 1 source ~/.bashrc Then you can validate the NS2 as the compile successful message said, buy run ./invalidate in the ns-allinone-2.35/ns-2.35 directory. This step may take a long time, because there are so many test examples should been passed. Of course, you can skip this validate step to continue. After run these test examples, those failed examples will been listed out in bash as follow: 1 2 3 validate overall report: some tests failed: ./test-all-tcp ./test-all-testReno ./test-all-newreno ./test-all-sack ./test-all-tcpOptions ./test-all-tcpReset ./test-all-testReno-full ./test-all-testReno-bayfull ./test-all-sack-full ./test-all-tcp-init-win ./test-all-tcpVariants ./test-all-LimTransmit ./test-all-aimd ./test-all-rfc793edu ./test-all-rfc2581 ./test-all-rbp ./test-all-frto ./test-all-ecn ./test-all-ecn-ack ./test-all-ecn-full ./test-all-quickstart ./test-all-manual-routing ./test-all-red ./test-all-adaptive-red ./test-all-red-pd ./test-all-rio ./test-all-vq ./test-all-rem ./test-all-gk ./test-all-pi ./test-all-cbq ./test-all-schedule ./test-all-links ./test-all-oddBehaviors to re-run a specific test, cd tcl/test; ./test-all-TEST-NAME","title":"This Installation of Network Simulator 2 on the Ubuntu 16.04 Live CD UDisk"},{"location":"tech/Network Simulator 2 Installation Guide for Ubuntu/#add-mptcp-module-into-the-ns2","text":"In this project, there is a patch file named mptcp.patch-for-ns2.35-20130810 , you should copy the mptcp.patch-for-ns2.35-20130810 under directory: ns-allinone-2.35/ns-2.35/ , then change directory into /ns-allinone-2.35/ns-2.35/ and apply this patch file with command: 1 patch -p1 mptcp.patch-for-ns2.35-20130810 the bash ouput as follow, demostrate we added the mptcp source file into directory /ns-allinone-2.35/ns-2.35/tcp/ : 1 2 3 4 5 6 7 8 patch -p1 mptcp.patch-for-ns2.35-20130810 patching file Makefile.in patching file tcp/mptcp.cc patching file tcp/mptcp-full.cc patching file tcp/mptcp-full.h patching file tcp/mptcp.h patching file tcp/tcp.h patching file trace/trace.cc Then, you run configure command as follow: 1 sudo ./configure --with-tcl-ver=8.5 Lastly, you should make the ns-2.35 with command: 1 sudo make the last output of command is as follow: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 for i in indep-utils/cmu-scen-gen/setdest indep-utils/webtrace-conv/dec indep-utils/webtrace-conv/epa indep-utils/webtrace-conv/nlanr indep-utils/webtrace-conv/ucb; do ( cd $i; make all; ) done make[1]: Entering directory /home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/cmu-scen-gen/setdest make[1]: Nothing to be done for all . make[1]: Leaving directory /home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/cmu-scen-gen/setdest make[1]: Entering directory /home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/dec make[1]: Nothing to be done for all . make[1]: Leaving directory /home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/dec make[1]: Entering directory /home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/epa make[1]: Nothing to be done for all . make[1]: Leaving directory /home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/epa make[1]: Entering directory /home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/nlanr make[1]: Nothing to be done for all . make[1]: Leaving directory /home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/nlanr make[1]: Entering directory /home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/ucb make[1]: Nothing to be done for all . make[1]: Leaving directory /home/ubuntu/Downloads/ns-allinone-2.35/ns-2.35/indep-utils/webtrace-conv/ucb This means there is not fatal errors occurred. Then you can think your MPTCP installed successfully!","title":"Add MPTCP module into the NS2"},{"location":"tech/Network Simulator 2 Installation Guide for Ubuntu/#and-we-can-run-a-mptcp-sample-script-file-to-valide-this-installation","text":"This project contained a test tcl script file mptcp-sample.tcl , you can run with ns command as follow: 1 ns mptcp-sample.tcl After run this script as above, there will be a xgraph plot pop out, that demonstrate the addition of MPTCP is successful.","title":"And we can run a mptcp sample script file to valide this installation."},{"location":"tech/Network Simulator 2 Installation Guide for Ubuntu/#configuration-of-eclipse-debug-environment","text":"Firstly, if you want debug ns2, you should make it support debug. Change directory into: /ns-allinone-2.35/ns-2.35/ ,and using vim open the Makefile , change the 56 line from 1 CCOPT = -Wall -Wno-write-strings to 1 CCOPT = -g -Wall -Wno-write-strings save and exit the Makefile, then run: 1 sudo make to recompile the ns2. Now the ns2 can support debug. Then, you should Download the Eclipse IDE for C/C++ Developers on the Web Site: http://www.eclipse.org/downloads/ Because eclipse don't need to install, after we decompress the tar.gz file, we can use is directly under it's directory. But if we want use it anywhere in our ubuntu file system, we should add the eclipse binary path to the environment variable PATH to tell our system where to locate elipse and startup it. Use command decompress *.tar.gz file: 1 tar zxvf eclipse-cpp-mars-2-linux-gtk-x86_64.tar.gz Then there will be a directory named : eclipse under current directory, we add one line in the ~/.bashrc file as we done early: 1 export PATH=$PATH:/home/ubuntu/Downloads/eclipse and use: source ~/.bashrc to make the change take effect.","title":"Configuration of Eclipse Debug Environment"},{"location":"tech/Network Simulator 2 Installation Guide for Ubuntu/#ok-you-can-run-eclipse-anywhere-in-your-file-system","text":"If you run eclipse in bash, you will find that, there is a problem said that eclipse need the java run environment to startup, because this software is developed by java. we should do more thing to make it work: You can download the JRE from website: http://www.oracle.com/technetwork/java/javase/downloads/index-jsp-138363.html Make sure download the correct edition JRE corresponding to your system. Linux 64 Edition for my condition. use command: tar zxvf jre-8u91-linux-x64.tar.gz decompress the file and move the decompressed directory under directory: eclipse/ , and rename it to **jre** , now you can start eclipse without error about JRE. From there, we start configure the debug environment of ns2 with Eclipse Because there are so many issues should been care, and I recommend you to learn from this blog: http://blog.sina.com.cn/s/blog_5d2054d90100za8e.html , there are detail description, but images can also demostrate the operation about eclipse. Enjoy It!","title":"Ok, you can run eclipse anywhere in your file system."},{"location":"tech/Network Simulator 2 Installation Guide for Ubuntu/#the-process-is-on-ubuntu-1404-simple-record-the-hack-process-mostly-same-as-ubuntu-1604","text":"You should first update ubuntu to get the latest software with command : 1 2 3 4 sudo apt-get update sudo apt-get upgrade sudo apt-get dist-upgrade sudo apt-get install g++ After install Ubuntu14.04, I downloaded the ns-allinone2.35 from it's offical website and use the tar zxvf ns-allinone2.35.tar.gz decompress the file. Then I use the vim to edit the file ns-allinone2.35/ns-2.35/linkstate/ls.h , change the line 137 , added a this pointer. Use the command: sudo ./install to compile the ns2, but there are some error, there are hints say that there is no X11.h header file. If you upgrade you ubuntu firstly, you may not encount this error. But who know it. So, I should install relate program with command: 1 2 3 sudo apt-get install libx11-dev sudo apt-get install libxkbcommon-x11-deud sudo apt-get install libghc-x11-dev After apply the patch file mptcp.patch-for-ns2.35-20130810 under /ns-allinone-2.35/ns-2.35/ , then use command: sudo ./configure --with-tcl-ver=8.5 to configure the project, after that, use command: sudo make the make the project, then change directory to the parent directory of ns-2.35 and run the command: sudo ./install to complete! Written By Joker, 2016-05-07, copy left","title":"The process is on Ubuntu 14.04 (simple record the hack process, mostly same as Ubuntu 16.04)"},{"location":"tech/Nmap Basics/","text":"Nmap Basics \u4f7f\u7528nmap\u6709\u4e00\u6bb5\u65f6\u95f4\u4e86\uff0c\u4e3b\u8981\u662f\u5728\u5b66\u4e60\u6811\u8393\u6d3e\u7684\u8fc7\u7a0b\u4e2d\u63a5\u89e6\u7684\uff0c\u53d1\u73b0\u8fd9\u4e2a\u5de5\u5177\u5f02\u5e38\u5f3a\u5927\uff0c\u662f\u9ed1\u5ba2\u5fc5\u5907\u7684\u5de5\u5177\u8f6f\u4ef6\uff0c\u4e0d\u8fc7\uff0c\u4f5c\u4e3a\u4e00\u822c\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u7684\u6211\uff0c\u4e5f\u60f3\u5b66\u4e60\u4e00\u4e9b\u57fa\u672c\u7684\u64cd\u4f5c\uff0c\u4ee5\u5907\u4e0d\u65f6\u4e4b\u9700\u3002 \u4e0b\u9762\u8bb0\u5f55\u4e00\u4e9b\u5173\u4e8enamp\u7684\u5e38\u89c1\u7528\u6cd5\uff1a \u67e5\u8be2\u672c\u673aip: 1 2 3 4 5 6 7 8 9 $ ifconfig en0 en0: flags = 8863 UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST mtu 1500 options = 10b RXCSUM,TXCSUM,VLAN_HWTAGGING,AV ether 98 :5a:eb:ce:ff:c5 inet6 fe80::10:d16a:4c30:3acd%en0 prefixlen 64 secured scopeid 0x4 inet 192 .168.70.83 netmask 0xffffff00 broadcast 192 .168.70.255 nd6 options = 201 PERFORMNUD,DAD media: autoselect ( 1000baseT full-duplex ) status: active \u90a3\u4e48\u5c31\u4f7f\u7528 192.168.70.83 / 192.168.70.83/24 \u8fd9\u4e2a\u7f51\u7edc\u5730\u5740\u8fdb\u884c\u672c\u673a/\u672c\u5730\u7f51\u7edc\u626b\u63cf 1. \u83b7\u53d6\u8fdc\u7a0b\u4e3b\u673a\u7684\u7cfb\u7edf\u7c7b\u578b\u548c\u5f00\u653e\u7aef\u53e3 sudo nmap -sS -P0 -sV -O 192.168.70.83 -sS \u4f7f\u7528 TCP SYN \u6280\u672f\u626b\u63cf s(scan) S(SYN) -P0 \u5f3a\u5236 Nmap \u626b\u63cf\u4efb\u4f55\u5730\u5740\uff0c\u4e0d\u8bba\u5b83\u662f\u5426\u54cd\u5e94\u4e86 ping -sV \u63a2\u6d4b\u5f00\u653e\u7aef\u53e3\u63d0\u4f9b\u7684\u670d\u52a1\u548c\u7248\u672c -O \u4fa6\u6d4b\u64cd\u4f5c\u7cfb\u7edf Output 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 Starting Nmap 7.12 ( https : // nmap . org ) at 2016 - 12 - 23 18 : 51 CST Nmap scan report for bogon ( 192.168.70.83 ) Host is up ( 0.000096 s latency ). Not shown : 997 closed ports PORT STATE SERVICE VERSION 53 / tcp open domain? 80 / tcp open http Apache httpd 2.4.23 (( Unix )) 8888 / tcp open sun - answerbook? 1 service unrecognized despite returning data . If you know the service / version , please submit the following fingerprint at https : // nmap . org / cgi - bin / submit . cgi?new - service : SF - Port8888 - TCP : V = 7.12 %I=7%D=12/23%Time=585D01AC%P=x86_64-apple-darwin15.4 SF :. 0 %r(GetRequest,3AF, HTTP/1\\.0\\x20503\\x20Error\\r\\nServer:\\x20Charles\\r\\ SF :nCache - Control :\\x20must - revalidate , no - cache , no - store\\r\\nContent - Type :\\x SF : 20 text / html ; charset = ISO - 8859 - 1 \\r\\nContent - Length :\\x20764\\r\\nProxy - Conne SF : ction : \\x20Close\\r\\n\\r\\n html \\n head \\n\\x20\\x20\\x20\\x20 title Charles \\x SF : 20 Error \\x20Report /title \\n\\x20\\x20\\x20\\x20 style\\x20type=\\ text / css\\ SF :\\nbody\\x20 { \\n\\x20\\x20\\x20\\x20font - family : \\x20Arial , Helvetica , Sans - serif SF : ; \\n\\x20\\x20\\x20\\x20font - size : \\x2012px ; \\n\\x20\\x20\\x20\\x20color:\\x20# 3333 SF : 33 ; \\n\\x20\\x20\\x20\\x20background - color : \\x20#ffffff ; \\n } \\n\\nh1\\x20 { \\n\\x20\\ SF :x20\\x20\\x20font - size : \\x2024px ; \\n\\x20\\x20\\x20\\x20font - weight : \\x20bold ; \\n SF : } \\n\\nh2\\x20 { \\n\\x20\\x20\\x20\\x20font - size : \\x2018px ; \\n\\x20\\x20\\x20\\x20font SF :- weight : \\x20bold ; \\n } \\n\\x20\\x20\\x20\\x20 /style \\n /head \\n body \\n\\n h1 SF : Charles \\x20Error\\x20Report /h1 \\n h2 Failure /h2 \\n p Malformed \\x20requ SF :est\\x20URL\\x20 quot ; #x2F ; quot ; \\.\\x20Consider\\x20enabling\\x20Transpare SF :nt\\x20proxying\\. /p \\n p The \\x20actual\\x20exception\\x20reported\\x20was: SF : /p \\n pre \\ncom\\.xk72\\.proxy\\. ProxyException :\\x20Malformed\\x20request\\ SF :x20URL\\x20 quot ; #x2F ; quot ; \\.\\x20Consider\\x20enabling\\x20Transparent\\x SF : 20 proxying\\.\\n /pre \\n\\n p \\n i Charles \\x20Proxy , \\x20 a\\x20href=\\ http : SF ://www\\.charlesproxy\\.com/\\ http : // www\\.cha )%r(HTTPOptions,3AF, HTTP / 1 SF :\\. 0 \\x20503\\x20Error\\r\\nServer:\\x20Charles\\r\\nCache - Control :\\x20must - rev SF :alidate , no - cache , no - store\\r\\nContent - Type :\\x20text / html ; charset = ISO - 885 SF : 9 - 1 \\r\\nContent - Length :\\x20764\\r\\nProxy - Connection :\\x20Close\\r\\n\\r\\n htm SF :l \\n head \\n\\x20\\x20\\x20\\x20 title Charles \\x20Error\\x20Report /title \\n SF :\\x20\\x20\\x20\\x20 style\\x20type=\\ text / css\\ \\nbody\\x20 { \\n\\x20\\x20\\x20\\x SF : 20 font - family : \\x20Arial , Helvetica , Sans - serif ; \\n\\x20\\x20\\x20\\x20font - siz SF : e : \\x2012px ; \\n\\x20\\x20\\x20\\x20color:\\x20# 333333 ; \\n\\x20\\x20\\x20\\x20backgr SF :ound - color : \\x20#ffffff ; \\n } \\n\\nh1\\x20 { \\n\\x20\\x20\\x20\\x20font - size : \\x2024 SF :px ; \\n\\x20\\x20\\x20\\x20font - weight : \\x20bold ; \\n } \\n\\nh2\\x20 { \\n\\x20\\x20\\x20\\ SF :x20font - size : \\x2018px ; \\n\\x20\\x20\\x20\\x20font - weight : \\x20bold ; \\n } \\n\\x20\\ SF :x20\\x20\\x20 /style \\n /head \\n body \\n\\n h1 Charles \\x20Error\\x20Report SF :/h1 \\n h2 Failure /h2 \\n p Malformed \\x20request\\x20URL\\x20 quot ; #x2F ; SF :quot ; \\.\\x20Consider\\x20enabling\\x20Transparent\\x20proxying\\. /p \\n p Th SF :e\\x20actual\\x20exception\\x20reported\\x20was: /p \\n pre \\ncom\\.xk72\\.pro SF :xy\\. ProxyException :\\x20Malformed\\x20request\\x20URL\\x20 quot ; #x2F ; quot SF : ; \\.\\x20Consider\\x20enabling\\x20Transparent\\x20proxying\\.\\n /pre \\n\\n p SF :\\n i Charles \\x20Proxy , \\x20 a\\x20href=\\ http : // www\\.charlesproxy\\.com/\\ SF : http : // www\\.cha ); Device type : general purpose Running : Apple Mac OS X 10.10 . X | 10.11 . X OS CPE : cpe : / o : apple : mac_os_x: 10.10 cpe : / o : apple : mac_os_x: 10.11 OS details : Apple Mac OS X 10.10 ( Yosemite ) - 10.11 ( El Capitan ) ( Darwin 14.0.0 - 15.0.0 ) Network Distance : 0 hops OS and Service detection performed . Please report any incorrect results at https : // nmap . org / submit / . Nmap done : 1 IP address ( 1 host up ) scanned in 131.69 seconds 2. \u5217\u51fa\u5f00\u653e\u4e86\u6307\u5b9a\u7aef\u53e3\u7684\u4e3b\u673a\u5217\u8868 sudo nmap -sT -p 80 -oG - 192.168.70.83/24 | grep open -sT \u4f7f\u7528 Connect() \u6280\u672f\u626b\u63cf -p \u6307\u5b9a\u626b\u63cf\u7aef\u53e3\u53f7 -oG \u4ee5 Grepable \u683c\u5f0f\u5f0f\u8f93\u51fa\u626b\u63cf\u7ed3\u679c grep open \u8fc7\u6ee4\u626b\u63cf\u7ed3\u679c\uff0c\u8f93\u51fa\u6253\u5f00\u7684\u7aef\u53e3\u76f8\u5173\u7684\u4fe1\u606f Output 1 2 3 Host : 192.168 . 70.114 ( bogon ) Ports : 80 /open/tcp//http/// Host : 192.168 . 70.164 () Ports : 80 /open/tcp//http/// Host : 192.168 . 70.83 ( bogon ) Ports : 80 /open/tcp//http/// 3. \u5728\u7f51\u7edc\u4e2d\u5bfb\u627e\u6240\u6709\u5728\u7ebf\u4e3b\u673a sudo nmap -sP 192.168.70.83/24 -sP \u5bf9\u6307\u5b9a IP \u8303\u56f4\u5185\u7684\u6240\u6709\u5730\u5740\u8fdb\u884c ping \u626b\u63cf\uff0c\u5217\u51fa\u54cd\u5e94\u7684\u4e3b\u673a Output 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 Starting Nmap 7.12 ( https://nmap.org ) at 2016-12-23 19:10 CST Nmap scan report for bogon (192.168.70.1) Host is up (0.00016s latency). MAC Address: 00:13:72:3F:72:F1 (Dell) Nmap scan report for 192.168.70.29 Host is up (0.00037s latency). MAC Address: 08:62:66:8A:42:84 (Asustek Computer) Nmap scan report for bogon (192.168.70.30) Host is up (0.00038s latency). MAC Address: C8:60:00:5B:14:33 (Asustek Computer) Nmap scan report for 192.168.70.32 Host is up (0.00023s latency). MAC Address: 60:A4:4C:3E:53:71 (Asustek Computer) Nmap scan report for bogon (192.168.70.35) Host is up (0.00017s latency). MAC Address: 08:60:6E:EF:78:7B (Asustek Computer) Nmap scan report for 192.168.70.78 Host is up (0.00040s latency). MAC Address: 20:6A:8A:11:DF:C4 (Wistron InfoComm Manufacturing(Kunshan)Co.) Nmap scan report for bogon (192.168.70.86) Host is up (0.00039s latency). MAC Address: FC:AA:14:7F:82:C7 (Giga-byte Technology) Nmap scan report for 192.168.70.108 Host is up (0.00038s latency). MAC Address: E0:CB:4E:A4:AA:AA (Asustek Computer) Nmap scan report for bogon (192.168.70.114) Host is up (0.0018s latency). MAC Address: 38:C9:86:3A:11:B8 (Apple) Nmap scan report for 192.168.70.121 Host is up (0.00028s latency). MAC Address: 74:D0:2B:9C:CB:B0 (Asustek Computer) Nmap scan report for bogon (192.168.70.146) Host is up (0.00024s latency). MAC Address: E0:CB:4E:E3:15:E7 (Asustek Computer) Nmap scan report for 192.168.70.250 Host is up (0.00027s latency). MAC Address: 14:DA:E9:91:A8:B5 (Asustek Computer) Nmap scan report for bogon (192.168.70.83) Host is up. Nmap done: 256 IP addresses (13 hosts up) scanned in 1.19 seconds 4. Ping\u6307\u5b9a\u8303\u56f4\u5185\u7684IP\u5730\u5740 sudo nmap -sP 192.168.70.100-200 -sP \u5bf9\u6307\u5b9a IP \u8303\u56f4\u5185\u7684\u6240\u6709\u5730\u5740\u8fdb\u884c ping \u626b\u63cf\uff0c\u5217\u51fa\u54cd\u5e94\u7684\u4e3b\u673a Output 1 2 3 4 5 6 7 8 9 10 11 12 13 14 Starting Nmap 7.12 ( https://nmap.org ) at 2016-12-23 19:13 CST Nmap scan report for bogon (192.168.70.108) Host is up (0.00041s latency). MAC Address: E0:CB:4E:A4:AA:AA (Asustek Computer) Nmap scan report for 192.168.70.114 Host is up (0.00057s latency). MAC Address: 38:C9:86:3A:11:B8 (Apple) Nmap scan report for bogon (192.168.70.121) Host is up (0.00021s latency). MAC Address: 74:D0:2B:9C:CB:B0 (Asustek Computer) Nmap scan report for 192.168.70.146 Host is up (0.00029s latency). MAC Address: E0:CB:4E:E3:15:E7 (Asustek Computer) Nmap done: 101 IP addresses (4 hosts up) scanned in 1.60 seconds 5. \u5728\u67d0\u6bb5\u5b50\u7f51\u4e0a\u67e5\u627e\u672a\u5360\u7528IP sudo nmap -T4 -sP 192.168.70.83/24 egrep 00:00:00:00:00:00 /proc/net/arp -T 0-5 \u8bbe\u5b9a\u5b9a\u65f6\u6a21\u677f\uff0c\u8d8a\u5927\u8d8a\u5feb -sP \u5bf9\u6307\u5b9a IP \u8303\u56f4\u5185\u7684\u6240\u6709\u5730\u5740\u8fdb\u884c ping \u626b\u63cf\uff0c\u5217\u51fa\u54cd\u5e94\u7684\u4e3b\u673a egrep 00:00:00:00:00:00 /proc/net/arp \u4f7f\u7528\u5728ARP\u53cd\u5411\u89e3\u6790\uff0c\u67e5\u627e\u6ca1\u6709MAC\u5730\u5740\u5bf9\u5e94\u7684IP Output 1 6. \u5728\u5c40\u57df\u7f51\u4e0a\u626b\u63cfConficker\u8815\u866b\u75c5\u6bd2 nmap -PN -T4 -p139,455 -n -v --script=smb-check-vulns --script-args safe = 1 192.168.0.1-254 7. \u626b\u63cf\u7f51\u7edc\u4e0a\u7684\u6076\u610f\u63a5\u5165\u70b9 nmap -A -p1-85,113,443,8080-8100 -T4 --min-hostgroup 50 --max-rtt-timeout 2000 --initial-rtt-timeout 300 --max-retries 3 --host-timeout 20m --max-scan-delay 1000 -oA wapscan 10.0.0.0/8 8. \u4f7f\u7528\u8bf1\u9975\u626b\u63cf\u65b9\u6cd5\u6765\u626b\u63cf\u4e3b\u673a\u7aef\u53e3 sudo nmap -sS 192.168.0.10 -D 192.168.0.2 9. \u4e3a\u4e00\u4e2a\u5b50\u7f51\u5217\u51fa\u53cd\u5411 DNS \u8bb0\u5f55 nmap -R -sL 209.85.229.99/27 | awk {if($3== not )print ( $2 ) no PTR ;else print$3 is $2} | grep ( 10. \u663e\u793a\u7f51\u7edc\u4e0a\u5171\u6709\u591a\u5c11\u53f0 Linux \u53ca Win \u8bbe\u5907? sudo nmap -F -O 192 . 168 . 0 . 1-255 | grep Running: / tmp / os ; echo $(cat /tmp/os | grep Linux | wc -l) Linux device(s) ; echo $(cat /tmp/os | grep Windows | wc -l) Window(s) device link \u4e0b\u9762\u5217\u4e00\u4e0b nmap \u7684\u5e2e\u52a9\u4fe1\u606f 1 2 3 4 5 Nmap version 7.12 ( https://nmap.org ) Platform: x86_64-apple-darwin15.4.0 Compiled with: liblua-5.2.4 openssl-1.0.2g nmap-libpcre-7.6 libpcap-1.7.4 nmap-libdnet-1.12 ipv6 Compiled without: Available nsock engines: kqueue poll select nmap --help 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 Nmap 7.12 ( https : //nmap.org ) Usage : nmap [ Scan Type ( s )] [ Options ] { target specification } TARGET SPECIFICATION : Can pass hostnames , IP addresses , networks , etc . Ex : scanme . nmap . org , microsoft . com / 24 , 192.168.0.1 ; 10.0.0 - 255.1 - 254 - iL inputfilename : Input from list of hosts / networks - iR num hosts : Choose random targets -- exclude host1 [, host2 ][, host3 ],... : Exclude hosts / networks -- excludefile exclude_file : Exclude list from file HOST DISCOVERY : - sL : List Scan - simply list targets to scan - sn : Ping Scan - disable port scan - Pn : Treat all hosts as online -- skip host discovery - PS / PA / PU / PY [ portlist ] : TCP SYN / ACK , UDP or SCTP discovery to given ports - PE / PP / PM : ICMP echo , timestamp , and netmask request discovery probes - PO [ protocol list ] : IP Protocol Ping - n /- R : Never do DNS resolution / Always resolve [ default : sometimes ] -- dns - servers serv1 [, serv2 ],... : Specify custom DNS servers -- system - dns : Use OS s DNS resolver -- traceroute : Trace hop path to each host SCAN TECHNIQUES : - sS / sT / sA / sW / sM : TCP SYN / Connect () / ACK / Window / Maimon scans - sU : UDP Scan - sN / sF / sX : TCP Null , FIN , and Xmas scans -- scanflags flags : Customize TCP scan flags - sI zombie host [ : probeport ] : Idle scan - sY / sZ : SCTP INIT / COOKIE - ECHO scans - sO : IP protocol scan - b FTP relay host : FTP bounce scan PORT SPECIFICATION AND SCAN ORDER : - p port ranges : Only scan specified ports Ex : - p22 ; - p1 - 65535 ; - p U : 53 , 111 , 137 , T : 21 - 25 , 80 , 139 , 8080 , S : 9 -- exclude - ports port ranges : Exclude the specified ports from scanning - F : Fast mode - Scan fewer ports than the default scan - r : Scan ports consecutively - don t randomize -- top - ports number : Scan number most common ports -- port - ratio ratio : Scan ports more common than ratio SERVICE / VERSION DETECTION : - sV : Probe open ports to determine service / version info -- version - intensity level : Set from 0 ( light ) to 9 ( try all probes ) -- version - light : Limit to most likely probes ( intensity 2 ) -- version - all : Try every single probe ( intensity 9 ) -- version - trace : Show detailed version scan activity ( for debugging ) SCRIPT SCAN : - sC : equivalent to -- script = default -- script = Lua scripts : Lua scripts is a comma separated list of directories , script - files or script - categories -- script - args = n1 = v1 ,[ n2 = v2 ,...] : provide arguments to scripts -- script - args - file = filename : provide NSE script args in a file -- script - trace : Show all data sent and received -- script - updatedb : Update the script database . -- script - help = Lua scripts : Show help about scripts . Lua scripts is a comma - separated list of script - files or script - categories . OS DETECTION : - O : Enable OS detection -- osscan - limit : Limit OS detection to promising targets -- osscan - guess : Guess OS more aggressively TIMING AND PERFORMANCE : Options which take time are in seconds , or append ms ( milliseconds ), s ( seconds ), m ( minutes ), or h ( hours ) to the value ( e . g . 30 m ). - T 0 - 5 : Set timing template ( higher is faster ) -- min - hostgroup / max - hostgroup size : Parallel host scan group sizes -- min - parallelism / max - parallelism numprobes : Probe parallelization -- min - rtt - timeout / max - rtt - timeout / initial - rtt - timeout time : Specifies probe round trip time . -- max - retries tries : Caps number of port scan probe retransmissions . -- host - timeout time : Give up on target after this long -- scan - delay /-- max - scan - delay time : Adjust delay between probes -- min - rate number : Send packets no slower than number per second -- max - rate number : Send packets no faster than number per second FIREWALL / IDS EVASION AND SPOOFING : - f ; -- mtu val : fragment packets ( optionally w / given MTU ) - D decoy1 , decoy2 [, ME ],... : Cloak a scan with decoys - S IP_Address : Spoof source address - e iface : Use specified interface - g /-- source - port portnum : Use given port number -- proxies url1 ,[ url2 ],... : Relay connections through HTTP / SOCKS4 proxies -- data hex string : Append a custom payload to sent packets -- data - string string : Append a custom ASCII string to sent packets -- data - length num : Append random data to sent packets -- ip - options options : Send packets with specified ip options -- ttl val : Set IP time - to - live field -- spoof - mac mac address / prefix / vendor name : Spoof your MAC address -- badsum : Send packets with a bogus TCP / UDP / SCTP checksum OUTPUT : - oN /- oX /- oS /- oG file : Output scan in normal , XML , s | rIpt kIddi3 , and Grepable format , respectively , to the given filename . - oA basename : Output in the three major formats at once - v : Increase verbosity level ( use - vv or more for greater effect ) - d : Increase debugging level ( use - dd or more for greater effect ) -- reason : Display the reason a port is in a particular state -- open : Only show open ( or possibly open ) ports -- packet - trace : Show all packets sent and received -- iflist : Print host interfaces and routes ( for debugging ) -- append - output : Append to rather than clobber specified output files -- resume filename : Resume an aborted scan -- stylesheet path / URL : XSL stylesheet to transform XML output to HTML -- webxml : Reference stylesheet from Nmap . Org for more portable XML -- no - stylesheet : Prevent associating of XSL stylesheet w / XML output MISC : - 6 : Enable IPv6 scanning - A : Enable OS detection , version detection , script scanning , and traceroute -- datadir dirname : Specify custom Nmap data file location -- send - eth /-- send - ip : Send using raw ethernet frames or IP packets -- privileged : Assume that the user is fully privileged -- unprivileged : Assume the user lacks raw socket privileges - V : Print version number - h : Print this help summary page . EXAMPLES : nmap - v - A scanme . nmap . org nmap - v - sn 192.168.0.0 / 16 10.0.0.0 / 8 nmap - v - iR 10000 - Pn - p 80 SEE THE MAN PAGE ( https : //nmap.org/book/man.html) FOR MORE OPTIONS AND EXAMPLES","title":"[Nmap](https://nmap.org) Basics"},{"location":"tech/Nmap Basics/#nmap-basics","text":"\u4f7f\u7528nmap\u6709\u4e00\u6bb5\u65f6\u95f4\u4e86\uff0c\u4e3b\u8981\u662f\u5728\u5b66\u4e60\u6811\u8393\u6d3e\u7684\u8fc7\u7a0b\u4e2d\u63a5\u89e6\u7684\uff0c\u53d1\u73b0\u8fd9\u4e2a\u5de5\u5177\u5f02\u5e38\u5f3a\u5927\uff0c\u662f\u9ed1\u5ba2\u5fc5\u5907\u7684\u5de5\u5177\u8f6f\u4ef6\uff0c\u4e0d\u8fc7\uff0c\u4f5c\u4e3a\u4e00\u822c\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u7684\u6211\uff0c\u4e5f\u60f3\u5b66\u4e60\u4e00\u4e9b\u57fa\u672c\u7684\u64cd\u4f5c\uff0c\u4ee5\u5907\u4e0d\u65f6\u4e4b\u9700\u3002","title":"Nmap Basics"},{"location":"tech/Nmap Basics/#namp","text":"\u67e5\u8be2\u672c\u673aip: 1 2 3 4 5 6 7 8 9 $ ifconfig en0 en0: flags = 8863 UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST mtu 1500 options = 10b RXCSUM,TXCSUM,VLAN_HWTAGGING,AV ether 98 :5a:eb:ce:ff:c5 inet6 fe80::10:d16a:4c30:3acd%en0 prefixlen 64 secured scopeid 0x4 inet 192 .168.70.83 netmask 0xffffff00 broadcast 192 .168.70.255 nd6 options = 201 PERFORMNUD,DAD media: autoselect ( 1000baseT full-duplex ) status: active \u90a3\u4e48\u5c31\u4f7f\u7528 192.168.70.83 / 192.168.70.83/24 \u8fd9\u4e2a\u7f51\u7edc\u5730\u5740\u8fdb\u884c\u672c\u673a/\u672c\u5730\u7f51\u7edc\u626b\u63cf","title":"\u4e0b\u9762\u8bb0\u5f55\u4e00\u4e9b\u5173\u4e8enamp\u7684\u5e38\u89c1\u7528\u6cd5\uff1a"},{"location":"tech/Nmap Basics/#1","text":"sudo nmap -sS -P0 -sV -O 192.168.70.83 -sS \u4f7f\u7528 TCP SYN \u6280\u672f\u626b\u63cf s(scan) S(SYN) -P0 \u5f3a\u5236 Nmap \u626b\u63cf\u4efb\u4f55\u5730\u5740\uff0c\u4e0d\u8bba\u5b83\u662f\u5426\u54cd\u5e94\u4e86 ping -sV \u63a2\u6d4b\u5f00\u653e\u7aef\u53e3\u63d0\u4f9b\u7684\u670d\u52a1\u548c\u7248\u672c -O \u4fa6\u6d4b\u64cd\u4f5c\u7cfb\u7edf Output 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 Starting Nmap 7.12 ( https : // nmap . org ) at 2016 - 12 - 23 18 : 51 CST Nmap scan report for bogon ( 192.168.70.83 ) Host is up ( 0.000096 s latency ). Not shown : 997 closed ports PORT STATE SERVICE VERSION 53 / tcp open domain? 80 / tcp open http Apache httpd 2.4.23 (( Unix )) 8888 / tcp open sun - answerbook? 1 service unrecognized despite returning data . If you know the service / version , please submit the following fingerprint at https : // nmap . org / cgi - bin / submit . cgi?new - service : SF - Port8888 - TCP : V = 7.12 %I=7%D=12/23%Time=585D01AC%P=x86_64-apple-darwin15.4 SF :. 0 %r(GetRequest,3AF, HTTP/1\\.0\\x20503\\x20Error\\r\\nServer:\\x20Charles\\r\\ SF :nCache - Control :\\x20must - revalidate , no - cache , no - store\\r\\nContent - Type :\\x SF : 20 text / html ; charset = ISO - 8859 - 1 \\r\\nContent - Length :\\x20764\\r\\nProxy - Conne SF : ction : \\x20Close\\r\\n\\r\\n html \\n head \\n\\x20\\x20\\x20\\x20 title Charles \\x SF : 20 Error \\x20Report /title \\n\\x20\\x20\\x20\\x20 style\\x20type=\\ text / css\\ SF :\\nbody\\x20 { \\n\\x20\\x20\\x20\\x20font - family : \\x20Arial , Helvetica , Sans - serif SF : ; \\n\\x20\\x20\\x20\\x20font - size : \\x2012px ; \\n\\x20\\x20\\x20\\x20color:\\x20# 3333 SF : 33 ; \\n\\x20\\x20\\x20\\x20background - color : \\x20#ffffff ; \\n } \\n\\nh1\\x20 { \\n\\x20\\ SF :x20\\x20\\x20font - size : \\x2024px ; \\n\\x20\\x20\\x20\\x20font - weight : \\x20bold ; \\n SF : } \\n\\nh2\\x20 { \\n\\x20\\x20\\x20\\x20font - size : \\x2018px ; \\n\\x20\\x20\\x20\\x20font SF :- weight : \\x20bold ; \\n } \\n\\x20\\x20\\x20\\x20 /style \\n /head \\n body \\n\\n h1 SF : Charles \\x20Error\\x20Report /h1 \\n h2 Failure /h2 \\n p Malformed \\x20requ SF :est\\x20URL\\x20 quot ; #x2F ; quot ; \\.\\x20Consider\\x20enabling\\x20Transpare SF :nt\\x20proxying\\. /p \\n p The \\x20actual\\x20exception\\x20reported\\x20was: SF : /p \\n pre \\ncom\\.xk72\\.proxy\\. ProxyException :\\x20Malformed\\x20request\\ SF :x20URL\\x20 quot ; #x2F ; quot ; \\.\\x20Consider\\x20enabling\\x20Transparent\\x SF : 20 proxying\\.\\n /pre \\n\\n p \\n i Charles \\x20Proxy , \\x20 a\\x20href=\\ http : SF ://www\\.charlesproxy\\.com/\\ http : // www\\.cha )%r(HTTPOptions,3AF, HTTP / 1 SF :\\. 0 \\x20503\\x20Error\\r\\nServer:\\x20Charles\\r\\nCache - Control :\\x20must - rev SF :alidate , no - cache , no - store\\r\\nContent - Type :\\x20text / html ; charset = ISO - 885 SF : 9 - 1 \\r\\nContent - Length :\\x20764\\r\\nProxy - Connection :\\x20Close\\r\\n\\r\\n htm SF :l \\n head \\n\\x20\\x20\\x20\\x20 title Charles \\x20Error\\x20Report /title \\n SF :\\x20\\x20\\x20\\x20 style\\x20type=\\ text / css\\ \\nbody\\x20 { \\n\\x20\\x20\\x20\\x SF : 20 font - family : \\x20Arial , Helvetica , Sans - serif ; \\n\\x20\\x20\\x20\\x20font - siz SF : e : \\x2012px ; \\n\\x20\\x20\\x20\\x20color:\\x20# 333333 ; \\n\\x20\\x20\\x20\\x20backgr SF :ound - color : \\x20#ffffff ; \\n } \\n\\nh1\\x20 { \\n\\x20\\x20\\x20\\x20font - size : \\x2024 SF :px ; \\n\\x20\\x20\\x20\\x20font - weight : \\x20bold ; \\n } \\n\\nh2\\x20 { \\n\\x20\\x20\\x20\\ SF :x20font - size : \\x2018px ; \\n\\x20\\x20\\x20\\x20font - weight : \\x20bold ; \\n } \\n\\x20\\ SF :x20\\x20\\x20 /style \\n /head \\n body \\n\\n h1 Charles \\x20Error\\x20Report SF :/h1 \\n h2 Failure /h2 \\n p Malformed \\x20request\\x20URL\\x20 quot ; #x2F ; SF :quot ; \\.\\x20Consider\\x20enabling\\x20Transparent\\x20proxying\\. /p \\n p Th SF :e\\x20actual\\x20exception\\x20reported\\x20was: /p \\n pre \\ncom\\.xk72\\.pro SF :xy\\. ProxyException :\\x20Malformed\\x20request\\x20URL\\x20 quot ; #x2F ; quot SF : ; \\.\\x20Consider\\x20enabling\\x20Transparent\\x20proxying\\.\\n /pre \\n\\n p SF :\\n i Charles \\x20Proxy , \\x20 a\\x20href=\\ http : // www\\.charlesproxy\\.com/\\ SF : http : // www\\.cha ); Device type : general purpose Running : Apple Mac OS X 10.10 . X | 10.11 . X OS CPE : cpe : / o : apple : mac_os_x: 10.10 cpe : / o : apple : mac_os_x: 10.11 OS details : Apple Mac OS X 10.10 ( Yosemite ) - 10.11 ( El Capitan ) ( Darwin 14.0.0 - 15.0.0 ) Network Distance : 0 hops OS and Service detection performed . Please report any incorrect results at https : // nmap . org / submit / . Nmap done : 1 IP address ( 1 host up ) scanned in 131.69 seconds","title":"1. \u83b7\u53d6\u8fdc\u7a0b\u4e3b\u673a\u7684\u7cfb\u7edf\u7c7b\u578b\u548c\u5f00\u653e\u7aef\u53e3"},{"location":"tech/Nmap Basics/#2","text":"sudo nmap -sT -p 80 -oG - 192.168.70.83/24 | grep open -sT \u4f7f\u7528 Connect() \u6280\u672f\u626b\u63cf -p \u6307\u5b9a\u626b\u63cf\u7aef\u53e3\u53f7 -oG \u4ee5 Grepable \u683c\u5f0f\u5f0f\u8f93\u51fa\u626b\u63cf\u7ed3\u679c grep open \u8fc7\u6ee4\u626b\u63cf\u7ed3\u679c\uff0c\u8f93\u51fa\u6253\u5f00\u7684\u7aef\u53e3\u76f8\u5173\u7684\u4fe1\u606f Output 1 2 3 Host : 192.168 . 70.114 ( bogon ) Ports : 80 /open/tcp//http/// Host : 192.168 . 70.164 () Ports : 80 /open/tcp//http/// Host : 192.168 . 70.83 ( bogon ) Ports : 80 /open/tcp//http///","title":"2. \u5217\u51fa\u5f00\u653e\u4e86\u6307\u5b9a\u7aef\u53e3\u7684\u4e3b\u673a\u5217\u8868"},{"location":"tech/Nmap Basics/#3","text":"sudo nmap -sP 192.168.70.83/24 -sP \u5bf9\u6307\u5b9a IP \u8303\u56f4\u5185\u7684\u6240\u6709\u5730\u5740\u8fdb\u884c ping \u626b\u63cf\uff0c\u5217\u51fa\u54cd\u5e94\u7684\u4e3b\u673a Output 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 Starting Nmap 7.12 ( https://nmap.org ) at 2016-12-23 19:10 CST Nmap scan report for bogon (192.168.70.1) Host is up (0.00016s latency). MAC Address: 00:13:72:3F:72:F1 (Dell) Nmap scan report for 192.168.70.29 Host is up (0.00037s latency). MAC Address: 08:62:66:8A:42:84 (Asustek Computer) Nmap scan report for bogon (192.168.70.30) Host is up (0.00038s latency). MAC Address: C8:60:00:5B:14:33 (Asustek Computer) Nmap scan report for 192.168.70.32 Host is up (0.00023s latency). MAC Address: 60:A4:4C:3E:53:71 (Asustek Computer) Nmap scan report for bogon (192.168.70.35) Host is up (0.00017s latency). MAC Address: 08:60:6E:EF:78:7B (Asustek Computer) Nmap scan report for 192.168.70.78 Host is up (0.00040s latency). MAC Address: 20:6A:8A:11:DF:C4 (Wistron InfoComm Manufacturing(Kunshan)Co.) Nmap scan report for bogon (192.168.70.86) Host is up (0.00039s latency). MAC Address: FC:AA:14:7F:82:C7 (Giga-byte Technology) Nmap scan report for 192.168.70.108 Host is up (0.00038s latency). MAC Address: E0:CB:4E:A4:AA:AA (Asustek Computer) Nmap scan report for bogon (192.168.70.114) Host is up (0.0018s latency). MAC Address: 38:C9:86:3A:11:B8 (Apple) Nmap scan report for 192.168.70.121 Host is up (0.00028s latency). MAC Address: 74:D0:2B:9C:CB:B0 (Asustek Computer) Nmap scan report for bogon (192.168.70.146) Host is up (0.00024s latency). MAC Address: E0:CB:4E:E3:15:E7 (Asustek Computer) Nmap scan report for 192.168.70.250 Host is up (0.00027s latency). MAC Address: 14:DA:E9:91:A8:B5 (Asustek Computer) Nmap scan report for bogon (192.168.70.83) Host is up. Nmap done: 256 IP addresses (13 hosts up) scanned in 1.19 seconds","title":"3. \u5728\u7f51\u7edc\u4e2d\u5bfb\u627e\u6240\u6709\u5728\u7ebf\u4e3b\u673a"},{"location":"tech/Nmap Basics/#4-pingip","text":"sudo nmap -sP 192.168.70.100-200 -sP \u5bf9\u6307\u5b9a IP \u8303\u56f4\u5185\u7684\u6240\u6709\u5730\u5740\u8fdb\u884c ping \u626b\u63cf\uff0c\u5217\u51fa\u54cd\u5e94\u7684\u4e3b\u673a Output 1 2 3 4 5 6 7 8 9 10 11 12 13 14 Starting Nmap 7.12 ( https://nmap.org ) at 2016-12-23 19:13 CST Nmap scan report for bogon (192.168.70.108) Host is up (0.00041s latency). MAC Address: E0:CB:4E:A4:AA:AA (Asustek Computer) Nmap scan report for 192.168.70.114 Host is up (0.00057s latency). MAC Address: 38:C9:86:3A:11:B8 (Apple) Nmap scan report for bogon (192.168.70.121) Host is up (0.00021s latency). MAC Address: 74:D0:2B:9C:CB:B0 (Asustek Computer) Nmap scan report for 192.168.70.146 Host is up (0.00029s latency). MAC Address: E0:CB:4E:E3:15:E7 (Asustek Computer) Nmap done: 101 IP addresses (4 hosts up) scanned in 1.60 seconds","title":"4. Ping\u6307\u5b9a\u8303\u56f4\u5185\u7684IP\u5730\u5740"},{"location":"tech/Nmap Basics/#5-ip","text":"sudo nmap -T4 -sP 192.168.70.83/24 egrep 00:00:00:00:00:00 /proc/net/arp -T 0-5 \u8bbe\u5b9a\u5b9a\u65f6\u6a21\u677f\uff0c\u8d8a\u5927\u8d8a\u5feb -sP \u5bf9\u6307\u5b9a IP \u8303\u56f4\u5185\u7684\u6240\u6709\u5730\u5740\u8fdb\u884c ping \u626b\u63cf\uff0c\u5217\u51fa\u54cd\u5e94\u7684\u4e3b\u673a egrep 00:00:00:00:00:00 /proc/net/arp \u4f7f\u7528\u5728ARP\u53cd\u5411\u89e3\u6790\uff0c\u67e5\u627e\u6ca1\u6709MAC\u5730\u5740\u5bf9\u5e94\u7684IP Output 1","title":"5. \u5728\u67d0\u6bb5\u5b50\u7f51\u4e0a\u67e5\u627e\u672a\u5360\u7528IP"},{"location":"tech/Nmap Basics/#6-conficker","text":"nmap -PN -T4 -p139,455 -n -v --script=smb-check-vulns --script-args safe = 1 192.168.0.1-254","title":"6. \u5728\u5c40\u57df\u7f51\u4e0a\u626b\u63cfConficker\u8815\u866b\u75c5\u6bd2"},{"location":"tech/Nmap Basics/#7","text":"nmap -A -p1-85,113,443,8080-8100 -T4 --min-hostgroup 50 --max-rtt-timeout 2000 --initial-rtt-timeout 300 --max-retries 3 --host-timeout 20m --max-scan-delay 1000 -oA wapscan 10.0.0.0/8","title":"7. \u626b\u63cf\u7f51\u7edc\u4e0a\u7684\u6076\u610f\u63a5\u5165\u70b9"},{"location":"tech/Nmap Basics/#8","text":"sudo nmap -sS 192.168.0.10 -D 192.168.0.2","title":"8. \u4f7f\u7528\u8bf1\u9975\u626b\u63cf\u65b9\u6cd5\u6765\u626b\u63cf\u4e3b\u673a\u7aef\u53e3"},{"location":"tech/Nmap Basics/#9-dns","text":"nmap -R -sL 209.85.229.99/27 | awk {if($3== not )print ( $2 ) no PTR ;else print$3 is $2} | grep (","title":"9. \u4e3a\u4e00\u4e2a\u5b50\u7f51\u5217\u51fa\u53cd\u5411 DNS \u8bb0\u5f55"},{"location":"tech/Nmap Basics/#10-linux-win","text":"sudo nmap -F -O 192 . 168 . 0 . 1-255 | grep Running: / tmp / os ; echo $(cat /tmp/os | grep Linux | wc -l) Linux device(s) ; echo $(cat /tmp/os | grep Windows | wc -l) Window(s) device link","title":"10. \u663e\u793a\u7f51\u7edc\u4e0a\u5171\u6709\u591a\u5c11\u53f0 Linux \u53ca Win \u8bbe\u5907?"},{"location":"tech/Nmap Basics/#nmap","text":"1 2 3 4 5 Nmap version 7.12 ( https://nmap.org ) Platform: x86_64-apple-darwin15.4.0 Compiled with: liblua-5.2.4 openssl-1.0.2g nmap-libpcre-7.6 libpcap-1.7.4 nmap-libdnet-1.12 ipv6 Compiled without: Available nsock engines: kqueue poll select","title":"\u4e0b\u9762\u5217\u4e00\u4e0b nmap \u7684\u5e2e\u52a9\u4fe1\u606f"},{"location":"tech/Nmap Basics/#nmap-help","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 Nmap 7.12 ( https : //nmap.org ) Usage : nmap [ Scan Type ( s )] [ Options ] { target specification } TARGET SPECIFICATION : Can pass hostnames , IP addresses , networks , etc . Ex : scanme . nmap . org , microsoft . com / 24 , 192.168.0.1 ; 10.0.0 - 255.1 - 254 - iL inputfilename : Input from list of hosts / networks - iR num hosts : Choose random targets -- exclude host1 [, host2 ][, host3 ],... : Exclude hosts / networks -- excludefile exclude_file : Exclude list from file HOST DISCOVERY : - sL : List Scan - simply list targets to scan - sn : Ping Scan - disable port scan - Pn : Treat all hosts as online -- skip host discovery - PS / PA / PU / PY [ portlist ] : TCP SYN / ACK , UDP or SCTP discovery to given ports - PE / PP / PM : ICMP echo , timestamp , and netmask request discovery probes - PO [ protocol list ] : IP Protocol Ping - n /- R : Never do DNS resolution / Always resolve [ default : sometimes ] -- dns - servers serv1 [, serv2 ],... : Specify custom DNS servers -- system - dns : Use OS s DNS resolver -- traceroute : Trace hop path to each host SCAN TECHNIQUES : - sS / sT / sA / sW / sM : TCP SYN / Connect () / ACK / Window / Maimon scans - sU : UDP Scan - sN / sF / sX : TCP Null , FIN , and Xmas scans -- scanflags flags : Customize TCP scan flags - sI zombie host [ : probeport ] : Idle scan - sY / sZ : SCTP INIT / COOKIE - ECHO scans - sO : IP protocol scan - b FTP relay host : FTP bounce scan PORT SPECIFICATION AND SCAN ORDER : - p port ranges : Only scan specified ports Ex : - p22 ; - p1 - 65535 ; - p U : 53 , 111 , 137 , T : 21 - 25 , 80 , 139 , 8080 , S : 9 -- exclude - ports port ranges : Exclude the specified ports from scanning - F : Fast mode - Scan fewer ports than the default scan - r : Scan ports consecutively - don t randomize -- top - ports number : Scan number most common ports -- port - ratio ratio : Scan ports more common than ratio SERVICE / VERSION DETECTION : - sV : Probe open ports to determine service / version info -- version - intensity level : Set from 0 ( light ) to 9 ( try all probes ) -- version - light : Limit to most likely probes ( intensity 2 ) -- version - all : Try every single probe ( intensity 9 ) -- version - trace : Show detailed version scan activity ( for debugging ) SCRIPT SCAN : - sC : equivalent to -- script = default -- script = Lua scripts : Lua scripts is a comma separated list of directories , script - files or script - categories -- script - args = n1 = v1 ,[ n2 = v2 ,...] : provide arguments to scripts -- script - args - file = filename : provide NSE script args in a file -- script - trace : Show all data sent and received -- script - updatedb : Update the script database . -- script - help = Lua scripts : Show help about scripts . Lua scripts is a comma - separated list of script - files or script - categories . OS DETECTION : - O : Enable OS detection -- osscan - limit : Limit OS detection to promising targets -- osscan - guess : Guess OS more aggressively TIMING AND PERFORMANCE : Options which take time are in seconds , or append ms ( milliseconds ), s ( seconds ), m ( minutes ), or h ( hours ) to the value ( e . g . 30 m ). - T 0 - 5 : Set timing template ( higher is faster ) -- min - hostgroup / max - hostgroup size : Parallel host scan group sizes -- min - parallelism / max - parallelism numprobes : Probe parallelization -- min - rtt - timeout / max - rtt - timeout / initial - rtt - timeout time : Specifies probe round trip time . -- max - retries tries : Caps number of port scan probe retransmissions . -- host - timeout time : Give up on target after this long -- scan - delay /-- max - scan - delay time : Adjust delay between probes -- min - rate number : Send packets no slower than number per second -- max - rate number : Send packets no faster than number per second FIREWALL / IDS EVASION AND SPOOFING : - f ; -- mtu val : fragment packets ( optionally w / given MTU ) - D decoy1 , decoy2 [, ME ],... : Cloak a scan with decoys - S IP_Address : Spoof source address - e iface : Use specified interface - g /-- source - port portnum : Use given port number -- proxies url1 ,[ url2 ],... : Relay connections through HTTP / SOCKS4 proxies -- data hex string : Append a custom payload to sent packets -- data - string string : Append a custom ASCII string to sent packets -- data - length num : Append random data to sent packets -- ip - options options : Send packets with specified ip options -- ttl val : Set IP time - to - live field -- spoof - mac mac address / prefix / vendor name : Spoof your MAC address -- badsum : Send packets with a bogus TCP / UDP / SCTP checksum OUTPUT : - oN /- oX /- oS /- oG file : Output scan in normal , XML , s | rIpt kIddi3 , and Grepable format , respectively , to the given filename . - oA basename : Output in the three major formats at once - v : Increase verbosity level ( use - vv or more for greater effect ) - d : Increase debugging level ( use - dd or more for greater effect ) -- reason : Display the reason a port is in a particular state -- open : Only show open ( or possibly open ) ports -- packet - trace : Show all packets sent and received -- iflist : Print host interfaces and routes ( for debugging ) -- append - output : Append to rather than clobber specified output files -- resume filename : Resume an aborted scan -- stylesheet path / URL : XSL stylesheet to transform XML output to HTML -- webxml : Reference stylesheet from Nmap . Org for more portable XML -- no - stylesheet : Prevent associating of XSL stylesheet w / XML output MISC : - 6 : Enable IPv6 scanning - A : Enable OS detection , version detection , script scanning , and traceroute -- datadir dirname : Specify custom Nmap data file location -- send - eth /-- send - ip : Send using raw ethernet frames or IP packets -- privileged : Assume that the user is fully privileged -- unprivileged : Assume the user lacks raw socket privileges - V : Print version number - h : Print this help summary page . EXAMPLES : nmap - v - A scanme . nmap . org nmap - v - sn 192.168.0.0 / 16 10.0.0.0 / 8 nmap - v - iR 10000 - Pn - p 80 SEE THE MAN PAGE ( https : //nmap.org/book/man.html) FOR MORE OPTIONS AND EXAMPLES","title":"nmap --help"},{"location":"tech/OpenVPN on Raspberry Pi/","text":"","title":"OpenVPN on Raspberry Pi"},{"location":"tech/Optimizing App Startup Time/","text":"# \u4e00\u6b21\u4f18\u5316App\u542f\u52a8\u901f\u5ea6\u7684\u4f53\u9a8c \u5e94\u7528\u7684\u542f\u52a8\u8fc7\u7a0b \u8fde\u63a5\u548c\u88c5\u8f7d UIKit\u521d\u59cb\u5316 \u5e94\u7528\u7a0b\u5e8f\u56de\u8c03 \u5f00\u673a\u52a8\u753b\u5c55\u73b0 \u7406\u8bba - main()\u51fd\u6570\u6267\u884c\u524d\u53d1\u751f\u7684\u4e8b\u60c5 Mach-O\u683c\u5f0f \u6587\u4ef6\u7c7b\u578b Executable \u2014\u2014 \u5e94\u7528\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6 Dylib \u2014\u2014 \u52a8\u6001\u5e93\uff0c\u4f8b\u5982: DSOs/DLLs Bundle \u2014\u2014 \u4e0d\u80fd\u88ab\u94fe\u63a5\u7684\u52a8\u6001\u5e93\uff0c\u53ea\u80fd\u5728\u8fd0\u884c\u65f6\u7528dlopen()\u51fd\u6570\u52a0\u8f7d\uff0c\u4f8b\u5982\uff1a\u63d2\u4ef6 image \u2014\u2014 \u53ef\u4ee5\u662f\u4e0a\u9762\u63d0\u5230\u7684\u4e09\u79cd\u7c7b\u578b\u4e2d\u7684\u4efb\u4f55\u4e00\u79cd Framework \u2014\u2014 \u4ee5\u4e00\u5b9a\u76ee\u5f55\u7ed3\u6784\u7ec4\u7ec7\u8d44\u6e90\u548c\u5934\u6587\u4ef6\u7684\u4e00\u79cd\u52a8\u6001\u5e93 Mach-O\u955c\u50cf\u6587\u4ef6 \u901a\u5e38\u88ab\u5212\u5206\u6210\u6bb5( segment )\uff1a __TEXT \u3001 __DATA \u3001 __LINKEDIT \u4e00\u4e2a\u6bb5\u901a\u5e38\u7531\u591a\u4e2a\u9875( page )\u6784\u6210\uff0c\u9875\u5927\u5c0f\u7531\u786c\u4ef6\u51b3\u5b9a\uff0c arm64 \u673a\u5668\u4e0a\u7684\u9875\u662f16KB, \u5176\u5b83\u673a\u5668\u4e0a\u7684\u9875\u5927\u5c0f\u4e3a4KB\u3002 \u533a\u57df( section )\u662f\u6bb5( segment )\u7684\u5c40\u90e8\uff0c\u7f16\u8bd1\u5668\u4e00\u822c\u4e0d\u4f1a\u8003\u8651\u8fd9\u4e2a\u6982\u5ff5\u3002\u5b83\u4eec\u5f7c\u6b64\u4e4b\u95f4\u4e0d\u80fd\u91cd\u53e0\u3002 __TEXT \u6bb5\u662f\u4e8c\u8fdb\u5236\u7684\u5934\u90e8\uff0c\u7528\u6765\u5b58\u653eMach\u5934\u4fe1\u606f\u3001\u673a\u5668\u547d\u4ee4\u6216\u8005\u5e38\u91cf\uff0c\u53ea\u8bfb\u3002 __DATA \u6bb5\u5b58\u653e\u5168\u5c40\u53d8\u91cf\uff0c\u53ef\u8bfb\u5199\u3002 __LINKEDIT \u6bb5\u5305\u542b\u600e\u4e48\u88c5\u8f7d\u7a0b\u5e8f\u7684 \u5143\u6570\u636e , \u50cf\u51fd\u6570\u3001\u53d8\u91cf\u7684\u540d\u79f0\u548c\u5730\u5740\u3002 Mach-O Universal\u6587\u4ef6 \u628a\u9488\u5bf9\u4e0d\u540c\u5e73\u53f0\u7684\u591a\u4e2aMach-O\u6587\u4ef6\u5408\u5e76\u5230\u4e00\u4e2a\u6587\u4ef6\u91cc\u9762\uff0c\u6709\u4e00\u4e2a Fat Header \u4fe1\u606f\u533a\u5b58\u653e\u6240\u6709\u67b6\u6784\u548c\u5bf9\u5c31\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u5728\u6574\u4e2a\u6587\u4ef6\u4e2d\u7684\u504f\u79fb\u5730\u5740\u3002 \u865a\u62df\u5185\u5b58\u57fa\u7840 \u8f6f\u4ef6\u4e2d\u7684\u95ee\u9898\u90fd\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u4e2d\u95f4\u5c42\u6765\u89e3\u51b3\uff0c\u865a\u62df\u5185\u5b58\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u4e0d\u540c\u8fdb\u7a0b\u7684\u903b\u8f91\u5730\u5740\u7075\u6d3b\u7684\u6620\u5c04\u5230\u7269\u7406\u5185\u5b58\u5730\u5740\u7684\u95ee\u9898\u800c\u5b58\u5728\u7684\u3002\u4e0d\u540c\u8fdb\u7a0b\u7684\u903b\u8f91\u5730\u5740\u53ef\u4ee5\u88ab\u865a\u62df\u5185\u5b58\u7cfb\u7edf\u6620\u5c04\u5230\u4e0d\u540c\u6216\u8005\u76f8\u540c\u7684\u7269\u7406\u5185\u5b58\u4e2d\uff0c\u4ece\u800c\u5b9e\u73b0\u4e92\u65a5\u6216\u5171\u4eab\u7684\u529f\u80fd\u3002\u6211\u4eec\u524d\u9762\u6240\u63d0\u5230\u7684\u52a8\u6001\u5e93\u5728\u4e0d\u540c\u8fdb\u7a0b\u95f4\u7684\u5171\u4eab\u5c31\u53ef\u4ee5\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8fdb\u884c\u3002\u6bcf\u4e00\u4e2a\u9875\u90fd\u53ef\u4ee5\u88ab\u8bbe\u7f6e\u4e3a \u8bfb \u3001 \u5199 \u3001 \u6267\u884c \u7684\u4efb\u610f\u7ec4\u5408\u6765\u9650\u5236\u5176\u8bbf\u95ee\u6743\u9650\u3002 ASLR \u2014\u2014 \u5730\u5740\u7a7a\u95f4\u5e03\u5c40\u968f\u673a\uff0c\u955c\u50cf\u88ab\u52a0\u8f7d\u8fdb\u5185\u5b58\u7a7a\u95f4\u4e2d\u7684\u968f\u673a\u4f4d\u7f6e \u4ee3\u7801\u7b7e\u540d \u2014\u2014 \u6bcf\u4e00\u9875\u7684\u6570\u636e\u90fd\u88ab\u54c8\u5e0c\u7b97\u6cd5\u5904\u7406\u8fc7\uff0c\u5f53\u9875\u9762\u52a0\u8f7d\u8fdb\u5185\u5b58\u65f6\u4f1a\u88ab\u6821\u9a8c\uff0c\u8fd9\u4e9b\u54c8\u5e0c\u503c\u90fd\u88ab\u5b58\u653e\u5728 __LINKEDIT \u6bb5\u4e2d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u786e\u4fdd\u6821\u9a8c\u6bcf\u4e00\u9875\u6570\u636e\uff0c\u4fdd\u8bc1\u7a0b\u5e8f\u8fd0\u884c\u7684\u5b89\u5168\u6027\u3002 Mach-O\u4e8c\u8fdb\u5236\u6587\u4ef6\u5982\u4f55\u52a0\u8f7d\u548c\u51c6\u5907 Exec() \u2014\u2014 \u662f\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u3002 dyld \u2014\u2014 \u8d1f\u8d23\u52a0\u8f7d\u52a8\u6001\u5e93\u3002 \u7cfb\u7edf\u628a\u5e94\u7528\u6620\u5c04\u5230\u5185\u5b58\u540e\u4f1a\u52a0\u8f7d dyld \u6765\u8d1f\u8d23\u52a0\u8f7d\u5e94\u7528\u4f9d\u8d56\u7684\u5176\u5b83\u52a8\u6001\u5e93\u3002 \u5206\u6790\u51fa\u5e94\u7528\u8fd0\u884c\u9700\u8981\u4f9d\u8d56\u7684\u52a8\u6001\u5e93\u3002\u4ece\u5df2\u7ecf\u52a0\u8f7d\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u5934\u90e8\u4fe1\u606f\u4e2d\u83b7\u53d6\u3002 \u67e5\u627e\u6240\u6709\u4f9d\u8d56\u7684\u52a8\u6001\u5e93\u7684\u4f4d\u7f6e\uff0c\u627e\u5230\u5bf9\u5e94\u7684Mach-O\u6587\u4ef6\uff0c\u6253\u5f00\u5e76\u6821\u9a8c\u4ee3\u7801\u7b7e\u540d\u3002 \u6ce8\u518c\u4f9d\u8d56\u5e93\u7684\u4ee3\u7801\u7b7e\u540d\u5230\u5185\u6838\u4e2d\uff0c\u4e4b\u540e\u8c03\u7528 mmap \u6620\u5c04\u52a8\u6001\u5e93\u7684\u6bcf\u4e00\u4e2a\u6bb5\u5230\u7269\u7406\u5185\u5b58\u4e2d\u3002 \u5728\u8fd9\u4e2a\u52a0\u8f7d\u4f9d\u8d56\u5e93\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f9d\u8d56\u5e93\u672c\u8eab\u4e5f\u4f1a\u4f9d\u8d56\u5176\u5b83\u7684\u5e93\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8fc7\u7a0b\u4f1a\u9012\u5f52\u6267\u884c\u3002\u5728\u52a0\u8f7d\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u4e9b\u5df2\u7ecf\u52a0\u8f7d\u7684\u5e93\u4e0d\u4f1a\u88ab\u91cd\u65b0\u52a0\u8f7d\uff0c\u5927\u90e8\u5206\u90fd\u662f\u7cfb\u7edf\u5e93\u3002 Rebasng And Binding Rebasing \u2014\u2014 \u7531\u4e8e\u5e94\u7528\u662f\u88ab\u968f\u673a\u52a0\u8f7d\u5230\u7269\u7406\u5730\u5740\u91cc\u7684\uff0c\u6240\u4ee5\u4e00\u4e9b\u5185\u90e8\u5730\u5740\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\u4e00\u4e0b\u5bf9\u5e94\u7684\u504f\u79fb\u91cf\u6765\u8c03\u6574\u6b63\u786e\u6307\u5411\u3002 binding \u2014\u2014 \u5e94\u7528\u5185\u7684\u6307\u9488\u6307\u5411\u5e94\u7528\u5916\u90e8\u7684\u7b26\u53f7\uff0c\u627e\u5230\u8fd9\u4e2a\u5916\u90e8\u7b26\u53f7\u540e\uff0c\u9700\u8981\u5c06\u8fd9\u4e2a\u6307\u9488\u4e0e\u8fd9\u4e2a\u7b26\u53f7\u7684\u5bf9\u5e94\u5730\u5740\u8fdb\u884c\u7ed1\u5b9a\u3002 Objective-C \u662f\u4e00\u79cd\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\uff0c\u5b83\u5b9a\u4e49\u7684\u6240\u6709\u7c7b\u90fd\u5728\u4e00\u4e2a\u5168\u5c40\u8868\u4e2d\u6ce8\u518c\u540e\u4f7f\u7528\u3002 Unique Selector \u611f\u89c9\u548c\u7c7b\u65b9\u6cd5\u662f\u7b49\u4ef7\u7684\u3002 +load() \u6216\u8005 +initialize() \u5b9e\u8df5 \u600e\u6837\u6d4b\u91cf\u65f6\u95f4 \u4e0d\u540c\u5e73\u53f0\u7684\u6807\u51c6\u4e0d\u540c\uff0c\u4f46\u5927\u81f4\u4e0a iPhone(400ms) \u3001 iPad(500ms) \u4ee5\u5185\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u6807\u51c6\u3002\u56e0\u4e3a\u5e94\u7528\u88ab\u6253\u5f00\u65f6\uff0c\u7cfb\u7edf\u4f1a\u6709\u4e00\u6bb5\u52a8\u753b\u6765\u5b8c\u6210\u5e73\u6ed1\u8fc7\u6e21\uff0c\u5728\u8fd9\u6bb5\u52a8\u753b\u65f6\u95f4\u5185\u90fd\u53ef\u4ee5\u7b97\u662f\u4e0d\u9519\u7684\u542f\u52a8\u65f6\u95f4\u3002\u8fd9\u4e2a\u52a8\u753b\u7684\u65f6\u95f4\u5927\u81f4\u662f 400ms \u3002\u5e94\u7528\u5982\u679c\u542f\u52a8\u65f6\u95f4\u8d85\u8fc7 20s \u4f1a\u88ab\u7cfb\u7edf\u6740\u6b7b\u3002 \u5982\u679c\u5e94\u7528\u542f\u52a8\u592a\u6162\uff0c\u7cfb\u7edf\u770b\u95e8\u72d7\u4f1a\u7ed3\u675f\u5e94\u7528\uff0cXCode\u8c03\u8bd5\u65f6\u4e0d\u542f\u7528\u7cfb\u7edf\u770b\u95e8\u72d7\u3002 \u573a\u666f \u770b\u95e8\u72d7\u5b9a\u65f6 \u542f\u52a8 20\u79d2 \u540e\u53f0\u6062\u590d 10\u79d2 \u6302\u8d77 10\u79d2 \u9000\u51fa 6\u79d2 \u80cc\u666f\u4efb\u52a1 10\u5206\u949f \u70ed\u542f\u52a8\u548c\u51b7\u542f\u52a8 \u70ed\u542f\u52a8 \u2014\u2014 \u5e94\u7528\u5df2\u7ecf\u5728\u5185\u5b58\u7684\u60c5\u51b5\u4e0b\u88ab\u8c03\u8d77 \u51b7\u542f\u52a8 \u2014\u2014 \u5e94\u7528\u5b8c\u5168\u4e0d\u5728\u5185\u5b58\u6216\u7f13\u5b58\u4e2d\u7684\u60c5\u51b5\u4e0b\u88ab\u8c03\u8d77 \u6211\u4eec\u6d4b\u91cf\u542f\u52a8\u65f6\u95f4\u662f\u4ee5\u51b7\u542f\u52a8\u65f6\u95f4\u4e3a\u51c6\u7684\u3002\u8fd9\u901a\u5e38\u9700\u8981\u91cd\u65b0\u542f\u52a8\u8bbe\u5907\u3002 \u6d4b\u91cfmain()\u51fd\u6570\u8c03\u7528\u524d\u6240\u82b1\u8d39\u7684\u65f6\u95f4 Dyld \u6709\u5185\u5efa\u7684\u6d4b\u8bd5\u673a\u5236\u3002\u53ef\u4ee5\u5728\u9879\u76ee\u4e2d\u8bbe\u7f6e DYLD_PRINT_STATICTICS \u4e3a 1 \u6765\u5f00\u542f\u7edf\u8ba1\u529f\u80fd\u3002 \u8bbe\u7f6e\u9879\u76ee\u7684\u542f\u52a8\u65f6\u95f4\u7edf\u8ba1\u76f8\u5173\u7684\u73af\u5883\u53d8\u91cf\uff0c\u5982\u4e0b\u56fe\uff1a \u9700\u8981\u673a\u5668\u91cd\u65b0\u542f\u52a8\u540e\uff0c\u786e\u4fdd\u6d4b\u8bd5\u65f6\u957f\u6bd4\u8f83\u51c6\u786e\uff0c\u5373\u51b7\u542f\u52a8\u3002 \u51b7\u542f\u52a8\u7edf\u8ba1\u7ed3\u679c\u5982\u4e0b\u56fe: \u4f18\u5316\u542f\u52a8\u65f6\u95f4\u7684\u65b9\u6cd5 \u907f\u514d\u94fe\u63a5\u4e0d\u5fc5\u8981\u7684framework Optional\u7c7b\u578b\u7684framework\u4f1a\u4f7f\u94fe\u63a5\u5668\u6709\u4e00\u4e9b\u989d\u5916\u7684\u6d88\u8017\uff0c\u5c3d\u91cf\u5c11\u7528 \u907f\u514d\u521b\u5efa\u5168\u5c40C++\u5bf9\u8c61\uff0c\u907f\u514d\u5728 +load() \u65b9\u6cd5\u4e2d\u8fd0\u884c\u4ee3\u7801(\u7c7b\u52a0\u8f7d\u65f6)\uff0c\u800c\u653e\u5230 +initialize() \u4e2d(\u7c7b\u88ab\u9996\u6b21\u521d\u59cb\u5316\u65f6\u4f1a\u88ab\u8c03\u7528) \u628a\u5e94\u7528\u5f15\u5165\u7684\u52a8\u6001\u5e93\u5408\u5e76\u540e\u8fdb\u884c\u52a0\u8f7d\u3002 \u4f7f\u7528 dlopen \u628a\u5e93\u7684\u52a0\u8f7d\u65f6\u673a\u63a8\u8fdf\u4e00\u4e9b\uff0c\u4f46\u4e0d\u63a8\u8350\uff0c\u56e0\u4e3a\u4f1a\u5f15\u8d77\u5f88\u591a\u95ee\u9898\u3002 \u5c3d\u91cf\u4f7f\u7528swift\uff0c\u56e0\u4e3aswift\u8003\u8651\u4e86\u8fd9\u4e9b\u56e0\u7d20\u3002 \u51cf\u5c11Objc\u7684\u7c7b\u7684\u6570\u91cf \u7f16\u8bd1\u5668\u9009\u9879\u6dfb\u52a0`Wglobal-constructors \u6392\u9664\u9759\u6001\u521d\u59cb\u5316 \u53c2\u8003\u89c6\u9891\uff1a WWDC 2012 - iOS App Performance Responsiveness WWDC 2016 - Optimizing App Startup Time","title":"\u4e00\u6b21\u4f18\u5316App\u542f\u52a8\u901f\u5ea6\u7684\u4f53\u9a8c"},{"location":"tech/Optimizing App Startup Time/#_1","text":"\u8fde\u63a5\u548c\u88c5\u8f7d UIKit\u521d\u59cb\u5316 \u5e94\u7528\u7a0b\u5e8f\u56de\u8c03 \u5f00\u673a\u52a8\u753b\u5c55\u73b0","title":"\u5e94\u7528\u7684\u542f\u52a8\u8fc7\u7a0b"},{"location":"tech/Optimizing App Startup Time/#-main","text":"","title":"\u7406\u8bba - main()\u51fd\u6570\u6267\u884c\u524d\u53d1\u751f\u7684\u4e8b\u60c5"},{"location":"tech/Optimizing App Startup Time/#mach-o","text":"","title":"Mach-O\u683c\u5f0f"},{"location":"tech/Optimizing App Startup Time/#_2","text":"Executable \u2014\u2014 \u5e94\u7528\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6 Dylib \u2014\u2014 \u52a8\u6001\u5e93\uff0c\u4f8b\u5982: DSOs/DLLs Bundle \u2014\u2014 \u4e0d\u80fd\u88ab\u94fe\u63a5\u7684\u52a8\u6001\u5e93\uff0c\u53ea\u80fd\u5728\u8fd0\u884c\u65f6\u7528dlopen()\u51fd\u6570\u52a0\u8f7d\uff0c\u4f8b\u5982\uff1a\u63d2\u4ef6 image \u2014\u2014 \u53ef\u4ee5\u662f\u4e0a\u9762\u63d0\u5230\u7684\u4e09\u79cd\u7c7b\u578b\u4e2d\u7684\u4efb\u4f55\u4e00\u79cd Framework \u2014\u2014 \u4ee5\u4e00\u5b9a\u76ee\u5f55\u7ed3\u6784\u7ec4\u7ec7\u8d44\u6e90\u548c\u5934\u6587\u4ef6\u7684\u4e00\u79cd\u52a8\u6001\u5e93","title":"\u6587\u4ef6\u7c7b\u578b"},{"location":"tech/Optimizing App Startup Time/#mach-o_1","text":"\u901a\u5e38\u88ab\u5212\u5206\u6210\u6bb5( segment )\uff1a __TEXT \u3001 __DATA \u3001 __LINKEDIT \u4e00\u4e2a\u6bb5\u901a\u5e38\u7531\u591a\u4e2a\u9875( page )\u6784\u6210\uff0c\u9875\u5927\u5c0f\u7531\u786c\u4ef6\u51b3\u5b9a\uff0c arm64 \u673a\u5668\u4e0a\u7684\u9875\u662f16KB, \u5176\u5b83\u673a\u5668\u4e0a\u7684\u9875\u5927\u5c0f\u4e3a4KB\u3002 \u533a\u57df( section )\u662f\u6bb5( segment )\u7684\u5c40\u90e8\uff0c\u7f16\u8bd1\u5668\u4e00\u822c\u4e0d\u4f1a\u8003\u8651\u8fd9\u4e2a\u6982\u5ff5\u3002\u5b83\u4eec\u5f7c\u6b64\u4e4b\u95f4\u4e0d\u80fd\u91cd\u53e0\u3002 __TEXT \u6bb5\u662f\u4e8c\u8fdb\u5236\u7684\u5934\u90e8\uff0c\u7528\u6765\u5b58\u653eMach\u5934\u4fe1\u606f\u3001\u673a\u5668\u547d\u4ee4\u6216\u8005\u5e38\u91cf\uff0c\u53ea\u8bfb\u3002 __DATA \u6bb5\u5b58\u653e\u5168\u5c40\u53d8\u91cf\uff0c\u53ef\u8bfb\u5199\u3002 __LINKEDIT \u6bb5\u5305\u542b\u600e\u4e48\u88c5\u8f7d\u7a0b\u5e8f\u7684 \u5143\u6570\u636e , \u50cf\u51fd\u6570\u3001\u53d8\u91cf\u7684\u540d\u79f0\u548c\u5730\u5740\u3002","title":"Mach-O\u955c\u50cf\u6587\u4ef6"},{"location":"tech/Optimizing App Startup Time/#mach-o-universal","text":"\u628a\u9488\u5bf9\u4e0d\u540c\u5e73\u53f0\u7684\u591a\u4e2aMach-O\u6587\u4ef6\u5408\u5e76\u5230\u4e00\u4e2a\u6587\u4ef6\u91cc\u9762\uff0c\u6709\u4e00\u4e2a Fat Header \u4fe1\u606f\u533a\u5b58\u653e\u6240\u6709\u67b6\u6784\u548c\u5bf9\u5c31\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u5728\u6574\u4e2a\u6587\u4ef6\u4e2d\u7684\u504f\u79fb\u5730\u5740\u3002","title":"Mach-O Universal\u6587\u4ef6"},{"location":"tech/Optimizing App Startup Time/#_3","text":"\u8f6f\u4ef6\u4e2d\u7684\u95ee\u9898\u90fd\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u4e2d\u95f4\u5c42\u6765\u89e3\u51b3\uff0c\u865a\u62df\u5185\u5b58\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u4e0d\u540c\u8fdb\u7a0b\u7684\u903b\u8f91\u5730\u5740\u7075\u6d3b\u7684\u6620\u5c04\u5230\u7269\u7406\u5185\u5b58\u5730\u5740\u7684\u95ee\u9898\u800c\u5b58\u5728\u7684\u3002\u4e0d\u540c\u8fdb\u7a0b\u7684\u903b\u8f91\u5730\u5740\u53ef\u4ee5\u88ab\u865a\u62df\u5185\u5b58\u7cfb\u7edf\u6620\u5c04\u5230\u4e0d\u540c\u6216\u8005\u76f8\u540c\u7684\u7269\u7406\u5185\u5b58\u4e2d\uff0c\u4ece\u800c\u5b9e\u73b0\u4e92\u65a5\u6216\u5171\u4eab\u7684\u529f\u80fd\u3002\u6211\u4eec\u524d\u9762\u6240\u63d0\u5230\u7684\u52a8\u6001\u5e93\u5728\u4e0d\u540c\u8fdb\u7a0b\u95f4\u7684\u5171\u4eab\u5c31\u53ef\u4ee5\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8fdb\u884c\u3002\u6bcf\u4e00\u4e2a\u9875\u90fd\u53ef\u4ee5\u88ab\u8bbe\u7f6e\u4e3a \u8bfb \u3001 \u5199 \u3001 \u6267\u884c \u7684\u4efb\u610f\u7ec4\u5408\u6765\u9650\u5236\u5176\u8bbf\u95ee\u6743\u9650\u3002 ASLR \u2014\u2014 \u5730\u5740\u7a7a\u95f4\u5e03\u5c40\u968f\u673a\uff0c\u955c\u50cf\u88ab\u52a0\u8f7d\u8fdb\u5185\u5b58\u7a7a\u95f4\u4e2d\u7684\u968f\u673a\u4f4d\u7f6e \u4ee3\u7801\u7b7e\u540d \u2014\u2014 \u6bcf\u4e00\u9875\u7684\u6570\u636e\u90fd\u88ab\u54c8\u5e0c\u7b97\u6cd5\u5904\u7406\u8fc7\uff0c\u5f53\u9875\u9762\u52a0\u8f7d\u8fdb\u5185\u5b58\u65f6\u4f1a\u88ab\u6821\u9a8c\uff0c\u8fd9\u4e9b\u54c8\u5e0c\u503c\u90fd\u88ab\u5b58\u653e\u5728 __LINKEDIT \u6bb5\u4e2d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u786e\u4fdd\u6821\u9a8c\u6bcf\u4e00\u9875\u6570\u636e\uff0c\u4fdd\u8bc1\u7a0b\u5e8f\u8fd0\u884c\u7684\u5b89\u5168\u6027\u3002","title":"\u865a\u62df\u5185\u5b58\u57fa\u7840"},{"location":"tech/Optimizing App Startup Time/#mach-o_2","text":"Exec() \u2014\u2014 \u662f\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u3002 dyld \u2014\u2014 \u8d1f\u8d23\u52a0\u8f7d\u52a8\u6001\u5e93\u3002 \u7cfb\u7edf\u628a\u5e94\u7528\u6620\u5c04\u5230\u5185\u5b58\u540e\u4f1a\u52a0\u8f7d dyld \u6765\u8d1f\u8d23\u52a0\u8f7d\u5e94\u7528\u4f9d\u8d56\u7684\u5176\u5b83\u52a8\u6001\u5e93\u3002 \u5206\u6790\u51fa\u5e94\u7528\u8fd0\u884c\u9700\u8981\u4f9d\u8d56\u7684\u52a8\u6001\u5e93\u3002\u4ece\u5df2\u7ecf\u52a0\u8f7d\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u5934\u90e8\u4fe1\u606f\u4e2d\u83b7\u53d6\u3002 \u67e5\u627e\u6240\u6709\u4f9d\u8d56\u7684\u52a8\u6001\u5e93\u7684\u4f4d\u7f6e\uff0c\u627e\u5230\u5bf9\u5e94\u7684Mach-O\u6587\u4ef6\uff0c\u6253\u5f00\u5e76\u6821\u9a8c\u4ee3\u7801\u7b7e\u540d\u3002 \u6ce8\u518c\u4f9d\u8d56\u5e93\u7684\u4ee3\u7801\u7b7e\u540d\u5230\u5185\u6838\u4e2d\uff0c\u4e4b\u540e\u8c03\u7528 mmap \u6620\u5c04\u52a8\u6001\u5e93\u7684\u6bcf\u4e00\u4e2a\u6bb5\u5230\u7269\u7406\u5185\u5b58\u4e2d\u3002 \u5728\u8fd9\u4e2a\u52a0\u8f7d\u4f9d\u8d56\u5e93\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f9d\u8d56\u5e93\u672c\u8eab\u4e5f\u4f1a\u4f9d\u8d56\u5176\u5b83\u7684\u5e93\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8fc7\u7a0b\u4f1a\u9012\u5f52\u6267\u884c\u3002\u5728\u52a0\u8f7d\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u4e9b\u5df2\u7ecf\u52a0\u8f7d\u7684\u5e93\u4e0d\u4f1a\u88ab\u91cd\u65b0\u52a0\u8f7d\uff0c\u5927\u90e8\u5206\u90fd\u662f\u7cfb\u7edf\u5e93\u3002","title":"Mach-O\u4e8c\u8fdb\u5236\u6587\u4ef6\u5982\u4f55\u52a0\u8f7d\u548c\u51c6\u5907"},{"location":"tech/Optimizing App Startup Time/#rebasng-and-binding","text":"Rebasing \u2014\u2014 \u7531\u4e8e\u5e94\u7528\u662f\u88ab\u968f\u673a\u52a0\u8f7d\u5230\u7269\u7406\u5730\u5740\u91cc\u7684\uff0c\u6240\u4ee5\u4e00\u4e9b\u5185\u90e8\u5730\u5740\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\u4e00\u4e0b\u5bf9\u5e94\u7684\u504f\u79fb\u91cf\u6765\u8c03\u6574\u6b63\u786e\u6307\u5411\u3002 binding \u2014\u2014 \u5e94\u7528\u5185\u7684\u6307\u9488\u6307\u5411\u5e94\u7528\u5916\u90e8\u7684\u7b26\u53f7\uff0c\u627e\u5230\u8fd9\u4e2a\u5916\u90e8\u7b26\u53f7\u540e\uff0c\u9700\u8981\u5c06\u8fd9\u4e2a\u6307\u9488\u4e0e\u8fd9\u4e2a\u7b26\u53f7\u7684\u5bf9\u5e94\u5730\u5740\u8fdb\u884c\u7ed1\u5b9a\u3002 Objective-C \u662f\u4e00\u79cd\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\uff0c\u5b83\u5b9a\u4e49\u7684\u6240\u6709\u7c7b\u90fd\u5728\u4e00\u4e2a\u5168\u5c40\u8868\u4e2d\u6ce8\u518c\u540e\u4f7f\u7528\u3002","title":"Rebasng And Binding"},{"location":"tech/Optimizing App Startup Time/#unique-selector","text":"\u611f\u89c9\u548c\u7c7b\u65b9\u6cd5\u662f\u7b49\u4ef7\u7684\u3002 +load() \u6216\u8005 +initialize()","title":"Unique Selector"},{"location":"tech/Optimizing App Startup Time/#_4","text":"","title":"\u5b9e\u8df5"},{"location":"tech/Optimizing App Startup Time/#_5","text":"\u4e0d\u540c\u5e73\u53f0\u7684\u6807\u51c6\u4e0d\u540c\uff0c\u4f46\u5927\u81f4\u4e0a iPhone(400ms) \u3001 iPad(500ms) \u4ee5\u5185\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u6807\u51c6\u3002\u56e0\u4e3a\u5e94\u7528\u88ab\u6253\u5f00\u65f6\uff0c\u7cfb\u7edf\u4f1a\u6709\u4e00\u6bb5\u52a8\u753b\u6765\u5b8c\u6210\u5e73\u6ed1\u8fc7\u6e21\uff0c\u5728\u8fd9\u6bb5\u52a8\u753b\u65f6\u95f4\u5185\u90fd\u53ef\u4ee5\u7b97\u662f\u4e0d\u9519\u7684\u542f\u52a8\u65f6\u95f4\u3002\u8fd9\u4e2a\u52a8\u753b\u7684\u65f6\u95f4\u5927\u81f4\u662f 400ms \u3002\u5e94\u7528\u5982\u679c\u542f\u52a8\u65f6\u95f4\u8d85\u8fc7 20s \u4f1a\u88ab\u7cfb\u7edf\u6740\u6b7b\u3002 \u5982\u679c\u5e94\u7528\u542f\u52a8\u592a\u6162\uff0c\u7cfb\u7edf\u770b\u95e8\u72d7\u4f1a\u7ed3\u675f\u5e94\u7528\uff0cXCode\u8c03\u8bd5\u65f6\u4e0d\u542f\u7528\u7cfb\u7edf\u770b\u95e8\u72d7\u3002 \u573a\u666f \u770b\u95e8\u72d7\u5b9a\u65f6 \u542f\u52a8 20\u79d2 \u540e\u53f0\u6062\u590d 10\u79d2 \u6302\u8d77 10\u79d2 \u9000\u51fa 6\u79d2 \u80cc\u666f\u4efb\u52a1 10\u5206\u949f","title":"\u600e\u6837\u6d4b\u91cf\u65f6\u95f4"},{"location":"tech/Optimizing App Startup Time/#_6","text":"\u70ed\u542f\u52a8 \u2014\u2014 \u5e94\u7528\u5df2\u7ecf\u5728\u5185\u5b58\u7684\u60c5\u51b5\u4e0b\u88ab\u8c03\u8d77 \u51b7\u542f\u52a8 \u2014\u2014 \u5e94\u7528\u5b8c\u5168\u4e0d\u5728\u5185\u5b58\u6216\u7f13\u5b58\u4e2d\u7684\u60c5\u51b5\u4e0b\u88ab\u8c03\u8d77 \u6211\u4eec\u6d4b\u91cf\u542f\u52a8\u65f6\u95f4\u662f\u4ee5\u51b7\u542f\u52a8\u65f6\u95f4\u4e3a\u51c6\u7684\u3002\u8fd9\u901a\u5e38\u9700\u8981\u91cd\u65b0\u542f\u52a8\u8bbe\u5907\u3002","title":"\u70ed\u542f\u52a8\u548c\u51b7\u542f\u52a8"},{"location":"tech/Optimizing App Startup Time/#main","text":"Dyld \u6709\u5185\u5efa\u7684\u6d4b\u8bd5\u673a\u5236\u3002\u53ef\u4ee5\u5728\u9879\u76ee\u4e2d\u8bbe\u7f6e DYLD_PRINT_STATICTICS \u4e3a 1 \u6765\u5f00\u542f\u7edf\u8ba1\u529f\u80fd\u3002 \u8bbe\u7f6e\u9879\u76ee\u7684\u542f\u52a8\u65f6\u95f4\u7edf\u8ba1\u76f8\u5173\u7684\u73af\u5883\u53d8\u91cf\uff0c\u5982\u4e0b\u56fe\uff1a \u9700\u8981\u673a\u5668\u91cd\u65b0\u542f\u52a8\u540e\uff0c\u786e\u4fdd\u6d4b\u8bd5\u65f6\u957f\u6bd4\u8f83\u51c6\u786e\uff0c\u5373\u51b7\u542f\u52a8\u3002 \u51b7\u542f\u52a8\u7edf\u8ba1\u7ed3\u679c\u5982\u4e0b\u56fe:","title":"\u6d4b\u91cfmain()\u51fd\u6570\u8c03\u7528\u524d\u6240\u82b1\u8d39\u7684\u65f6\u95f4"},{"location":"tech/Optimizing App Startup Time/#_7","text":"\u907f\u514d\u94fe\u63a5\u4e0d\u5fc5\u8981\u7684framework Optional\u7c7b\u578b\u7684framework\u4f1a\u4f7f\u94fe\u63a5\u5668\u6709\u4e00\u4e9b\u989d\u5916\u7684\u6d88\u8017\uff0c\u5c3d\u91cf\u5c11\u7528 \u907f\u514d\u521b\u5efa\u5168\u5c40C++\u5bf9\u8c61\uff0c\u907f\u514d\u5728 +load() \u65b9\u6cd5\u4e2d\u8fd0\u884c\u4ee3\u7801(\u7c7b\u52a0\u8f7d\u65f6)\uff0c\u800c\u653e\u5230 +initialize() \u4e2d(\u7c7b\u88ab\u9996\u6b21\u521d\u59cb\u5316\u65f6\u4f1a\u88ab\u8c03\u7528) \u628a\u5e94\u7528\u5f15\u5165\u7684\u52a8\u6001\u5e93\u5408\u5e76\u540e\u8fdb\u884c\u52a0\u8f7d\u3002 \u4f7f\u7528 dlopen \u628a\u5e93\u7684\u52a0\u8f7d\u65f6\u673a\u63a8\u8fdf\u4e00\u4e9b\uff0c\u4f46\u4e0d\u63a8\u8350\uff0c\u56e0\u4e3a\u4f1a\u5f15\u8d77\u5f88\u591a\u95ee\u9898\u3002 \u5c3d\u91cf\u4f7f\u7528swift\uff0c\u56e0\u4e3aswift\u8003\u8651\u4e86\u8fd9\u4e9b\u56e0\u7d20\u3002 \u51cf\u5c11Objc\u7684\u7c7b\u7684\u6570\u91cf \u7f16\u8bd1\u5668\u9009\u9879\u6dfb\u52a0`Wglobal-constructors \u6392\u9664\u9759\u6001\u521d\u59cb\u5316 \u53c2\u8003\u89c6\u9891\uff1a WWDC 2012 - iOS App Performance Responsiveness WWDC 2016 - Optimizing App Startup Time","title":"\u4f18\u5316\u542f\u52a8\u65f6\u95f4\u7684\u65b9\u6cd5"},{"location":"tech/Use GDB/","text":"Use GDB \u7528\u4e86\u51e0\u5929GDB\uff0c\u89c9\u5f97\u633a\u597d\u7528\u7684\uff0c\u7279\u522b\u662f\u5199\u793a\u4f8b\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u7531\u4e8e\u6e90\u6587\u4ef6\u4e5f\u4e0d\u662f\u5f88\u590d\u6742\uff0c\u8c03\u8bd5\u5de5\u4f5c\u8fd8\u662f\u4f7f\u7528\u8f7b\u91cf\u7ea7\u7684GDB\u6765\u7684\u65b9\u4fbf\u3001\u76f4\u63a5\uff0c\u540c\u65f6GDB\u8fd8\u53ef\u4ee5\u8fdc\u7a0b\u8c03\u8bd5\uff0c\u529f\u80fd\u4e0a\u4e5f\u662f\u5f88\u5f3a\u5927\u7684\u3002 \u4e0b\u9762\u6574\u7406\u4e00\u4e0b\u4f7f\u7528GDB\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u7ecf\u5e38\u4f7f\u7528\u7684\u4e00\u4e9b\u547d\u4ee4\u548c\u7ec4\u5408\u952e\uff1a gdb insert_sort \u4f7f\u7528GDB\u8c03\u8bd5\u7a0b\u5e8f insert_sort break 16 \u5728\u7a0b\u5e8f\u7684\u7b2c16\u884c\u8bbe\u7f6e\u65ad\u70b9 tbreak 16 \u5728\u7a0b\u5e8f\u7b2c16\u884c\u8bbe\u7f6e\u4e00\u4e2a\u4e34\u65f6\u65ad\u70b9\uff0c\u4e2d\u6b62\u4e00\u6b21\u540e\u5931\u6548 clear 16 \u6e05\u9664\u7a0b\u5e8f\u7b2c16\u884c\u8bbe\u7f6e\u7684\u65ad\u70b9 delete 1 \u5220\u9664\u7b2c\u4e00\u4e2a\u65ad\u70b9 disable 1 2 5 \u4f7f\u65ad\u70b91\uff0c2\uff0c5\u4e0d\u8d77\u4f5c\u7528 enable 1 2 5 \u4f7f\u65ad\u70b91\uff0c2\uff0c5\u8d77\u4f5c\u7528 enable once 1 2 \u4f7f\u80fd\u65ad\u70b91\uff0c2\u8d77\u4f5c\u7528\u4e00\u6b21\uff0c\u4e4b\u540edisable info break \u67e5\u770b\u6240\u6709\u65ad\u70b9\u4fe1\u606f ctrl-P \u548c ctrl-N \u524d\u540e\u6d4f\u89c8\u4ee3\u7801\u6216\u7f16\u8f91 ENTER \u91cd\u590d\u6267\u884c\u4e0a\u6b21\u8c03\u8bd5\u547d\u4ee4 next \u8c03\u8bd5\u4e0b\u4e00\u53e5\u4ee3\u7801(Step Over) next 3 \u5411\u4e0b\u8d70\u4e09\u53e5(Step Over) define \u53ef\u4ee5\u5b9a\u4e49\u76f8\u5173\u7684\u5b8f\u547d\u4ee4\uff0c\u4f7f\u8f93\u5165\u547d\u4ee4\u66f4\u52a0\u81ea\u7531\u548c\u4e2a\u6027 run 12 5 6 \u8fd0\u884c\u5230\u65ad\u70b912\u30015\u30016\u65f6\u6682\u505c\u6267\u884c list \u591a\u4e2a\u6e90\u6587\u4ef6\u8c03\u8bd5\u65f6\u663e\u793a\u4e0d\u540c\u7684\u4ee3\u7801\u533a\u57df step \u6b65\u5165\u8c03\u8bd5\uff08Step Into) continue \u7ee7\u7eed\u6267\u884c continue 3 \u7ee7\u7eed\u6267\u884c\uff0c\u5e76\u5ffd\u7565\u4e09\u6b21\u65ad\u70b9 commands 3 \u7ed9\u65ad\u70b9\u5173\u8054\u76f8\u5173\u7684\u547d\u4ee4\uff0c\u4e00\u884c\u4e00\u6761\u547d\u4ee4\uff0c\u4ee5end\u7ed3\u675f\uff0c\u6dfb\u52a0\u4e00\u6761slient\u547d\u4ee4\u53ef\u4ee5\u5c4f\u6389\u65ad\u70b9\u505c\u6b62\u65f6\u81ea\u52a8\u4ea7\u751f\u7684\u76f8\u5173\u4fe1\u606f\u8f93\u51fa define \u5b9a\u4e49GDB\u5b8f\u547d\u4ee4\uff0c\u4ee5end\u7ed3\u675f\u5b9a\u4e49, \u53c2\u6570\u4ee5$\u53f7\u5f00\u59cb show user \u5217\u51fa\u6240\u6709\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u5b8f\u547d\u4ee4 until \u7ee7\u7eed\u6267\u884c\uff0c\u76f4\u5230\u4e00\u4e2a\u5faa\u73af\u5b8c\u6210 until swap \u7ee7\u7eed\u6267\u884c\uff0c\u76f4\u5230swap\u51fd\u6570\u88ab\u6267\u884c finish \u7ee7\u7eed\u6267\u884c\uff0c\u76f4\u5230\u51fd\u6570\u8fd4\u56de tbreak 16 16\u884c\u8bbe\u7f6e\u4e34\u65f6\u65ad\u70b9\uff0c\u4e34\u65f6\u65ad\u70b9\u53ea\u4f1a\u8fdb\u5165\u4e00\u6b21 until \u548c finish \u7528\u6765\u521b\u5efa\u6761\u4ef6\u65ad\u70b9 watch i \u89c2\u5bdf\u53d8\u91cfi,\u53ea\u8981\u5b83\u7684\u503c\u53d1\u751f\u4e86\u6539\u53d8\uff0c\u5c31\u4f1a\u505c\u6b62\u8fd0\u884c print j \u7a0b\u5e8f\u5230\u65ad\u70b9\u6682\u505c\u65f6\uff0c\u6253\u5370\u53d8\u91cf\u503c watch z \u53d8\u91cfz\u7684\u503c\u6539\u53d8\u65f6\uff0c\u6682\u505c\u6267\u884c\u7a0b\u5e8f watch (z 28) \u8bbe\u7f6e\u6761\u4ef6\u5224\u65ad\u7684\u76d1\u89c6\u65ad\u70b9 frame 1 \u67e5\u770b\u524d\u4e00\u4e2a\u8c03\u7528\u6808\u4fe1\u606f frame 0 \u67e5\u770b\u5f53\u524d\u8c03\u7528\u6808 up \u8c03\u7528\u6808\u4e0a\u4e00\u7ea7 down \u8c03\u7528\u6808\u4e0b\u4e00\u7ea7 backtrace \u67e5\u770b\u6574\u4e2a\u8c03\u7528\u6808\u4fe1\u606f help \u67e5\u770bGDB\u5e2e\u52a9\u4fe1\u606f GDB\u8fd8\u63d0\u4f9b\u4e86 TUI \u6a21\u5f0f\uff0c\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4e2d\u63d0\u4f9b\u001d GUI \u7c7b\u4f3c\u7684\u663e\u793a\u3002 gdb -tui insert_sort \u4ee5TUI\u6a21\u5f0f\u542f\u52a8GDB ctrl-X-A \u547d\u4ee4\u884c\u001d\u65f6 \u975eTUI \u548c TUI \u6a21\u5f0f\u76f8\u4e92\u8f6c\u6362 \u77e5\u9053\u4e86\u4e00\u4e9b\u57fa\u672c\u547d\u4ee4\uff0c\u5c31\u4ee5\u4e00\u4e2a\u5b9e\u9645\u8c03\u8bd5\u4f8b\u5b50\u5de9\u56fa\u4e00\u4e0b\u3002 \u4e00\u4e2a\u8c03\u8bd5\u5b9e\u4f8b \u4e0b\u9762\u4e00\u4e2a\u793a\u4f8b\u7a0b\u5e8f insert_sort.c \uff0c\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u7f16\u8bd1\uff1a 1 gcc -g -Wall -o insert_sort insert_sort.c \u7f16\u8bd1\u540e\u751f\u6210\u4e86\u4e8c\u8fdb\u5236\u6267\u884c\u6587\u4ef6: insert_sort \uff0c\u8fd9\u91cc\u5fc5\u987b\u4f7f\u7528 -g \u53c2\u6570\u544a\u8bc9\u7f16\u8bd1\u5668\u4fdd\u5b58\u7b26\u53f7\u8868(\u4ee3\u7801\u884c\u53f7\u548c\u53d8\u91cf\u5185\u5b58\u5730\u5740\u76f8\u5173\u7684\u5217\u8868)\uff0c\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u7b26\u53f7\u8868\uff0c\u5c31\u4e0d\u80fd\u5728\u8c03\u8bd5\u7684\u65f6\u5019\u4f7f\u7528\u8bf8\u5982\uff1a \u572830\u884c\u4e2d\u65ad \u548c \u6253\u5370\u53d8\u91cfx\u7684\u503c \u8fd9\u7c7b\u7684\u64cd\u4f5c\u3002 \u73b0\u5728\u7684\u7f16\u8bd1\u5668\u4e5f\u662f\u5f88\u667a\u80fd\u7684\uff0c\u4e00\u822c\u5728\u7f16\u8bd1\u9636\u6bb5\u4e5f\u80fd\u68c0\u67e5\u51fa\u4e00\u4e9b\u9519\u8bef\u6765\uff0c\u5c31\u50cf\u4e0b\u9762\u8fd9\u6837\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 insert_sort.c:29:10: warning: using the result of an assignment as a condition without parentheses [-Wparentheses] if(num_y=0) ~~~~~^~ insert_sort.c:29:10: note: place parentheses around the assignment to silence this warning if(num_y=0) ^ ( ) insert_sort.c:29:10: note: use == to turn this assignment into an equality comparison if(num_y=0) ^ == 1 warning generated. \u4e0b\u9762\u662f\u6709\u95ee\u9898\u7684\u7a0b\u5e8f\u6e90\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 /* filename: insert_sort.c */ #include stdio.h #include stdlib.h int x [ 10 ], y [ 10 ], num_inputs , num_y = 0 ; void print_results () { int i ; for ( i = 0 ; i num_inputs ; i ++ ) { printf ( %d \\n , y [ i ]); } } void scoot_over ( int jj ) { int k ; for ( k = num_y - 1 ; k jj ; k ++ ) { y [ k ] = y [ k - 1 ]; } } void insert ( int new_y ) { int j ; if ( num_y = 0 ) { y [ 0 ] = new_y ; return ; } for ( j = 0 ; j num_y ; j ++ ) { if ( new_y y [ j ]) { scoot_over ( j ); y [ j ] = new_y ; return ; } } } void process_data () { for ( num_y = 0 ; num_y num_inputs ; num_y ++ ) { insert ( x [ num_y ]); } } void get_args ( int ac , char ** av ) { int i ; num_inputs = ac - 1 ; for ( i = 0 ; i num_inputs ; i ++ ) { x [ i ] = atoi ( av [ i + 1 ]); } } int main ( int argc , char ** argv ) { get_args ( argc , argv ); process_data (); print_results (); return 0 ; } \u6211\u4eec\u5148\u8fd0\u884c\u4e00\u4e0b\uff1a 1 ./insert_sort 12 5 \u53d1\u73b0\u7a0b\u5e8f\u9677\u5165\u4e86\u6b7b\u5faa\u73af\u3002\u4f7f\u7528Ctrl-C\u4e2d\u65ad\u7a0b\u5e8f\u8fd0\u884c\u3002\u8fd9\u662f\u7b2c\u4e00\u4e2a\u9700\u8981\u89e3\u51b3\u7684bug\u3002 Debug #1 - \u7a0b\u5e8f\u6b7b\u5faa\u73af \u4f7f\u7528GDB TUI\u6a21\u5f0f\u8fdb\u884c\u8c03\u8bd5(\u53ef\u4ee5\u4f7f\u7528 ctrl-X-A \u5728\u547d\u4ee4\u884c\u548cTUI\u6a21\u5f0f\u95f4\u76f8\u4e92\u8f6c\u6362)\uff1a 1 gdb insert_sort -tui \u6309 Enter \u8fdb\u5165GDB TUI\u8c03\u8bd5\u73af\u5883\u540e\uff0c\u4f7f\u7528\u5e26\u6709\u53c2\u6570 12 5 \u7684\u8fd0\u884c(run)\u547d\u4ee4\u542f\u52a8\u7a0b\u5e8f\uff0c\u4f1a\u53d1\u73b0\u7a0b\u5e8f\u4e00\u76f4\u8fd0\u884c\uff0c\u5e76\u8fdb\u5165\u6b7b\u5faa\u73af 1 run 12 5 \u8fd9\u65f6\u6211\u4eec\u4f7f\u7528\u547d\u4ee4 Ctrl+C \u6765\u4e2d\u6b62\u8c03\u8bd5\u7a0b\u5e8f\u7684\u8fd0\u884c(\u6b64\u65f6\u5e76\u4e0d\u4f1a\u9000\u51faGDB\u8c03\u8bd5\u73af\u5883\uff0c\u7531\u4e8e\u6682\u505c\u65f6\u7a0b\u5e8f\u8fd0\u884c\u7684\u4f4d\u7f6e\u4e0d\u786e\u5b9a\uff0c\u6240\u4ee5\u4f60\u8bd5\u9a8c\u65f6\u7684\u60c5\u51b5\u548c\u6211\u7a0d\u6709\u4e9b\u4e0d\u540c\uff0c\u4e0d\u8fc7\u4e0d\u4f1a\u5f71\u54cd),\u6211\u4eec\u53d1\u73b0\u7a0b\u5e8f\u505c\u7559\u5728\u51fd\u6570 process_data() \u4e2d\u7684for\u5faa\u73af\u4e2d\uff0c\u4e9b\u65f6 num_y=1 \uff0c\u6211\u4eec\u4f7f\u7528\u4e86GDB\u7684 print \u547d\u4ee4\u6765\u67e5\u770b\u53d8\u91cf\u503c\u3002\u521d\u6b65\u65ad\u5b9a\u6b7b\u5faa\u73af\u53d1\u751f\u7684\u4f4d\u7f6e\u540e\uff0c\u5c31\u8981\u8fdb\u4e00\u6b65\u5bfb\u627e\u51fa\u73b0\u7684\u539f\u56e0\uff0c\u8fdb\u800cDebug 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250243 } \u2502 \u250244 } \u2502 \u250245 \u2502 \u250246 void process_data() \u2502 \u250247 { \u2502 \u250248 for(num_y=0;num_y num_inputs;num_y++) \u2502 \u250249 { \u2502 \u250250 insert(x[num_y]); \u2502 \u250251 } \u2502 \u250252 } \u2502 \u250253 \u2502 \u250254 void get_args(int ac, char **av) \u2502 \u250255 { \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 native process 18485 In: process_data L48 PC: 0x400684 Type apropos word to search for commands related to word ... Reading symbols from insert_sort...done. (gdb) run 12 5 Starting program: /home/parallels/Documents/debug/insert_sort 12 5 ^C Program received signal SIGINT, Interrupt. 0x0000000000400684 in process_data () at ins.c:48 (gdb) print num_y $1 = 0 \u6211\u4eec\u4f7f\u7528 next \u547d\u4ee4\u5355\u6b65\u8c03\u8bd5\uff0c next \u547d\u4ee4\u4e0d\u4f1a\u8fdb\u5165\u51fd\u6570\u5185\u90e8\uff0c\u8fd9\u662f\u4e00\u79cd\u5148\u7c97\u540e\u7ec6\u7684\u8c03\u8bd5\u65b9\u5f0f\uff0c\u5355\u6b65\u8c03\u8bd5\u4e86\u51e0\u6b21\uff0c\u53d1\u73b0\u6bcf\u6b21\u6267\u884c\u5b8c insert(x[num_y]); \u8fd9\u4e00\u53e5\u540e\uff0c num_y \u90fd\u4f1a\u53d8\u6210 0 \uff0c\u4ece\u800c\u5bfc\u81f4 for \u5faa\u73af\u4e0d\u80fd\u7ed3\u675f\u3002\u7531\u662f\u6211\u4eec\u4f7f\u7528 step \u547d\u4ee4\u5728\u8c03\u8bd5\u5230 insert(x[num_y]); \u65f6\uff0c\u8fdb\u5165\u51fd\u6570\u5185\u90e8\u8c03\u8bd5\uff0c\u7531\u4e8e num_y \u662f\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u5728 insert \u51fd\u6570\u5185\u90e8\u7b2c\u4e00\u884c\u65f6\u9519\u8bef\u7684\u628a == \u7528\u6210\u4e86 = \u8d4b\u503c\uff0c\u5bfc\u81f4\u7b2c\u6b21\u51fd\u6570\u6267\u884c\u5b8c\u540e\uff0c num_y \u90fd\u88ab\u7f6e\u4e3a\u4e860 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250224 } \u2502 \u250225 \u2502 \u250226 void insert(int new_y) \u2502 \u250227 { \u2502 \u250228 int j; \u2502 \u250229 if(num_y=0) \u2502 \u250230 { \u2502 \u250231 y[0]=new_y; \u2502 \u250232 return ; \u2502 \u250233 } \u2502 \u250234 \u2502 \u250235 for(j=0;j num_y;j++) \u2502 \u250236 { \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 native process 18485 In: insert L29 PC: 0x4005f0 (gdb) next (gdb) step insert (new_y=5) at ins.c:29 (gdb) \u53d1\u73b0\u539f\u56e0\u540e\uff0c \u6211\u4eec\u53e6\u5f00\u4e00\u4e2a\u63a7\u5236\u53f0\u4fee\u6539\u6e90\u7801\u5e76\u91cd\u65b0\u7f16\u8bd1\uff0c\u4e3a\u7684\u662f\u4e0d\u9000\u51fa\u5f53\u524d\u7684GDB\u8c03\u8bd5\u73af\u5883\uff0c\u53ef\u4ee5\u4fdd\u7559\u8c03\u8bd5\u4e2d\u8bbe\u7f6e\u8fc7\u7684\u65ad\u70b9\u7b49\u4fe1\u606f\uff0c\u8fd9\u91cc\u6211\u4eec\u8fd8\u6ca1\u6709\u8bbe\u7f6e\u8fc7\u65ad\u70b9\u3002 \u5728\u53e6\u4e00\u4e2a\u63a7\u5236\u53f0\u4e2d\u91cd\u65b0\u7f16\u8bd1\u5e76\u8fd0\u884c\u540e\uff0c\u53d1\u73b0\u6b7b\u5faa\u73af\u89e3\u9664\u4e86\uff0c\u4f46\u662f\u6392\u5e8f\u7ed3\u679c\u4e0d\u6b63\u786e\uff1a 1 2 3 4 parallels@ubuntu:~/Documents/debug$ gcc -g -Wall -o insert_sort ins.c parallels@ubuntu:~/Documents/debug$ ./insert_sort 12 5 5 0 Debug #2 - \u7a0b\u5e8f\u903b\u8f91\u9519\u8bef \u6211\u4eec\u53d1\u73b0 12 \u6ca1\u6709\u88ab\u6b63\u786e\u7684\u63d2\u5165\u5230\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\uff0c\u4e8e\u662f\u6211\u4eec\u56de\u5230GDB\u8c03\u8bd5\u73af\u5883\u6240\u5728\u7684\u63a7\u5236\u53f0\uff0c\u5728 insert \u51fd\u6570\u4e2d\u8bbe\u7f6e\u65ad\u70b9\u540e\uff0c\u4f7f\u7528 run \u547d\u4ee4\u91cd\u65b0\u5f00\u59cb\u4e00\u6b21\u8c03\u8bd5\uff0c run \u9ed8\u8ba4\u4e3a\u4f7f\u7528\u4e0a\u4e00\u6b21\u4f7f\u7528\u7684\u53c2\u6570 12 5 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250224 } \u2502 \u250225 \u2502 \u250226 void insert(int new_y) \u2502 \u250227 { \u2502 \u250228 int j; \u2502 B+ \u250229 if(num_y==0) \u2502 \u250230 { \u2502 \u250231 y[0]=new_y; \u2502 \u250232 return ; \u2502 \u250233 } \u2502 \u250234 \u2502 \u250235 for(j=0;j num_y;j++) \u2502 \u250236 { \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 native process 25009 In: insert L29 PC: 0x4005f0 [Inferior 1 (process 24275) exited normally] (gdb) break insert Breakpoint 1 at 0x4005f0: insert. (4 locations) (gdb) run Starting program: /home/parallels/Documents/debug/insert_sort 12 5 Breakpoint 1, insert (new_y=12) at ins.c:29 (gdb) (gdb) \u6211\u4eec\u770b\u5230\u7a0b\u5e8f\u5728\u65ad\u70b9\u5904\u505c\u6b62\u8fd0\u884c\u4e86\uff0c\u518d\u6b21\u4f7f\u7528\u5355\u6b65\u8c03\u8bd5\u6574\u4e2a\u6570\u7ec4\u7684\u63d2\u5165\u8fc7\u7a0b\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u6570\u5b57 12 ,\u7b2c\u4e00\u6b21\u4f1a\u88ab\u63d2\u5165\u6392\u5e8f\u7ed3\u679c\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u7b2c\u4e8c\u4e2a\u6570\u5b57 5 \u5728\u88ab\u63d2\u5165\u65f6\u4f1a\u5148\u4e0e\u5f53\u524d\u6392\u5e8f\u7ed3\u679c\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u6bd4\u8f83\u5c0f\uff0c\u4f1a\u628a\u6392\u5e8f\u7ed3\u679c\u6570\u7ec4\u7684\u6bcf\u4e00\u4e2a\u6570\u636e\u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4e3a\u8fd9\u4e2a\u8f83\u5c0f\u7684\u6570\u636e\u817e\u51fa\u4e00\u4e2a\u4f4d\u7f6e\u6765\u653e\u5165\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250233 } \u2502 \u250234 \u2502 \u250235 for(j=0;j num_y;j++) \u2502 \u250236 { \u2502 \u250237 if(new_y y[j]) \u2502 \u250238 { \u2502 \u250239 scoot_over(j); \u2502 \u250240 y[j]=new_y; \u2502 \u250241 return; \u2502 \u250242 } \u2502 \u250243 } \u2502 \u250244 } \u2502 \u250245 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 native process 25009 In: insert L41 PC: 0x400638 (gdb) print y $5 = {12, 0, 0, 0, 0, 0, 0, 0, 0, 0} (gdb) n (gdb) print y $6 = {5, 0, 0, 0, 0, 0, 0, 0, 0, 0} (gdb) \u5728\u8fd9\u4e2a\u63d2\u5165\u6392\u5e8f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53d1\u73b0\u5728\u6570\u5b57 5 \u88ab\u63d2\u5165\u540e\uff0c\u4e4b\u524d\u7684\u6570\u5b57 12 \u6ca1\u6709\u88ab\u6b63\u786e\u7684\u540e\u79fb\u4e00\u4f4d\uff0c\u6240\u4ee5\u95ee\u9898\u5c31\u5b9a\u4f4d \u5728\u51fd\u6570 scoot_over \u4e2d\u4e86\uff0c\u56e0\u4e3a\u5b83\u7684\u529f\u80fd\u548c\u6211\u4eec\u671f\u671b\u7684\u4e0d\u4e00\u81f4\u3002\u6211\u4eec\u518d\u8bbe\u7f6e\u65ad\u70b9\u5230 scoot_over \u51fd\u6570\u4e2d\uff0c\u5e76\u6e05\u9664\u4e4b\u524d\u7684\u65ad\u70b9\uff0c\u56e0\u4e3a\u95ee\u9898\u662f\u51fa\u73b0\u5728\u6570\u5b57 5 \u4e0e\u6570\u5b57 12 \u6bd4\u8f83\u540e\u7684 scoot_over \u8c03\u7528\u65f6\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u65ad\u70b9\u8bbe\u7f6e\u4e3a\u6761\u4ef6\u65ad\u70b9\uff0c\u4e5f\u5c31\u662f num_y \u4e3a 1 \u65f6\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250215 } \u2502 \u250216 \u2502 \u250217 void scoot_over(int jj) \u2502 \u250218 { \u2502 \u250219 int k ; \u2502 B+ \u250220 for(k=num_y-1;k jj;k++) \u2502 \u250221 { \u2502 \u250222 y[k]=y[k-1]; \u2502 \u250223 } \u2502 \u250224 } \u2502 \u250225 \u2502 \u250226 void insert(int new_y) \u2502 \u250227 { \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 native process 28018 In: scoot_over L20 PC: 0x4005ad (gdb) clear 29 Deleted breakpoint 1 (gdb) break scoot_over if num_y==1 Breakpoint 2 at 0x4005ad: file ins.c, line 20. (gdb) i b Num Type Disp Enb Address What 2 breakpoint keep y 0x00000000004005ad in scoot_over at ins.c:20 stop only if num_y==1 (gdb) c Continuing. Breakpoint 2, scoot_over (jj=0) at ins.c:20 (gdb) p num_y $7 = 1 \u8fd9\u65f6\u6211\u4eec\u8fd0\u884c\u5230\u65ad\u70b9\u5904\u505c\u6b62\u4e0b\u6765\uff0c\u4f7f\u7528\u5355\u6b65\u8c03\u8bd5\uff0c\u53d1\u73b0 scoot_over \u51fd\u6570\u4e2d\u7684for\u5faa\u73af\u4e00\u6b21\u90fd\u6ca1\u6709\u6267\u884c\u3002\u6b64\u65f6 num_y \u4e3a1\uff0c\u6240\u4ee5 k \u4e3a0\uff0c\u800c jj \u4e5f\u662f0\uff0c\u6240\u4ee5\u6ca1\u6709\u8fdb\u5165\u5faa\u73af\u4e2d\uff0c\u6240\u4ee5 k \u7684\u521d\u59cb\u503c\u8d4b\u503c\u4e0d\u6b63\u786e\uff0c\u5e94\u8be5\u4fee\u6539\u4e3a k=num_y \u518d\u6b21\u5728\u53e6\u4e00\u4e2a\u63a7\u5236\u53f0\u4fee\u6539\u6e90\u7a0b\u5e8f\uff0c\u7f16\u8bd1\u8fd0\u884c\uff0c\u53d1\u73b0\u4ea7\u751f\u4e86\u6bb5\u9519\u8bef\uff0c\u8fd9\u662f\u7531\u4e8e\u5185\u5b58\u5730\u5740\u8bbf\u95ee\u4e0d\u5f53\u5f15\u8d77\u7684\uff1a 1 2 3 parallels@ubuntu:~/Documents/debug$ gcc -g -Wall -o insert_sort ins.c parallels@ubuntu:~/Documents/debug$ ./insert_sort 12 5 Segmentation fault (core dumped) Debug #3 - \u7a0b\u5e8f\u6bb5\u9519\u8bef \u8fd9\u65f6\u5c31\u4f53\u73b0\u51fa\u5f00\u4e24\u4e2a\u63a7\u5236\u53f0\u7684\u597d\u5904\u4e86\uff0c\u56de\u5230GDB\u73af\u5883\u540e\uff0c\u6e05\u9664\u4e4b\u524d\u7684\u65ad\u70b9\uff0c\u5e76\u518d\u6b21\u8fd0\u884c, GDB\u4f1a\u5728\u6bb5\u9519\u8bef\u7684\u4f4d\u7f6e\u505c\u4e0b\u6765\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250217 void scoot_over(int jj) \u2502 \u250218 { \u2502 \u250219 int k ; \u2502 \u250220 for(k=num_y;k jj;k++) \u2502 \u250221 { \u2502 \u250222 y[k]=y[k-1]; \u2502 \u250223 } \u2502 \u250224 } \u2502 \u250225 \u2502 \u250226 void insert(int new_y) \u2502 \u250227 { \u2502 \u250228 int j; \u2502 \u250229 if(num_y==0) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 native process 30018 In: scoot_over L22 PC: 0x4005cc (gdb) clear 20 Deleted breakpoint 2 (gdb) run The program being debugged has been started already. Start it from the beginning? (y or n) y Starting program: /home/parallels/Documents/debug/insert_sort 12 5 Program received signal SIGSEGV, Segmentation fault. 0x00000000004005cc in scoot_over (jj=0) at ins.c:22 (gdb) print k $8 = 976 \u6b64\u65f6\u6211\u4eec\u5c06\u6570\u7ec4\u7d22\u5f15\u503c\u6253\u5370\u51fa\u6765\uff0c\u53d1\u73b0\u5b83\u8fdc\u8fdc\u5927\u4e8e\u6392\u5e8f\u7ed3\u679c\u6570\u7ec4\u7684\u8fb9\u754c 10 , \u8fd9\u662f\u7531\u4e8efor\u5faa\u73af\u7684\u53d8\u91cfk\u81ea\u52a0\u5f15\u8d77\u7684\u9519\u8bef\uff0c\u6211\u4eec\u5c06\u5176\u4fee\u6539\u4e3a\u81ea\u51cf\u3002\u518d\u6b21\u7f16\u8bd1\u8fd0\u884c\uff1a 1 2 3 4 parallels@ubuntu:~/Documents/debug$ gcc -g -Wall -o insert_sort ins.c parallels@ubuntu:~/Documents/debug$ ./insert_sort 12 5 5 12 \u53d1\u73b0\u6392\u5e8f\u4e24\u4e2a\u6570\u5b57\u6b63\u786e\u4e86\uff0c\u6211\u4eec\u8bd5\u7740\u6392\u4e0b\u591a\u4e2a\u6570\u636e\u3002 1 2 3 4 5 6 7 parallels@ubuntu:~/Documents/debug$ ./insert_sort 12 5 19 22 6 1 1 5 6 12 0 0 Debug #4 - \u7a0b\u5e8f\u9057\u6f0f\u60c5\u51b5 \u53d1\u73b0\u6392\u5e8f\u7ed3\u679c\u5bf9\u4e8e\u6570\u5b57 19 22 \u6709\u95ee\u9898\uff0c\u6211\u4eec\u91cd\u65b0\u8c03\u8bd5\u63d2\u5165\u6570\u636e19\u548c22\u65f6\u7684\u8fc7\u7a0b\uff0c\u8bbe\u7f6e\u65ad\u70b9\uff0c\u5e76\u5355\u6b65\u8ddf\u8e2a\uff0c\u53d1\u73b0\uff0c\u5b83\u4eec\u5927\u4e8e\u6392\u5e8f\u7ed3\u679c\u4e2d\u7684\u6240\u6709\u6570\u636e\u65f6\uff0c\u9700\u8981\u88ab\u63d2\u5165\u5230\u6700\u540e\u7684\u4f4d\u7f6e\uff0c\u4f46\u4e8b\u5b9e\u4e0a\u7a0b\u5e8f\u6ca1\u6709\u8003\u8651\u5230\u8fd9\u79cd\u60c5\u51b5\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250229 if(num_y==0) \u2502 \u250230 { \u2502 \u250231 y[0]=new_y; \u2502 \u250232 return ; \u2502 \u250233 } \u2502 \u250234 \u2502 \u250235 for(j=0;j num_y;j++) \u2502 \u250236 { \u2502 B+ \u250237 if(new_y y[j]) \u2502 \u250238 { \u2502 \u250239 scoot_over(j); \u2502 \u250240 y[j]=new_y; \u2502 \u250241 return; \u2502 \u250242 } \u2502 \u250243 } \u2502 \u250244 } \u2502 \u250245 \u2502 \u250246 void process_data() \u2502 \u250247 { \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 native process 32621 In: insert L35 PC: 0x400637 (gdb) break 37 if new_y == 19 Breakpoint 1 at 0x40060b: file ins.c, line 37. (gdb) run 12 5 19 22 6 1 Starting program: /home/parallels/Documents/debug/insert_sort 12 5 19 22 6 1 Breakpoint 1, insert (new_y=19) at ins.c:37 (gdb) print y $1 = {5, 12, 0, 0, 0, 0, 0, 0, 0, 0} (gdb) n (gdb) \u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728\u7b2c 43 \u884c\u540e\u9762\u8865\u5145\u8fd9\u79cd\u60c5\u51b5\uff1a y[j]=new_y; \u91cd\u65b0\u7f16\u8bd1\u5e76\u8fd0\u884c\uff1a 1 2 3 4 5 6 7 8 parallels@ubuntu:~/Documents/debug$ gcc -g -Wall -o insert_sort ins.c parallels@ubuntu:~/Documents/debug$ ./insert_sort 12 5 19 22 6 1 1 5 6 12 19 22 \u8fd9\u6b21\u53d1\u73b0\u7ed3\u679c\u6b63\u786e\uff0c\u4f46\u8fd8\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u6d4b\u8bd5\u4e00\u4e0b\u3002\u6574\u4e2a\u8fc7\u6574\u5c31\u662f\u8fd9\u4e2a\u6837\u5b50\uff0c\u8c03\u8bd5\u662f\u4e00\u95e8\u827a\u672f\u800c\u4e0d\u662f\u79d1\u5b66\uff0c\u901a\u5e38\u5f88\u96be\u63cf\u8ff0\u8fd9\u6574\u4e2a\u8fc7\u7a0b\uff0c\u6240\u4ee5\u6709\u758f\u6f0f\u7684\u5730\u65b9\uff0c\u8bf7\u591a\u5305\u6db5\u3002","title":"Use GDB"},{"location":"tech/Use GDB/#use-gdb","text":"\u7528\u4e86\u51e0\u5929GDB\uff0c\u89c9\u5f97\u633a\u597d\u7528\u7684\uff0c\u7279\u522b\u662f\u5199\u793a\u4f8b\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u7531\u4e8e\u6e90\u6587\u4ef6\u4e5f\u4e0d\u662f\u5f88\u590d\u6742\uff0c\u8c03\u8bd5\u5de5\u4f5c\u8fd8\u662f\u4f7f\u7528\u8f7b\u91cf\u7ea7\u7684GDB\u6765\u7684\u65b9\u4fbf\u3001\u76f4\u63a5\uff0c\u540c\u65f6GDB\u8fd8\u53ef\u4ee5\u8fdc\u7a0b\u8c03\u8bd5\uff0c\u529f\u80fd\u4e0a\u4e5f\u662f\u5f88\u5f3a\u5927\u7684\u3002 \u4e0b\u9762\u6574\u7406\u4e00\u4e0b\u4f7f\u7528GDB\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u7ecf\u5e38\u4f7f\u7528\u7684\u4e00\u4e9b\u547d\u4ee4\u548c\u7ec4\u5408\u952e\uff1a gdb insert_sort \u4f7f\u7528GDB\u8c03\u8bd5\u7a0b\u5e8f insert_sort break 16 \u5728\u7a0b\u5e8f\u7684\u7b2c16\u884c\u8bbe\u7f6e\u65ad\u70b9 tbreak 16 \u5728\u7a0b\u5e8f\u7b2c16\u884c\u8bbe\u7f6e\u4e00\u4e2a\u4e34\u65f6\u65ad\u70b9\uff0c\u4e2d\u6b62\u4e00\u6b21\u540e\u5931\u6548 clear 16 \u6e05\u9664\u7a0b\u5e8f\u7b2c16\u884c\u8bbe\u7f6e\u7684\u65ad\u70b9 delete 1 \u5220\u9664\u7b2c\u4e00\u4e2a\u65ad\u70b9 disable 1 2 5 \u4f7f\u65ad\u70b91\uff0c2\uff0c5\u4e0d\u8d77\u4f5c\u7528 enable 1 2 5 \u4f7f\u65ad\u70b91\uff0c2\uff0c5\u8d77\u4f5c\u7528 enable once 1 2 \u4f7f\u80fd\u65ad\u70b91\uff0c2\u8d77\u4f5c\u7528\u4e00\u6b21\uff0c\u4e4b\u540edisable info break \u67e5\u770b\u6240\u6709\u65ad\u70b9\u4fe1\u606f ctrl-P \u548c ctrl-N \u524d\u540e\u6d4f\u89c8\u4ee3\u7801\u6216\u7f16\u8f91 ENTER \u91cd\u590d\u6267\u884c\u4e0a\u6b21\u8c03\u8bd5\u547d\u4ee4 next \u8c03\u8bd5\u4e0b\u4e00\u53e5\u4ee3\u7801(Step Over) next 3 \u5411\u4e0b\u8d70\u4e09\u53e5(Step Over) define \u53ef\u4ee5\u5b9a\u4e49\u76f8\u5173\u7684\u5b8f\u547d\u4ee4\uff0c\u4f7f\u8f93\u5165\u547d\u4ee4\u66f4\u52a0\u81ea\u7531\u548c\u4e2a\u6027 run 12 5 6 \u8fd0\u884c\u5230\u65ad\u70b912\u30015\u30016\u65f6\u6682\u505c\u6267\u884c list \u591a\u4e2a\u6e90\u6587\u4ef6\u8c03\u8bd5\u65f6\u663e\u793a\u4e0d\u540c\u7684\u4ee3\u7801\u533a\u57df step \u6b65\u5165\u8c03\u8bd5\uff08Step Into) continue \u7ee7\u7eed\u6267\u884c continue 3 \u7ee7\u7eed\u6267\u884c\uff0c\u5e76\u5ffd\u7565\u4e09\u6b21\u65ad\u70b9 commands 3 \u7ed9\u65ad\u70b9\u5173\u8054\u76f8\u5173\u7684\u547d\u4ee4\uff0c\u4e00\u884c\u4e00\u6761\u547d\u4ee4\uff0c\u4ee5end\u7ed3\u675f\uff0c\u6dfb\u52a0\u4e00\u6761slient\u547d\u4ee4\u53ef\u4ee5\u5c4f\u6389\u65ad\u70b9\u505c\u6b62\u65f6\u81ea\u52a8\u4ea7\u751f\u7684\u76f8\u5173\u4fe1\u606f\u8f93\u51fa define \u5b9a\u4e49GDB\u5b8f\u547d\u4ee4\uff0c\u4ee5end\u7ed3\u675f\u5b9a\u4e49, \u53c2\u6570\u4ee5$\u53f7\u5f00\u59cb show user \u5217\u51fa\u6240\u6709\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u5b8f\u547d\u4ee4 until \u7ee7\u7eed\u6267\u884c\uff0c\u76f4\u5230\u4e00\u4e2a\u5faa\u73af\u5b8c\u6210 until swap \u7ee7\u7eed\u6267\u884c\uff0c\u76f4\u5230swap\u51fd\u6570\u88ab\u6267\u884c finish \u7ee7\u7eed\u6267\u884c\uff0c\u76f4\u5230\u51fd\u6570\u8fd4\u56de tbreak 16 16\u884c\u8bbe\u7f6e\u4e34\u65f6\u65ad\u70b9\uff0c\u4e34\u65f6\u65ad\u70b9\u53ea\u4f1a\u8fdb\u5165\u4e00\u6b21 until \u548c finish \u7528\u6765\u521b\u5efa\u6761\u4ef6\u65ad\u70b9 watch i \u89c2\u5bdf\u53d8\u91cfi,\u53ea\u8981\u5b83\u7684\u503c\u53d1\u751f\u4e86\u6539\u53d8\uff0c\u5c31\u4f1a\u505c\u6b62\u8fd0\u884c print j \u7a0b\u5e8f\u5230\u65ad\u70b9\u6682\u505c\u65f6\uff0c\u6253\u5370\u53d8\u91cf\u503c watch z \u53d8\u91cfz\u7684\u503c\u6539\u53d8\u65f6\uff0c\u6682\u505c\u6267\u884c\u7a0b\u5e8f watch (z 28) \u8bbe\u7f6e\u6761\u4ef6\u5224\u65ad\u7684\u76d1\u89c6\u65ad\u70b9 frame 1 \u67e5\u770b\u524d\u4e00\u4e2a\u8c03\u7528\u6808\u4fe1\u606f frame 0 \u67e5\u770b\u5f53\u524d\u8c03\u7528\u6808 up \u8c03\u7528\u6808\u4e0a\u4e00\u7ea7 down \u8c03\u7528\u6808\u4e0b\u4e00\u7ea7 backtrace \u67e5\u770b\u6574\u4e2a\u8c03\u7528\u6808\u4fe1\u606f help \u67e5\u770bGDB\u5e2e\u52a9\u4fe1\u606f GDB\u8fd8\u63d0\u4f9b\u4e86 TUI \u6a21\u5f0f\uff0c\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4e2d\u63d0\u4f9b\u001d GUI \u7c7b\u4f3c\u7684\u663e\u793a\u3002 gdb -tui insert_sort \u4ee5TUI\u6a21\u5f0f\u542f\u52a8GDB ctrl-X-A \u547d\u4ee4\u884c\u001d\u65f6 \u975eTUI \u548c TUI \u6a21\u5f0f\u76f8\u4e92\u8f6c\u6362 \u77e5\u9053\u4e86\u4e00\u4e9b\u57fa\u672c\u547d\u4ee4\uff0c\u5c31\u4ee5\u4e00\u4e2a\u5b9e\u9645\u8c03\u8bd5\u4f8b\u5b50\u5de9\u56fa\u4e00\u4e0b\u3002","title":"Use GDB"},{"location":"tech/Use GDB/#_1","text":"\u4e0b\u9762\u4e00\u4e2a\u793a\u4f8b\u7a0b\u5e8f insert_sort.c \uff0c\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u7f16\u8bd1\uff1a 1 gcc -g -Wall -o insert_sort insert_sort.c \u7f16\u8bd1\u540e\u751f\u6210\u4e86\u4e8c\u8fdb\u5236\u6267\u884c\u6587\u4ef6: insert_sort \uff0c\u8fd9\u91cc\u5fc5\u987b\u4f7f\u7528 -g \u53c2\u6570\u544a\u8bc9\u7f16\u8bd1\u5668\u4fdd\u5b58\u7b26\u53f7\u8868(\u4ee3\u7801\u884c\u53f7\u548c\u53d8\u91cf\u5185\u5b58\u5730\u5740\u76f8\u5173\u7684\u5217\u8868)\uff0c\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u7b26\u53f7\u8868\uff0c\u5c31\u4e0d\u80fd\u5728\u8c03\u8bd5\u7684\u65f6\u5019\u4f7f\u7528\u8bf8\u5982\uff1a \u572830\u884c\u4e2d\u65ad \u548c \u6253\u5370\u53d8\u91cfx\u7684\u503c \u8fd9\u7c7b\u7684\u64cd\u4f5c\u3002 \u73b0\u5728\u7684\u7f16\u8bd1\u5668\u4e5f\u662f\u5f88\u667a\u80fd\u7684\uff0c\u4e00\u822c\u5728\u7f16\u8bd1\u9636\u6bb5\u4e5f\u80fd\u68c0\u67e5\u51fa\u4e00\u4e9b\u9519\u8bef\u6765\uff0c\u5c31\u50cf\u4e0b\u9762\u8fd9\u6837\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 insert_sort.c:29:10: warning: using the result of an assignment as a condition without parentheses [-Wparentheses] if(num_y=0) ~~~~~^~ insert_sort.c:29:10: note: place parentheses around the assignment to silence this warning if(num_y=0) ^ ( ) insert_sort.c:29:10: note: use == to turn this assignment into an equality comparison if(num_y=0) ^ == 1 warning generated. \u4e0b\u9762\u662f\u6709\u95ee\u9898\u7684\u7a0b\u5e8f\u6e90\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 /* filename: insert_sort.c */ #include stdio.h #include stdlib.h int x [ 10 ], y [ 10 ], num_inputs , num_y = 0 ; void print_results () { int i ; for ( i = 0 ; i num_inputs ; i ++ ) { printf ( %d \\n , y [ i ]); } } void scoot_over ( int jj ) { int k ; for ( k = num_y - 1 ; k jj ; k ++ ) { y [ k ] = y [ k - 1 ]; } } void insert ( int new_y ) { int j ; if ( num_y = 0 ) { y [ 0 ] = new_y ; return ; } for ( j = 0 ; j num_y ; j ++ ) { if ( new_y y [ j ]) { scoot_over ( j ); y [ j ] = new_y ; return ; } } } void process_data () { for ( num_y = 0 ; num_y num_inputs ; num_y ++ ) { insert ( x [ num_y ]); } } void get_args ( int ac , char ** av ) { int i ; num_inputs = ac - 1 ; for ( i = 0 ; i num_inputs ; i ++ ) { x [ i ] = atoi ( av [ i + 1 ]); } } int main ( int argc , char ** argv ) { get_args ( argc , argv ); process_data (); print_results (); return 0 ; } \u6211\u4eec\u5148\u8fd0\u884c\u4e00\u4e0b\uff1a 1 ./insert_sort 12 5 \u53d1\u73b0\u7a0b\u5e8f\u9677\u5165\u4e86\u6b7b\u5faa\u73af\u3002\u4f7f\u7528Ctrl-C\u4e2d\u65ad\u7a0b\u5e8f\u8fd0\u884c\u3002\u8fd9\u662f\u7b2c\u4e00\u4e2a\u9700\u8981\u89e3\u51b3\u7684bug\u3002","title":"\u4e00\u4e2a\u8c03\u8bd5\u5b9e\u4f8b"},{"location":"tech/Use GDB/#debug-1-","text":"\u4f7f\u7528GDB TUI\u6a21\u5f0f\u8fdb\u884c\u8c03\u8bd5(\u53ef\u4ee5\u4f7f\u7528 ctrl-X-A \u5728\u547d\u4ee4\u884c\u548cTUI\u6a21\u5f0f\u95f4\u76f8\u4e92\u8f6c\u6362)\uff1a 1 gdb insert_sort -tui \u6309 Enter \u8fdb\u5165GDB TUI\u8c03\u8bd5\u73af\u5883\u540e\uff0c\u4f7f\u7528\u5e26\u6709\u53c2\u6570 12 5 \u7684\u8fd0\u884c(run)\u547d\u4ee4\u542f\u52a8\u7a0b\u5e8f\uff0c\u4f1a\u53d1\u73b0\u7a0b\u5e8f\u4e00\u76f4\u8fd0\u884c\uff0c\u5e76\u8fdb\u5165\u6b7b\u5faa\u73af 1 run 12 5 \u8fd9\u65f6\u6211\u4eec\u4f7f\u7528\u547d\u4ee4 Ctrl+C \u6765\u4e2d\u6b62\u8c03\u8bd5\u7a0b\u5e8f\u7684\u8fd0\u884c(\u6b64\u65f6\u5e76\u4e0d\u4f1a\u9000\u51faGDB\u8c03\u8bd5\u73af\u5883\uff0c\u7531\u4e8e\u6682\u505c\u65f6\u7a0b\u5e8f\u8fd0\u884c\u7684\u4f4d\u7f6e\u4e0d\u786e\u5b9a\uff0c\u6240\u4ee5\u4f60\u8bd5\u9a8c\u65f6\u7684\u60c5\u51b5\u548c\u6211\u7a0d\u6709\u4e9b\u4e0d\u540c\uff0c\u4e0d\u8fc7\u4e0d\u4f1a\u5f71\u54cd),\u6211\u4eec\u53d1\u73b0\u7a0b\u5e8f\u505c\u7559\u5728\u51fd\u6570 process_data() \u4e2d\u7684for\u5faa\u73af\u4e2d\uff0c\u4e9b\u65f6 num_y=1 \uff0c\u6211\u4eec\u4f7f\u7528\u4e86GDB\u7684 print \u547d\u4ee4\u6765\u67e5\u770b\u53d8\u91cf\u503c\u3002\u521d\u6b65\u65ad\u5b9a\u6b7b\u5faa\u73af\u53d1\u751f\u7684\u4f4d\u7f6e\u540e\uff0c\u5c31\u8981\u8fdb\u4e00\u6b65\u5bfb\u627e\u51fa\u73b0\u7684\u539f\u56e0\uff0c\u8fdb\u800cDebug 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250243 } \u2502 \u250244 } \u2502 \u250245 \u2502 \u250246 void process_data() \u2502 \u250247 { \u2502 \u250248 for(num_y=0;num_y num_inputs;num_y++) \u2502 \u250249 { \u2502 \u250250 insert(x[num_y]); \u2502 \u250251 } \u2502 \u250252 } \u2502 \u250253 \u2502 \u250254 void get_args(int ac, char **av) \u2502 \u250255 { \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 native process 18485 In: process_data L48 PC: 0x400684 Type apropos word to search for commands related to word ... Reading symbols from insert_sort...done. (gdb) run 12 5 Starting program: /home/parallels/Documents/debug/insert_sort 12 5 ^C Program received signal SIGINT, Interrupt. 0x0000000000400684 in process_data () at ins.c:48 (gdb) print num_y $1 = 0 \u6211\u4eec\u4f7f\u7528 next \u547d\u4ee4\u5355\u6b65\u8c03\u8bd5\uff0c next \u547d\u4ee4\u4e0d\u4f1a\u8fdb\u5165\u51fd\u6570\u5185\u90e8\uff0c\u8fd9\u662f\u4e00\u79cd\u5148\u7c97\u540e\u7ec6\u7684\u8c03\u8bd5\u65b9\u5f0f\uff0c\u5355\u6b65\u8c03\u8bd5\u4e86\u51e0\u6b21\uff0c\u53d1\u73b0\u6bcf\u6b21\u6267\u884c\u5b8c insert(x[num_y]); \u8fd9\u4e00\u53e5\u540e\uff0c num_y \u90fd\u4f1a\u53d8\u6210 0 \uff0c\u4ece\u800c\u5bfc\u81f4 for \u5faa\u73af\u4e0d\u80fd\u7ed3\u675f\u3002\u7531\u662f\u6211\u4eec\u4f7f\u7528 step \u547d\u4ee4\u5728\u8c03\u8bd5\u5230 insert(x[num_y]); \u65f6\uff0c\u8fdb\u5165\u51fd\u6570\u5185\u90e8\u8c03\u8bd5\uff0c\u7531\u4e8e num_y \u662f\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u5728 insert \u51fd\u6570\u5185\u90e8\u7b2c\u4e00\u884c\u65f6\u9519\u8bef\u7684\u628a == \u7528\u6210\u4e86 = \u8d4b\u503c\uff0c\u5bfc\u81f4\u7b2c\u6b21\u51fd\u6570\u6267\u884c\u5b8c\u540e\uff0c num_y \u90fd\u88ab\u7f6e\u4e3a\u4e860 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250224 } \u2502 \u250225 \u2502 \u250226 void insert(int new_y) \u2502 \u250227 { \u2502 \u250228 int j; \u2502 \u250229 if(num_y=0) \u2502 \u250230 { \u2502 \u250231 y[0]=new_y; \u2502 \u250232 return ; \u2502 \u250233 } \u2502 \u250234 \u2502 \u250235 for(j=0;j num_y;j++) \u2502 \u250236 { \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 native process 18485 In: insert L29 PC: 0x4005f0 (gdb) next (gdb) step insert (new_y=5) at ins.c:29 (gdb) \u53d1\u73b0\u539f\u56e0\u540e\uff0c \u6211\u4eec\u53e6\u5f00\u4e00\u4e2a\u63a7\u5236\u53f0\u4fee\u6539\u6e90\u7801\u5e76\u91cd\u65b0\u7f16\u8bd1\uff0c\u4e3a\u7684\u662f\u4e0d\u9000\u51fa\u5f53\u524d\u7684GDB\u8c03\u8bd5\u73af\u5883\uff0c\u53ef\u4ee5\u4fdd\u7559\u8c03\u8bd5\u4e2d\u8bbe\u7f6e\u8fc7\u7684\u65ad\u70b9\u7b49\u4fe1\u606f\uff0c\u8fd9\u91cc\u6211\u4eec\u8fd8\u6ca1\u6709\u8bbe\u7f6e\u8fc7\u65ad\u70b9\u3002 \u5728\u53e6\u4e00\u4e2a\u63a7\u5236\u53f0\u4e2d\u91cd\u65b0\u7f16\u8bd1\u5e76\u8fd0\u884c\u540e\uff0c\u53d1\u73b0\u6b7b\u5faa\u73af\u89e3\u9664\u4e86\uff0c\u4f46\u662f\u6392\u5e8f\u7ed3\u679c\u4e0d\u6b63\u786e\uff1a 1 2 3 4 parallels@ubuntu:~/Documents/debug$ gcc -g -Wall -o insert_sort ins.c parallels@ubuntu:~/Documents/debug$ ./insert_sort 12 5 5 0","title":"Debug #1 - \u7a0b\u5e8f\u6b7b\u5faa\u73af"},{"location":"tech/Use GDB/#debug-2-","text":"\u6211\u4eec\u53d1\u73b0 12 \u6ca1\u6709\u88ab\u6b63\u786e\u7684\u63d2\u5165\u5230\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\uff0c\u4e8e\u662f\u6211\u4eec\u56de\u5230GDB\u8c03\u8bd5\u73af\u5883\u6240\u5728\u7684\u63a7\u5236\u53f0\uff0c\u5728 insert \u51fd\u6570\u4e2d\u8bbe\u7f6e\u65ad\u70b9\u540e\uff0c\u4f7f\u7528 run \u547d\u4ee4\u91cd\u65b0\u5f00\u59cb\u4e00\u6b21\u8c03\u8bd5\uff0c run \u9ed8\u8ba4\u4e3a\u4f7f\u7528\u4e0a\u4e00\u6b21\u4f7f\u7528\u7684\u53c2\u6570 12 5 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250224 } \u2502 \u250225 \u2502 \u250226 void insert(int new_y) \u2502 \u250227 { \u2502 \u250228 int j; \u2502 B+ \u250229 if(num_y==0) \u2502 \u250230 { \u2502 \u250231 y[0]=new_y; \u2502 \u250232 return ; \u2502 \u250233 } \u2502 \u250234 \u2502 \u250235 for(j=0;j num_y;j++) \u2502 \u250236 { \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 native process 25009 In: insert L29 PC: 0x4005f0 [Inferior 1 (process 24275) exited normally] (gdb) break insert Breakpoint 1 at 0x4005f0: insert. (4 locations) (gdb) run Starting program: /home/parallels/Documents/debug/insert_sort 12 5 Breakpoint 1, insert (new_y=12) at ins.c:29 (gdb) (gdb) \u6211\u4eec\u770b\u5230\u7a0b\u5e8f\u5728\u65ad\u70b9\u5904\u505c\u6b62\u8fd0\u884c\u4e86\uff0c\u518d\u6b21\u4f7f\u7528\u5355\u6b65\u8c03\u8bd5\u6574\u4e2a\u6570\u7ec4\u7684\u63d2\u5165\u8fc7\u7a0b\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u6570\u5b57 12 ,\u7b2c\u4e00\u6b21\u4f1a\u88ab\u63d2\u5165\u6392\u5e8f\u7ed3\u679c\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u7b2c\u4e8c\u4e2a\u6570\u5b57 5 \u5728\u88ab\u63d2\u5165\u65f6\u4f1a\u5148\u4e0e\u5f53\u524d\u6392\u5e8f\u7ed3\u679c\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u6bd4\u8f83\u5c0f\uff0c\u4f1a\u628a\u6392\u5e8f\u7ed3\u679c\u6570\u7ec4\u7684\u6bcf\u4e00\u4e2a\u6570\u636e\u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4e3a\u8fd9\u4e2a\u8f83\u5c0f\u7684\u6570\u636e\u817e\u51fa\u4e00\u4e2a\u4f4d\u7f6e\u6765\u653e\u5165\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250233 } \u2502 \u250234 \u2502 \u250235 for(j=0;j num_y;j++) \u2502 \u250236 { \u2502 \u250237 if(new_y y[j]) \u2502 \u250238 { \u2502 \u250239 scoot_over(j); \u2502 \u250240 y[j]=new_y; \u2502 \u250241 return; \u2502 \u250242 } \u2502 \u250243 } \u2502 \u250244 } \u2502 \u250245 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 native process 25009 In: insert L41 PC: 0x400638 (gdb) print y $5 = {12, 0, 0, 0, 0, 0, 0, 0, 0, 0} (gdb) n (gdb) print y $6 = {5, 0, 0, 0, 0, 0, 0, 0, 0, 0} (gdb) \u5728\u8fd9\u4e2a\u63d2\u5165\u6392\u5e8f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53d1\u73b0\u5728\u6570\u5b57 5 \u88ab\u63d2\u5165\u540e\uff0c\u4e4b\u524d\u7684\u6570\u5b57 12 \u6ca1\u6709\u88ab\u6b63\u786e\u7684\u540e\u79fb\u4e00\u4f4d\uff0c\u6240\u4ee5\u95ee\u9898\u5c31\u5b9a\u4f4d \u5728\u51fd\u6570 scoot_over \u4e2d\u4e86\uff0c\u56e0\u4e3a\u5b83\u7684\u529f\u80fd\u548c\u6211\u4eec\u671f\u671b\u7684\u4e0d\u4e00\u81f4\u3002\u6211\u4eec\u518d\u8bbe\u7f6e\u65ad\u70b9\u5230 scoot_over \u51fd\u6570\u4e2d\uff0c\u5e76\u6e05\u9664\u4e4b\u524d\u7684\u65ad\u70b9\uff0c\u56e0\u4e3a\u95ee\u9898\u662f\u51fa\u73b0\u5728\u6570\u5b57 5 \u4e0e\u6570\u5b57 12 \u6bd4\u8f83\u540e\u7684 scoot_over \u8c03\u7528\u65f6\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u65ad\u70b9\u8bbe\u7f6e\u4e3a\u6761\u4ef6\u65ad\u70b9\uff0c\u4e5f\u5c31\u662f num_y \u4e3a 1 \u65f6\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250215 } \u2502 \u250216 \u2502 \u250217 void scoot_over(int jj) \u2502 \u250218 { \u2502 \u250219 int k ; \u2502 B+ \u250220 for(k=num_y-1;k jj;k++) \u2502 \u250221 { \u2502 \u250222 y[k]=y[k-1]; \u2502 \u250223 } \u2502 \u250224 } \u2502 \u250225 \u2502 \u250226 void insert(int new_y) \u2502 \u250227 { \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 native process 28018 In: scoot_over L20 PC: 0x4005ad (gdb) clear 29 Deleted breakpoint 1 (gdb) break scoot_over if num_y==1 Breakpoint 2 at 0x4005ad: file ins.c, line 20. (gdb) i b Num Type Disp Enb Address What 2 breakpoint keep y 0x00000000004005ad in scoot_over at ins.c:20 stop only if num_y==1 (gdb) c Continuing. Breakpoint 2, scoot_over (jj=0) at ins.c:20 (gdb) p num_y $7 = 1 \u8fd9\u65f6\u6211\u4eec\u8fd0\u884c\u5230\u65ad\u70b9\u5904\u505c\u6b62\u4e0b\u6765\uff0c\u4f7f\u7528\u5355\u6b65\u8c03\u8bd5\uff0c\u53d1\u73b0 scoot_over \u51fd\u6570\u4e2d\u7684for\u5faa\u73af\u4e00\u6b21\u90fd\u6ca1\u6709\u6267\u884c\u3002\u6b64\u65f6 num_y \u4e3a1\uff0c\u6240\u4ee5 k \u4e3a0\uff0c\u800c jj \u4e5f\u662f0\uff0c\u6240\u4ee5\u6ca1\u6709\u8fdb\u5165\u5faa\u73af\u4e2d\uff0c\u6240\u4ee5 k \u7684\u521d\u59cb\u503c\u8d4b\u503c\u4e0d\u6b63\u786e\uff0c\u5e94\u8be5\u4fee\u6539\u4e3a k=num_y \u518d\u6b21\u5728\u53e6\u4e00\u4e2a\u63a7\u5236\u53f0\u4fee\u6539\u6e90\u7a0b\u5e8f\uff0c\u7f16\u8bd1\u8fd0\u884c\uff0c\u53d1\u73b0\u4ea7\u751f\u4e86\u6bb5\u9519\u8bef\uff0c\u8fd9\u662f\u7531\u4e8e\u5185\u5b58\u5730\u5740\u8bbf\u95ee\u4e0d\u5f53\u5f15\u8d77\u7684\uff1a 1 2 3 parallels@ubuntu:~/Documents/debug$ gcc -g -Wall -o insert_sort ins.c parallels@ubuntu:~/Documents/debug$ ./insert_sort 12 5 Segmentation fault (core dumped)","title":"Debug #2 - \u7a0b\u5e8f\u903b\u8f91\u9519\u8bef"},{"location":"tech/Use GDB/#debug-3-","text":"\u8fd9\u65f6\u5c31\u4f53\u73b0\u51fa\u5f00\u4e24\u4e2a\u63a7\u5236\u53f0\u7684\u597d\u5904\u4e86\uff0c\u56de\u5230GDB\u73af\u5883\u540e\uff0c\u6e05\u9664\u4e4b\u524d\u7684\u65ad\u70b9\uff0c\u5e76\u518d\u6b21\u8fd0\u884c, GDB\u4f1a\u5728\u6bb5\u9519\u8bef\u7684\u4f4d\u7f6e\u505c\u4e0b\u6765\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250217 void scoot_over(int jj) \u2502 \u250218 { \u2502 \u250219 int k ; \u2502 \u250220 for(k=num_y;k jj;k++) \u2502 \u250221 { \u2502 \u250222 y[k]=y[k-1]; \u2502 \u250223 } \u2502 \u250224 } \u2502 \u250225 \u2502 \u250226 void insert(int new_y) \u2502 \u250227 { \u2502 \u250228 int j; \u2502 \u250229 if(num_y==0) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 native process 30018 In: scoot_over L22 PC: 0x4005cc (gdb) clear 20 Deleted breakpoint 2 (gdb) run The program being debugged has been started already. Start it from the beginning? (y or n) y Starting program: /home/parallels/Documents/debug/insert_sort 12 5 Program received signal SIGSEGV, Segmentation fault. 0x00000000004005cc in scoot_over (jj=0) at ins.c:22 (gdb) print k $8 = 976 \u6b64\u65f6\u6211\u4eec\u5c06\u6570\u7ec4\u7d22\u5f15\u503c\u6253\u5370\u51fa\u6765\uff0c\u53d1\u73b0\u5b83\u8fdc\u8fdc\u5927\u4e8e\u6392\u5e8f\u7ed3\u679c\u6570\u7ec4\u7684\u8fb9\u754c 10 , \u8fd9\u662f\u7531\u4e8efor\u5faa\u73af\u7684\u53d8\u91cfk\u81ea\u52a0\u5f15\u8d77\u7684\u9519\u8bef\uff0c\u6211\u4eec\u5c06\u5176\u4fee\u6539\u4e3a\u81ea\u51cf\u3002\u518d\u6b21\u7f16\u8bd1\u8fd0\u884c\uff1a 1 2 3 4 parallels@ubuntu:~/Documents/debug$ gcc -g -Wall -o insert_sort ins.c parallels@ubuntu:~/Documents/debug$ ./insert_sort 12 5 5 12 \u53d1\u73b0\u6392\u5e8f\u4e24\u4e2a\u6570\u5b57\u6b63\u786e\u4e86\uff0c\u6211\u4eec\u8bd5\u7740\u6392\u4e0b\u591a\u4e2a\u6570\u636e\u3002 1 2 3 4 5 6 7 parallels@ubuntu:~/Documents/debug$ ./insert_sort 12 5 19 22 6 1 1 5 6 12 0 0","title":"Debug #3 - \u7a0b\u5e8f\u6bb5\u9519\u8bef"},{"location":"tech/Use GDB/#debug-4-","text":"\u53d1\u73b0\u6392\u5e8f\u7ed3\u679c\u5bf9\u4e8e\u6570\u5b57 19 22 \u6709\u95ee\u9898\uff0c\u6211\u4eec\u91cd\u65b0\u8c03\u8bd5\u63d2\u5165\u6570\u636e19\u548c22\u65f6\u7684\u8fc7\u7a0b\uff0c\u8bbe\u7f6e\u65ad\u70b9\uff0c\u5e76\u5355\u6b65\u8ddf\u8e2a\uff0c\u53d1\u73b0\uff0c\u5b83\u4eec\u5927\u4e8e\u6392\u5e8f\u7ed3\u679c\u4e2d\u7684\u6240\u6709\u6570\u636e\u65f6\uff0c\u9700\u8981\u88ab\u63d2\u5165\u5230\u6700\u540e\u7684\u4f4d\u7f6e\uff0c\u4f46\u4e8b\u5b9e\u4e0a\u7a0b\u5e8f\u6ca1\u6709\u8003\u8651\u5230\u8fd9\u79cd\u60c5\u51b5\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 \u250c\u2500\u2500ins.c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250229 if(num_y==0) \u2502 \u250230 { \u2502 \u250231 y[0]=new_y; \u2502 \u250232 return ; \u2502 \u250233 } \u2502 \u250234 \u2502 \u250235 for(j=0;j num_y;j++) \u2502 \u250236 { \u2502 B+ \u250237 if(new_y y[j]) \u2502 \u250238 { \u2502 \u250239 scoot_over(j); \u2502 \u250240 y[j]=new_y; \u2502 \u250241 return; \u2502 \u250242 } \u2502 \u250243 } \u2502 \u250244 } \u2502 \u250245 \u2502 \u250246 void process_data() \u2502 \u250247 { \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 native process 32621 In: insert L35 PC: 0x400637 (gdb) break 37 if new_y == 19 Breakpoint 1 at 0x40060b: file ins.c, line 37. (gdb) run 12 5 19 22 6 1 Starting program: /home/parallels/Documents/debug/insert_sort 12 5 19 22 6 1 Breakpoint 1, insert (new_y=19) at ins.c:37 (gdb) print y $1 = {5, 12, 0, 0, 0, 0, 0, 0, 0, 0} (gdb) n (gdb) \u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728\u7b2c 43 \u884c\u540e\u9762\u8865\u5145\u8fd9\u79cd\u60c5\u51b5\uff1a y[j]=new_y; \u91cd\u65b0\u7f16\u8bd1\u5e76\u8fd0\u884c\uff1a 1 2 3 4 5 6 7 8 parallels@ubuntu:~/Documents/debug$ gcc -g -Wall -o insert_sort ins.c parallels@ubuntu:~/Documents/debug$ ./insert_sort 12 5 19 22 6 1 1 5 6 12 19 22 \u8fd9\u6b21\u53d1\u73b0\u7ed3\u679c\u6b63\u786e\uff0c\u4f46\u8fd8\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u6d4b\u8bd5\u4e00\u4e0b\u3002\u6574\u4e2a\u8fc7\u6574\u5c31\u662f\u8fd9\u4e2a\u6837\u5b50\uff0c\u8c03\u8bd5\u662f\u4e00\u95e8\u827a\u672f\u800c\u4e0d\u662f\u79d1\u5b66\uff0c\u901a\u5e38\u5f88\u96be\u63cf\u8ff0\u8fd9\u6574\u4e2a\u8fc7\u7a0b\uff0c\u6240\u4ee5\u6709\u758f\u6f0f\u7684\u5730\u65b9\uff0c\u8bf7\u591a\u5305\u6db5\u3002","title":"Debug #4 - \u7a0b\u5e8f\u9057\u6f0f\u60c5\u51b5"},{"location":"tech/User OpenCV to add watermark on a video/","text":"User OpenCV to add watermark on a video \u5b89\u88c5\u5f00\u53d1\u73af\u5883 \u9996\u5148\uff0c\u9700\u8981 OpenCV \u5f00\u53d1\u73af\u5883\uff0c\u5c31\u662f\u5b89\u88c5 OpenCV \u76f8\u5173\u7684\u5e93\u3002 \u76f4\u63a5\u5230 GitHub \u4e0a\u62c9\u4e0b\u001d OpenCV\u6e90\u4ee3\u7801 \uff0c\u7136\u540e\u8fdb\u5165 \u9879\u76ee\u6587\u6863 \u4e2d\u5bfb\u627e\u4ece\u6e90\u4ee3\u7801\u7f16\u8bd1\u7684\u65b9\u6cd5\u3002\u6211\u7684\u5e73\u53f0\u662f MacOS \uff0c\u6240\u4ee5\u627e\u5230\u7684\u662fLinux/Mac\u5e73\u53f0\u4e0b\u7684\u5b89\u88c5\u65b9\u6cd5: http://docs.opencv.org/master/d7/d9f/tutorial_linux_install.html \u4f46\u662f\u53c2\u8003\u4e86\u53e6\u4e00\u7bc7\u6587\u7ae0\uff0c\u4e0b\u8f7d\u4e86\u6e90\u4ee3\u7801\u5e76\u8fdb\u5165\u76ee\u5f55( opencv-master/ )\u4e0b\uff0c\u4f7f\u4ee5\u4e0b\u547d\u4ee4\u7f16\u8bd1: 1 2 3 sudo cmake -G Unix Makefiles //\u68c0\u67e5\u76f8\u5173\u914d\u7f6e\u9009\u9879 sudo make -j8 //\u516b\u7ebf\u7a0b\u7f16\u8bd1 sudo make install //\u5b89\u88c5\u7f16\u8bd1\u597d\u7684\u5e93\u6587\u4ef6\u548c\u5934\u6587\u4ef6\u5230\u7cfb\u7edf\u76ee\u5f55\u4e0b \u6d4b\u8bd5\u5f00\u53d1\u73af\u5883\u662f\u5426\u5b89\u88c5\u6210\u529f \u56e0\u4e3a\u6211\u7684\u529f\u80fd\u4e5f\u4e0d\u662f\u5f88\u590d\u6742\uff0c\u6240\u4ee5\u6253\u7b97\u53ea\u7528 g++ \u7f16\u8bd1\u8fd0\u884c\uff0c\u5c31\u4e0d\u52a8\u7528\u5404\u79cd\u5927\u578bIDE\u4e86\u3002\u4e0b\u5728\u662f\u6211\u7684\u6d4b\u8bd5\u7528\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 #include iostream #include opencv2/opencv.hpp using namespace std ; using namespace cv ; int main ( int argc , char ** argv ) { Mat img = imread ( argv [ 1 ]); imshow ( test , img ); waitKey ( 0 ); return 0 ; } \u7f16\u8bd1\u4f7f\u7528\uff1a 1 sudo g++ opencv_test.cpp -lopencv_core -lopencv_highgui -lopencv_imgcodecs -I/usr/local/include -L/usr/local/lib \u4f7f\u7528\u4e0b\u9762\u547d\u4ee4\u663e\u793a\u4e00\u5e45\u56fe\u7247: 1 ./a.out test.jpg # test.jpg is your own picture file \u5982\u679c\u80fd\u591f\u663e\u793a\u51fa\u56fe\u7247\uff0c\u8bf4\u660e\u5f00\u53d1\u73af\u5883\u5df2\u7ecf\u5b89\u88c5\u6210\u529f;-) \u8bfb\u89c6\u9891 \u5e9f\u8bdd\u4e0d\u591a\u8bdd\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 #include iostream #include sstream #include opencv2/opencv.hpp using namespace std ; using namespace cv ; VideoWriter output ; Mat addWatermarkInFrame ( Mat frame , int frameNum ) { cout processing frameNum frame endl ; Mat redSquare = Mat ( Size ( 20 , 20 ), CV_8UC3 , Scalar ( 0 , 0 , 255 )); Mat imageROI = frame ( Rect ( 10 , 10 , redSquare . cols , redSquare . rows )); addWeighted ( imageROI , 1.0 , redSquare , 1.0 , 0 , imageROI ); return frame ; } void Stop ( int signal ) { output . ~ VideoWriter (); cout process been interrupted! endl ; exit ( 0 ); } void help () { cout ----------------------------------------------------- endl This program shows how to read a video file with OpenCV. endl In addition, it show the process of add watermark in a video endl Usage: endl ./a.out input_video_file or video_stream_url endl ; } int main ( int argc , char ** argv ) { if ( argc 2 ) { help (); } else if ( argc 2 ) { cout Too many parameters endl ; } const string cameraOrFile = argv [ 1 ]; stringstream ss ; ss cameraOrFile ; int deviceID ; ss deviceID ; VideoCapture video ; if ( ss . good ()) { video . open ( deviceID ); } else { video . open ( cameraOrFile ); } if ( ! video . isOpened ()) { cout Could not open the video file! endl ; return - 1 ; } Size videoSize = Size (( int ) video . get ( CAP_PROP_FRAME_WIDTH ), ( int ) video . get ( CAP_PROP_FRAME_HEIGHT )); int frameRate = video . get ( CAP_PROP_FPS ); cout The size of video frame is: videoSize endl ; cout The frame rate is: frameRate endl ; int frameNum = - 1 ; Mat frame ; namedWindow ( frame , WINDOW_AUTOSIZE ); remove ( output.mp4 ); output . open ( output.mp4 , - 1 , frameRate , videoSize , true ); if ( ! output . isOpened ()) { cout Could not open the output video for write! endl ; return - 1 ; } signal ( SIGINT , Stop ); while ( 1 ) { video frame ; if ( frame . empty ()) { cout The video had been processed! endl ; break ; } Mat ret = addWatermarkInFrame ( frame , ++ frameNum ); imshow ( frame , ret ); waitKey ( 1.0 / frameRate * 1000 ); output ret ; } cout Finished writing video endl ; return 0 ; } \u7f16\u8bd1\u547d\u4ee4\u5982\u4e0b\uff1a 1 sudo g++ opencv_test.cpp -lopencv_core -lopencv_highgui -lopencv_imgcodecs -I/usr/local/include -L/usr/local/lib -lopencv_videoio \u7f16\u8bd1\u51fa\u7684\u53ef\u6267\u884c\u6587\u4ef6\u662f a.out , \u4f7f\u7528\u65b9\u6cd5\u53ef\u4ee5\u662f\uff1a 1 ./a.out test.mp4 # process the video file \u6216\u8005 1 ./a.out http://zhulongyixian.vicp.cc:30236/?action=stream # video_stream_url process the video stream \u4e0d\u8fc7\u5982\u679c\u539f\u6765\u7684\u89c6\u9891\u6709\u58f0\u97f3\u7684\u8bdd\uff0c\u7531\u4e8eOpenCV\u5904\u7406\u540e\u53ea\u6709\u89c6\u9891\u6570\u636e\u88ab\u5199\u5165\u4e86\u6587\u4ef6\uff0c\u8fd9\u6837\u9020\u6210\u5904\u7406\u7ed3\u679c\u6587\u4ef6\u4e2d\u4e22\u5931\u4e86\u97f3\u9891\u901a\u9053\u7684\u6570\u636e\u3002\u4e0b\u4e00\u6b65\u9700\u8981\u8003\u8651\u4f7f\u7528FFmpeg\u6765\u6539\u5199\u89c6\u9891\u7f16\u89e3\u7801\u90e8\u5206\u4e86\u3002 \u52a0\u6c34\u5370 \u52a0\u6c34\u5370\u90e8\u5206\u53ef\u4ee5\u5728\u4e0a\u9762\u7a0b\u5e8f\u7684\u7b2c 10 \u884c\u5f00\u59cb\u7684\u51fd\u6570\u91cc\u9762\u8fdb\u884c\uff0c\u4e3a\u4e86\u7b80\u5316\u5904\u7406\uff0c\u53ea\u7ed9\u89c6\u9891\u5de6\u4e0a\u89d2\u52a0\u4e86\u4e00\u4e2a\u7ea2\u8272\u5c0f\u65b9\u5757\u3002 \u540e\u8bb0 \u6700\u8fd1\u5b66\u4e60linux\u76f8\u5173\u77e5\u8bc6\uff0c\u53d1\u73b0\u547d\u4ee4\u884c\u8d8a\u6765\u8d8a\u597d\u7528\u4e86\uff0c\u5f53\u7136\u53ea\u662f\u9488\u5bf9\u7b80\u5355\u70b9\u7684\u5f00\u53d1\u4efb\u52a1\u3002","title":"User OpenCV to add watermark on a video"},{"location":"tech/User OpenCV to add watermark on a video/#user-opencv-to-add-watermark-on-a-video","text":"","title":"User OpenCV to add watermark on a video"},{"location":"tech/User OpenCV to add watermark on a video/#_1","text":"\u9996\u5148\uff0c\u9700\u8981 OpenCV \u5f00\u53d1\u73af\u5883\uff0c\u5c31\u662f\u5b89\u88c5 OpenCV \u76f8\u5173\u7684\u5e93\u3002 \u76f4\u63a5\u5230 GitHub \u4e0a\u62c9\u4e0b\u001d OpenCV\u6e90\u4ee3\u7801 \uff0c\u7136\u540e\u8fdb\u5165 \u9879\u76ee\u6587\u6863 \u4e2d\u5bfb\u627e\u4ece\u6e90\u4ee3\u7801\u7f16\u8bd1\u7684\u65b9\u6cd5\u3002\u6211\u7684\u5e73\u53f0\u662f MacOS \uff0c\u6240\u4ee5\u627e\u5230\u7684\u662fLinux/Mac\u5e73\u53f0\u4e0b\u7684\u5b89\u88c5\u65b9\u6cd5: http://docs.opencv.org/master/d7/d9f/tutorial_linux_install.html \u4f46\u662f\u53c2\u8003\u4e86\u53e6\u4e00\u7bc7\u6587\u7ae0\uff0c\u4e0b\u8f7d\u4e86\u6e90\u4ee3\u7801\u5e76\u8fdb\u5165\u76ee\u5f55( opencv-master/ )\u4e0b\uff0c\u4f7f\u4ee5\u4e0b\u547d\u4ee4\u7f16\u8bd1: 1 2 3 sudo cmake -G Unix Makefiles //\u68c0\u67e5\u76f8\u5173\u914d\u7f6e\u9009\u9879 sudo make -j8 //\u516b\u7ebf\u7a0b\u7f16\u8bd1 sudo make install //\u5b89\u88c5\u7f16\u8bd1\u597d\u7684\u5e93\u6587\u4ef6\u548c\u5934\u6587\u4ef6\u5230\u7cfb\u7edf\u76ee\u5f55\u4e0b","title":"\u5b89\u88c5\u5f00\u53d1\u73af\u5883"},{"location":"tech/User OpenCV to add watermark on a video/#_2","text":"\u56e0\u4e3a\u6211\u7684\u529f\u80fd\u4e5f\u4e0d\u662f\u5f88\u590d\u6742\uff0c\u6240\u4ee5\u6253\u7b97\u53ea\u7528 g++ \u7f16\u8bd1\u8fd0\u884c\uff0c\u5c31\u4e0d\u52a8\u7528\u5404\u79cd\u5927\u578bIDE\u4e86\u3002\u4e0b\u5728\u662f\u6211\u7684\u6d4b\u8bd5\u7528\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 #include iostream #include opencv2/opencv.hpp using namespace std ; using namespace cv ; int main ( int argc , char ** argv ) { Mat img = imread ( argv [ 1 ]); imshow ( test , img ); waitKey ( 0 ); return 0 ; } \u7f16\u8bd1\u4f7f\u7528\uff1a 1 sudo g++ opencv_test.cpp -lopencv_core -lopencv_highgui -lopencv_imgcodecs -I/usr/local/include -L/usr/local/lib \u4f7f\u7528\u4e0b\u9762\u547d\u4ee4\u663e\u793a\u4e00\u5e45\u56fe\u7247: 1 ./a.out test.jpg # test.jpg is your own picture file \u5982\u679c\u80fd\u591f\u663e\u793a\u51fa\u56fe\u7247\uff0c\u8bf4\u660e\u5f00\u53d1\u73af\u5883\u5df2\u7ecf\u5b89\u88c5\u6210\u529f;-)","title":"\u6d4b\u8bd5\u5f00\u53d1\u73af\u5883\u662f\u5426\u5b89\u88c5\u6210\u529f"},{"location":"tech/User OpenCV to add watermark on a video/#_3","text":"\u5e9f\u8bdd\u4e0d\u591a\u8bdd\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 #include iostream #include sstream #include opencv2/opencv.hpp using namespace std ; using namespace cv ; VideoWriter output ; Mat addWatermarkInFrame ( Mat frame , int frameNum ) { cout processing frameNum frame endl ; Mat redSquare = Mat ( Size ( 20 , 20 ), CV_8UC3 , Scalar ( 0 , 0 , 255 )); Mat imageROI = frame ( Rect ( 10 , 10 , redSquare . cols , redSquare . rows )); addWeighted ( imageROI , 1.0 , redSquare , 1.0 , 0 , imageROI ); return frame ; } void Stop ( int signal ) { output . ~ VideoWriter (); cout process been interrupted! endl ; exit ( 0 ); } void help () { cout ----------------------------------------------------- endl This program shows how to read a video file with OpenCV. endl In addition, it show the process of add watermark in a video endl Usage: endl ./a.out input_video_file or video_stream_url endl ; } int main ( int argc , char ** argv ) { if ( argc 2 ) { help (); } else if ( argc 2 ) { cout Too many parameters endl ; } const string cameraOrFile = argv [ 1 ]; stringstream ss ; ss cameraOrFile ; int deviceID ; ss deviceID ; VideoCapture video ; if ( ss . good ()) { video . open ( deviceID ); } else { video . open ( cameraOrFile ); } if ( ! video . isOpened ()) { cout Could not open the video file! endl ; return - 1 ; } Size videoSize = Size (( int ) video . get ( CAP_PROP_FRAME_WIDTH ), ( int ) video . get ( CAP_PROP_FRAME_HEIGHT )); int frameRate = video . get ( CAP_PROP_FPS ); cout The size of video frame is: videoSize endl ; cout The frame rate is: frameRate endl ; int frameNum = - 1 ; Mat frame ; namedWindow ( frame , WINDOW_AUTOSIZE ); remove ( output.mp4 ); output . open ( output.mp4 , - 1 , frameRate , videoSize , true ); if ( ! output . isOpened ()) { cout Could not open the output video for write! endl ; return - 1 ; } signal ( SIGINT , Stop ); while ( 1 ) { video frame ; if ( frame . empty ()) { cout The video had been processed! endl ; break ; } Mat ret = addWatermarkInFrame ( frame , ++ frameNum ); imshow ( frame , ret ); waitKey ( 1.0 / frameRate * 1000 ); output ret ; } cout Finished writing video endl ; return 0 ; } \u7f16\u8bd1\u547d\u4ee4\u5982\u4e0b\uff1a 1 sudo g++ opencv_test.cpp -lopencv_core -lopencv_highgui -lopencv_imgcodecs -I/usr/local/include -L/usr/local/lib -lopencv_videoio \u7f16\u8bd1\u51fa\u7684\u53ef\u6267\u884c\u6587\u4ef6\u662f a.out , \u4f7f\u7528\u65b9\u6cd5\u53ef\u4ee5\u662f\uff1a 1 ./a.out test.mp4 # process the video file \u6216\u8005 1 ./a.out http://zhulongyixian.vicp.cc:30236/?action=stream # video_stream_url process the video stream \u4e0d\u8fc7\u5982\u679c\u539f\u6765\u7684\u89c6\u9891\u6709\u58f0\u97f3\u7684\u8bdd\uff0c\u7531\u4e8eOpenCV\u5904\u7406\u540e\u53ea\u6709\u89c6\u9891\u6570\u636e\u88ab\u5199\u5165\u4e86\u6587\u4ef6\uff0c\u8fd9\u6837\u9020\u6210\u5904\u7406\u7ed3\u679c\u6587\u4ef6\u4e2d\u4e22\u5931\u4e86\u97f3\u9891\u901a\u9053\u7684\u6570\u636e\u3002\u4e0b\u4e00\u6b65\u9700\u8981\u8003\u8651\u4f7f\u7528FFmpeg\u6765\u6539\u5199\u89c6\u9891\u7f16\u89e3\u7801\u90e8\u5206\u4e86\u3002","title":"\u8bfb\u89c6\u9891"},{"location":"tech/User OpenCV to add watermark on a video/#_4","text":"\u52a0\u6c34\u5370\u90e8\u5206\u53ef\u4ee5\u5728\u4e0a\u9762\u7a0b\u5e8f\u7684\u7b2c 10 \u884c\u5f00\u59cb\u7684\u51fd\u6570\u91cc\u9762\u8fdb\u884c\uff0c\u4e3a\u4e86\u7b80\u5316\u5904\u7406\uff0c\u53ea\u7ed9\u89c6\u9891\u5de6\u4e0a\u89d2\u52a0\u4e86\u4e00\u4e2a\u7ea2\u8272\u5c0f\u65b9\u5757\u3002","title":"\u52a0\u6c34\u5370"},{"location":"tech/User OpenCV to add watermark on a video/#_5","text":"\u6700\u8fd1\u5b66\u4e60linux\u76f8\u5173\u77e5\u8bc6\uff0c\u53d1\u73b0\u547d\u4ee4\u884c\u8d8a\u6765\u8d8a\u597d\u7528\u4e86\uff0c\u5f53\u7136\u53ea\u662f\u9488\u5bf9\u7b80\u5355\u70b9\u7684\u5f00\u53d1\u4efb\u52a1\u3002","title":"\u540e\u8bb0"},{"location":"tech/Wireshark Basics/","text":"Wireshark Basics","title":"Wireshark Basics"},{"location":"tech/Wireshark Basics/#wireshark-basics","text":"","title":"Wireshark Basics"},{"location":"tech/bluegogo-crack/","text":"\u626b\u7801\uff1a POST\u8bf7\u6c42: https://www.bluegogo.com/qrcode.html?no=010049896 bluegogo\u7535\u5b50\u9501\u62c6\u89e3 \u5916\u58f3\u53ca\u7f16\u53f7 \u673a\u68b0\u9501 \u6b65\u8fdb\u7535\u673a \u4e24\u4e2a\u884c\u7a0b\u5f00\u5173 \u4e00\u6761USB\u5145\u7535\u7ebf \u4e00\u6761\u592a\u9633\u80fd\u5145\u7535\u7535\u6e90\u6e90 RF\u5929\u7ebf WiFi\u5929\u7ebf GPS\u5929\u7ebf LED\u6307\u793a\u706f \u7535\u6c60 \u5587\u53ed \u7535\u8def\u677f","title":"Bluegogo crack"},{"location":"tech/bluegogo-crack/#bluegogo","text":"\u5916\u58f3\u53ca\u7f16\u53f7 \u673a\u68b0\u9501 \u6b65\u8fdb\u7535\u673a \u4e24\u4e2a\u884c\u7a0b\u5f00\u5173 \u4e00\u6761USB\u5145\u7535\u7ebf \u4e00\u6761\u592a\u9633\u80fd\u5145\u7535\u7535\u6e90\u6e90 RF\u5929\u7ebf WiFi\u5929\u7ebf GPS\u5929\u7ebf LED\u6307\u793a\u706f \u7535\u6c60 \u5587\u53ed \u7535\u8def\u677f","title":"bluegogo\u7535\u5b50\u9501\u62c6\u89e3"},{"location":"tech/jupyterhub/","text":"issue 1 \u73b0\u8c61 \u5f53\u542f\u52a8 jupyterhub \u65f6\u51fa\u73b0\u9519\u8bef\uff1a 1 Uncaught Exception Error: listen EADDRINUSE :::8000 \u539f\u56e0 \u540c\u65f6\u5f00\u4e86\u4e24\u4e2a\u5e94\u7528\uff0c\u4f46\u662f\u53ea\u5173\u6389\u4e86\u5176\u4e2d\u4e00\u4e2a\uff0c\u53e6\u4e00\u4e2a\u8fd8\u5728\u4fa6\u542c\u7aef\u53e3 \u89e3\u51b3\uff1a 1 $\u3000pkill node docker image 1 $ docker run -d --name jupyterhub zhulongyixian/jupyterhub jupyterhub","title":"issue 1"},{"location":"tech/jupyterhub/#issue-1","text":"","title":"issue 1"},{"location":"tech/jupyterhub/#_1","text":"\u5f53\u542f\u52a8 jupyterhub \u65f6\u51fa\u73b0\u9519\u8bef\uff1a 1 Uncaught Exception Error: listen EADDRINUSE :::8000","title":"\u73b0\u8c61"},{"location":"tech/jupyterhub/#_2","text":"\u540c\u65f6\u5f00\u4e86\u4e24\u4e2a\u5e94\u7528\uff0c\u4f46\u662f\u53ea\u5173\u6389\u4e86\u5176\u4e2d\u4e00\u4e2a\uff0c\u53e6\u4e00\u4e2a\u8fd8\u5728\u4fa6\u542c\u7aef\u53e3","title":"\u539f\u56e0"},{"location":"tech/jupyterhub/#_3","text":"1 $\u3000pkill node","title":"\u89e3\u51b3\uff1a"},{"location":"tech/jupyterhub/#docker-image","text":"1 $ docker run -d --name jupyterhub zhulongyixian/jupyterhub jupyterhub","title":"docker image"},{"location":"tech/kotlin/","text":"\u5b89\u88c5\u6700\u65b0JDK \u6839\u636e\u4e0d\u540c\u5e73\u53f0\u5b89\u88c5\u6700\u65b0JDK: \u4e0b\u8f7dJDK \u914d\u7f6e\u73af\u5883JDK\u53d8\u91cf: Linux: ~/.bashrc \u4e2d\u6dfb\u52a0\u4e0b\u9762\u7684\u73af\u5883\u53d8\u91cf\u914d\u7f6e MacOS: ~/.bash_profile \u4e2d\u6dfb\u52a0\u4e0b\u9762\u7684\u73af\u5883\u53d8\u91cf\u914d\u7f6e 1 2 3 export JAVA_HOME= JDK Dir export PATH=$JAVA_HOME/bin:$PATH export CLASSPATH=.:JAVA_HOME/lib/dt.jar:JAVA_HOME/lib/tools.jar \u4fdd\u5b58\u540e\uff0c\u4f7f\u73af\u5883\u53d8\u91cf\u914d\u7f6e\u751f\u6548 1 source ~/.bashrc # Linux Kotlin \u5b89\u88c5\u811a\u672c(Unix/Linux), \u5e76\u6d4b\u8bd5\u662f\u5426\u5b89\u88c5\u6210\u529f 1 2 3 4 5 6 7 8 9 10 11 12 # !/usr/bin/env bash # \u53c2\u8003: https://kotlinlang.org/docs/tutorials/command-line.html # \u6700\u6c42: JDK\u5b89\u88c5\u6700\u65b0\u7248 sudo apt-get install -y zip curl -s https://get.sdkman.io | bash source ~/.sdkman/bin/sdkman-init.sh sdk install kotlin source ~/.bashrc echo fun main(args: Array String ) { println(\\ Hello, World!\\ ) } hello.kt kotlinc hello.kt -include-runtime -d hello.jar java -jar hello.jar","title":"\u5b89\u88c5\u6700\u65b0JDK"},{"location":"tech/kotlin/#jdk","text":"\u6839\u636e\u4e0d\u540c\u5e73\u53f0\u5b89\u88c5\u6700\u65b0JDK: \u4e0b\u8f7dJDK \u914d\u7f6e\u73af\u5883JDK\u53d8\u91cf: Linux: ~/.bashrc \u4e2d\u6dfb\u52a0\u4e0b\u9762\u7684\u73af\u5883\u53d8\u91cf\u914d\u7f6e MacOS: ~/.bash_profile \u4e2d\u6dfb\u52a0\u4e0b\u9762\u7684\u73af\u5883\u53d8\u91cf\u914d\u7f6e 1 2 3 export JAVA_HOME= JDK Dir export PATH=$JAVA_HOME/bin:$PATH export CLASSPATH=.:JAVA_HOME/lib/dt.jar:JAVA_HOME/lib/tools.jar \u4fdd\u5b58\u540e\uff0c\u4f7f\u73af\u5883\u53d8\u91cf\u914d\u7f6e\u751f\u6548 1 source ~/.bashrc # Linux","title":"\u5b89\u88c5\u6700\u65b0JDK"},{"location":"tech/kotlin/#kotlin-unixlinux","text":"1 2 3 4 5 6 7 8 9 10 11 12 # !/usr/bin/env bash # \u53c2\u8003: https://kotlinlang.org/docs/tutorials/command-line.html # \u6700\u6c42: JDK\u5b89\u88c5\u6700\u65b0\u7248 sudo apt-get install -y zip curl -s https://get.sdkman.io | bash source ~/.sdkman/bin/sdkman-init.sh sdk install kotlin source ~/.bashrc echo fun main(args: Array String ) { println(\\ Hello, World!\\ ) } hello.kt kotlinc hello.kt -include-runtime -d hello.jar java -jar hello.jar","title":"Kotlin \u5b89\u88c5\u811a\u672c(Unix/Linux), \u5e76\u6d4b\u8bd5\u662f\u5426\u5b89\u88c5\u6210\u529f"},{"location":"tech/my hardware/","text":"\u82b1\u751f\u58f3\u52a8\u6001\u57df\u540d zhulongyixian.vicp.cc \u8def\u7531\u5668\u7aef\u53e3\u6620\u5c04 Raspberry Pi 3 Model B+ Host IP: 192.168.0.200 SSH Port: 22 - 22 HTTP Port: 80 - 8000 HTTPs Port: 5000 - 443 Gogs Port: 3000 - 30237 USB-Armory inversePath Host IP: 192.168.0.202 SSH Port: 22 - 8004 MacBook Pro (Retina, 13-inch, Early 2015) Host IP: 192.168.0.201 SSH Port: 22 - 8001 HTTP Port: 80 - 8002 Gogs Port: 3000 - 8003 \u9b45\u84ddNote 2 Host IP: 192.168.0.203 SSH Port: 22 - 8005 SSH config file 1 SG9zdCBtYwogIEhvc3ROYW1lIHd3dy5vb2Jienlvby5jb20KICBVc2VyIGpva2VyCgpIb3N0IGthbGkKCUhvc3ROYW1lIHpodWxvbmd5aXhpYW4udmljcC5jYwoJVXNlciByb290CiAgICBQb3J0IDgwMDQKCkhvc3QgcGhvbmUKICAgIEhvc3ROYW1lIHpodWxvbmd5aXhpYW4udmljcC5jYwogICAgVXNlciBhbmRyb2lkCiAgICBQb3J0IDgwMDUKCkhvc3QgcGkKICAgIEhvc3ROYW1lIHpodWxvbmd5aXhpYW4udmljcC5jYwogICAgVXNlciBwaQo=","title":"\u82b1\u751f\u58f3\u52a8\u6001\u57df\u540d"},{"location":"tech/my hardware/#_1","text":"zhulongyixian.vicp.cc","title":"\u82b1\u751f\u58f3\u52a8\u6001\u57df\u540d"},{"location":"tech/my hardware/#_2","text":"","title":"\u8def\u7531\u5668\u7aef\u53e3\u6620\u5c04"},{"location":"tech/my hardware/#raspberry-pi-3-model-b","text":"Host IP: 192.168.0.200 SSH Port: 22 - 22 HTTP Port: 80 - 8000 HTTPs Port: 5000 - 443 Gogs Port: 3000 - 30237","title":"Raspberry Pi 3 Model B+"},{"location":"tech/my hardware/#usb-armory-inversepath","text":"Host IP: 192.168.0.202 SSH Port: 22 - 8004","title":"USB-Armory inversePath"},{"location":"tech/my hardware/#macbook-pro-retina-13-inch-early-2015","text":"Host IP: 192.168.0.201 SSH Port: 22 - 8001 HTTP Port: 80 - 8002 Gogs Port: 3000 - 8003","title":"MacBook Pro (Retina, 13-inch, Early 2015)"},{"location":"tech/my hardware/#note-2","text":"Host IP: 192.168.0.203 SSH Port: 22 - 8005","title":"\u9b45\u84ddNote 2"},{"location":"tech/my hardware/#ssh-config-file","text":"1 SG9zdCBtYwogIEhvc3ROYW1lIHd3dy5vb2Jienlvby5jb20KICBVc2VyIGpva2VyCgpIb3N0IGthbGkKCUhvc3ROYW1lIHpodWxvbmd5aXhpYW4udmljcC5jYwoJVXNlciByb290CiAgICBQb3J0IDgwMDQKCkhvc3QgcGhvbmUKICAgIEhvc3ROYW1lIHpodWxvbmd5aXhpYW4udmljcC5jYwogICAgVXNlciBhbmRyb2lkCiAgICBQb3J0IDgwMDUKCkhvc3QgcGkKICAgIEhvc3ROYW1lIHpodWxvbmd5aXhpYW4udmljcC5jYwogICAgVXNlciBwaQo=","title":"SSH config file"},{"location":"tech/swift on client and server/","text":"Swift On Server End WWDC 2016 - Going Server-side with Swift Open Source IBM Swift Sandbox IBM Bluemix Kitura Swift End to End IBM Cloud Tools for Swift IBM Swift Package Manager Catalog","title":"Swift On Server End"},{"location":"tech/swift on client and server/#swift-on-server-end","text":"WWDC 2016 - Going Server-side with Swift Open Source IBM Swift Sandbox IBM Bluemix Kitura","title":"Swift On Server End"},{"location":"tech/swift on client and server/#swift-end-to-end","text":"IBM Cloud Tools for Swift IBM Swift Package Manager Catalog","title":"Swift End to End"},{"location":"tech/tech share/","text":"","title":"Tech share"}]}